Directory Structure:

└── ./
    ├── apps
    │   ├── cdn
    │   │   ├── .gitignore
    │   │   ├── App.vue
    │   │   ├── bun.lockb
    │   │   ├── config.ts
    │   │   ├── index.html
    │   │   ├── main.ts
    │   │   ├── package.json
    │   │   ├── README.md
    │   │   ├── tsconfig.json
    │   │   ├── typings.d.ts
    │   │   ├── vite-env.d.ts
    │   │   └── vite.config.ts
    │   └── start
    │       ├── dvha
    │       │   ├── authLayout.vue
    │       │   ├── layout.vue
    │       │   ├── page404.vue
    │       │   ├── page500.vue
    │       │   └── pageLoading.vue
    │       ├── langs
    │       │   ├── en-US.json
    │       │   └── zh-CN.json
    │       ├── pages
    │       │   ├── form
    │       │   │   ├── modal.vue
    │       │   │   ├── page.vue
    │       │   │   └── ui.vue
    │       │   ├── list
    │       │   │   ├── article.vue
    │       │   │   ├── card.vue
    │       │   │   └── list.vue
    │       │   ├── 404.vue
    │       │   ├── chart.vue
    │       │   ├── designEditor.vue
    │       │   ├── form.vue
    │       │   ├── home.vue
    │       │   ├── interaction.vue
    │       │   ├── list.vue
    │       │   ├── login.vue
    │       │   ├── posterEditor.vue
    │       │   ├── render.vue
    │       │   ├── setting.vue
    │       │   ├── stats.vue
    │       │   └── table.vue
    │       ├── .gitignore
    │       ├── CHANGELOG.md
    │       ├── index.html
    │       ├── main.ts
    │       ├── package.json
    │       ├── tsconfig.json
    │       ├── typings.d.ts
    │       ├── vite-env.d.ts
    │       └── vite.config.ts
    └── packages
        ├── core
        │   ├── src
        │   │   ├── components
        │   │   │   ├── auth
        │   │   │   │   ├── can.tsx
        │   │   │   │   └── index.ts
        │   │   │   ├── common
        │   │   │   │   ├── icon.tsx
        │   │   │   │   ├── index.ts
        │   │   │   │   └── logo.tsx
        │   │   │   ├── loader
        │   │   │   │   ├── remote
        │   │   │   │   │   ├── index.ts
        │   │   │   │   │   ├── loader.tsx
        │   │   │   │   │   └── render.tsx
        │   │   │   │   ├── iframe.tsx
        │   │   │   │   ├── index.ts
        │   │   │   │   └── loader.tsx
        │   │   │   ├── overlay
        │   │   │   │   ├── index.ts
        │   │   │   │   └── overlay.tsx
        │   │   │   ├── status
        │   │   │   │   ├── error.tsx
        │   │   │   │   ├── exception.tsx
        │   │   │   │   ├── index.ts
        │   │   │   │   ├── notAuthorized.tsx
        │   │   │   │   └── notFound.tsx
        │   │   │   └── index.ts
        │   │   ├── config
        │   │   │   ├── color.ts
        │   │   │   └── index.ts
        │   │   ├── directive
        │   │   │   ├── index.ts
        │   │   │   └── permission.ts
        │   │   ├── hooks
        │   │   │   ├── json
        │   │   │   │   ├── utils
        │   │   │   │   │   ├── contextManager.ts
        │   │   │   │   │   └── expressionParser.ts
        │   │   │   │   ├── index.ts
        │   │   │   │   ├── types.ts
        │   │   │   │   ├── vFor.ts
        │   │   │   │   ├── vIf.ts
        │   │   │   │   ├── vModel.ts
        │   │   │   │   ├── vOn.ts
        │   │   │   │   ├── vShow.ts
        │   │   │   │   └── vText.ts
        │   │   │   ├── upload
        │   │   │   │   ├── index.ts
        │   │   │   │   ├── local.ts
        │   │   │   │   ├── s3.ts
        │   │   │   │   └── types.ts
        │   │   │   ├── auth.ts
        │   │   │   ├── config.ts
        │   │   │   ├── data.ts
        │   │   │   ├── export.ts
        │   │   │   ├── exportCsv.ts
        │   │   │   ├── form.ts
        │   │   │   ├── formExtend.ts
        │   │   │   ├── formValidate.ts
        │   │   │   ├── i18n.ts
        │   │   │   ├── import.ts
        │   │   │   ├── importCsv.ts
        │   │   │   ├── index.ts
        │   │   │   ├── json.tsx
        │   │   │   ├── list.tsx
        │   │   │   ├── manage.ts
        │   │   │   ├── menu.ts
        │   │   │   ├── overlay.ts
        │   │   │   ├── select.ts
        │   │   │   ├── theme.ts
        │   │   │   ├── tree.ts
        │   │   │   └── upload.ts
        │   │   ├── preset
        │   │   │   ├── authProvider.ts
        │   │   │   ├── dataProvider.ts
        │   │   │   ├── i18nProvider.ts
        │   │   │   └── index.ts
        │   │   ├── provider
        │   │   │   ├── app.tsx
        │   │   │   ├── index.ts
        │   │   │   └── tab.tsx
        │   │   ├── router
        │   │   │   ├── index.ts
        │   │   │   └── route.ts
        │   │   ├── stores
        │   │   │   ├── auth.ts
        │   │   │   ├── i18n.ts
        │   │   │   ├── index.ts
        │   │   │   ├── jsonSchema.ts
        │   │   │   ├── manage.ts
        │   │   │   ├── route.ts
        │   │   │   ├── tab.ts
        │   │   │   └── theme.ts
        │   │   ├── types
        │   │   │   ├── auth.ts
        │   │   │   ├── config.ts
        │   │   │   ├── data.ts
        │   │   │   ├── i18n.ts
        │   │   │   ├── index.ts
        │   │   │   ├── manage.ts
        │   │   │   ├── menu.ts
        │   │   │   └── theme.ts
        │   │   ├── utils
        │   │   │   ├── bus.ts
        │   │   │   ├── index.ts
        │   │   │   ├── theme.ts
        │   │   │   └── tree.ts
        │   │   ├── index.ts
        │   │   └── main.ts
        │   ├── .gitignore
        │   ├── CHANGELOG.md
        │   ├── LICENSE
        │   ├── package.json
        │   ├── README.md
        │   ├── tsconfig.json
        │   ├── typings.d.ts
        │   └── vite.config.ts
        ├── elementui
        │   ├── src
        │   │   ├── components
        │   │   │   ├── menu
        │   │   │   │   ├── index.ts
        │   │   │   │   └── TreeMenu.vue
        │   │   │   └── index.ts
        │   │   ├── hooks
        │   │   │   ├── index.ts
        │   │   │   └── tab.ts
        │   │   └── index.ts
        │   ├── .gitignore
        │   ├── CHANGELOG.md
        │   ├── LICENSE
        │   ├── package.json
        │   ├── README.md
        │   ├── tsconfig.json
        │   └── vite.config.ts
        ├── naiveui
        │   ├── src
        │   │   ├── components
        │   │   │   ├── autoComplete
        │   │   │   │   ├── autoComplete.tsx
        │   │   │   │   └── index.ts
        │   │   │   ├── cascader
        │   │   │   │   ├── cascader.tsx
        │   │   │   │   └── index.ts
        │   │   │   ├── mention
        │   │   │   │   ├── index.ts
        │   │   │   │   └── mention.tsx
        │   │   │   ├── select
        │   │   │   │   ├── index.ts
        │   │   │   │   └── select.tsx
        │   │   │   ├── transfer
        │   │   │   │   ├── index.ts
        │   │   │   │   └── transfer.tsx
        │   │   │   ├── tree
        │   │   │   │   ├── index.ts
        │   │   │   │   └── tree.tsx
        │   │   │   ├── treeSelect
        │   │   │   │   ├── index.ts
        │   │   │   │   └── treeSelect.tsx
        │   │   │   └── index.ts
        │   │   ├── hooks
        │   │   │   ├── index.ts
        │   │   │   ├── menu.ts
        │   │   │   ├── tab.ts
        │   │   │   ├── table.tsx
        │   │   │   └── upload.ts
        │   │   └── index.ts
        │   ├── .gitignore
        │   ├── CHANGELOG.md
        │   ├── LICENSE
        │   ├── package.json
        │   ├── README.md
        │   ├── tsconfig.json
        │   └── vite.config.ts
        └── pro
            ├── src
            │   ├── components
            │   │   ├── card
            │   │   │   ├── card.tsx
            │   │   │   ├── index.ts
            │   │   │   └── store.tsx
            │   │   ├── carousel
            │   │   │   ├── carousel.tsx
            │   │   │   └── index.ts
            │   │   ├── chart
            │   │   │   ├── echart.tsx
            │   │   │   └── index.ts
            │   │   ├── code
            │   │   │   ├── code.tsx
            │   │   │   └── index.ts
            │   │   ├── crop
            │   │   │   ├── imageCrop.tsx
            │   │   │   ├── imageCropModal.tsx
            │   │   │   └── index.ts
            │   │   ├── dashboard
            │   │   │   ├── hello.tsx
            │   │   │   ├── helloBig.tsx
            │   │   │   ├── index.ts
            │   │   │   └── quick.tsx
            │   │   ├── data
            │   │   │   ├── dynamicData.tsx
            │   │   │   ├── dynamicSelect.tsx
            │   │   │   ├── index.ts
            │   │   │   └── selectModal.tsx
            │   │   ├── designEditor
            │   │   │   ├── components
            │   │   │   │   ├── grid.tsx
            │   │   │   │   └── index.ts
            │   │   │   ├── editor
            │   │   │   │   ├── hook.ts
            │   │   │   │   ├── index.ts
            │   │   │   │   ├── preview.tsx
            │   │   │   │   └── setting.tsx
            │   │   │   ├── editor.tsx
            │   │   │   └── index.ts
            │   │   ├── dialog
            │   │   │   ├── dialog.tsx
            │   │   │   └── index.ts
            │   │   ├── draw
            │   │   │   ├── drawApps.tsx
            │   │   │   ├── drawAuth.tsx
            │   │   │   ├── drawEmpty.tsx
            │   │   │   ├── drawEmptyForm.tsx
            │   │   │   ├── drawError.tsx
            │   │   │   └── index.ts
            │   │   ├── drawer
            │   │   │   ├── drawer.tsx
            │   │   │   ├── drawerPage.tsx
            │   │   │   └── index.ts
            │   │   ├── editor
            │   │   │   ├── aiEditor.tsx
            │   │   │   └── index.ts
            │   │   ├── form
            │   │   │   ├── drawerForm.tsx
            │   │   │   ├── formItem.tsx
            │   │   │   ├── formLayout.tsx
            │   │   │   ├── index.ts
            │   │   │   ├── modalForm.tsx
            │   │   │   ├── pageForm.tsx
            │   │   │   ├── pageTabForm.tsx
            │   │   │   └── settingForm.tsx
            │   │   ├── formEditor
            │   │   │   ├── base
            │   │   │   │   ├── base.tsx
            │   │   │   │   ├── index.ts
            │   │   │   │   ├── json.tsx
            │   │   │   │   ├── options.tsx
            │   │   │   │   └── setting.tsx
            │   │   │   ├── components
            │   │   │   │   ├── cascader.tsx
            │   │   │   │   ├── cascaderAsync.tsx
            │   │   │   │   ├── checkbox.tsx
            │   │   │   │   ├── color.tsx
            │   │   │   │   ├── date.tsx
            │   │   │   │   ├── dynamicInput.tsx
            │   │   │   │   ├── dynamicTags.tsx
            │   │   │   │   ├── editor.tsx
            │   │   │   │   ├── fileUpload.tsx
            │   │   │   │   ├── imageUpload.tsx
            │   │   │   │   ├── index.ts
            │   │   │   │   ├── input.tsx
            │   │   │   │   ├── inputNumber.tsx
            │   │   │   │   ├── mentionAsync.tsx
            │   │   │   │   ├── radio.tsx
            │   │   │   │   ├── region.tsx
            │   │   │   │   ├── select.tsx
            │   │   │   │   ├── selectAsync.tsx
            │   │   │   │   ├── sider.tsx
            │   │   │   │   ├── switch.tsx
            │   │   │   │   ├── time.tsx
            │   │   │   │   ├── transferAsync.tsx
            │   │   │   │   ├── treeSelect.tsx
            │   │   │   │   └── treeSelectAsync.tsx
            │   │   │   ├── editor.tsx
            │   │   │   ├── index.ts
            │   │   │   ├── json.tsx
            │   │   │   ├── preview.tsx
            │   │   │   └── renderer.tsx
            │   │   ├── icon
            │   │   │   ├── icon.tsx
            │   │   │   ├── iconPicker.tsx
            │   │   │   └── index.ts
            │   │   ├── layout
            │   │   │   ├── filter.tsx
            │   │   │   ├── filterLayout.tsx
            │   │   │   ├── grid.tsx
            │   │   │   ├── index.ts
            │   │   │   ├── list.tsx
            │   │   │   ├── table.tsx
            │   │   │   └── tools.tsx
            │   │   ├── level
            │   │   │   ├── index.ts
            │   │   │   └── level.tsx
            │   │   ├── list
            │   │   │   ├── card.tsx
            │   │   │   ├── index.ts
            │   │   │   └── list.tsx
            │   │   ├── media
            │   │   │   ├── index.ts
            │   │   │   └── media.tsx
            │   │   ├── modal
            │   │   │   ├── index.ts
            │   │   │   ├── modal.tsx
            │   │   │   ├── modalPage.tsx
            │   │   │   └── modalTab.tsx
            │   │   ├── panel
            │   │   │   ├── alert.tsx
            │   │   │   ├── collapse.tsx
            │   │   │   ├── index.ts
            │   │   │   └── setting.tsx
            │   │   ├── posterEditor
            │   │   │   ├── components
            │   │   │   │   ├── CanvasRuler.tsx
            │   │   │   │   └── index.ts
            │   │   │   ├── elements
            │   │   │   │   ├── circle.ts
            │   │   │   │   ├── image.ts
            │   │   │   │   ├── index.ts
            │   │   │   │   ├── rect.ts
            │   │   │   │   ├── text.ts
            │   │   │   │   └── types.ts
            │   │   │   ├── hooks
            │   │   │   │   ├── index.ts
            │   │   │   │   └── usePosterEditor.ts
            │   │   │   ├── pages
            │   │   │   │   ├── index.ts
            │   │   │   │   ├── LeftToolbar.tsx
            │   │   │   │   ├── Panel.tsx
            │   │   │   │   ├── PanelItem.tsx
            │   │   │   │   └── RightPanel.tsx
            │   │   │   ├── types
            │   │   │   │   └── editor.ts
            │   │   │   ├── index.ts
            │   │   │   └── posterEditor.tsx
            │   │   ├── select
            │   │   │   ├── cardSelect.tsx
            │   │   │   └── index.ts
            │   │   ├── stats
            │   │   │   ├── index.ts
            │   │   │   ├── number.tsx
            │   │   │   └── realTime.tsx
            │   │   ├── status
            │   │   │   ├── blockEmpty.tsx
            │   │   │   ├── index.ts
            │   │   │   └── listEmpty.tsx
            │   │   ├── table
            │   │   │   ├── index.ts
            │   │   │   ├── table.tsx
            │   │   │   └── tablePage.tsx
            │   │   ├── tree
            │   │   │   ├── index.ts
            │   │   │   └── treeFilter.tsx
            │   │   ├── upload
            │   │   │   ├── manage
            │   │   │   │   └── item.tsx
            │   │   │   ├── config.ts
            │   │   │   ├── file.tsx
            │   │   │   ├── image.tsx
            │   │   │   ├── index.ts
            │   │   │   ├── manager.tsx
            │   │   │   └── selectFile.tsx
            │   │   ├── widget
            │   │   │   ├── avatar.tsx
            │   │   │   ├── connect.tsx
            │   │   │   ├── image.tsx
            │   │   │   ├── index.ts
            │   │   │   └── placeholder.tsx
            │   │   └── index.ts
            │   ├── config
            │   │   ├── echart.ts
            │   │   ├── index.ts
            │   │   ├── uno.ts
            │   │   └── validate.ts
            │   ├── hooks
            │   │   ├── table
            │   │   │   ├── color.tsx
            │   │   │   ├── column.ts
            │   │   │   ├── copy.tsx
            │   │   │   ├── hidden.tsx
            │   │   │   ├── image.tsx
            │   │   │   ├── index.ts
            │   │   │   ├── input.tsx
            │   │   │   ├── map.tsx
            │   │   │   ├── media.tsx
            │   │   │   ├── status.tsx
            │   │   │   ├── switch.tsx
            │   │   │   └── types.ts
            │   │   ├── action.tsx
            │   │   ├── dialog.tsx
            │   │   ├── download.ts
            │   │   ├── drawer.tsx
            │   │   ├── echart.ts
            │   │   ├── image.ts
            │   │   ├── index.ts
            │   │   ├── level.tsx
            │   │   ├── modal.tsx
            │   │   ├── table.tsx
            │   │   └── ui.ts
            │   ├── langs
            │   │   ├── en-US.json
            │   │   ├── index.ts
            │   │   └── zh-CN.json
            │   ├── pages
            │   │   ├── layout
            │   │   │   ├── global.tsx
            │   │   │   ├── index.ts
            │   │   │   ├── page.tsx
            │   │   │   └── tab.tsx
            │   │   ├── menu
            │   │   │   ├── avatar.tsx
            │   │   │   ├── button.tsx
            │   │   │   ├── cmd.tsx
            │   │   │   ├── index.ts
            │   │   │   ├── main.tsx
            │   │   │   └── mobile.tsx
            │   │   ├── authLayout.tsx
            │   │   ├── index.ts
            │   │   ├── layout.tsx
            │   │   ├── loading.tsx
            │   │   ├── login.tsx
            │   │   ├── page.tsx
            │   │   ├── page403.tsx
            │   │   ├── page404.tsx
            │   │   ├── page500.tsx
            │   │   ├── pageEmpty.tsx
            │   │   ├── pageLoading.tsx
            │   │   └── pageStatus.tsx
            │   ├── static
            │   │   └── images
            │   │       └── icon
            │   │           ├── audio.svg
            │   │           ├── excel.svg
            │   │           ├── file.svg
            │   │           ├── folder.svg
            │   │           ├── index.ts
            │   │           ├── pdf.svg
            │   │           ├── ppt.svg
            │   │           ├── video.svg
            │   │           └── word.svg
            │   ├── stores
            │   │   ├── index.ts
            │   │   └── ui.ts
            │   ├── theme
            │   │   ├── css
            │   │   │   ├── button.scss
            │   │   │   ├── command.scss
            │   │   │   ├── dropdown.scss
            │   │   │   ├── halo.scss
            │   │   │   ├── loading.scss
            │   │   │   ├── login.scss
            │   │   │   ├── menu.scss
            │   │   │   ├── tab.scss
            │   │   │   └── table.scss
            │   │   ├── index.ts
            │   │   ├── naiveTheme.ts
            │   │   ├── presetTheme.ts
            │   │   ├── style.scss
            │   │   └── uno.css
            │   ├── types
            │   │   └── svg.d.ts
            │   ├── app.tsx
            │   ├── component.ts
            │   ├── index.ts
            │   └── main.ts
            ├── .gitignore
            ├── CHANGELOG.md
            ├── package.json
            ├── tsconfig.json
            ├── typings.d.ts
            ├── uno.config.ts
            ├── vite-env.d.ts
            └── vite.config.ts



---
File: /apps/cdn/.gitignore
---

# Logs
logs
*.log
npm-debug.log*
yarn-debug.log*
yarn-error.log*
pnpm-debug.log*
lerna-debug.log*

node_modules
dist
dist-ssr
storybook-static
*.local

# Editor directories and files
.vscode/*
!.vscode/extensions.json
.idea
.DS_Store
*.suo
*.ntvs*
*.njsproj
*.sln
*.sw?


.yalc
yalc.lock


---
File: /apps/cdn/App.vue
---

<script setup lang="ts">
import { DuxAppProvider } from '@duxweb/dvha-core'
import { RouterView } from 'vue-router'
</script>

<template>
  <DuxAppProvider>
    <RouterView />
  </DuxAppProvider>
</template>

<style scoped>
</style>



---
File: /apps/cdn/bun.lockb
---

#!/usr/bin/env bun
bun-lockfile-format-v0
m�ٖ:e
[�T6��\�(���O�9-���9S���5�

�vue��-�������>
�1
�entities$
����"�����postcss[
�nanoid�&�������csstypeP���destrdefua	�X		�^

��
	�fdirU
	�patheexsolveconfboxunimportR�unplugin��acornE
��
	�sculemllyufoU
	�confbox<	�quansync1
��
�(�knitworkuntypedjiticittyconsolastd-envsemverignoreunctxohashklonaerrxc12rc9�gigetnypmtinyexec��dotenvchokidarreaddirppiniaP���+�rfdc"	��
�is-what�mitthookablebirpc������=�naive-uivueucvooksevtdvdirsseemlyL
�csstype�
�����treemate�	�lodasha�V�date-fns=�-� 
����clsxaxios	 � 	��
�mime-dbhasownh!
�� �"�n"�"
�:#�gopd1#	�"#�"	��#��"�#�� ��%�asynckit�����&����'��'����)�echartszrendertslibvue-demis)�w+�h)�U)�nanoidfuse.jsI)�-	�unocss�.�vitefseventsesbuildd2�Q2�=2�+2�2�2��1��1��1��1��1��1�r1�\1�I1�51�#1�1��0��0��0��0��0��0��0�rollup<��;��;��;��;�~;�Z;$�9;!�; ��:$��:��:#��:"�s:�T:�6:�:��9��9��9��-��/�D�	D�sirvtotalistmrmime�D
�D	�duplexer�C	��/�unconfig�F�chokidar[G�MG��G�BG�is-glob�H
�readdirp�
	�anymatchbraces�I
�*J�|J	�n/�K��K�K�/L��.�css-treemdn-data�.!��.!�q.�N.#�;.�.��-��O$�'.��-�ofetch�-��(��(��Q�JR�koloristglobalsdebugms>R�,R�tinyexec�S��-��-��-�cac�-
��U
�tslib<)
�wX�^X�BX�"X �X��W��W��W��W��W�nW�TW�;W�W�W��V�varint�V��^��V�has-flagrxjs�V	��V
��V��V�mimemathjs�a��a��a
��a��a�za�pa
�fa
�Xa�jsep2)
�dayjscolorizraieditorturndown{h�tippy.jsi�-h�h�
h�uc.microPj�mdurlFj
�argparselowlightdevlopdequal�k�Yl��g�i18next�g��g	��g�'e��g
��o�|n�Io��n�+q
��n�(�,p��o��o�to�^o�4o��n�Mt�o�o�9u��u��u��n��n��v
��n��n�ln�crelt�g��y!��y��y�rg��y��y�gy�Ky�0y�y��e��x��x��e��x��x��x��x�px��g�Vg�;g� g�g��f��f��f��f�|f�_f�Ff�0f�߄	�f��e��e��e�qe%�Pe!�3e�)�
)��(��(����vue-demi�������(�N��C��no-case�
����'��'��&��(�����1����he�	��	���prettierʐ���
����0��cssescpostcss[
������	���	�yallisthash-sum���bluebird܎������!�P��>��2�����escalade��
�l��`����	�yallistsemver�����m������
	����jsesc^��globals|��P��gensyncjson5�����	�*�#�svg-tags^��U�	���%������ޕ�ŕ����v�0�M�)�ǎ�ǣ���"���"�x�2�N�*��,�¦&������/��X�(�1�'�	�(�h�&�׍2���0���%���#�vue-i18n'�
�doc-pathdeeks�(�G��vitest���2�������	�siginfot��f��=�
�loupeX����tinyspyJ��chaipathvaldeep-eqlD��5����x��'���	�K����	�tinypoolx
�eslint#�
����levn|�
�i�
�s�	�deep-is���	�v��ں
�̺����ڷ%�Ϸ�ignoreBG�find-up�����p-locatep-limit��������
�flattedkeyv9�����esutilsesquery4�
�espree�����	������	������p�
�path-keywhichisexechalk�V����4�
���
�ajv�����uri-jspunycodet��`��B��5�
�T�
�`��#������
�	�����js-yaml��������
�Z�	�globals�����Ӷ�������������b�^��P�E�t�������$���"���!����f��Z���	�v��Q�	�.�
�merge2�������?�����fastqreusify�� �����yaml������������espreeglobalsv��e�����T�������	�boolbase8��#�������
����jsesc�����	�������s�
�e��W��K��(�ci-info#����������scslre���refa���������`����� ��������I��=�����+�������tapable2�����synckit��
�*�	���������s��d�����d��������g��R�����?��(����������ansis�������� ������~��w�������!��������&������n�!�Q��,�%�%���!�� ���#�������m�����������������q��Q� �����(�X��faultformatJ��	�zwitch��i�\
���{1���s���������	����		����	��������ccount4����O�/�A��&
�

��|��OhW[?�	Ltq6�����UU����wV_ɭL:�j�4�M��z^�~c���9+�+գr�k�\�N�o߻^h�i4�ТCF�=�8�L(�H��PzMU��%ŦS'j��D6a}��\a���L�s�H���$|_O$"�֋��K�7���ek�4͙�,Ò��w6�e~�Gܥ&�hJ�X9�ty���3q��~�{�`t2#����c$(*�V'F��͇V��Pޱb�\ac�G3t��'�U`����a��G8���Ld��LD�.��$Y"��\��*��_�(1|�)�ͨ
�Fs�Wد��?kyV°.Z��IÒ;���d����âޣ?�訊��p��p����6�&�- ���Y�{�d��LD��_�(1|
�s���h�o#m�N�o߻^>^���ߎ��U�}�U��رl�e_F�SY���S���WV��q�@˺�X�?}����6d \�p���I�V
�$��R���e�jQ,�l�
{�JoJ%z���^8�xqK}�L ?�7B�����'�N,eŏ(�D��W��dcgg���Y%�\Ř�%>��p�$�����=�O�o-{�\�{��g��]?/�"�"R�l���`���3q��~��&�p�;����h��x�`��&�\��s�ޮ�'�=oy���6N��LGx"�^
/Q0r�
|������E�fFr�sÞ8����@�lČ%���+������c9�<�Bq��r�!b[��V.�e>B�&��6̭/�h��	,���2�O�ԑ�k��c�2Zw9�ty��]KR
f�x�&��w�S�n�nEZ�vy��ܧ�	*.���v=�9N�Q߶��H�m�V��(L=��D�A��N[9�=�|��w�7D�%P��&��}���4{���^c�4�)�S�[�[݀8����ə���
皣���Gh��//��^�a��Ť��ƥnH?�	�J�Л��qm�@��{SXSc�+�^����#���=��U(�%�euS��?Qɸh��pp�<3�.<�e�SV%M!��?�����1F�!
����{���T2Ow*�5ѯ�x~$���έe2�-��"�Q�4�%ƙOX�֎�el�;����?��0-���J\�XfQ�&rm�,���YQ�D�'�A�k9�b"�}����ׄٳ@F�ݪ����qC�a��`f䘺O������qD-��x��>�G�⠚��_O$"�֋�-e��o���z�o��X��;�_L��1�3ia��1�-�Y�(iG	�x������#=Cw�6L̶���z>+������|�U��周G��;�#j���2}V�Rb��h_:x,k��jF�t�?��b�	�l`��֑�A*(3��ѡ�(�O�Fi]r?'���~j�%�ۃfF1���i�<�4m���G&�@
D鞮v�0B�_��0���cZ��1R�6eR>�+��P�F�m��޿��2�9Pl�H�A��r�'݈I
��1,����K�k�
LzO�|Հ?Qfr��dT޿�����Y~v�(%f�^����7'�82��F]�qEDJ}��A%�CD��^�~4��������#�8�{O�ѳ%]0�t�dl���2����WQ���@�������
�%�]���ݱ�qe78������M�H�.���GU_P:�@�xJ2X�xæɺd�r6�3���|��Z� �m�auY��Od[��m��	���`t��w��z��;�j�Ie��$�� �.�g��]?/�|]�=��nD��t�Њd��Viܞ�C���w�f�.Ou5
��ڄ�3"�"R�U`����a��u��U뒵�����=����5hX2T���*/H��[�f���q�y���?�~`Ic"�Uڛ����k��ͮ(4
�v�CN���݄��u�oh�)�-�������m��W�����'.hQN��`�d��ҧ�� B��СLa��"U�cX��p	�փ��d�9���INص�=�!�d-sX��
�Z�hb��߹�AUz�����a9Q�8��b�Ӱ�2"u�Q�t�BWN.��.B2(Ҏ�4��Ƥ��յ׏H��PL��![�hk�%p�$�����r���J@)Z�/XӒ�4G��ߚ���9E���u�>��u��E�@.`�'����F�ݪ����,yݭ��V���{PM����d٢!pm}�������4+��ɰY)���ɼ�-y�aӮp_�a��҃q��6$zu+�>=|��p��L��l~5�L}o�Q@���&%��~ �ӿ��h6��q 1ɉި����*�f*�	�fo���]3ʱd�~$�\E�cc�'�r��h�
X�ʕ,�0<�3N�X&,>�\�
/4Ⱥ�D���� �'S�)f#�����t�S�=d�BR���
Ezc�Q�pP
~T	i{^����G�^�{+r	=d�����zr��B٥�26�����"E��ӎ�_������d�����Nʺ4늕�k��D��D��hS�m���˿E��z
	�`(\��$}!�?h6�x�(���$l��1o�������´`y�����~-��t`#�Z.�!���r�h<q$/��V���7�%+x���`oN/�'�i�`4T�4�R����׿4&���*�	�n6?�ON�?`>I��A8���U0l��$���|PKG�
�:�^N=��]$������~X?o�)��!���H�8)���t&��$�5L?�ӧXAh��,���U�}�Uh��ă3W��f:���J��F��>��C����rjTϓ�����0�;�J,o�{�m&O���~����^o#��V�����%��J���mj��՗p�FW�rN�\�ޮH�,z?3X��E�i��W��;']�
i���Lgs<�S8�>�8|��L{h�^�bZ��a�	�2K^Q˖�CO�[8�����"Vb[O(�F�Y۸ܬZ��\Y�������/-��2C��Xְ�4�<FQ�PG�QU�g'�Y@��S1	���P�9] �q�qz�G0���I�Ф�r���eɼ,��M�0dw˖$B\eK��xY���?�9�U��亦]蜎�E)'L�ڙ<����a�m׍�#r,���g�V�}�E��m�q�9^]:�`�OhB8�E/�Ш
 ��ig�u��ɑ��	d �p���M6�S�H
|�l3U���z�.��nd��8C(�nJ�r���2���@��h#���o�ƹq�ӓ��D�j��ZM؏{K�ę�az�!�|S��%;1��qqj�N�Y`����qC�a��`|�`g>�֛ޣW�gxb�eSp������Jۄ�D���N�4]��#���4s��ڔ?��0-fQ�&rm����J\�X�el�;��ٙF����Rmjۇ�^�:_�rI!+�&�J��_�M�j���#��
�y���Uɛ���{(z�B$�g�]�O���^0R�+���������� ��ĮwBD{�3�N���7SH��~5�\a���L�s�H���$|KU���H��}p���ӈu��~B^��|!�3������@R^TH?Z�v���@�5�
�n�ô�ڐ���4|���|���e��ҟ�����o��~�L�PZ�|\�l��M[x_��������;aa�2N	3�cz���}��}p������|!�I�V
�$�Yz���ޮ^��.N���m��K"�J����\�U訊��p�j{�	:6��RJ>��R�BOUOM���.��.B2(��蚚S/�LG�lE*���`O7�V�:rb^=�wb�4�1";���(�;��
��2���C�5�a�I��׌�3{�8�x�+}��/�1��_�L��1�#h}�S�;��ݕ�>w����8�"�fw�?�aU��i���ʐ��VO¹�*�<'e�5v��|��"��ޖrU!%��!雊��	�S�]�N^��n�\3�����м9��e��H	����$k��4>�B�Q�a�7�5�A1w���T��J���݁�5���$��.F�k��M.Q7��CN����~ލ��|��R"�֬]S�]��u[�pڐ��h��~�OɹJ�R7i=�]�S|}�S�Je�J=�4�1Ej��+��uJ��H�bi=L&�}k5�>�e�(Y?͗�R�ʷ�kIo���8�| �@�+��>Ox��$�/�K�&Q8�N�n� SVu���϶��K�N)Ui_��=V�@�YL <�E����$0��/jHU���_���=X�����4n�q���7�G�{�8��x��L�u@�l��l���x�w;��bk8�%�,+�eb�T�{��� vJ�rJ�x��7:I�3%MIL[�8�-�!�ɳ��Bg�%��G�d��#�%�H�@��z�n��^Q��pY�����(ɍ|�xWQ�M]���n�9�MjRVH���/b����R���e�j���C����i�QsG|�b^�VQ�Na���#<�y���]P��s�*/�>��b}2l����hg�)_�w�fѠ�Ԯ����"��t�m)b��bOȑ	݅��x*�|��n�3��
�(ek=��q��ǦEj��2�y�W�q���@�ԸX��$�M���a�!�G��P~l�ܱ��@ߘ:�}
�W?����s���R<	�m���O�F�,W�S����0L\�E�cc�'�rN/¢��bq$=@8�X��I����O�@�JA�?�J��Gو&�>[�	'
��\+��)>b�7]��4�u�����#���?:1KT�߬Z�!z9�����b{�-���#���?sLkU`C��W$(v�YN��e~�wrY�O��w��5�ً���޶�cR����b�_4�!X����$� �%2.��.B2(�W$(v�wU���Ϭ�!
=K܁#=�I��t�N�s�U����y�W�q�i�T/��J���0����'Nͽ��/Z�&�=9	o<��Q���\|�S�--N{wp)�B���ղE�'d���k�����_[��I��`�܆|��3n�HA��j��^Q��pY�����(1?�%|��měX�Q�����f��,��;UJ�M�Z��)�d�����߇)�M���;H^z�JKv�J�0N�]$ET?�,\n���$9�Ƌ��]1��o����4��W��^�G}T�EK�%j��;�v���}��¬I��Ej��2.��.B2(�z��w����,�E��R~4�	�c��!�P�%�8�e�&͎�/0s��S�U�0a��~]��>@A9�|М*܆�f�É���2l�u�H����2>��BC�RJ>��R�Z�.�*�	K|���7�S�6Vyi���O1rϷ-����ú�*��q�_�� [Q��9���4���U�}�UA�j�sLkU`C��W$(v��!���^���-�M�;�;�=���x�=!
�Y,ލ
�>:$Cl͒[=�ơI����W=cݨ>�Y����H�k}p�X6�C��-�~�Z��dF��r���l����1qSIZch�:3Fa�z�"2@^.��|�~4�	�c��h��R4t)��4�-��8J��2�x+�r�+z^�Tn�-~��1nfPb�X��Y0�
��������7�ikIpYԇ:�L]�MAt&�$����|?l�� �d*�A��_A
�����,��KN甫Kz�!�� �{>'��f��2Ͳ����Kz�!�� Kv<휜lG��X�!�}tA�:�;81�q���ς�)�9x?��3�p��md�	6�f�?�U-8�����P^.����i"1�E��ƾ#@W�>�%Ⱥ�cg�tuO�4:�Z��ƶOk!�{p���f��W.B�o����#�rB/������Õ���Ŵ#MS�'f?�匰:$���f���E�8IN�$˟�_���Bc�z{�n+CF�C��umkz�v�W�6G�����q�A����
:j#'FޤqdB
Ѩ�j*���&�� a:�G=���NJA*�N˚�q��-�8�-�^���G���#�y݊ߍ�ABH�r)�q{�����$5떢z��p;[����K`x3qQ�$��
�&��c�g;�|o�9sł粯J�"���Ĕ�!@�mH��S�Ķ�/��@�)]��Y�~^��^��x4퀼�4��!;��&F��l�x���Ca�t��ErT�X;�/�����=�	��;�K�
f�O���<��D�2���Ŏ�t�=,wţ���)N����F���X}�c���\��������d�P�#J���|�w�٢�z+t\�<�a/��L�>F��F��H�K:��B��B�	8�V<��:�f�{X��F�%6�e<��5��B�AR��D��F�=B�6��E��^�z	2��	0��	D�
5�h
=��
:��
0�:�R2��6��6��8�`D��8��V�R
3��
B��
:�	
2�<0�l.��:��6�
:�D9�
}B��;�P�W8��6��0�2�C6�y6�	�4��4�$2�V3��2��0��.�).�WH��2��0�8�JJ��5��8�8�92�|E��E�?K��0��:�B�C7�z?��0��8�!2�SG��>��D�VR��9�*m3�@�3��0�2�L5�
�>��7�9�<N��F��9�	<�E6�{B��>�8�CF��C��=�	:�CJ��0��3�
 D�[ :�� =�#� 7�44!4�u!B��!L�("F�y">��"B�I#F��#0��#:�$F�K$:��$@��$V�%L�g%F��%D��%8�7&I�	�&I�
#'=�
`'9�
�'A�
�'J�H(A��)>��)6�*6�J*2��*:�
++L��+D��+>�
,N�e,4��,6��,A�-;�)T-5�B5/9�B�/0�08�J07�v2D��2F�3H�H3D��3H��3L� 4F�f4J��4D��4H�<5L��5H��5N�6L�j6F��6H��6D�<7H��7L��7F�8J�`8H��8L��8H�<9D��95�,%<[�,�<Y�,�<U�,.=[�,�=S�,�=]�,9>i�,�>c�,?a�,f?i�,�?]�,,@g�,�@e�,�@_�,WA_�,�A]�,BY�,lB_�,�BY�,$CW�,{C9�B�CC�B*DE�BoDF��D0��D8�5E4�iE=�next.29t�x�{��E:��E8�F;�SF=�B�F8��F6�
G8�iGD��GD�HJ�LH>��H6��H<�I8�>I:�xI8��I4��I<�8JD��J:��JF�5KO��KJ��KJ�DLF��L]�B�L8�M9�XMc�B�Mc�BNK�BiNg�B�NG�BOI�B`OG�B�Oi�B4PI�B}PQ�B�P4�QE�BGQS�B�QI�B�Q;�XR;��R8��R8�S2�5S,�aS9��SE��S8�/TX��TU�B�T?�B)U7�B`U/��U;�B�U;�BV2�TVC�Y�XW�Y�X[�Y@Ya�Y�Yi�Y
Ze�YoZa�Y�ZW�Y'[_�Y�[[�Y�[W�Y8\Y�Y�\]�Y�\[�YI]c�Y�]_�Y^[�Yf^4��^L��^J�A_D��_8��_0��_:�'`<�c`D��`B��`0�#a5��aD�b@�Pb<��bV��b>� c@�`c=�
�c<��c>�d0�Gd<��d4�
�d8��d8�	Ch8��h@��h8�i;�NiT��iR�j?�[j8��j>��j2�k<�?k8�wk8��k4��k4�"l7�el9��l]��l8�3mL�m:��mE��m9�7n5��oZ�DpI�(�pS�
�pK�5q<�qqJ��qP�rN�YrX��rV�sT�[sT��sR�tL�Xt>��tR��tQ�
KuF��uC��u9�*vP�zvN��vB�wL�cwL��wH��w2�)xG�zc�zz]��z[�2{Y��{Y��{Y�=|Y��|Y��|W�F}W��}W��}U�I~S��~S��~Q�@Q��M��M�+�M�x�W�πY�(�W��W�ցW�-�]���Y��O�2�[���W��[�?�S���M��:�"�O�q�W�ȅ[�#�O�r�k�݆c�@�[���A�܇?��?�BZ�E�Q߈G�Q&�:�
`�W�ŉD�	�:�^�<���>�؊6��<�T�:�
��J�؋B�
�>�
X�C���I��C�@�F�	,�S���,���:��:�(�]��8�>�`�	��<�ڑV�>�D���4���7�'��<�3�H�{�:���:���6�.�8�f�?���8�ݔM��8�Ζd�n�^�̗F��A���T��8�8�C�{�R��͙G�<���:�N�6���4���`�4�Z���@�ΛD��:�L�B���2�ɜ@�	�8�A�L���>�˝=�beta.2��!���I@�2�D�M���:��i�n�8���H��:�(�m���R��V�W�S���U���a�`����u�X�M��_�D�g���f�����0�v��z���n���^�Z�Z���`��r���p���r���m���������2�l���g�(�9�a�<�	��8�խ2��@�]�H���4��J�4�>�r�N�ɰ:��6�9�@�y�<���:��2�!�<�]�6���6�ɲ<��0�O�6���8���>���F�A�7���?�ƴ>��:�Z�F���:�	ڵ8��<�g�5�	-�<�	��H�޸0��<�J�<���:���6���F�<�:���G��<� �D�d�@���r��>�T�4���>�Ƽ6��>�P�>���8�ƽ6��>�E�H���<�Ӿ6�	�0�D�>���F�ȿ6���6�>�<�z�5�
��N��:�Z�@���:���>�*�F�}�B���8��2�C�2�u�2���D���>�A�B���<���/�&�\���P���4��8�>�F���A���U��:�a�:���A���D� �9�Y�5�	��@���N�I�6��@���@��B�c�:���7���9�
�L�Y�I���J��I�J�R���N��L���^����Qc�D� ���D�:�:� ��A���Y�QC�F�#��^�#��Z�#"�X�#z�F�#��T�#�@�T�:�	��F���:�8�<�t�4���?���E�K�?���@���F��3�R�6���V�#��J�!�L�m�0���K�
��M�
5�F�{�N���4�	��7�4�^���K���N�>�K�
��L���:�*�8�b�`���S�;��@��<�L�?���2���?��:�E�J���F���B�&�D�j�E�+��@���P�?�6�u�D���9�
��M�?�P�	��4���N�I�1�z�V���D��L�s�N���_�/�F�u�^���H�`�V���A�
�H�O�L���N���I�=�6�s�?���O�N�7���6���:���X�W�O�3�R���I���F��R�t�I���P�
�I�4V�Z���R��I�2K�N���V���X�G�`���<���2�#�J�v�H�#��V�#1�P�#��M���@���V���P�:�j���T�#�R�u�t��X�p�V���j�0�b���r�?�\���j��h���n�2�^���R���Z��\�j�`���`�*�V���V���b�8h��L��x�vf��2�4�BD�T��4�H��X��B�`����6P��9��N�
D�Qb��X�1b��:��:�	3�C	P��	D��	`�E
V��
f�^�z4��T�D�Ft��>�1
7�h
<�"$&+++++,...	7:::;;?ABBBHHHH^``addddrtwwwxxx||�����������������
�����������������������������������������������������������
����$>BDEEGHHHKKKNNc
m�������������������������������������������������������������������������������������������������
7777777777777777778899::::::	CCCCCCCCCCCCCC%hiijjjjppppqqtuuvvvwwwyz������������������������������������������������������������
""$&'+++,-.FY[[[[	ddddfffhhikkkkll
v����������������������������������������
���������������


-..0003699>??DIIIIIJJJOOOOO$syy{|||||}����������������������������������������������	�����������������������������������������3 ""*++/224:<DDEEGYZZ[[[[\\\\]^^^`afnqsttt{|������������	���������������������������������
 ##377;?CFGGKOPPW	``cefjklmoos����������������"$&+++++,...	7:::;;?ABBBHHHH^``addddrtwwwxxx||�����������������
�����������������������������������������������������������
����$>BDEEGHHHKKKNNc
m�������������������������������������������������������������������������������������������������
7777777777777777778899::::::	CCCCCCCCCCCCCC%hiijjjjppppqqtuuvvvwwwyz������������������������������������������������������������
""$&'+++,-.FY[[[[	ddddfffhhikkkkll
v����������������������������������������
���������������


-..0003699>??DIIIIIJJJOOOOO$syy{|||||}����������������������������������������������	�����������������������������������������3 ""*++/224:<DDEEGYZZ[[[[\\\\]^^^`afnqsttt{|������������	���������������������������������
 ##377;?CFGGKOPPW	``cefjklmoos�����������������������{4��|�Ἵw��<!�g�S�<��a��M�k�0��(���زF"]������D�Oӷ��-���������]�j�V��UG	���S��;�.���7�c�p�����		�W�O�c�R�I+������ږ���Y��6���7����vطĲoP�u�'�e7����\��恒H��7V�����@�D6ќƂ�������sB�-.��ȥ¹iZM��~�b{T�C���]w��tϳL�
�4������e |��h���U�g���X�[_��B(�jnR���-�.�Q���vG����m: M� ����oy%��]�Kl�Җ�p��?��ztA5�^3��+Q�l4wӋ�q����-��Z�#e��!���҈3���	���Cz�Eg����u�-XU|���
*�����l��<:�Sր۴5!�J�iե[�ي���Qu�*��R��oR�_�S�w&�R�����$��N��#�R/�s�Ȱ���P��C_@��	E�$����V7��_�[�BT�Gj�A�0�� q�SF����@�ͭ��Coؕ��:��+,����
WHc�F>@��t2�X�j���>�#���y��������Ԏx}-��K�1�������6������:�׾R�i�6���w+��0�7yk!KA�lp�si��fC�&4�M�
�c����G�d�6��*��<�M�{���cd�H���9�HZ�TQ���\*[�>[&�<Á|%��_�2s�1
/х������
hO��>J�u�`�a�-m������!0�7�zb�p�B!='L5��:o�������X}�aִ�딣����RĦ�FP+����Ov�*�7i>(ԫ`���R�t�᱙��=�;�,��u��ƯX��mi�x���1mL�:�F�-�
�$/�����qY��D*�7�8u����9���a�gLsS�H��[N3��j���݆���.���J�Q
��~X�m9l�)P����=2&���mq���zT�\�d��4�O���)M{>���Ǉ��ᵾL�X�ɄÞ�{~��6d�����rzn����P�?�C��ܻE�(L�q����Z��T��7ĩ|�'R�[+��ao*Ige�O��Ո��9����+�u�_�v9�Q��ߎ革
z��xM���lP;��������U���<��io�
q|�x��_g�?K�Pһ,�����$脋I}$)�`mA���~P������E�Sw�<
���F��@���\t�[���s�M���m���E.;ؤ&|� Ă� ��=�;���It3�su@����61�P(�Qϸ��M���t�V�f#ȋK��c���:h��6Pb3Ǻ����A�km
QҸ�n2�R���;0�q��6�	�I���=0��=��Ac
��~�I�_}� A���������d�"����&���R�*��������=xl�x?� +�pI�조>N
�YSv�؛(��ϖ�/��3[���|���0�,�m�.��o,8�R�
��O&7��5U�����>,�#�~N��.�����G���hS<˗��kT�7���դ}tц仾
�L�O n��'�_��o$���V9�	�"�ȤW��$&�����1�x��P���'z��➰J�FO��7XO�����}f����j'�$�&E$��S[����M����S\+Cf��ͫ*��r$�4X������a*�t�xrɧ�����hc�t�zkd),�����D2l	�}{�,�H9��"[m��N��sx:��=�����=�a=E�gрg�ű͘�"K�"��؞�s������Q��?�iC����e�yѧA��� a϶H�[*�)1;w���`��E�ds��{A'��5О�`>K���Ƌކy)W��q�����=-��k�|	*�A�k��i��F@a��e�pM�>��V���~^��5v+����Nq$�$���	�[͛���̄X�{��.�����$,\�z�r/H3�e�� 3�@W�es.n�n�>S��_���<r�9h�_>Oy�)���
�-L�w�K��P̆?7�l��طd���!�!h���q�f�'8��	�@���®K7�j)\iA�<֫�	p�E�Q�7�f�VayR�@º���"�bp�"���J��ŒQ�����F/4fJ�f�H�[!�VBk��*!Q�Ff���Mz����)Ό����#YH�p
��r���I�P;-��{�"6yq��p��'�m6�q 𲔾��Q��*����ŏ�|���$T�_ALٴ����x��X�`�����E�TL�ab�w�H�Y����f�Y��@F�!�9��*�5�������%��~���ة2�/�?6xB*�W�Z��y=Y��P��+4����XM�I(�{���ʗ�A=��
���&Յ�>>�bpO�/eʣ�$k�g���G�b��-ɕ��1��s����v����v-
�"�ݮ��k����'�O̶��I7װ�_�p�#o���fY"���+��ɸ��q#��퉅��@��nX�l����d5[���(G%�o��kc��:��@�:ũ����:$/�z5]:1$%�{@����4�0�J$~
`/�4\Va���)���.aA���[�@���<4�n}Pl���xa�̟�~*�H����M��}HUTPԖ��DQ��*5��j�_/�����2�f��H^<�g��2ާ�x*�6��˯�%x�K�I���5�������N��+M���I8��y��H&�u�'�1��@�ܧ|��Ɇ��e�&%���m�I�����d@�<e��6���,����tm�����2��z��PP��H&E���3h�O�Y�����
���-$��+A^�������-�[G$K���L H��p"zg���	��(�C*	�`o�x��\��n��.$���}}�C�K&�T���.�gR �l2W���G�谘�+$�������3}�C����������U�&��0���Y.x���+��/��?�SX�>k����5�N�탰��Pj�x�GZs����K�aJ�s7�&,H�������YD���0���3�o�U����`KQ3O��6k�0��i�;�J��Q�~1�Y0���bƉ#�x��ˈ��X��W��U��1D�f�H���xa_�P�r��@�����G��X+e���8TM/��y��ńH㟇��{��B���j����2Z�ؒ����|i��(�� P��dw�Y�+G����5zx�D�.�d��p�W �aTAJ�J��3��UFCnA�	����Q��A������A0k3�f�²P`]��z�z� 4X��D��Sp�X/���4�
}x0�3��n^j���,c�~��ۑg�Q�o�L�ʇߒ�s���v}�2��
��g+L�����5ua����E���D����(�v�*ĢXu"����>&�phu�_[.�`�TXR
��@�?/Z�{���6����[0�#�(�LnVȒ���!��T���{]B��	\p$������Sv�=��顑�%��7ń���C�ג�6�K�K�ȯ/�~�A���C8H�D�,>�ۘװ���~\	u>M�Ep�U]Ԯ�.B��8�B�S�ۋ
k�g�jNNp����k�d��M���H�c艩"Jr"��=��Ďd�ש�)�J���9�s$߆�}�|�y1m�3(_��(�U�*����c!���@�0��%.�=W\���śJi�f 7kL����:��<�,�=�=��ʛ��	?�9�f͐@a�A��]~7�]��%Y��K��JN��82Z�ޭ>n|��;䂜u}'������Nӡ�F3�7ɕ�[���-'��F�:)Y��̆.��' $��|D�2���Տ����<Pk��
��i�6�*��)¶�����<�w,���=�=׹0w��΍c�*i������,Ȟ�C�C��=D]������2i��tRX����W]J�n,R	z�e��M��8�t����Z��ܸ����^���>�}�_P��0X���ʺ���mh8*z�m���t��+V��v��z1�����1�g��^��o��?���Cf�b��8g����H1Gf�	C���!�.��B�ح�C{;� ��]Z���׷�&�'������@E�}
���M\
�,L�ey=E�)���㬯#%m*�q�����/+$@&F����/��]4��@���Av��5�L�aK[!�B~�
W�k$��'���]�mf6E^Wr��+Џ֋0#�Љ���ě�	$��B}��F ͿN��͊��S�=�"�k��<���з��QÎ�d
�;?�3���]|UL������sp����C��Ze6l+o��j�H��2v����Q����̈����
�#���a/1�F��Tb��~��I��e���Dn�ɑ 
3b�f�&:�eN�{���h�"��),�����aj�P�����4p��ޛ& �
��E�,�WNy�*�V��-R��.e���h��6{��x	<���P,����+~6@��b��k�t)�f	�-d��F/�ƱY1%�`v|2���yj��;,R�q����XVک�}Nɦ�I|��������ʷ�R�j�,����G�0U}ߔr+��Yڽ�/��j���y	ow��m@s-�q��C!�b�(�=��~�Vü���LHZ��H)�#{G��K��t(�m��z�*�K=�$��	g����3��E��9}�Շ�))X�??Z��I��6�vRy�.f�7�*�:zo����cT3�fa�A�U
Ʀ��W�Ѳ�mm>;f)� 6��[���J�������C�eJ6�g�0���XB5�S��J���8{�zދz7�y�nW�f���4Vj35I���KB��G�����z�9�ԩ�:)�Ժ��y,V	���Q�x<�RK���^��=]uB�-IADvH�����L8p����b���ď(k�痙���R�$M�Z�y���7�H���d)���⛽�_	O
:Z�P���M������P����M�}>!.���
	v`���b�Y>�A^���ZB��i�RG��h4_Edg0�8��N��4�{�u|�U>���ahj����)�9G����D���ʍ���V�n�����
9���O�
����rvuC���T\_3�*�ƚ{+h����1z"���ˋ�;]u٬�
9h�P�����P��R���F^Z)�&z`oqA�����|M3���/��Ov��i�f��״+T�H���r�r���L�����Q�V�7�$EE�����V��y���7h�2�As��el7�0��q�~�pI�������mȎ��gw��� ��R�qV��#�n9H���$�3ʨV��;���b's��ڮH��Ō ��=�6��+h�q��n�������S�!~�S�����
�I�tXi|�@HA����ĉ�b�c6�	���-�](
Ժ��F����Tf0��шE���L��4lK��N�걓4����a�2�Q�h(��2�x��c���TV ���U�󘿻����ai)�
T�W�~ť
m��C�mk�5��IN�u����1���H�,s92��J,�X���V���7���v�B`	`6�!c�؂
^�>¼�F�A6�o���r�3��~�.���3�ܒh$aJ��WaρA����׮7A��΢љ�9�"��)��5h�B�U�H�Ɲ�e!��[2�H�y)��M�S�iMTB:U��X�M�<�\{�RX'<t4��r�Y����/��<g��7�
W�����2wǯ��h����^��T�ɲ��Yz74����>˸RϙAPF��a����Ą'(X:���,�yR�� ���Ǒ��o�����Sʆ�����Z�&^2݀k���HrথR[��$Kr
m��U�%��x�('�l`�bl�쾖��6�l֨�ھ�He��[�����V��4�C����NjM+ˆ���"A��=a0~�W�va�~=W�(ǭ�⁕}�`�m;��\���z�@O}
���іk�9�FS�"�o�T�,�4�&ss0�D���`��vu�x+~B�aFߌ�f���]s�Gf :8-�W�/�4����V��K�m��u�Hc��LeO���ĆC�mP���f4�M/M��^�RP��������(:���	t�YU�[ӠX=��c���J���L�;A���wq.���<��_��t#tY�J��i+P`�3Ya�v�&������u
5�<˛��s��{4��0F����l��ԧ���`���7���{?x��#��d��:��t��j��c�Ҟ�!%�?�i�]Y�oN?��2�����a�u�dKA�=o�2O\3v.����0���7�����#�]dH_�v��l�G���g���IX��S��b���ѵ=��졒�9N����C���m�s�9t��v�?gj��g���
U���h,�7����y���c�qx=�%{�mk��K&], ����X�J85z���B���=vX��HZ����n	�&(}NZ��X��d����~��.
�o�M0�E��u�&It�d˪fs,���Nl?*�S�d���8�~!�����e�m��饰g��k|�Ҟ�����u.�Wdk����yc���(���ׯp^���.�ucT��	L�£��fu�ۓ��Z�sK$�~rH�!| �h��������� �jy���rF�vNdyu��V��Z�75���g��4۱�o=�t%������n��T�;�l��3�>�`4�v�S ��l�>ɞ�C��+�������h3�F��g�E�,	|S8�3�����D�c�H񱷨�αh���ie�Z���&$�f$u�x��B��i����}�es���M�F�ڤWǽhv{��{!�q~�:R%�����/x��e)$�'l����1���j�i�{���V�"�S?-�ˈ�����Y+�vM��>,T�\U��ϳ^˅�U�@&�g[o��oJ��k_(�!(Bb�b>�]�kXDP�p֏Y�rF�ؓ��r�������'j~0�?]Y	گ���v�J���l���ĺWm�Wz8��'���d�As*�6�.lEU(�0{O��HkeҚ/��yfM�����]7,��m}��?'��(y����zh��E}��ب��"��C,��u�q�!��iw���J�a��������n�xG����Mm�j6����
�*N:Y��'��S���dHϓp���=���u����[mZ~�h��	Z0~��o���uW���XW��I�JU{[��V ����'��ˣ"�8��5�.�+�A�Q7� �f�ĿN���p(�� ֱ���J���=���UX$]ߏm\͌��M���sF�t=�ӟL��CM8�ݐT{?�O����q�����Cn~n�ɂ�#9�g�UI�
�� &�1D1�vp�}]�/κj12R�5ϯ�L��r@�u�"{�D1����ߡk�9�Ƽ>�z�8�w�3T,O��+�+�D
0�
@���7*���gz��sy��A`mR�Vea�w:8`0צ}���9Z6��Y&�yѥ��Y���C��D�z�@}!&Ӄ�J��Bd��t�\X.?���ݸ�E��P],As�{�:�ڳ{)/�������
:�?�r4w��ȉ'8I%T���u��9����Ց+DZ	�>�tp�\�>�NKM%�90㹊$FP6�ȵ�[-iD��ED��ex�b��v��@��Òײg�v#W>���@���:�Xȯ�����L�z�K�`�T��xg.�=eDk%p��wd6>l���4���B�=�����==�=Meao�ϾL��V�����#�#B<�pu��/�!ͧ����x��8�^�b[�X�p������Sb���9IlCfQ�΂�;@�'��lO�5e:��P-�Sx���y�T� ��c3 Y�O]f�v�{Y��p�=��K���r��%��G��UUA�=cG�����J91��z�q��~�_�F�b0�Hn�:1��5à�V��v�
��a���є��!i
���S��8�H�i�1�H��{������U����;Ly���(�F��]ح��#��~��Nx;��VmT]VY�e�a-�G��P��|6��c<R��]�u�,�FV����x{J��/>*x$caʟ�� D�i(_�oթ�l;�×��}���wv%�!��샃�)�����'����`�/�d�+�~y�W��8w��=,%��*&�5()J�=��~���I�,��HT�~�"e�_��m)��!���:���A�I>�&:8��bCQ��#Ʃ�������|	�����o$�t��L2)~�F��gn>��T����ґ��woJUl��>-�@���RW����������eB����PZ�0-M��'xp�q��H裞Q�>zɰ'��p� ���Zb�'�:�a�s����|lF����4�:�=&�
!��õ6'�����&:k����!��6�o����Ņ<�=!���|���Y�����h�3(ئ�X��֧�S� "
�*yno��a�ᥡ���+,�ℊ+����Q��hWB�O���M�]\���e�Gجm�ӽ�o?fV,B���&32%ʜ���`��=[-m/��0	QE�Ѕ�e�ST-.�����(��2AA�CVD�$�n��HB�e�d���NL��B��r�6n9��7^E�c�-����J�ZnRt���K8�h�q������I�����J�ٿ��W���)�{O9(��}���K�9��1���{y�~�g����� _N�7,��N
v1k��F����������5�t���`i���"=V
�&�����x1�%����[�E^����+Y��/NAQ�){R���s�3��|�7g�c{��q�v���g$����բ��K࡫(pW���P��G\�V�^r�� ��-��6h	 ���K�c���׺xUѧ0y71���9�8~-F�M�����?�`��Ii#ZFO��#�.\|w a�+x��\����u�񬨦���������8�������'� &^�C����,Y,��%nӖ〃���3��j��Z���t��y�4�|�ɩ����hC
$.K4�qEk����V#$�p.��ķݖ�3awЏ� �x�w7C��X^ԕt��G#��p�����n)�<GX˔��^r��^4��&��p��#��y͗{�^���7�&��8�-�k��{����,E�����:r��m�N��rQ$׿�Sw��&��[�4 z�BIz˷Y����Α)�\�܇�?k���n���B��������yf�"�5s�R�In���5�I�県Rj�?�P"|�l�~�:3��J����̉� ��^@������e�pVrؕ��?d�q��j0r�z0����1a��0�>Q\�o;&D���&���R"8)��X�����W�hxW&.���S�#w�X���ǭŨ��WDp� ��8	Jꂒ]W��_t�$��f��_v��%����4�7�ß�`�'�/��4��'��R��c����k�%��*2g5�3�V�v%
��ga��Yp{�����6�N��*�!��G��q����$��k�(�O`R����Y� J?�O�V�N�씩���V�����8U����\y��o2o���Cy�>��fEOf)p"y��8S��g'�WY�m��y�O�b�&���3�j���7ͨ�,U6n�ָ�
����߸��0m�!�6�@Mą� 6�
�8�z#l��T6tp��ɣMi���獎���!�A3�XcvI`̔��
	��>Z��M��}E �B�s_B7P��c����~�J�Wc̬��	��������|z����7F��'�R[�cX�Hw��+Z���(���|�0��	��G*c���������o�|�IV�_����ZT�j�|{���LB�]��x�b]�^q��/�������Dz��YV����o|��km.	�B�^'m跨ܓ�����<r��'�a�#?��1�aa�qO[m�־�&*X����&���>����,0�)��~�`uD��#|7$<B�t�P��j�Z�A�˫�ׇF�F�lg%>����X��6���w�W�ň�M��57��=9�A�5K�h0^���of����_��D�<��no`����p�����/* �_r4[�Ue-����v�<8�w��f>ˌ*�W�sn�+��~���Wd{���Al�<)��T�rd�;�N���B�>������|$c�
�ak��Q)�2�X0�s���!�KuJ���M��C��`{�\E�� g��b�ȼf�O�|�r�O$h��d�fSb

0�vEB�+��������R@� >��-��Z������]©B���JTX�h�z�0#B+�K���΃�2�ұԋ
��8a5���;jx)Z��!��ʶx�1Vw�Ե�B��J~ؠ��,�8�۫p����8tl�|��
s�.�0���q��41D�S��`��'�x�m�F��������m:�����i^F��S�(� ��Q����T�`s=���}�/��9ڂe���m��ﵦ0ʪd��-���X����[L����M6�e͠�3��C���?í)�o��y��q@����
^�%�if��d/�wE
 �� ޳N�S��Z��"Ka��rQ��M{�br|d�]_�YPh�J|-7+Q��h��S28�B(�;=u/el5ycD����-R8�c����s��jj��u��u=
aG�Y�ʁ1�*W,��B5m��"�DKr��c��v�.�?����,�@1��;d�H�su�F��J��������",�]uC�������gA�S9��z��WBc�J�"F��QJ��@���)(L˱q͍��B��C��&���8���h�"��n�-C�*)}�
1%xP/�/�!W� �E,�@ ��D�ND�5�j&|R$�z��
��2mk.�U�9G3�+���v���'��#Z}0�5�0��-��H2 ��
���*����;�#+dt6�|9�F��!�ƣ���>3e���8�
��4v.��$�arJ��3�X��|��U4L}aM
�Yi%nu��kf�c�K�!�l@���gR���U��P�@�*�r��e��d�����0�o���s�N��v⹺
55C�R3�hX5���lA��n@:Q@S�Z�h�'�+��Y����7j)1:�&~h�����|M���(�-��Zr��8����L�}̻T�;��0���3�Boe'�+gR)2���{��w5Ņ����)�v)��J�J}���xugVƸ_�~�XQ#]-P
�驐c~��M��<p����㥱R=�(��	_f�n1/�n��N���
�!0��G��*ĕ2yt�o:}��z��rx��Q��'��_g��>�i��s�"�c@���
U?�1ĺ�Tv��d�k�:�/Ӷ�v�; {��%q�a������N�s�̼��GP�w.�i1Kt���X�����N����W��bNMxg}�͒ ��٪�����i�z�5����I�oKY<X��2��l<|�_�J@�6�}��z��7ѨK���s��7D��5�����C<m+��b���U�I�l+���b��1��_��|�
��N?��	�r�Ɇ��Co'��(�g�o[�fQ�Z?&OS���8��{R`�6s��x��_���s��S?�?:�l�~G�W!��q�V�p����H!�Q��D���X�l��^���ѱY�m�� ���j�}L�[����Z�ֹ�h����
%�>��h��]�v���8��m�>��]��F��1_��"غ�PqB��9Ɏ�>�M��f4^k��N-��N�-��S/��%��C��4���!+�J)wA2��6i���(��Cb�3�����63�l�K��$�R�t����pw�ñz�[������x�x��ö��{�p_BT!Tu8�	vʻ�rΈ�����ց���V�E��Ȁ}���݊���[���fO�<�_�I���'�ѧ��7ҾFSo�q�O�jg<'}�a�%=d�����E=ǉ�W?Y�of�I����Ul9�wr�]
��P��fZ�����{���!͢��TlƆ>%$�Teu���	����{H`������ E�����ND����q��vT76ߏ3��c���JH�����n �\@��Eh�� �;&H��#0�¶�}۬ȁ3�Zm��Ƚ��"V��Mdl�����2jf~ւ1�Ntd� ��'ȟ,�Y8�LP��C��9��8>�Ч�y���{����]������w2KP!�����}�?���:���DNou��vG�qg�4	�{�V�p�C�LO5_ќ������=(m�KM��?�>
u�RA�?�:���=\��$�n�#�4����v��`Rq�Yo�mR�vm)�n_p��EIsw4��}I��2�g��eem~d8���sV��H��_Ƶ��S�H ���q�菮fޕʏ��-$K���ĵ�+�)�����q�q�Q��ͅIaܷyI�柨�4 <"v�v�=\z�꣓�U�����Cc �߃�y�Ը���{�k����l�1�f>��˂�Y��^��(����M���%{�OB����|2�8p��o�<R���OL9F
�ʛ�=��8ɕ�p*Yߦ���(?�ꀄ��V�@ĵ�m��5L��v��[��f�5�H�-���'�hv��hǠ�v>�LT�(�q�Ʉ`���ݻ�C�0D��l��m:�!�tν����e>
��~�4g�L�k�0mai���fbu��ԇ
�+��(�r2�u	r%�L2��G&�����8E�͓GEif��-&&��a3�-
'C�A��T���v4Z��
d9�����]�/��@�)�W�صلZ�<�����"0�A^�c�vp-^���o���"
�(��o'D�W����Lg(���v�:��0e�s����߿5�Uw
?���羖����F��92_��nſ2��=�����rt5Lt�o����xCmUc������D����z��Kt}�h|����(�����Rq	�S��X���p�_��?�{���4�̂rpΌl��_�Y��ܞ�eOV	�=«2�P�ni��%�Ex��
���g��D��~��Y��&WB�v+��t��k��P�����j�_a7{�|�A�?_��Q�x�o~���H��[�J�5�)b�{FG�û�]J�U�g)6(y�2]���.�c���������I�@P�U�aXgx��1�r�L֩����w�$����n=�E9������7&� ���I�2v?
!BE��e4v�Go�J����b
��jQ�E�LWg�0x�h6yui�*���YِN��ؽ�'��x�]9�����	`��� ���\�d��jU~�u�h\�\l:~�X�J�YvxIo�J@?���h��fb�5��3@�pw�Mi���%�{-���\f���yX���.ƣY/�/x�Tj:\�ث�O����-����2���Ԥ�8/1�$p|W`|��,������
�rsp��|m�FM3q~}�
e�$iu�v��"�*�r�~='�Taw�-�X�
�
{M�Y?��l�x����֓�g6�%�
d�b�/�QM��8B)!8����p�q���B�A���
�*
��[6I ^�ι詽���G�>�]P�}LD�PP*v�S-BMq����t�s~�(�?;.�u��C����B1�s���a���D�R���U���0#�c����/�X�{N1����8�,�������o�Z��9�p0Zi���\���5��������PzZkE{O4���ԍ�
2���%�EEk7F6��μFʕs*'�P�¼
4��o5*�S����q�V���eN21��b�-��8��������CB�p	֠>\�M�$w�^_�׍	�O�C1H�k�_��c|��r҃ܐ�����zEk������"߹�ذq�m��2��覮���3^
h�bvGU�Ck�G�𔽠�H`�W��7�FR�hA����c|tX6U����9#ͲR����b�z��_/R�+bxWME�1�z�Ȇr���䡘��6(h%�
W+�,-����Z��v���8����x�X���0��I�Ή�%���h�T A"di�_��YW�U�ܗ�����k�b���:�M>\*T%�NV��{NL�?�u��&=sJ���VޅRW
�%$/d	.�mB���������`m�ѐ���FM�JC�d=8�����Tʊ�w"}�РJ-Q�P��6��Jqd	�"��c��2���!��
"9\�^]��l��-ں�K�UF0��T}��<������5�S�(����ő`��@�����]ݏ���(3׾�>���0[sQ�ۧ`Ø�؁�7at��}"�n�\�����`b�/�-5��ɠ������4���UFgC@����J	ڜRYp��y�Y|������Ǘ���ܵr�/-q�1ޜq�+F��n�V���C�e��K�<��e׻ƅ%G�V�̴E�z{��^R�A�/:��.6���j{�2��")E�~N*����T�����ҩ*B[�D@��>/'����P@����2�40��5�ѐ1
��>�Y��<
ֶ?�����l�7ZТ�u��-�S/�JF��UK=�j�����oNu�D��u0P�肛BF6>v��>b��G0,���d�a�:�<���vǻ:��;YW���G�;��1R)�6[�DO���N5��nH}�KyW3���F_���	�~�y���&�ǡ�z��Q��V ���CH���9�4ku.J�3j����Y��t�3#���� I��"X���Fq���gN��slc���������d��y�l�gmÜ���3#9D�+�l�i/Y������Rk!�ߦ`�V�X��m���͗ã����BC�]{a�7�����>�u�fd��񄴧�k��RJ���I���
�MՋ��f�=-�I2~2͜(�J2+����%�[;~�~����H@힮IG��x��������'�n���Y߰4(�>��~�ߏy�ݩ)���I��o �A'j~C>�m�:=UL����%M�xt͎a6T!���<|�
\�������x@X�U�h���%:��D]t�m+./c� V�T���(�^J��~げ4w)����v]��;�Tp��ܦ��O+�W����Dl���R�d�t�:�G����׀��I�C؋".Z�����
|��HK���x�r��?(-Ðt�ƺ��?�
� ;�qsPs|�q����b��{u�,�b.-X86'-�m��z0�w��@4q��g@Zp��������P��=)��*�>���������>��!+����1m�0�I7��t�mg�ý�ꆷI?���|z�"�4F��`����&!���H�<�����P�~H:{��*]�:^-S*� DW4��{�D>���gg�
�M4��K�t
<9J���6��efTV�]�q�����H������!������wM������WC7��}h��z� `	�S���W�rr�[ҩ�ty,.c�����:hL2lkZ�i����`Ό)Y �«�` 8l�awأtЂdL_�-�{����Ѐ��ba���m�"#?m?���=c��T�Y.�I/��B��R@��N����5DU�� S5�����B��Y�)+����`i�������G�i�D�h�Ǉ��h\ӫ�	�Ǽ�75:�a�_W��]�6��i8V�8 �X���G�E6^ʝ7�l�������g�8q֭��M�d@#U]��tn�T�6�0��:$���n��W��������bk��P�7�M�1bY&W�F�i�z�7�nތq��α4�PQ��a��cKl�qИ�ذ����R�������1��$SY�JB��H�m�ٱ����M�Z<�aDa���و�����/#��a3ѓR�II����� I���գ�������e�w�hV�2�A��������PR�
���b85�~)2S`]��b�@�������=�������B�'�T)���4{��+[�M:>�.B}�)�3Dh��Uz஛�3��M}.�K>X^����(�v�i���#d�w~ʃL�����ٴe��
$�K�a�����5(.\�L��xLC�
�������(�7kpH�> ���2�MU�A}RUb��� @��3�V7����S
ك���p�;ş ��F�l�\-���C˱���S��c��[�!����>rP�.t]�;%}�݃X;��<®����Lpz���G�;�I�-�������)����0��\�>=ZŇ�	���
=�Zf�
��u@���J#��������Ҍk��,������R�f/�X90�_)	_~M���n���l�z.0������j��<Re�7��Y0D�X�Z�����gi��bzDtA��^98�i��k=�j`�Mcs���ՠ4���(��^`��İ��H)������A��Y�|ROVzw�#4ͯ�͔���:a:��n"~w"8�����Y�J��$�6��o]{�g����|����wR�k�њT嵬��[~JW+����VZ�j��3\!��^w��t#O�֫�('���#��B>��3^!��Bb$O�gߤ�?�	�Ty���:qs���t��Fw���_�-A~�LD��w�1����A��
�+ڈ�+7+��ϥ�Ŭ��ra�nK{�]3�q�C���>��#�/���0�9��o#������Y��y����l���Zm7�7GH��3Y^��j�q��L��-����ӆ�rI�QG7�,%)����S5�R�{���MY����=	B᏶����fh�r�,9h.��0��3)jd��L�~ F��SF8�����*g�R'ǧ���1+A��
t����f�_:?م���^ef@��\KG�����V��d;�������EMkc�8���c��"a茪ï���g`:�sX�s�T	n�t�Hׇ�͒魬(���	n�*хz������k���
˔���(�kn�Ucɋ�9�zJב���0���_��%!mX���c��8����D
�>��r��x�٣��N�o
��}�⠡;)5on�1�i|q�Ũ$������M��u����O|&ʝ��T�|n�ؽdF�-���#T0]RYJ&l�$����{�b&�͚��lɾ�H��l���)�'�����J Lku֣�4�=�1�x�`EkQvh������z��P\D%�΋,�1a���Ys���dm�ٯ�T %xHcήh��h%=Ʌ�p�/�V�&�������?�s�q�G�#��{E�dS���	1�}�w������2�s�u`a�iTbzbS��^ԝ�i��W��
�����1
29/�B��v�Rԓ9��
0d,�
tg">�8�'R3���R�iٝ��'uʥY-o�a1�rr‡��Ş���G�Ī�����9fz���#�+��IӮe8|mM�bβ��~Q;y��T<`2�(F!)�6�����ÿ/9��<�����f�m���!�;M%cY��{�*zbƲ��u�%4k��e�,"q�lЌ�]�����$�*�Q����I��
�H���rZ0�Q6Iaս�y�zX�>�1^�$��=D�z�[L#w��ͨ1��.S������~���9S�^�tF[���S�K�Y1���{2�yn5�_%W�9��v*����<yr�Ώ�qh��͂�VNl�g��K���Q�/Va	���1�W�8����z�V�m]�+�T��_A8���qo_,���yg >�-�NwH�@��o�%�Ϝ��O�������?.�qz����{QN�?��Dn�����*r�-v[_���>�q���j���r]���TSZK�~�w��6�;��ڳ	�TK]�&��|�&_8��vB �ƹw����5u�"�LC��n�iХLjU��a�45	*��5}�`�T��;��b8�D羾���aU+��T��E����n���o�v�@�𞙪�����?�zo�����?���S�7����s$:��D{R\����k4�����6+����%qץ�	��|��vKfBDG#���/*�dC&
�L�1���e�7���h�q-��Xݑ���F �iV2�ON�F�x�8�iBh�!�Ԯ�8<B�f��.;=��_Բ�.�cH(fĞ��ޢ&x�ѕ,|>�G�da
����z,�]�5+
�Ja���e�MC��=z�3��д��+�fY�c���h���18#�o��dm.IZ��2�U �S�th��Y���zp*�4-�}���b����7�.��,��f<%n��[4���3��_p#3���	G�w����+��Z�:��t
#}��٫�<�h�SP?pn�&)(=`c�[�Y�J|�ʁF��P�PW�\,z��(E�F����������3��&}�g��X�Gq`tb�ĹT���{ߝ[ZӂQ��:���(��L��?42���TzP�/Y&�	���*��s$3"^+�Mv(#���ϋ�H�2��HW��#W��L۟��g�N�d���h# �6[����U1���np��(Nj���P6�|4F#�:n~�t�̫GreH\�)�:�W��RAT����~�����[�˱�kYB{�:c����
|g6��0�_t�)�s�^Bc1�K���eǰ�(���c��������8��]s�(�0�W��,BV�9�$��x(����h�w�5�u�r4�B�/mЌnv��(�ձ�69U�L�Ѻ
�Y��H!��YM��'M�������5�Xjʅ��	���t�� P)�D����F�;.ll�e
\.i��/?�Q�=\�"��h��A�~&��X����#V�]�<$=���/�!c�����{��2�c����%�w�J� "���Ñq��x�|�e�f4˪Q_;-���
"�IZ���t��Q���Z��<�aH��iM�!�8�x��Jzo���
��%�:�t��㟉�:�Sb#���k���M�����e?���R>������
ڕe��H���)O@����Ie�"�2�6��$�pM�erD��2��ų�ى��]�#�AgO��+�pyܵQ�p��A����95��)����%qq[��^e�z�N�[�����I�=����IԖ��:Zs���&?aPMM��R���9M 	�5��Z��&�P��b��'	���	,��=�����j4���fr��V�*LӒf�+��ޫ���(�@�kذ�/��';|�"�{�b�o���/�֪�%�g7-�����y١�l`@t�ݦ�~�m�.��Iy܋rSV���(2�7c�v�3�򐗽�P^�C�"��J�F�&�s�[Xb���JOK��e�\وە�>�q�{r���))	O�5*4�r�i�� }#���neH����J��c%���B��;��3�p�L�.
:��g7�L=��*v��M���c��4�@՛�V���\X���P�%���PV�k^|[ο��U��A�x1��t̒��+��Pt7�ą�"j�h'�$Nٜ�������:�.+':R�B�r�/�T�א��d�ی��1˾���,�	��,�[��e#w��
utf�Z��������[��!@�r��|���+
|(�E֓?��qo��#��-�S����sҡ�4Ms�ݗ����)h���p��ԙ������
�����E��L+�e�K)�BCH��~^��.~�{���@c�b*�+�-�P
�u����S�'�1�7��%��޹<�H'�[7�r����%v��Ӎ@��/���<���q4.����LR�+�z�x5+.��T.���)\%�\�Ƿ=��._�4`�qx/�klty��0�U:�������~�b��p�HPU�w
p�ѝI
*�bok�ҲىPB��T��,NM��J2L��1hֲŻN�8g������cKS�ah�Ԟ�����0�u:�<>Y��2á��H�V������[�x�D��24��P=�2����^}v�������S��ykL��yD��YYదwzC�\��Y�>$O�*���3��&nIT7<�1��f~��P�LP>�&�2�,Z�b�f�`A��y�iO�����W_B<eo���n���4��pG�YÄ聴m�������EV��/L=�,f5�
(�;b(�{�P�2��*�r�v}��6S���5�pC��'����h�d9��=�yk�������?�p�9K�
fTb�x�f��u\����6�^ZUe�+L�Bu��A�Ƀ�l�I��mX�ڵ�>��E9�;���ZUc6ƃUg�sU"*FӋ��7����o�����R��� ���?sB�2���p��6�Ík��~��ZQ�Y0�{�;��bx�_��8��{O ��h�O��{��7�4?�-ߝo�ۮ�HX���P��rjP4��|�h-:�]�����9���w$�m4�Q>ȪQ<�:�[�YɵK�?)��}
�!v�ۦ<�������%�@S���75%�b���:��pED��d�"[i�o���U�
�]�P��K��C�nJ~��׭IO�j���F��}�*c����;�9Tz:�C����/�>�~�:
���+��q�}'W2�5&Jz�-8�K�c�l$��<u�Q����<��z^���J�h�U0;�tن䯸�	P�;�=Ԋ�9BDȥe��GK��T_�=���6��=�[6!��!t�ɲ"E�{O@�&1ҁW��#�[w�{l&���e�	�fHq\���FPn�%�W{@A��>Y��-��ŷ��S>���U�K����ln�a�~m ���E��8~�S0�c	�3z���<B�Y;��?x&F�'4ڌ��$����dX|�8��=��e��`v6r���N��n�#��}_�m������@coGn[u ��W��z����F�����z'��'��g _D�[{=���ߤ>"Tܸ.G���:�;��AWw����}uu�ʒ}*&:d�rK��fF5]�i��fl��)~x/�`�5����K��T�sM��B?[-ѩ,
���fa���cgB��k~8�sM��ƨ��\f�����pC��*v�㶤tؾ�W�Ϡ���CO@s����9K��|��.�,}������xD[�}׉p�,�MG�
�&*49{1��r ��&;l����D�\s�^�4f����h��18��PD2��t=��T:��5�I�		ݑ=7��zrJ�E��¢�C��Ek���i�B/�v ��W�t�\N�/��Qd�Yx��$D����S
�>.�sZ-|��:�\��l���Fɚ�fv�$�ip�/CCfŐ�G�ˋilh~�>l�)�l�l[���i��ۿp^�����W����G�HM�v!
U�I�vH�v��O�"z��0T���I��W8�Q@,k���S$4C������H-���j�M�y�p��� �ڸP��<�!(����Vѿz�Z��mO�aE'�!X���	ݬ:3~���I��o47?��p�1*FW朣tQ�ļ��@n���R�=����-ϱOˇUTy����J��V���:W��~Y���֬"�D���5�L|��]Ӗ�P[pJ����Q#�����
þ�����KГa�Z����Q?Q�lJ�}�~��8�>L�n={v��U��!?� ��}��83��|���*Se��LEi��YQ`͚��L۲
���{6��i��ږ?�4=���R�}�*�R���8q���O�"e����M�7����!��SJ7
����3�&̬�F&H9��w%I���`D	����>���U���NX�>m�0堣��hі,}�!��+�?��[:`ʭ���0�.�X�S���B�g�3��m���O��� RQ�^�^le�p��M�Ɖ���ӧ�>[AO�5_��wW���Wܸ4���u"<�'M|����P��>�,�B6u~�3�x�FN܃tNA��b���,\�<�+��Կ>C.��B���[������IU-��h��QӪ�N+k3���]Qp
/ޝ$�਱9v���+k���?f'��94�囲�������Z1�6_]z��Z��RWS֢�,��ʿ6|h$(�5~1����=�Hfd�0���::EC9ү��D��G:I�7�#�B����S(��F ����������5zw�*��}�`�J�/�c�7_�uV�sT�)ͫ��o	�����0����T��S��^�:���u��he��R�R!��\��������ˬO��bh��T�x1ˈ;�		z|��Us<�=vF��r9�DY2�����"���eQI����X����ك�M0�w8��VĿc��2�<��a��V�c�!''�Ba��/^4^/m=jo<
�L'��c]e�ܔ����*�e� ��j�JQP��<�����W�+�����^Fq�|�V��=[�y2�J[
��2��=���rǫ���&�vį�p�Hb~�^�+,+E��X�m�}�[	�@�
��{wW�OU0NďW@A�$1D��[�x1]�r��8�vDU��t�/�͡��Wd��Y���i��j�GW�9�Ɓd�K^��@wz����w�{��7��y��m8�D� �
�%?����ZKۛ����Z��_<�/T9n��V8do��z�R������
zcU�ukZڣc�Ճ�۽���=��[N��-'
�c��Lqg��>�����
���+�������{��)��Ww�162�<�ۢ�Õ���\��J9[���A�᥷�$TJ'f�ƿ�d����+�p.����du�ϔ{u.+�x����r�?�&~�����]N�\4��<w�,Y�iV�F�.W6`	oX�ىρ�z 7����^|�9Y�]��K�ʐ�����^�f�|����(8�a�2K�~�Keͪ�=�,���p�"[���GG��+_e��u�`X*Y�\_��6��_�O�9W�*�����&��*���M��ysH���#�����>~y���b�៉�.��%��'鿊v��a��`�n���$q-`�FH�Jx�L����������a��3.�u����Y~�2K�Ǿ��Ƕ��e���a+LID)������y����d�c�o��#��]�vgH������B
�>�o!U]���U��3�$���b):,}�;v��$�Ҵ�n�x��&���U���6�zv�����>��K������[Ύ5���1�Vn���c����P]���F��e�Bo �m��)��D�
�[���ZA0�O(@�ð�GAlj�W���[M���d�{�FZb-�H=6���PF�F<.l�xJ[��<�\��K �yu�26!����_��b���e���+��ev�#l�{O͓��6�����6HC�|=����$eTxKHC��6�j֒]XD"�)g�=��f�ID�f�6]�B��M3�%}�Ӎ����)Y�s��{�o��i����Ǿop�0�m;B
���g���s����و 8a��:ZhIe�J��
j��Sغ^�hr�����yNY�fhX
/��=�����h��&������7�����Τ�&A��{eBbT]t^n�-TR-KE5?�^ۅoFu���F�X��Y3���i�P����Ç���9���c�w���3O��+'�zxȑ �08�3Ǵ9JѾjFg�c��A�k���jDg`�m�i�\v8f��������y�s1�u����gr6�SQ��ފD@=����V�Z��k�>�ft-Ǘ4�/ʕ���Ѹ�T��F��i��p���`��yԧe�aB�{[�DU�RN�?����lؖC�=��"kn��p���+��(E���kB�
��v⾮��nbw�i�	��:�3H1�!���}@����mQ>D
휻a?��"�J�=!l�y��"qa��i�>Q��&�ۂE��GG%*)�K*Z�&x��$��sP]��ny=������Po "ʋ��#��f�@!���k��}�o�ը����H1�]=T^��Mݭ:jk���o�)�}M6AU��'���U���:���Z�G���:�Y^�9�f�3���l�H�ǻ��9GCU����p���y����>��κ�~�\B����%�����$Y��"T.�W��X�zǅc�#�M$q���&�����qU
��ӫW�eA��F�.�*��x��w����m��^o��
�ժ&��ʛ`bj���o��f�����rK�y�v9�'�=G�HO0��i6��+\�}��P��s&�e�o)N��-�{ lݢ����=��_��s�k���)���P�y�Jh���%�Vs��7��1b����2i��v�͔3ĵ���P!��MsE���t�q���U���o�O�	v���R5���3k���Eh�$+^�>�l-E�#���W��op��#��uI��#��]$N>?ݑe��_��6�z��@J��F���Ő�0I��ƛwu"R�	~�4m
��դ��¯���v3qK9C�;����=�dv�x(Y��C�B��}v��tq�������b����/<��]H��w��#��xe�ԇ0~���r�|�>����El��ر��
�������� 0f��%����$�
gf��x�R}5�uD��z*#KG҈2��HIs���q>��z֩Ҫ��$M��t�9Np@mJ9ֶ�Y�>�)��y�����b�T�x/~�����%���f�ã�c�k hI�����hE�=���P�[`|�>�^��z�׾��h`Ҍ$�|d�'8���&DKb�ܒi��dW��#{��{}��2�))�3:N1B���;��Zx��{M��K��x�h�q����L'�����l|4�������Z��7Λ�Mo�ņ���3 ���hL���@��|�s{����m00+�Z0�yF��<-ek|L����w1��F�7�)�3E�������D´��}�,�Tg.}�y�/�{�����ϖy{��!�0<�����cE*K���^�b!\�dXS�����~���-�Qe�:S�)���j4;��D����1�=G��Ӈ�������hK]�)�
P0,9�����ûی��H��-�'?_v�=���vr����k�}��:f��d�� �w�ʶv�����Ǳ$?�^�p06�LV��!b�C�S�F���y�
���	h��+$͓Q��+CA+�싦��>�����#�6
�6q1�{k�&*#�r�6t#���Y��~{��-d�� 쟉2=6j3P���o��o���2�lm����[�������`G��<�gΘ�Ң�WjPr{�E%��F�����
jx�1�\��W���������ӷ2�iM�������F����|�خ�<7�+�7�'��j����
�"���'6�A��*Sqe�N����庌w����p.4ŝ�d^�d���D.)5ol|���Z�%�gZ)�v�6��E�0ՠ��2��W#������'q�+����,�$�<�ZJ	��
�K�س=@ʏ��]Ɯ�N\�S�����W_��~�����~Z�Tm
�*p�yV��[���V���֖aK���PZ����\2I�G��m���=	pk���Q�<�pN�r�H�_����m�BƊ����א&���|��,�dfA
*N̰�`���غz��r�i�����������s��=�.�xC��l�1�`M2Z#�$��n�S��єh��{Lsy���kΟdC�,o����iW�kgK��}z@��=C]�!ɇ
�'�g	<kpWb)C�~}T�<�H�Lee ̎>��r�~�:�j���=���8z�7tf�{�Bu�Q������u-Ǒ��>P[pQ1���ӏl�����Q&�mu���9����l���������̌⌺�i���K����g'��]��$�<�)dr���W��76w����D�K��P.���b>�m��������gZ��T���|#���+SV��~fԌ��ݖ��ؙ�BR�?���u��L�����������9o��~���"�c�fY�f�*�Q�Oعs�]������*vh=	to���.PɿR������K3�b��/|��C���e��C�IH��躾/���~�H���PbT�;�⇴�d���]�����a�eaE�'��F�z)����b$`�|A����A��&�9LR��G����Gɤ1q|S�i�Y��������$δdk膕���X"fA����Η_@�<H%�l����.�Ndׁ]�4�)��h%�b���yn~��������Ĭ����^:7��+��~�>
a�l�-�8:"�#of?����e�Pg����#�U�Y>����Ӝ!μ<��G�V�۶�+uՍ��j'��.gq��1����<m�N�'ְ6��S�oA� �`��������
���Um8s��tk�+�Q鷸�T����&y���:���4����
T�q=xY^mv��
�db���$�'僪:ϛrC�gz�R�E�%��y����Y��|������ч�>\);�Ւ��s�t����q��y
�q8a%�䌯Z�����#�c��l�m����
�b5K��7�`;}?�P[�f��3��l���{�R$^��1��}���FR�k����+=�D<�o��J�8.C%�y������+El�������g�5I�^���9�m*�����CQ�9�Q�;FZ�s�����~J�m"tnܟXq�j�A�Cw�v������m�I/}���y-���SU�(c��L��`������T:D�|�/���
\oQ.� ��k�y������g�݊��W�*x-���|u
��١�� L4m��=pջ�����n��'O}(�t�����$6�_� O*�7u	߼�L~
z���l�4ܸ��6��Z_n�.��2�V<��Z�V��	�Y;�����1��c�mgO̬��c��U�0��4�{�a��{�C�\�����p,'�yr��&7n	�#�������(N��fND��=�~
��N����JR5��^:��Ja�����jfwx��S�k�쌅�R�����m���JF��uF�������ۛ�iWҤ����/\�����њ�Ɉ��v^:kd�%����z������VG����/h��k��}:���6u��y�A�'�2��P�
�2���O�eu�4V�:�\��J���@�$=��v�L1Z�ȋa6p%�u�B�iu*%�?�M��ϋ�څq���F�0^
�3X��1η�����A;�i��r�!�:�'����}���ߖJO��.������ږ�D���`d2'�=�������Z�b*ݛ���w���p׼��z�!1J���
�#$12�/ucbE�����=3����h�����
�:�ux��]��U&=X��U�1��u{��L%�?�u��	�=�
����+ϱ���Φ��zAb���������gO�yJ���S+�O��`�Nv�2�ت��,����;���¤��PM�2�g����sD�Ca�����֋����3���j�lzM�t��>7�%;�]Q����Xkn?c��7p��#a�g��]� m�5Z������iFOv��q�	h�\g
�W�O��#}��b-��l�T����8����)�~������j�ԡ�����~
�1���h�A�4�,�*QͰ��p-n�@*i��Z�C�FF�VI]E�kh�O�Q�]%�J���������s@՟7��$����Z���m�bw��k�g��8�
�W���Jl(T�1�<L����[
xǂ�����2ۢP���s?��q��b2���*ؽ��D2�WkŮ$��坃�}Fǃ�Z�H7�&gG�Kb�������uի����$%���;��:T���(�[��X]Ok���O��K��H�'��uw�i=������� f�wt�u ֠�!<�]�'�q��N�P�6�~G��.dKi�@^��j�4gzu^Ó�t����e�.K���,zB�uTVe
�\@[��d�uU=�3���W?�qM^�� ���B�������
��URr��[E��6����$7�MG�j@l�G_U�T���=}�/�lA���#'��+�߾F*ػ����f�9)�������N����g��b��ޢԎ�Y|_�Y�r)���˾䲀�⢵Ŀ�L�_�M������e�{1����j���woM�'4��DI�d��3�R�zp;8�@4����J���ѩ&�����cc"���/���s�����F��~�ō��\ʜ�JƎ��C^�nrU7j�<�"7����?l��5h�'���?���V�?#/~�����XG,a�3��51��8og�`�J�:�jK����7�W'�Q-�=���f�5S�=�D;�f�����C�A����f-'�௬(C�r�- )������v2�����	���6d�b��!�wRNX�����{�s�|G��+�ݳuV����4��ls1����:L��Th?ƶ|�ѡ̇rU���î�z��ӨP���������s��}��{AY�����l�"+�<&?��b6'Ot�
��05���W\΁r9}cR�H���c��C�����i�5O�?1����j���@J���6�z1�X�՞x�o��,�Au�e#a�%)���+�z��{�)�����|��6<8v��u�И^P�]�k�k�K$>�<��d'�氛eߓiP2N_*�}^�fѤ�O������:�|Y���;��Ȑ���T�J��k�ȣ��_��}���]V�_�K�wlg�'�������R8�閕�!�3O�$s�Q>:H��Ć^�s�w?���c��ɪ<�e��������U�9c2qx����Cʐ|���1��vk:��p�J~�jLREۜG�H�^��`^;$��A<$҈5~���@k��["1.v������[��\I�*˜'5�y����6A�����i ��P��BC1�̉6�|=]h��-1��n��s����6�%���]g5'��L6�'��5h#T*A�90dXr��㴎��|�]�n8ݜ�H��O���FŠ�V����*�3[~���r�&�c�7���yq������:)���fw�[l5\ڿ,��޾�����������p�C��ĩ��[�{7�p�\�[ν4���y�X��ơ\R_9߁��;Fy+J4Cd�Mz�Сlvt��0Ո���BG)����Ki0�v�$i��ރݟ�U��uk��a�x�N�;��
�@��o�	��`���j�~�o����felC�:�͑z̗����ʓ�x:QN#��
���?�/��mp�&$J��[J�GV1��{ib����o�06��MY�o�]zR���:+"e�R6ċ��q����
J��e����Ք�&P��_cZ�Ә���)������^;����
n�l2�ъsfE����ٝL����8�
#
#����H|R{�n�S͏�����}K8���[|�p-H�P�S^`��A>�F�,�%�t8�����C>�Rƭ9�h�Ϲ���QSp�dG����
n:��&���>�k)����m��&IK��$H���>i�P/T�qJ��g&�����.#�~��3���^�c�`��������~� �37�91pFNՊ�%�����o#ufMӤBO�7e��4C���Bg����BgѦ�8�V/�p��؟	
@-O��?����Xe(�JH
ǩv6�2������ǘP> :�^Z�H���mv1�qnm��
�?�Ћ��y]��#����p!(��x4�\o���pĽ��GŴn�����������m�eYh�M��eb��� kH�=Wp��ַy�����2�9��u&��F���㔲��Mޛ8
���b�ɣEŸE�ҸY�	��y5�g6��^=SDibD��+eY]k�t�|3f��){4/L��h�a�IJ���*$@��h%���׼�;�wڣu�@v*���k]M��Ţ�h�(3r��K��v�_��&�J-RR@V���<� `������pa��`���#��ϫ����D�d�)�zJ�6�<���kH��^q䢘����SHe�"u]�y��������/���BY���z�.�{��Cf9n�G�FT��CwI���/��
(֯+���YH��\ZBӸ����ͽ7<��+K�4劘=�z�"�⨵�	S�-s�
��BT�X[�ľn7�������&�J�0*�64'��������[v$lŐ{�����8���C�f��������E|^m�����~r��Ѡ��y�آ	�J�b�V��_D
���`��!o1�,YB�u��1h�i;G����q�֣����Z�h�lp���MN�.�f�N�XE���
��U�B`��$Қ���X�8D�h�iX�Z]A{�!4���*�@E7#��04��U����k�Qo��zl�����?��
ob��9\���~�#��է�X(����k�A���f9u��{	�A."�^7N�ɠ>�eCd�6¼��.��>KO�w+�ΡCgږ�F������ռ0���DZ�1K��Z�����5+���%�I��,����t�j�2��� +FL�C��x�����u#�c�.Łx�r9�ק�Ϗ�u#Mu���3_��0�F��v$�`A�f1+a�d�{��
iJ7������YC�\�)��B�C�h`�Fci����?$s8�}��"X�mū�P���_h-�!l<��!5���������.�Ǫ�=Ӗ&�T��Z0CK��[��yL`�
�'
H���*�ߢؽ���<����H�^�!�t���r4;fT42���@�޿$�`�"�Z	(g���\

߷]~/V�� G�)ޮ;��`Om������E�T~W��3*#*B�N�>�Tt�Nѷ�l�G7�:j�	�'ܠ+S��1:�����#:I���&��o�)���dh@߹t{�6�P��ر���-����|j��V׎�|1�tO�j22>�Z���)|�{�j�Xv+d�3�u�����7t�;5�)I��׽�b���x#��˩E�����OO�O=}�?�)�p��N�\9^�h���,���'&w_?H͇���{d��Pu���ƻ�d���+��(����0u���i&~���;s����X�i�AR",%*{���ˣ�U}R��Z�n��x3X�2|z?�x�=�)�����
y3t�A�G8�T���*�x���WaD'P��-J���F�_S)�lV�Ǫ�65M�^�����Ld�l-�Q�a��f��v�&�����<N��n��u7�
��r,3��@M�j-9h�Ƣ��	Ճ	��c\��4�x�T��$��d��iH�����{5�$b�-9�	���>���S�X>TF��<��U6���Z?NV3��"�u�d������^c�{�������T�2��z�_:�[�-��>S�Η�V(�0�7[�U����53xs��������w�
/4��
���9���;��^�8��ۉk��L���Q��p0�W�,ғ��x��Q}d�=$���/oL{�|K�Ԏ�D8Mݕ���WfC���7���z��2y����+�
zR�Nu�ם�&���f��80�t�XK��_E��΃yU�1]<�#�]ؤZ�N�GKe��쐽}1��Ԡ���cmɜ�����,��k�n��9Y�Fֺ�EȞ3��m�"ޤ��6�{]Q�3����ׯr�<<k{"����t�P���7��L����K.,��'���fM��Ј��zv*=�U�Ъ��Y-�*W������ku\u�:iX������z7��l�Ww����6aL=н�^@��f!�!�$��"�c�`��)�n�7�$��_A6��N�����&J�|)�"Q]

uzz3-Ls���o�Xc빓r�t��gr��1����!\�¥d|�	�N������4���(FwӴ&,��*��c��M��LNd�6Fi%�u�i�"�D*��n�đ�d1?�"9�������	�R�X^F�a��[�א��������+3��B^�2.^����uQ�&�sB}�����\�-��������a�,"g3y�A��Q��q]A�����Y�F�,Ddz��1UfP�Vލ2�x�hm�	������򥋾�;g�3���mei�F�����λ�	|[�����pz��%)�
E����7Q�y}�0����1�e76-؉�&���U:<��{��ed�3�T��Iϼ�V��$`�X�,>�s��U��ڼ��������o˵\�(�try�l
�fE��B��%�'j��B�B@��syF��t�.�'���zc´x����U
��G]$w-�n0�7�Zy0ڽD����GLU���$��1�����綌�LJ�F�WO�wb��u9�����0�ZV��Jv�5��({�QO���	;�d��Z�@��D��>ul�@Ylo��qp%�_OV������E�@E�C(�a(�h������Ю_&|uCa]��ٗ$7����@�	��ւA>uFw�[S�����*$n��C�Eǿ��D�F��5����ر�p�5/�nb��z�Mv�&㾯�B	=�������{!K���C���AG���)�EL-�6̞��F�hT����X�1̪s,*R��h;����K���Յ.���N��d����^��o�&�`|�))Cc�����B�u!�{F��x��@���X�w��4[��4����C����׶�)NU�w��h���
����
��yP�d�nZ��1x��-Ȋ����aU𗥔�O������!3ǖ�:h����3����W���Ƕx�B�����z1ʥ�e�����
��L�p�� �}�=����QO
́a��R��PJa�01�,ڷ�&5��FE�����9K��6����hRd�w��W���}t�1
��1��B��*�%��m��I_Z�S_�pם������]�}�W�j�g��`½'�=��>����A���s�XK�%>��2��HF��
����,�]n}�xl&m���+*�b �/7�mEzQ�m��(������oxz�2p�Ve=s��9
�d���BW�5g��7�-RFa���*�����Y�t�����������8�.�	SbSt�ED��8cV��c|�K��b�|sR�xVk���k��N+V9nbL�� �>�������':�n�����������8=C�M�g�����0Y���������"8ėC���ȖCx������y�;�
fퟑJ�:s��a�p ��XV��,��}V\
�:���x�K�^L���=
�J4���*����0B?tTd]m�w/����X3񹔰��T\m��&��>�1G�vФ���=2�Bc�����P�&��~�s9�� �4��E��?x�X��*%ϙ�'����������$���(���i'��3�#[�@>��_(����8 a	�ԕ[��-|Y^��w0?G�%X<ߜqB�^=0��ߥ�5���ի��b�G=wH�����S�%l�7{���:>($�N�y -����װ����x��}$�,�
�_����FlZ'��3c:��t��������=x/t1�}ې9���(:H�5�5 nK����7DcT4��/x���:��)��P1&7�Bh�W��k���P]�7V�p0����췺"�x��^���nĊ{�(~g��y!8����:�G��~�"���5+��
��?�ô�� �\�*��A���=v7�2m�H�u01SƎ���Q+N	P[��)Τ=�.��P�8��SPY���zO�����iT����H��Q������¤9a؁��{�R�!����V�����Z���$�`��=9ǭ=�hꌵ�&��������Oi����]w����!�pL�z�y����T<��Y��-��F�3h�>��z��8��O����G�n84�9y�L��a���m��	86���������/N������QY���0��屣�k�Q<�O��C�Ҫ8x�B�
^]j7���-@����DC��ֈ�;�T���9���"��y H�䣌z�靃l+#�V���|��$������Z����!SY�OUQN�_�X�0��yqE�	hO��Ґlj_�T��3�E���
{z�����+sY��=�1�����'�4x����R�%�����U�W�^BК��GZ���a�+��D]�<ѷ�	��K�k����]���_��	�J�i`]T71����=�������S�ܼt#�.ބ@Љ���{���7%R"27�]�Vi(��f���
�s	�УX��?�����B�>}��~UwW��4 	���k�?t!W
�{�{����RKi�o��ɼtX��,E�f���)�$YV�;��tDl2�5Zx�|X�&xt�#��EI��,�8k�!����tF-K��?`�Sn�.hP�K��x���4d�c,��{�#���j��G@�b�pdN愑^|'��}��
��)?L��K��������â�hYFLa�?s $�SZD��X��}���	{��`��)��1��|�БkA#,
�G�*�:]���itF�,|y��3_����b�3��d���ˍ�B-hx'��@�����+k�⭒p�(�-�"���faxC-I6/�4]���h���zz|Y�QwUsU��ô:�����^����LOQd��|7{�J�����,ޓ1!Q����x��p#��}�^�wW
h��+����ѯ\[�����ڰ#��
�H��@��8�#T4�b����ұӻ��1y�5-gM�Ş(�.\�+���|���>����d�X�vY�JD�8'�>���e�������M�L���&D�f���
"қpΥ����D������"�2��g�"�Ym��+�%c������bP�du�%�΁�`Uj���s��p����*�����:������+�����.��74�:4��&�>B�m��h� �e1T����E�Sh��K���o~uU_���T�a�c���N�)�KOJ��ڹ~�wd=��冉8�c�E��x>V����4Us��s�TE��z@خ�����d����?�Nt �E�7��s�������������`��9�����?jZ�jgh@l��µ4�d22������8	[�>���};d�h.a�q�q䘨�RI���t|3M����@��zϜ@�1�>�T&��'��#8�E~��5X���[,�R�y�a΀�u�b�z��j����;�ؕ�d����m�5�,O�s7s����@w��§�Г�*s��l�5d�s�=��G��a4)wy|�7�t�^�@Oߏ>}^� �����fZ��s�}uUL�s��N�w���p@���hϖ����ۢ���d�e|��T+�uj�;�����2���C�1̵DxZ̛��.9i�����V�I"Et}�tQ��@tl�x�c�y������tȖ
��B�o����*��Q5 \^;J`�~����E�s�����|�3��I�[ו׮C�" H���^�D�a�����D(	<�&��� ���f���Û��d;��pற�:.�u���g���#�ZB���uo�����Ծ��U�K����$Ȁ0�G�]?h�µf��޸�9���[��6o1B4�J��u`P��ي��Z�z��e����; Z���%���?��78yj�\5}'mЏ�����/?�?���D�:�T4�����/J�O��� �Wb[��/���sq��Ç9\�?�&��d���%LMW�JZ���μ(=��F/�h_���y��!���=�ְ�G�/tK�Zt���>��d�1/|%��9/U���Z¾9主�{�r�)�y��"�P�b��4�m!Ϲq��RH�
d�<g��dըb�!x�
�=�KtNp�����=f�gֲZf����#%����,�6Jcq�|���X�"Y������]d2="�b������3��
��-l.a��<w��$����~䱄�����K���¤�z�oX�^W���;*���i>�$-ڼߡ��@����WL�i)��%^W���n�e�liD�l�pVy�k��U+���?��P�F�T�K��תv[$��i�
�Ө{��&�G>�Y�T-��D���֘�:�Z)����e�F�_I���i	�x�S�Rũ�ۘ���G*�,����'ݶ��0�=P�c�gy���`�B<52�RWm�O���1NrD��$zV�Z�u�opka�
�<�yp��(���ɓ��̮(�`c��E�O���7�o��!�*�h��}�E$���"��*��l1��D�7�ƿm��)9cC��V�B���J�t�����ނO1��2A�)�ot��tn��I{��j8y]zE�5s�LK��*'�z�b<5410�U��~�"+9c�]͝�9��<ܛ�W�t�1@�=Q,�q~��C�+�����+�?T�m��E�sT;<%��W�ؘLŇ3g�����^>6O��[VDɝm�e�����1x��*�p�r��,�*���0�A~�F�?h��=ҭ@�~kN�FG���V�*uq�f��e��;q�]�0�wht[ے����-ބ�P�1^���@���+���N�!�oCd�GХ��'��@i}�t����i[?%!!	��9?��.Ъc�tU��2
���]2����BD��h����r�h<����>*R��e@�E?�R�r`;�!��/����{�
�n��!GZC�.�r�T��r�ʭ�,ݓ��%(��w���wR�®�8����(�V*�?��0&e�g�.�9��q&�ܤΣ��[���$pf�5Б9�Vy���G��	���
���C�HSR�-M���1��S5J�L<$Z�`��Ӧ?�@D��$��v(��2�@�$��i�G�!/F�0��pf24B'h*���2_�C�U���/��ҿ:�z~�INy�x�Є�r�s�\a��y�~ԸLH��]k���=3 m�����3���]=p��Á<ó�#��s�K�����2�G�}t1
gf���1� �@�ڌU}յR��m��b[�ƞ��4jOP˔;���[ˑi�
��?d�KH��df��	V�e�*��3�n�%0}�<y����-l����5��J��#on��x�fw�0�L�
(�]��;��H�o�;�����=��zT󶂏ܫgT|S�cG �S��6-�c�����g�pq��T���dsA�<�l�L�.��z@����A��L���|G���ر����?��7M�����F��vqT�<
��1�x��e�ձ(�>qO藱���z���SGv��ܦLpWn�NWs��E��8�Y,���	�����#|z��ȋ3ɱ�O��c����>㵚"�Lt"F���/�UZ��;cY���9]t��+Ɱhi�FD�R|�X���O�fnVD�{��A.�e�;I1�>c�!��V
E�5C
U�B���:��IqG�yP��D��%-��t�[�������+w��D[Dz��-��n��ʎ�����*����;��,�?:,7�d`
�B0��E8���9�	0F��~��oߌ��:;IMY��j�Y������<�G�t����[K[��윂	G�;Db�r�(��S�}OR)~�����)V�~}d��{�4�������=�y�v���L��W�O=��f����Ӹy���s��4�CE`r�}hξ���l|ph�f�n�#kI��>z���2�=����B�\��B	O���4�0;�K*==�G`��pb>�i"
��V�74|���?�[�y88*z�&tvH)X��ȣ�M
dɫ}���Y4�+�V�<Z��^F`9g�����VJe}H1���@q�i���W
>�K^JP�tf�n!��Mn9cc�;���`�;7�����}��zh'G�qA�ϫ���A0�@F�DC8�M�C�8�hpG]AE���.�I9�����^��Dm}�e�e}O����L8��B����B���Ck���Ofc?��~|{E�Ύ���i֬U<�a��A+��?®AD��T��*\+T~LlBa��CRd���q����b�����<6�dO8m������E�nL�5ǻ�����^	�oa)�R;{%��D��l��aB�;C_e'�8ֆd�)W����ǣ�~�*b��닦x��=N�����")�Pׁ��E���|�����(��K��W���@;"k�bb�t�2ީd�l����8���Mu��0I�I�ceN��F*g�/v��W��
���N�d/�	�5�Ķ�����)�T��pUZ�]�S}�>ʔ}��i-���j��G�]�9c��l��f��Ƒ��b��s�����hN�1��4�$�������f�snk���B�ks�)Gw���H�|k�6ib�f��j:�_�u�d���	)+Q�yy�^�&pMaM`VaL学0�����.
��b��7Gf��I��\�}���Z���G�n��0�e��4�q鴫]؄�0�N��t��YL���?��zG���J�9�7J��-#�1-��<�Cޫ�p0I�#��_�Y_����X�(N��ȇ�n��~�:�؉���D���K�7N]S[s%�*�c�"��)�z��J��vׂ��(������2Zaq�nh��J4�
4��l��LD|L.�e�����aD#`�~��d�r��߬c�UVN����L�j�+#��!
D�!#iJ�$#��M��ۄ\�!zT����&�F���� �2�?�/dc��T�0 �U��>�����n�H�N{,=
�4�X����N����}�ێ���~ǝ�Q��t֢p�Д��/\��*��߾�4�3�ښ��]* \d}���G��OͰ}�"@OZێ%Cohj(Q�`�`�O
QY܆pqz6�[]��t�Թ1��������@,�^d���PE>�����o�
a�*i���v9T�)�3?�'_E�5f�:
p�������N|�� ��G	�%)��Qt���ݭ�5�G"��7 �k�S��/��q�}9vã����2V�AG�K˄��9��q��=:^,@��R�w�.ӣ��j|�ȓ�M�[��/I��i�2��)�@�0��i�nUB6�����18eL�� ���S��_���f�¶Ukh{_��؊2#jUܓ�Rۚ� �,�g�2j���|K���d�0�����TŶ��BaNS����r|�u�[z�#v4��E)�D�V�u?'��oA�ƛ�c"b���9D��V��U�-�C\���P�0&.��OE�2ZU�a�<Z]b�T�'��A�|����+���ǜ*�_�+�&����V��{P=T�h:�,��K:�@���/�[DTw��q*Mm}#�����Z��Ec���N�)VE�����W�����о&B�ڙ��Δ���K�o1�+5���s�m�B�����2�s+��Xm]��J��	�>h�'�Ti�R��$�A�(I��L����T���&D�U������T�KZTu��V���Yo�W�|���wM=�=(�B�7��.(UUI���TL
z��tK��"�}����A#Y��Z@f���|��Zb�6dt��9�C�5_��a��(#!�4��rp�y�T��
��,�!��}F��")i
a�;��[�<���ILލ�$br'^��,`K�́�y����;Y�q(&��yB|=f�5P�)�o�hl�P��\$d���o�f���R^�VI���i��@T�'��H��Z���-��}>�{cqIg�&2l��]�&�d#_&���G��<��x�3�'2���s�-l�5�|��A�U.�� �dG%kf��,p��N��^o��ÿ-e��B
��3��ٌꧾຊ�j��Q�F�0�ެ��z�i����!W��+�_o-���_����p�/��a��H��~��F��R��mL�qRn��6�A(x�X��~K��g�Vʡ��`��u󠗄�u��I4fp�:F[!��ѼM�Z��g�Lޣ��oM�����h{^�V)MAyrs7!��a����"�
����"����S��d���Ȯ�H5U�˦�ª9���2��/�r��W���ꗩD���bY��hŖ�"F!��F��]) >Z&,���L�LP����=J&��<3Qri�.�+F2eկD��cM�~��M���ԍ�z0_Vqj�/�.�3�+�db]X����@�D�;��jf���������֒����d���be�	2�q�#[F�
�Mƫ�.WE�����f����/
����p���%���2���e
�YPW���<b�_e��5�bF�tOd�e������؇�꥕��J�)�1r跙�a���f?�c��e/� 5�XG	/����IՈ�����f�~>�L��l�+�4C\�:��ݤ��,i��g��F��BS��+�`�J��}b�zK������./���Y���У�$!L��=�1�S�M�������h�����Y���:�s���ݲ?F�z�V�{���[�gYg��$q�sd�u_�a�#ݞ��)�mv��i�_4�M��Y^�'������xF^`-���L���MB�gs-ʵ�'�����	�R��Cͷ���^Z���j8�'0��@���8�w��2m�+�~Xeು�lM�x����Ab��c����Emp2���B���kD �TKЍ ��L��>{^C�ift
[�O��ׂ8܋f=�F�}EH<�]N;j�r���Ί�<��l&B���NRAdcb ��Y2-�ڬ�^A"k^�����6?ix��"L��̟y�vS��J��������mw,�opj0���
�]Ujh���
�*����4� e=���o@�g9�By��?K}\0ąw�[����n>-w��(���D�L����KW� �̃�}ܻ>o�8.k��V����j�:��#������o�j��o
$뚷K���{���)�{_A+E��P	/��I�*C
�D8��*i�~���g(>�d��{�
�#��p��1�dJ�5ro
�����Ex��Ql�}>�,ze�9��C�M��	-��������P������q�It�q
�(�ފ޼u��f0��$
�'�E��g�C��!o�>H
 �9Zc��
z����(���r�8�*������o�q,���f�w�v��J��Ho��������]�;���"|M��D�S������s�٪
j����~'�θsy�G�\'�����r4�Ʉŧ�i��;�O�-#m8�<�m��tO��%��t��:?���XJ?�d+�MZF"�w���X`n���������;�2�7y����܃2�_�ؗX����u�����3�"���-[&<���h=A��q�y�9��w^��(Q�݋����(��
�NYك��4~�z��v�a��^��A�(�r�^0���/�pX���30`�fV?��O��n��/����Q���j��.k©���w�\Z��pY��P�i��}�,8R�pm�ƤRK�U��U&фƋn@��S��'&����s4��� m��xӉ?�n;��ŭ��H���#�m�$�=}~�n�P�f2��oS>_-sX;�eo�!w�d��V�^#���y�f�隞K��|6i���x}Xq!����+07� �TC�d�
uB�^tO��]f�_*q7��B��U��z�8v�V<f��A�!��g1�L�(���SӾ<��c!=%R��_~$�*�9�5�yEM��e1P۞܇����{	Hd�b�.������9�����J�E��� �m�ϷX�ڂL{�A7��(����_�3�U�e��|��e~<�
3Ǿ|�J_�,��2�i������-{�}���E�'J�u�BМ.$֕��|&��ZA���}&�/#>�e����MM!���K��c�ݓ�����M�no(����d�>�%){�_p]Y
��~��m/�4r�w23��Ǣ)W�A�ڲ{�.໐#��D1,�D����ѫ����V�]�6L+�.��=|.�B?�A>X6���u"�X��k���E�<��-2�]�j1ùҿ��?1	C�H��6�����	[�|���?/ ��\C]oD��Y�(#8��t�N	�W7;�OΗ3 ���?��ђN:����`~S`Y��(�g��1m�R���l�Ƞ��d�ғ���˖(5!�We��Yg�zJ���������Bm�(*��p����N��璝�+�u����1�o�9:4(n�`u;z�Jf=�ʦ.0�����FHO>�����@���g��[��wa"���x�/#�n�-������|��7)=M+�uU�'���8�����^ɔ|��<YM���M�ЁK0����-P�wa�4K�-�Q������P���h���1����6�I�����%��C2h�N	�2��������*�6
YBp�"�d/����!z=�������^5�Ƣ!N��ۢ��>��+j3�9���9.��0�XfQ�m
��*��oT"��ޯ������}�8��G�G��7�R��t��?a�gdΟ-�+>�ND�9�@Yk)2yM��@3�7sP%��D]#�����霠�e�����Z�_,6L�9�=�6RL�|X`An��64s�8I�?���
Xc��l�2ӟu����H@���f'd(g@S=���Ty7l��CT�R�7������D���[�Tb���G41	cpWQ�t��������Ө�t��
�M�ة�t����0��QBF8�Ndm���}�N3���Z��ZҵP��Y�M�v>-����R��G&L���i!y�e?��T�rHKō�$!�A�������N�oʰD����e��y����o
���oy�8�������Ֆ	�9�;�o���>���C!hF��#fs�
2��3�z����٣�����K�����Z�oW��|��@�*�,�4_=d`LZ���Q�+�I����V�(�&kq�`����Fenu�~�<վ�����cA\?�R��fx�
ڷ�!�4���]).�z�z*��� ��+/��r#�����Y�������L�}.*e0����?���-�%g��y���U�[;��f�+<��^�?Ɣ��������hY#���}�
"9��U��f�l�6���t=n|%�`��r�]y��0�GM�i�~ǟ�1]����;�����%7�B"��O���D!F�����Z��~$���ǇW���l�*X�pSk��t�8{���������f7n5��Z\���+sP��廮+J�q����������O&<L��SK�:��e����������[�tM��Z����NޥUg
/��/ZU�������j:�/$�[�":f�3�;(Á�K�Ad=ƞ�������c;���@
0|�����`�)rUh���>MHZ�?N�l�ݳ�_�B(��!�X9E����_l��w�HMٿWlR���^ĲMhH,T,�qք�|n�dZ���x�δ����x#�k����u��� #�{���#�M� |Z���FR�&�v��	v�@gsI����r �/���
�C?L�׸��=��E\�G������f��	�|Ɂ<��6|�f��b_u�K8�A��o�²�Q����e��A�U�/��ū#��������%���(��Fϔ�(3t�h�`$�\���7Y�m���wِ��Q�-����e��-rK�����������b�C�Ќ6�vIt<�g�aSS�x��wz�!�D��\���!J�9�S��+y �����5o�@e����Wb�Ri IM��;g��Ez������,����
w�R@��>��
��uޢҾ����2�����uRWi~f��.����|�%���&��3"���#���}��3���m�g�6
�pu-�]P��p�e�M����#��2};K/�����Y�M�N�)k)dH�/�q��Kl̰�D����U�2�ws�!|	����������rq>�����L���n�&ڍn��B��?�l����B-��_ڴ���E$m�>����g�l%��Jz���Ī��eö�n9ư�
���!�hC�k�=aF�1C�s@v/�\@���b!T2l|�ݱ��ہx�	������D�2�b�V$nh�������Fg��4<?����,k�;�%`",AmC�~��b�u�*U8��|���5��O����S}��g>�;
���Y�I� �7;�"����'����;-*��y'���Ic�����j$�T{�А��$BA]+bp��}�L��������}Y�m���F[-�TM�92�E󽼌�z|-����nE��k��¼�JI�f)Y����`�)PT]���޶I�;�y��y��P�
�.��T;�__RB^z�����@��)�Ŷ��S~IM�-8���K#J�S'8x2�ys�K���e�N�$�%��4��H���i�x;��w��|4,^iC{c�t{I��$���Y�),�d���S��s�zQ{٩�J�	�ŢXq�gq����cٛs���Xπ�40�;��?��	���鹂;�ד�eX$���-��{�&+r�V�P-��nK������	�2��e���`���YM�D��=���5�����ٟ�PK�����htF��2�uO�C�������h�EQ���zS���#&��l��f	��*��IC�Ydy�V�������C~CI�5��j���q�=�*d��
F�U���/}���y�x��TƑ��ر�c�9�C!����@
�v�߭ݩ]�od
���d
�J�0������$�43X�n?���!�s�/���̮h�`���k���gQ��;�B�Wd��@����� 
JG���>@�ȸ�����{j��I�T|�ꐊ@�<��Yɫ>�<�4R	���l�i��#e+�����9�=
Xpdg����F�e|�v���RJ�j����~�>a��5��A�R6+&X2��=�I�E����j�2s��YD�¾`
=��C�pKD��uٯ���	i#�-�y�<f�TM�<�t���*kQ��d������E�?���6�4
�7ql9����	X�*r�x����;����3����<%��8�l378�����������^�H�y/9���t;/����&接( -R�0vdfhaz�cܷ&�$9b�>V��������'�������Z������`� ,�.�" �5������o�,j
�1t�v�m��z�0�mol��+K����'蒹6;v@�`T��O^߳��7�7)�nU	،��k�rg;9k&��*���DS��� ��yF���n�i�G��gZ��\�m�\�Nwt�
d"�u�&��']GёҀi'd3�&��q2?��	�������.b� 	Am~[�F�M�Rw�xB�Ҩޤ\#�=���2T�)P�v�xʖ d�j�gmk
GTg��5����u�D��f|>ol��>��Q��v�)���tp[
�'��8(d�v�p�T6A���e
��%x����.ς��q{^1�!�<|т
��qٯ6~:ȴ;5";��gB�6��ʇz���;ތ���VS������ɇ)G����
*XV{����%���Gw����%�@9p��^@O�m`�w��w����������n�
s�!#v	�a\��	MkC|dm��V^����*+Z(�+}�(��Պ�S���7>�Ww��[N����!�j���	dnDy6�� 1ռ����+6��	���TOF����9Ỗ0���l�<�DK���TJ���<�����ɽ�^��u/��A��O�S���~�[Ɉ�]dN�+_
�ׄ�\R�R���d��������j��'� 3>�/�szt���T����E׬5�z�8O�����3f��.�	~!�&)6t�DN�����N=�LNcHsj�{l�d����\#�sNC���@_�B0��:�B!?�(�����Jg�	j�����;<��]���
z��c�s\*�*�I�
�����!D
tK��/!��P��e���ҋ�������=��J I�M��h���{��=d�H��zte�v�I�f���e��m�FY��������e%���F��"�M$@#�{�K���w!���g�G�-�[&'^�3J�y�;҈���d�MqP"�V6b���E�t�֮-3��;O���04%gk0��c<�aDLJ��C;����E�ف�A�P/�y�:���E�y�9�p�Bp5y�ד���{3Y]�v��W��/�&?�i.�(�/Eh���U��y:�ʬ��������L���ǶOʕ(i�2F.lu�L���$�&��ASG�&l�NY�Os��}��B
���R��fӞ����v~�U� ��BMսxS�V�Ǳ�NA��9ESMp��_%�nh@Y箅����4w�繼�$9�����`��f��4�h0\��h��ڈm�B�mE+��Bڷ�bw �U��jC�wa���j�F����NZ���Ұ���"�X�q���M�R��X��۴���E�*j�5|�nsX�:��-��֭J�\#�hZ��Y j���c1(u��[���&*	�/}Cw��'q����T��.�_X��������d�����N�~d~������I7��zf�I���MS#�:���f�<���Bn>�]n5�}��_P���~9���ҧ�4x�w����
\��"����Q�o��e�s�J�&�IX��{�y~b1n��"�����d82I"�K�/O�.1~P�-����?�^Wz�gu"�%��F�S��~��1�_�-&�|AX2�,4ǚg`������Ԙ��T#&ng^���>%8ڿ�;�Q-[���<�#����E��%@��s��ǲ6�U�g�W@N����{઻ni�ߠ�\?<[�����ίw�q�
-������
[
-��|t���A�"�O{���h0q�<T���{W�z�d��m���[2a�������Vu`^,ry]��I�%q�*<�ƚlZ�G�1As	����
<�x�|c�$�p������r�4nc5�d�hR�Jv�rM�L���=��4{������Cs`�&��ѩ����J���"���{����26����ٌh� ?)@�κW�-�~��r��X����*��#��S�U����vCA��r��]��;v�y��m�ց��;���"�q��/�+��3)&�6m1z�x, ⏣;r�����|S]
����-=>���i�g!��ۼ�b�N���X��!�Sv������#�5��)���n�����`D��R��N&�DЊ'@ªɸX��)fz�\!�������h!���.���w�5���F�����������o��6[K�����[P\���A�pB
���g��ȋ9yi��mV�+����A{��v����K�I�Ȭ�F���@yL�F6�hA���Ǳ�W��<��6+¥�9e�B:%}�|�,We\�W%��X�������'�R�M���dQ�>��m�Ae���3����,'�T���A�����|f��@�slBÊvv2�k����p��'���ũ�e��0W��Ǵ�N�W0x�J�֩4�!9nm�Pq�>�U��v�]br�%|����d�D�
���~wU�}�b�2�rT�0�"'A��Ϭo���`��9�/�|�R����������g�@VH�`8'�IVI�.�M�xk}qpz����cmᜰ;L�/�K��
�#}����d���5������a��:�{�+�������ލ|��e��t�MKn3.!����̫�����#� J4������!������/e�ЮvG��	�i�>�ƀ��:�aQ+��݄(�"�%��z��k�w1�jy>�c�����w�����2-Q��Z���R�#+�龥bF-��j��m߇)U��! '�w
x��b#��Ҋ�<��
\6,����q�M��ߙ!(3����,1h�2G�:�	C��h6�ߵq�Mʭ�O�f���a���\�3;h�4����Uv,�L���>��`A����I&6����'�AÛ6]�S^OY�CŜ�_�fYROڈ��J����"ŏ�h���X�.,O�8�ma_S�Z���Ű&��0�[�xH<>�
��Kz1�j.%�j�����[������"rn��=��	*�^��&�Z)T��d��M��1a���R �%�����a��Lΐ����c
	*I�X�֤��0�7B᥆�Q$ͤ���$Q�?SY�t�3�e�pm��ɪ�N��
��L���:p'�#�.}%̙��Rl�\�Uc�
*��OD���--��PGN5���A��1%�*x�#�ѐ�����ACE��-����1��6�K�����0�?���ZWz��Ѧ�K��	�^+N9��#\���UsW[������m�
Z��M��
�TtG��B~�co���?��Ceb��S4<��[��v(4��NDnxzy���1������Y��j#��,6L������j��&C|M,N�>��}�:�0(�x���z��~g�ܒ����C�����-uD���RQI*�X(�"���އ�N�©2β��՘hu�+�
ƱώI������{��z�����1��qķvI������N>:Ie�]ș�z��6��?e!���-5}��b"����b}�J8r��B����yS:k�J�H���`�3��;T�_��"���j'
Ҩ#�����Evv��8��c��J>p�]T0~����c���׊��.�Y�x��{��u���ml�aR`�ȉp��Ķ�)�6F���̫�m	�a�֣,����5c�㤏=a�FK����	��^����^
��wD�×�/<�I�����Hh���!��-�������U�2�U�Oo��0BrXm�c�

M.�	fJ4Ԗ�k�G�M�ⱃ'6�+%���1xIl�l����+I�Κ}o�m�X����6C�pq�)1���i�
�)�O��)����"����0GwJ3(-�������#�čg�pͲ!�̲��M��Y��"��Cj�i�!�V���������9ղ�MM�RuEs�L�C������Ꚏ�/ &�0�G%#�PJ��)	��Jt����I����{u��B#o��N�I���A����������H�fb�e��y�Lnm�
.��u\�1(��ޡV�)�g'-��]_��ۜ[�7�2J��u���sw�l�*�'\;��H'h��/I�L��⁨_z��*��f	���OFˬ�ae0!�< ����D0kC�QK��o�y����l�h�H��
`�}�7�j�(!�4kܭ�4���`�J��<�"l������]�睢I�o�G _�K��@<�֬{x~�'Aob�m^��/ A3��]~�d����
�X�����D���	b��k=OD���5ߤ�G]��2[�F7(N��|�r�q�����9F�����h�y�u����9�'���*����+�ۙ���k������'X�e���`�+�U9b�A������e�]��_4�����~�(��^
���1���R*�$�q�ow�6߯-�����M���fͣ�2�E�o@d~�������TS�$Ƣ�����6��7�{�����Z�x6�V���'�J��ǎI�\_wr��um��_�V���]�
�e�f�DLiL鑏�w1��l�*�B����R~�Gm�'}�Xb'�U+?�ڎu����
"g ���s��SU�(mey���^mU}�i^ �À��\{����$�k���^�v��"��<��$9g.��]�����{�
����9/Ϟ�A�H�\4�f�:���m�ǇP���������Y��@�w#�ݨ�������;�|����
0��9�6�l0�%�n��5��e�Е����Q_n�!&�v2�IW8wyx�f���r�����$������Z�5g�\A�;���+c��6]��g�EV�FW�Ӟ|~�+,Ш�nf��]S�����ZܒND�8���iy�o�����B���w�n�z�R��g�7���z&�@�*�f�p�xj����; ����=µ5��t��^G�E����^��
�l��-�t�q��n��E�8*
�����sQ֬��[�����_u��+�"u�N�ѽ*XT���{aŔ�7#>�EF�6כ�q�jF����>1I�ꌑTz�����>����uN*����"J���>�pi���8ˇ�����K��h���Ɏ�b�y�SP�R�J�����mq8q�U�Jeь��v�V��g�M����s\x���6x���gzY�ݗ�)c�;׵E�������18���ӷ0���V�V�>�c��I�/�Mw�u�d۱�V�媔�/퐗���O�c⌢9K����/��[7�?�s�F��4�i�G�e۰�<��ݍT����I~ZǷ��+����0�Gƌia�?z[�����ڠ�)�w���3tg��G����Ӝw]>bp���0kn�_M����{
<_�fc����O��_c���5�c����|,q�α����R=epp%�_h�	�!�G�|٥6��%���C�sV5׉�MޖYMQ��q�bN��Wd�$ʾ�u|��G�CД���:�#���vI���a���~n3�z$N�����w�D����~8�8���Eь/�"R�G��SFY��r.?p�]C�D(\f�����T�
`E�����QK>���f�l�u���
nw�v�&��)G�gX�'���]V�X�B3�`g� 2���A&SAI�ZR�����N��+�&�p�`f8�'i�_��m[�](���T��`՘l��# �m���kU��%V&@�kL�8s������BX��SiPA�*"_^�փ�u;{+~����q��� �1׷����JR���l)��������"�o6��Z4�ցRs�I�|K<�u��sW��}.N<q��h�j�Mp%�����0�>��M����SW�
�4XyN���t�W����G�98��5��#bi����B�q17�6��V�9��2�*������Ӡ����-��Q\���뫥��%���z�0�u�03�,�;�1e�|��B�&�&Jp
�+��m����	Η������
�M=T�1��)��
�����G���H$\��J��np�����53H�Q�rՉZ��T^|��
���Y�Fܱ�H�D���+�V&�e��S��ۮ\�NI8�$�@iB�FW��L��f�9t*���Z:8W=����!���������~��Tz��7�+|0<rE8R�ӡX�ѫ;8w�5IU<��C��V�e��J]�T����������#��m
��!
��2CGީ�Ļ�a`����5cN��V~��Y��=�4�f��
�&3��k/&����AI���w�nL9����3�_fHʜ"e�y������d��Z0���X��Ex�[�������^S��c�{XTOu�n�2MJ��o��C��"�{��R#�gD��v�t�?���J��^����CZ[���cY@ǔ��34zZ�)oA4*���g�O>�A�PJǍ_o[�=Q8���1}�)9����uO�?�����c��>�����N�����{���#��z�~�6nƝ�-Í'#�8�-4����NguV��|�ݧ�7ȅdm��R�i�/I60���z��z���Ռ��/,�;[�&i���pP���O���{*��8����v�����֨dlkJ'�0:ԅ#f9�	hȵ������h��A�8n�R���yo�Q��-����-�?E �=�
#0���nNh��
2L�]��L㢊nD���*�P(J/{�2�$��!������:䫶4b	}(6g��ډBXR�_�ܼ�&�m�cT�_�ںj��[��_��Ǧ���3v0�js��0nL�k�/�u�_n�i�����Kc�),�~`��KLQ�c
�9�k�|�|ܯk�3+┦Qa���22����y����T��8�˗8�A'��Q��Q��`2鸞�CNjI�+8�s���H�I��9�y������|���i�T=;���b����r��Nwl�
V�-&-�k�ZE�C�C�%��(i	��cF\Ud���l���P�2�}�剃_��Vo�c4M�|T����ER,��t"��H�qx�\|j�ҘکJ_VA�nanoid��acornI
	�untyped��jiti��semver�
�giget��nypm��nanoidX,
�vite�/�esbuild?0�rollup�9�unocssU�sassDV�mime�`
�mathjs�`
�
h��i�hebin/heprettier���cssesc��
�2��cli.js���cli.jssemver�
�jsesc��	�json5�
�vitest��
����cli.js�	��
�eslintZ�
���
���js-yaml;����
����yamlbin.mjs���B�
�jsesc��	�������x�
<src.install.lockfile.Tree> 20 sizeof, 4 alignof
���������������������	�
.�A�+�
<���O�TVW]�Bp��	�
�IK
U 
!U"�#C$�%~&�'H([)4*%+�,�-z ._!!/"0�$#1�'$2�%3�&4�'5�(��!
<u32> 4 sizeof, 4 alignof


�������������������	

./056789;<=@ACE !"#'+,469:;<���������OPQRSTUVWXYZ[\]^_`abcdefghijklmnopq���������������������BCDEomsqpnr !%"#$�������������������������������~tyijklGJKLPQRSTUW>?A+��!! :;<=>?@ABLFHIJKLMNPRUWX
,�����CDEFGHIJKLMNOPQRSTUVWXYZ[\]_`abcdefgC !"#'()*+,-.1234/056$%&NOQ\WZXY[]_^`HJG���|}~z�yw���������������������������������|txsvu����HVKWLOZPRIS[Y������������������������9��������������������I94>6DEFH:L./%5<>stuvwxyz{|}~�QRSTUKL�����������������\[YDdea"�����mnopqrs[\]^cabYZ���
��~������z|��}���{���������������qjklmnoih87j��,�����������������}~����������Ft��������YZ\^_���O��������$������kji������������������������������v�%&()-nb�������������������������I,-* KB>x������T7/����_]Zz*)(_�D�����ew(��~f��������!�<
<u32> 4 sizeof, 4 alignof
�trqo! ������tsi]YM����
	
	��������C/B9.A@#-?>=;$<87&"! ����%$#*642.# "-+('# * ),*#0/.#1."35:97-;*4(K%J$F9@#E"D����:;IG#:;#"HLN����OXWVEURPQST[ZZ\Zrgqponcml`kjibha_^gfc`ba_``edmpc�vu��{ywxz�~|y}����z��}y�������z����������������������������������������������������������������>s=<�;:i0/]M���������������������V�N��
���������������������#'����!�� ����������������������������������������������������������������������5�����������������������������������933��������������������������������������������I/�������
	2.��������;#E'��������.-,+*(&%$#"! ')987654321U�����}���������������v�VrTSRQPKEDCA?@BJ
IHGFFNLkMO9VUVpXZ\odnlkgfcYba`_W^]Z\XZ\YZ[ZYXZZY\\Y\XYdZ\Xe\YEZhjiZY\\YXmdZ\YX\q\klVU������~}|{zyxwvutsVUUUUUVUVUUUUVUUVUUUUUUUUUUVUUUUVUUUVUVUT�VUUUUvUvKVUkyVUAVU��
����������������������������ts=S<:i0/VM���������������������������������������������������������������������������
�������
�������������������������������������������������������������������������������������������[Z9�#<H 
	����������������������������
##+4��������#�mljih`_]ZYX5WRMG]ECB@?>93210�/.*)"����&('%$#&%&+-,�54678:<;=A*DC*FAAKJHILON)PQU>TSV\[^$WRBg1cb*aJedfWk*n!�p����su!ym�v! =�~|{yzxw yx  Cy }-������������yz
���������������������������2������������������������������������������������������������!n�ECB@j=!n*n�=*Dn!]�)�!=!m)��=�!������!
m����@��������=�!�����$�W�j�!ml�����!l��l�l��#��!�yu�!mu���1|=�!  ��lm!=!��m��B��)�!�@!����]B@�=�!���5y�@�my����!�!@5��y!!#�!����u��������!yz�v! >�{)ul�z�! �{uv! myCBA !h]��������������L���������L����L���������L������������L��������������L�����������L�����������������O���O��O�O����O�L�O�L	���O
�L������������L
��L��L�6��L6��]1!�<4�
<[26]u8> 26 sizeof, 1 alignof
��Ƌ��]^4.13.1��\|�S�--^5.74.7E��/Z�&�=9<	�P���'Nͽ�^5.2.4b�i�T/��J^4.2.0eslint�T�{���^9.27.0x
��%�,+�eb^5.8.2vite(iG	�x^6.3.5vitest=�4�1Ej^3.1.4��:_�rI!latest��Rmjۇ�^�latest��,���YQ�latest����?��0-^13.2.0��%ƙOX�֎^13.2.0axios8����ə�^1.9.0clsxS�[�[݀^2.1.1�	��	*.�^4.17.21naive-ui��r�!b[^2.42.0��8����@^11.1.4pinial���`��^3.0.3���{�`t2#^4.3.0vueq6����^3.5.0

�W[?�	Lt^4.5.1P��3q��~^6.6.4vueq6����^3.2.0�����9+�3.5.17���,Ò��3.5.17��L:�j�4�M3.5.17����D6a}��3.5.17����UU���3.5.17x
��%�,+�eb*�����9+�3.5.17-��wV_ɭ3.5.17vueq6����3.5.17�����9+�3.5.17��L:�j�4�M3.5.17�����9+�3.5.17����z^�~c3.5.17$
�CF�=�8^7.27.5entitiesh�i4�Т^4.5.01
��N�o߻^^2.0.2>
�+գr�k�\^1.2.1�����9+�3.5.17���L(�H�^7.27.3��%ŦS'j^7.27.1�"��PzMU��^7.27.1$
�CF�=�8^7.27.51
��N�o߻^^2.0.2���K�7��^0.30.17postcss\a���L�^8.5.6>
�+գr�k�\^1.2.1��L:�j�4�M3.5.17����z^�~c3.5.17-��wV_ɭ3.5.17�����9+�3.5.17nanoid_O$"�֋^3.3.11[
�s�H���$|^1.1.1>
�+գr�k�\^1.2.1&��ek�4͙^1.5.0csstype9�ty��^3.1.3���&�hJ�X3.5.17�����9+�3.5.17��w6�e~�G�3.5.17�����9+�3.5.17���&�hJ�X3.5.17�����9+�3.5.17X		�b�\ac�G^3.17.2a	��V��Pޱ^1.2.1defu�V'F���^6.1.4destr����c$(*^2.0.5o	��
���ك�>=0.10.0pinial���`��>=3.0.0c12�����'�N^3.0.4ufo���Y�{�^1.6.1defu�V'F���^6.1.4errx}�L ?�7B^0.1.0jiti���WV�^2.4.2mlly�&�- ^1.7.4destr����c$(*^2.0.5klona�^8�xqK^2.0.6ohashJoJ%z��^2.0.11pathe.��$Y"�^2.0.3scule��p����6^1.3.0unctxQ,�l�
{�^2.4.1ignore�R���e�j^7.0.5semverI�V
�$�^7.7.2consola�?}����6^3.4.2exsolve�\��*�^1.0.5std-envd \�p���^3.9.0untypedF�SY���S^2.0.0knitwork��رl�e_^1.2.0unimport�)�ͨ
�F^5.0.1U
	�d��LD�^2.1.0^

�3t��'�^0.2.14fdir�G8���L^6.4.4�
	�U`����a�^4.0.2�
	�U`����a�^3 || ^4confbox�_�(1|^0.2.1exsolve�\��*�^1.0.1pathe.��$Y"�^2.0.3acorn���d����^8.14.1(����U�}�U^5.0.01
��N�o߻^^3.0.3<	�
�s��^1.1.1���K�7��^0.30.17mlly�&�- ^1.7.4pathe.��$Y"�^2.0.3�
	�U`����a�^4.0.2U
	�d��LD�^2.1.0scule��p����6^1.3.0E
��âޣ?�^3.0.0^

�3t��'�^0.2.13unpluginkyV°.^2.3.2R�s�Wد��?^0.2.4pathe.��$Y"�^2.0.2�
	�U`����a�^4.0.2acorn���d����^8.14.1�
	�U`����a�^4.0.2��Z��IÒ;^0.6.2�
	�訊��p^9.0.1acorn���d����^8.14.0pathe.��$Y"�^2.0.1U
	�d��LD�^1.3.0ufo���Y�{�^1.5.4mlly�&�- ^1.7.4pathe.��$Y"�^2.0.1confbox�_�(1|^0.1.8mlly�&�- ^1.7.4U
	�d��LD�^2.0.1quansync�h�o#m^0.2.8�
�>^����^1.0.0citty�q�@˺�X^0.1.6defu�V'F���^6.1.4jiti���WV�^2.4.2knitwork��رl�e_^1.2.0scule��p����6^1.3.0consola�?}����6^3.2.3acorn���d����^8.14.01
��N�o߻^^3.0.3���K�7��^0.30.17unpluginkyV°.^2.1.0chokidarg��]?/�^4.0.3confbox�_�(1|^0.2.2defu�V'F���^6.1.4dotenv{�\�{��^16.5.0exsolve�\��*�^1.0.5giget���Y%�^2.0.0jiti���WV�^2.4.2ohashJoJ%z��^2.0.11pathe.��$Y"�^2.0.3��W��dcgg^1.0.0U
	�d��LD�^2.1.0rc9,eŏ(�D�^2.1.2magicastg�*HM^t^0.3.5defu�V'F���^6.1.4destr����c$(*^2.0.3citty�q�@˺�X^0.1.6consola�?}����6^3.4.0defu�V'F���^6.1.4���=�O�o-^1.6.6nypm\Ř�%>��^0.6.0pathe.��$Y"�^2.0.3citty�q�@˺�X^0.1.6consola�?}����6^3.4.0pathe.��$Y"�^2.0.3U
	�d��LD�^2.0.0tinyexecp�$����^0.3.2readdirp"�"R�^4.0.1P��3q��~^7.7.2x
��%�,+�eb>=4.4.4vueq6����k�����&�p�;^7.7.7birpcfFr�sÞ^2.3.0hookable������E�^5.5.3mitt
/Q0r�
|^3.0.1��W��dcgg^1.0.0��LGx"�^^14.0.1"	�\��s�^2.2.2+�����h��x^7.7.7rfdc�`��&�^1.4.1�
�ޮ�'�=oy^3.0.2is-what���6N�^4.1.8P��3q��~^6.5.0���+������11.1.7���lČ%��11.1.7vueq6����^3.0.0���lČ%��11.1.7=�c9�<�Bq11.1.7>
�+գr�k�\^1.0.2���lČ%��11.1.7���^c�4�)�^0.15.14���n�nEZ^0.15.14����4{��^0.16.2 
�%P��&��}	�-���w�7D�^4.17.9=�N[9�=�|^4.2.5L
�c�2Zw^0.15.14csstype9�ty��^3.1.3date-fns=��D�A��^3.6.0V��m�V��(L^3.1.3evtd/�h��	^0.2.4a�Q߶��H^11.8.0lodash��v=�9N�^4.17.21�	��	*.�^4.17.21seemlyO�ԑ�k��^0.3.8treemate�vy��ܧ^0.3.11vdirs,���2�^0.1.8vooks�&��6̭^0.2.12vueuc��V.�e>B^0.4.63vueq6����^3.0.0���n�nEZ^0.15.10���&��w�S^3.3.1L
�c�2Zw^0.15.10evtd/�h��	^0.2.4seemlyO�ԑ�k��^0.3.6vdirs,���2�^0.1.4vooks�&��6̭^0.2.4vueq6����^3.0.11evtd/�h��	^0.2.2vueq6����^3.0.0evtd/�h��	^0.2.2vueq6����^3.0.11�
�]KR
f�x~0.8.0csstype9�ty��~3.0.5vueq6����^3.0.11date-fns=��D�A���� 
�%P��&��}*L
�c�2Zw~0.15.14��"�Q�4�^1.15.6 	���Gh��/^4.0.0	 ���
皣�^1.1.0asynckitέe2�-��^0.4.0� �Ow*�5ѯ�^1.0.8� �@��{SX^2.1.0hasownH?�	�J��^2.0.2�
�/��^�a�^2.1.12mime-db�Ť��ƥn1.52.0h!
����qm�^1.1.2"	�%M!��?�^1.3.0"
��=��U(^1.2.6"�Sc�+�^�^1.0.2hasownH?�	�J��^2.0.2n"����#��^1.0.3�"�!
���^1.0.2#��{���T2^1.0.1"	�%M!��?�^1.3.0"#�.<�e�SV^1.1.1h!
����qm�^1.1.21#	�pp�<3�^1.0.1gopd�?Qɸh��^1.2.0n"����#��^1.1.0hasownH?�	�J��^2.0.2:#��%�euS�^1.1.0�#�����1F�^1.0.1"#�.<�e�SV^1.0.0"	�%M!��?�^1.3.0�"�!
���^1.0.1"	�%M!��?�^1.3.0gopd�?Qɸh��^1.2.0"	�%M!��?�^1.3.0h!
����qm�^1.1.2�%�x~$���~1.0.0����?��0-13.4.0�&��el�;��13.4.0=�N[9�=�|^4axios8����ə�^1�&��M��7��^5drauu�< ��p��^0.4�&
����?�(�^7fuse.js�-e��o��^7�&
���z�V�|^6�&
��`[ =^4'	��!�x>�he^0.2qrcodel�s�F�$^1.5	'
�;Q<��)t�^1'�P�7��^��^7vueq6����^3.5.0vueq6����^3.5.0�'�fQ�&rm�^0.0.21�'����J\�X13.4.0�&��el�;��13.4.0vueq6����^3.5.0�(��S|}�S^7.2.1��:_�rI!^1.0.15��Rmjۇ�^�^1.0.15�(�ٙF����^1.2.18�(��eSp���^0.8.1�(�;1��qqj�^5.80.7�(���a9Q�8^66.2.1�(�AUz���^66.2.3�(�!�|S��%^66.2.1
)�ę�az�^4.15.1)��ZM؏{K�^4.15.1����?��0-^13.3.0��%ƙOX�֎^13.3.0aieditorD��hS�m�^1.3.9clsxS�[�[݀^2.1.1colorizr�k��D��^3.0.8dayjsNʺ4늕^1.11.13echarts9�b"�}��^5.6.02)
��d�����^1.0.6jsep�_�����^1.4.0�	��	*.�^4.17.21mathjs�t�S�=d�^14.5.2mimef#����^4.0.7naive-ui��r�!b[^2.42.0pinial���`��^3.0.3���{�`t2#^4.3.0<)
��,yݭ��^1.89.1tslibF�ݪ���^2.8.1unocss1�3ia��1^66.2.1I)��z�o��X�^4.15.1vueq6����^3.5.0U)�G�⠚��^0.2.3h)��x��>�^1.1.4s)�f䘺O��^0.6.0�)�D�'�A�k^7.0.3

�W[?�	Lt^4.5.1vue-demi�qC�a��`^0.13.11��w6�e~�G�^3.0.0echarts9�b"�}��^5.5.1vueq6�����)�tslibF�ݪ���2.3.0zrender��ׄٳ@5.6.1tslibF�ݪ���2.3.0+��g�����*�vueq6����+�w+�����qD-�^1.15.8fuse.js�-e��o��^6.6.2mitt
/Q0r�
|^3.0.0nanoid_O$"�֋^4.0.0P��3q��~^7.5.2-	��;�_L��^4.8.3vueq6����^3.4.26�-
���u��E�@66.2.3�-�����9E�66.2.3�-�ݱ�qe7866.2.3�-���4G���66.2.3�-�@)Z�/X�66.2.3�(���a9Q�866.2.3�-���p	�փ66.2.3�(�AUz���66.2.3�-��hb��߹�66.2.3�-��=�!�d-s66.2.3.�a��"U�cX66.2.3'.��INص66.2.3;.�� B��СL66.2.3N.#�`�d��ҧ�66.2.3q.�'.hQN��66.2.3�.!���W�����66.2.3�.!�������m66.2.3�.�v�CN���66.2.3�.��-�Y�66.2.3vite(iG	�x�.4�&/��Է��66.2.3n/�f���q�^2.3.0chokidarg��]?/�^3.6.0���K�7��^0.30.17pathe.��$Y"�^2.0.3^

�3t��'�^0.2.14R�s�Wد��?^0.2.4�/��w��z��;66.2.3�/�������M66.2.3�-�ݱ�qe7866.2.3vite(iG	�x�.4�fdir�G8���L^6.4.4rollupPl�H�A�^4.34.9esbuild#=Cw�^0.25.0postcss\a���L�^8.5.3�
	�U`����a�^4.0.2^

�3t��'�^0.2.13fsevents������~2.3.3tsxI����^4.8.1jiti���WV�>=1.21.0less�<���
�*sassR�B��hx*yaml4��W��^^2.4.2stylus?�a3>��*terser�Z��#A^5.16.0sugarss��cԿȮ*E��/Z�&�=9�/��/�~�us�8�2^1.21.0<)
��,yݭ��*�0��޿��2�90.25.5�0��P�F�m�0.25.5�0�R>�+�0.25.5�0���1R�6e0.25.5�0��0���cZ0.25.5�0�0B�_�0.25.5�0�
D鞮v�0.25.51���G&�@0.25.5#1�i�<�4m�0.25.551�ۃfF1���0.25.5I1���~j�%�0.25.5\1��Fi]r?'�0.25.5r1�ѡ�(�O0.25.5�1�*(3��0.25.5�1�l`��֑�A0.25.5�1�b�	�0.25.5�1��t�?��0.25.5�1�,k��jF0.25.5�1���h_:x0.25.52�2}V�Rb0.25.52��;�#j���0.25.5+2��周G�0.25.5=2����|�U�0.25.5Q2�>+���0.25.5d2�6L̶���z0.25.5�
�>^����1.0.8fsevents������~2.3.2�9��]���4.44.0�9�����
�%4.44.0�9�Q���@���4.44.0:��2����W4.44.06:�t�dl��4.44.0T:��%]0�4.44.0s:�8�{O��4.44.0�:"������#�4.44.0�:#��^�~4���4.44.0�:��A%�CD�4.44.0�:$�]�qEDJ}�4.44.0; �7'�82��F4.44.09;!�%f�^����4.44.0Z;$���Y~v�(4.44.0~;�T޿���4.44.0�;�?Qfr��d4.44.0�;�zO�|Հ4.44.0�;��K�k�
L4.44.0�;���1,���4.44.0<��r�'݈I
4.44.0�C	�	���`t�^2.0.20D	�m�auY��O^6.0.0sirv�xJ2X�^3.0.1	D�GU_P:�@^0.1.1�-�ݱ�qe7866.2.3D��H�.���66.2.3���K�7��^0.30.17�-�ݱ�qe78^66.2.3vueq6����^3.4.37�D
�|��Z� ��D�mrmimer6�3���^2.0.0totalistxæɺd�^3.0.0duplexerd[��m��^0.1.2unconfig�j�Ie��$^7.3.2�-�ݱ�qe7866.2.3�F��� �.�^0.1.1defu�V'F���^6.1.4jiti���WV�^2.4.2quansync�h�o#m^0.2.8quansync�h�o#m^0.2.10braces�����~3.0.2is-globw�f�.Ou5~4.0.1anymatch�u��U뒵~3.1.2readdirp"�"R�~3.6.0BG����C���~5.1.2MG�D��t�Њ~2.1.0[G�|]�=��n~3.0.0fsevents������~2.3.2�G�d��Viܞ�^2.0.0is-globw�f�.Ou5^4.0.1�H
�
��ڄ�3^2.1.1�
	�U`����a�^2.2.1�
	�U`����a�^2.0.4[G�|]�=��n^3.0.0�I
�=����5h^7.1.1*J�X2T���^5.0.1|J	�*/H��[�^7.0.0K������k^0.3.5K�y���?�~^0.3.24�K�`Ic"�U�^3.1.0&��ek�4͙^1.4.14/L���ͮ(4
�^1.2.1&��ek�4͙^1.4.10K�y���?�~^0.3.24css-tree݄��u�o^3.1.0�-�ݱ�qe7866.2.3D��H�.���66.2.3mdn-datah�)�-�2.12.2>
�+գr�k�\^1.0.1�-�ݱ�qe7866.2.3�-�ݱ�qe7866.2.3�-�ݱ�qe7866.2.3�-�ݱ�qe7866.2.3�-�ݱ�qe7866.2.3.�a��"U�cX66.2.3�-���p	�փ66.2.3D��H�.���66.2.3�-�ݱ�qe7866.2.3�-�ݱ�qe7866.2.3�O$���d�9��66.2.3D��H�.���66.2.3�-�ݱ�qe7866.2.3�-�ݱ�qe7866.2.3�O$���d�9��66.2.3D��H�.���66.2.3ofetchX��
�Z^1.4.1�-�ݱ�qe7866.2.3destr����c$(*^2.0.3���=�O�o-^1.6.4ufo���Y�{�^1.5.4�-�ݱ�qe7866.2.3.�a��"U�cX66.2.3�-�ݱ�qe7866.2.3�-���p	�փ66.2.3D��H�.���66.2.3�Q���b�Ӱ�^2.3.0ofetchX��
�Z^1.4.1�-�ݱ�qe7866.2.3,R��hk�%^1.0.0>R���PL��![^8.1.0debug��4���^4.4.0globals.��.B2(�^15.14.0kolorist�t�BWN^1.8.0<	�
�s��^1.0.0mlly�&�- ^1.7.4JR�2"u�Q^2.0.0ms���յ׏H^2.1.3�S��r���J^1.3.0tinyexecp�$����^1.0.1�-�ݱ�qe7866.2.3css-tree݄��u�o^3.1.0postcss\a���L�^8.5.5^

�3t��'�^0.2.14�/��w��z��;66.2.3�-�ݱ�qe7866.2.3D��H�.���66.2.3n/�f���q�^2.3.0cac��u�>^6.7.14chokidarg��]?/�^3.6.0�C	�	���`t�^2.0.20consola�?}����6^3.4.2���K�7��^0.30.17pathe.��$Y"�^2.0.3��W��dcgg^1.0.0^

�3t��'�^0.2.14R�s�Wد��?^0.2.4�-�ݱ�qe7866.2.3�-��hb��߹�66.2.3�/��w��z��;66.2.3�-�ݱ�qe7866.2.3�U
�.`�'����66.2.3�.��-�Y�66.2.3vite(iG	�x�.4��V� �'S�)^2.5.0�V��D����^0.2.0�V
��\�
/4Ⱥ^0.5.0�V	�3N�X&,>^5.0.2rxjs�,�0<�^7.4.0�V�E�cc�'�r^8.1.1�V�fo���]3�^1.0.2varint*�f*�	�^6.0.0�V�ɉި����1.89.2W�6��q 11.89.2W��ӿ��h1.89.2;W��&%��~ 1.89.2TW�L}o�Q@��1.89.2nW�L��l~5�1.89.2�W�=|��p��1.89.2�W�6$zu+�>1.89.2�W��҃q��1.89.2�W�Ӯp_�a�1.89.2�W�ɼ�-y�a1.89.2X��ɰY)���1.89.2"X ����4+�1.89.2BX�!pm}����1.89.2^X����d٢1.89.2wX�V���{PM�1.89.2�^��d�~$�\^1.0.0has-flag��h�
X��^4.0.0tslibF�ݪ���^2.1.0Xa��"E��ӎ^7.26.10fa
�26����^2.2.5pa
�zr��B٥�^10.4.3za�	=d�����^1.2.0�a�G�^�{+r^5.2.1�a�i{^����^0.7.1�a
�P
~T	^3.0.5�a�zc�Q�p^2.1.0�a�BR���
E^4.2.1'e�
�:�^N=^2.12.03e����D�j�^2.12.0Pe!��o�ƹq��^2.12.0qe%�@��h#��^2.12.0�e���2���^2.12.0�e�C(�nJ�r�^2.12.0�e��S1	��^2.12.0�e�G0���I��^2.12.0�e���nd��8^2.12.0f�3U���z�.^2.12.00f����M6�S^2.12.0Ff����	d �p^2.12.0_f�ig�u���^2.12.0|f�Ш
 ��^2.12.0�f�hB8�E/�^2.12.0�f��`�O^2.12.0�f�m�q�9^]:^2.12.0�f��V�}�E��^2.12.0g��#r,���g^2.12.0 g���a�m׍^2.12.0;g��ڙ<��^2.12.0Vg���E)'L^2.12.0rg�F�Y۸ܬ^2.12.0�g��亦]�^2.12.0�g
���]$^2.12.0�g���a�	�2K^2.12.0�g��|PKG�^2.12.0�g	�0l��$���^4.2.0�g���A8���U^0.1.5i18nextON�?`>I^23.16.8�g�	�n6?�^1.0.12lowlight7�%+x���^3.3.0
h���´`y�^14.1.0h��1o�����^4.0.0-h����$l�^2.1.1tippy.js�$}!�?^6.3.7turndown��˿E��^7.2.0{h�z
	�`(\�^2.2.0i�h6�x�(^2.9.0argparse��V���^2.0.1entitiesh�i4�Т^4.4.0Fj
�h<q$/^5.0.0mdurl.�!���r�^2.0.0Pj��t`#�Z^2.3.1uc.micro����~-�^2.1.0uc.micro����~-�^2.0.0�k�R����׿4^3.0.0devlop`oN/�'�i^1.0.0a�Q߶��H~11.11.0dequal�`4T�4�^2.0.0Yl�&���*�*Xa��"E��ӎ^7.23.2�g
���]$^2.7.0'e�
�:�^N=^2.7.0�g
���]$^2.7.0ln��>�8|��^1.2.4|n�X?o�)��^1.37.0�n�)���t&��^1.23.0�n��XAh��,^1.4.3�n��Lgs<�S8^1.3.1�n�o�{�m&O�^1.2.2�n�]�
i���^1.6.4�n��E�^1.4.1�n��,z?3X�^1.6.2o����%��J�^1.13.1o�^o#��V��^2.3.04o�0�;�J,^1.3.2Io�!���H�8^1.10.2^o�Tϓ�����^1.8.1to��C����rj^1.4.0�o���F��>�^1.4.1�o���f:���J^1.2.3�o�������~^3.0.0,p�h��ă3W3.0.0(����U�}�U^4.0.0�n�)���t&��^1.22.1�n��XAh��,^1.4.2|n�X?o�)��^1.33.8�n�)���t&��^1.20.0�n��XAh��,^1.0.0Io�!���H�8^1.1.0�n�)���t&��^1.21.0+q
�$�5L?��^2.0.0�n�)���t&��^1.0.0Io�!���H�8^1.0.0|n�X?o�)��^1.27.0�n�)���t&��^1.25.0�n�)���t&��^1.0.0Io�!���H�8^1.7.3�n��XAh��,^1.0.0�n��XAh��,^1.0.0Io�!���H�8^1.0.0�n��XAh��,^1.0.0|n�X?o�)��^1.1.0Io�!���H�8^1.1.0�n�o�{�m&O�^1.0.0�n�)���t&��^1.0.0�n��XAh��,^1.0.0|n�X?o�)��^1.0.0Mt���~����^2.2.0�n��XAh��,^1.0.0Io�!���H�8^1.0.0
h���´`y�^14.0.0�n�)���t&��^1.25.09u���mj��^14.0.0�u�rN�\�ޮH^2�u��՗p�FW�^5�n�)���t&��^1.0.0Io�!���H�8^1.10.2�n��XAh��,^1.0.0�n��XAh��,^1.2.2Io�!���H�8^1.0.0|n�X?o�)��^1.31.0�v
�i��W��;'^1.3.0�n�o�{�m&O�^1.2.2�n�)���t&��^1.25.0�n��XAh��,^1.4.3Io�!���H�8^1.10.3|n�X?o�)��^1.39.1�n��XAh��,^1.0.0creltL{h�^�bZ^1.0.0�n��XAh��,^1.0.0�n��,z?3X�^1.0.0�n��E�^1.0.0�g
���]$^2.22.3'e�
�:�^N=^2.22.3px�?�9�U�^2.22.3�x�K��xY���^2.22.3�x�dw˖$B\e^2.22.3�x��,��M�0^2.22.3�x���r���e�^2.22.3�e�G0���I��^2.22.3�x�q�qz�^2.22.3�x��P�9] �^2.22.3�e��S1	��^2.22.3y�U�g'�Y@�^2.22.30y�FQ�PG�Q^2.22.3Ky�Xְ�4�<^2.22.3gy�-��2C��^2.22.3�y��������/^2.22.3�y�Z��\Y^2.22.3rg�F�Y۸ܬ^2.22.3�y�"Vb[O(�^2.22.3�y�[8�����^2.22.3�y!�^Q˖�CO�^2.22.3�g
���]$^2.7.0'e�
�:�^N=^2.7.0'e�
�:�^N=^2.7.0'e�
�:�^N=^2.7.0'e�
�:�^N=^2.7.0'e�
�:�^N=^2.7.0�g
���]$^2.7.0'e�
�:�^N=^2.7.0�g
���]$^2.7.0'e�
�:�^N=^2.7.0'e�
�:�^N=^2.7.0'e�
�:�^N=^2.7.0'e�
�:�^N=^2.7.0�g
���]$^2.7.0'e�
�:�^N=^2.7.0'e�
�:�^N=^2.7.0�g
���]$^2.7.0'e�
�:�^N=^2.7.0'e�
�:�^N=^2.7.0'e�
�:�^N=^2.7.0'e�
�:�^N=^2.7.0'e�
�:�^N=^2.7.0'e�
�:�^N=^2.7.0'e�
�:�^N=^2.7.0'e�
�:�^N=^2.7.0'e�
�:�^N=^2.7.0'e�
�:�^N=^2.7.0�g
���]$^2.7.0'e�
�:�^N=^2.7.0'e�
�:�^N=^2.7.0'e�
�:�^N=^2.7.0'e�
�:�^N=^2.7.0�g
���]$^2.7.0'e�
�:�^N=^2.7.0'e�
�:�^N=^2.7.0'e�
�:�^N=^2.7.0�g
���]$^2.7.0'e�
�:�^N=^2.7.0�g
���]$^2.7.0'e�
�:�^N=^2.7.0�g��|PKG�^2.7.0߄	��H
|�l^4.2.0�g
���]$^2.7.0'e�
�:�^N=^2.7.0'e�
�:�^N=^2.7.0'e�
�:�^N=^2.7.0'e�
�:�^N=^2.7.0rg�F�Y۸ܬ^2.7.0'e�
�:�^N=^2.7.0rg�F�Y۸ܬ^2.7.0lowlight7�%+x���^2 || ^3�g
���]$^2.7.0'e�
�:�^N=^2.7.0a�Q߶��H^11gy�-��2C��^2.7.0�g
���]$^2.7.0'e�
�:�^N=^2.7.0tippy.js�$}!�?^6.3.7�g
���]$^2.7.0'e�
�:�^N=^2.7.0I)��z�o��X�4.15.1�-�ݱ�qe7866.2.3�-��hb��߹�66.2.3�-�@)Z�/X�66.2.3���|�`g>��^8.19.4P��3q��~^6.6.3vue-demi�qC�a��`^0.14.10���N�Y`���5.81.2+��g����^1.1.2vueq6����ψ�+��g�����*�vueq6����+�����ޣW�gxb0.5.0����?��0-^10.9.0C���D���N�3.1.2vueq6����^3.3.2vue-demi�qC�a��`>=0.14.7N�����Jۄ^0.8.1no-case4]��#��^3.0.4tslibF�ݪ���^2.0.3�
��4s��ڔ�^2.0.2tslibF�ݪ���^2.0.3tslibF�ݪ���^2.0.3vue-demi�qC�a��`>=0.14.8�&��el�;��10.11.1�'����J\�X10.11.1�'�fQ�&rm�^0.0.20vue-demi�qC�a��`>=0.14.8JR�2"u�Q*tslibF�ݪ���^2.8.1�(��eSp���^0.8.1�(�;1��qqj�^5.80.7)��ZM؏{K�^4.15.1����?��0-^13.3.0��%ƙOX�֎^13.3.0axios8����ə�^1.9.0clsxS�[�[݀^2.1.1colorizr�k��D��^3.0.8�g	�0l��$���^4.2.0dayjsNʺ4늕^1.11.13jsep�_�����^1.4.0'�
�u[�pڐ��^5.5.9�	��	*.�^4.17.21mathjs�t�S�=d�^14.5.2mimef#����^4.0.7mitt
/Q0r�
|^3.0.1pinial���`��^3.0.3���{�`t2#^4.3.0tslibF�ݪ���^2.8.1I)��z�o��X�^4.15.1vueq6����^3.5.0vue-i18n]S�]��^11.1.6

�W[?�	Lt^4.5.11��+�&�J��^0.9.5���J����\�U^7.16.7�����ڐ���^7.23.9����j{�	:6�^7.16.8$
�CF�=�8^7.23.9��%����~ލ��^7.16.7׍2��.F�k��M^7.16.7	�(���J���݁^7.16.71�'�A1w���T^7.16.7X�(�Q�a�7�5�^7.16.8��"���ޖrU!%^7.23.6��%��/�1��_^1.2.1ǎ��VO¹�^1.2.1܎�5�
�n��^1.2.4��L:�j�4�M^3.4.15����D6a}��^3.4.15���g�]�O��^3.3.0�����9+�^3.4.15�	��{(z�B$^3.0.2��_�M�j��^2.7.16�	����Uɛ��^1.0.2he�#��
�y^1.2.0���@R^TH?Z^0.15.1hash-sum3������^1.0.2��	���}p����^4.1.2���KU���H^1.1.0postcss\a���L�^7.0.36���ĮwBD{^6.0.2��
���� ��~0.6.1ʐ������^1.9.0prettier�^0R�+����cssescSH��~5�^3.0.00���3�N���7^1.0.2[
�s�H���$|^0.2.1��
���� ��^0.6.1��
���� ��^0.6.1yallist��|!�^2.1.2��	��u��~B^^1.0.2bluebird�v���@�^3.1.1��%��/�1��_^1.4.0*�#�
��2���C^1.4.0M�)����ʐ�^1.4.0v�0��aU��i^1.4.0����"�fw�?^1.4.0ŕ����8^1.4.0ޕ���>w�^1.4.0���b�4�1";�^1.4.0vueq6����*�����ڐ���^7.0.0-0debug��4���^4.1.0json5:rb^=�w^2.2.3semverI�V
�$�^6.3.1gensync`O7�V�C�
����L(�H�^7.27.3$
�CF�=�8^7.27.4P��G�lE*���^7.27.4^��BOUOM���^7.27.2m���m��K"�^7.27.4����j{�	:6�^7.27.3���J����\�U^7.27.1|���蚚S/�L^2.0.0n/�f���q�^2.2.0���Yz���ޮ^7.27.3��!�4|���|��^7.27.2semverI�V
�$�^6.3.1��	���}p����^5.1.12��o��~�L�^4.24.0>������^7.27.2P���e��ҟ�^7.27.1`��3�cz���}S�
�l���;aa�2N	^1.5.160��
��������^2.0.19���PZ�|\^1.1.3escalade�l��M[x_^3.2.0[
�s�H���$|^1.1.12��o��~�L���	�yallist��|!�^3.0.2m���m��K"�^7.27.3��^��.N��^7.27.1�"��PzMU��^7.27.1�����ڐ���^7.0.0���L(�H�^7.27.1m���m��K"�^7.27.1debug��4���^4.3.1globals.��.B2(�^11.1.0���L(�H�^7.27.3$
�CF�=�8^7.27.4^��BOUOM���^7.27.2����j{�	:6�^7.27.3���J����\�U^7.27.1�
	�訊��p^4.0.0[
�s�H���$|^1.1.1�"��PzMU��^7.27.1$
�CF�=�8^7.27.5���L(�H�^7.27.3K������k^0.3.5K�y���?�~^0.3.25jsesc�RJ>��R�^3.0.2���L(�H�^7.27.1$
�CF�=�8^7.27.2���J����\�U^7.27.1^��BOUOM���^7.27.2���L(�H�^7.27.6����L��1�#h^7.2.0*�#�
��2���C^1.4.0��	���(�;��^5.0.0�����ڐ���^7.0.0-0��^��.N��^7.0.0����L��1�#h^7.2.0��%��/�1��_^1.4.0U�	�8�x�+}�^2.0.0^���׌�3{�^4.1.1svg-tags�5�a�I�^1.0.0�����ڐ���^7.0.0-0��}�S�;���^7.27.1�����ڐ���^7.0.0-0����L��1�#h^7.2.0��%��/�1��_^1.4.0*�#�
��2���C^1.4.0��	���(�;��^5.0.0U�	�8�x�+}�^2.0.0svg-tags�5�a�I�^1.0.0�����ڐ���^7.0.0-0����L��1�#h^7.2.0�����ڐ���^7.0.0-0����L��1�#h^7.2.0�����ڐ���^7.0.0-0����L��1�#h^7.2.0�����ڐ���^7.0.0-0����L��1�#h^7.2.0�����ڐ���^7.0.0-0��^��.N��^7.25.9��}�S�;���^7.26.5����L��1�#h^7.25.9^��BOUOM���^7.26.9m���m��K"�^7.26.9���L(�H�^7.26.9�����9+�^3.5.13��"���|��"1.4.0ǣ�*�<'e�5v1.4.0�����ڐ���^7.0.0-0���J����\�U^7.26.2��^��.N��^7.25.9��}�S�;���^7.26.5$
�CF�=�8^7.26.9����D6a}��^3.5.13�����ڐ���^7.0.0-0��}�S�;���^7.27.1���9��e��^7.27.1/��k��4>�B�^7.27.1N�*�	�S�]^7.27.1x�2���!雊��^7.27.1�����ڐ���^7.0.0-0���L(�H�^7.27.1m���m��K"�^7.27.1semverI�V
�$�^6.3.1m���m��K"�^7.27.1���H	����$^7.27.1���9��e��^7.27.1¦&�\3������^7.27.1�,��N^��n�^7.27.1x�2���!雊��^7.27.1�����ڐ���^7.0.0���L(�H�^7.27.1m���m��K"�^7.27.1���L(�H�^7.27.1���L(�H�^7.27.3m���m��K"�^7.27.1¦&�\3������^7.27.1�,��N^��n�^7.27.1�����ڐ���^7.0.0��}�S�;���^7.27.1�����ڐ���^7.0.0-0��}�S�;���^7.27.1���Yz���ޮ^7.27.1�����ڐ���^7.0.0-0��}�S�;���^7.27.1�����ڐ���^7.0.0-0��}�S�;���^7.20.2x�2���!雊��^7.20.0h�&��5���$�^7.8.3�����ڐ���^7.0.0-0��}�S�;���^7.8.0�����ڐ���^7.0.0-0��}�S�;���^7.18.6��0�.Q7��CN�^7.8.3�����ڐ���^7.0.0-0��}�S�;���^7.8.0�����ڐ���^7.0.0-0��}�S�;���^7.18.6��#�|��R"�֬^7.8.3�����ڐ���^7.0.0-0��}�S�;���^7.8.0�����ڐ���^7.0.0-0P��3q��~^6.5.0���+������11.1.7���lČ%��11.1.7vueq6����^3.0.0deeksJ�R7i=�]3.1.0doc-pathh��~�Oɹ4.1.1G���Je�J^2.0.6Xa��"E��ӎ^7.24.7chai_��=V�@^5.2.0vite(iG	�x��debug��4���^4.4.1pathe.��$Y"�^2.0.3std-envd \�p���^3.9.0tinyexecp�$����^0.3.2tinypool��bk8^1.1.1�
	�U`����a�^4.0.2��	���x�w;^2.9.0�	��x��L�u3.2.4^

�3t��'�^0.2.14��X�����4n^5.2.2��8�N�n� 3.2.4'���G�{�8�^1.2.12���H�bi=L^2.0.0���K�7��^0.30.17=�
�@�+��>O3.2.4J����K�N)Ui3.2.4X���/�K�&Q3.2.4f�����8�| �3.2.4t��R�ʷ�kIo3.2.4���&�}k5�^2.3.0�����+��uJ�^3.2.4jsdom��綑�g5*��	�`.uQ�:�*��
�Kǟ���{3.2.4E��/Z�&�=9�/�����Ca�t��^4.1.12˯�$T���3.2.4گ�q��r&,gy*2���H�bi=L^2.0.0siginfoY?͗�^2.0.0��	�>�e�(0.0.2���K�7��^0.30.17pathe.��$Y"�^2.0.3�����+��uJ�3.2.4pathe.��$Y"�^2.0.3E
��âޣ?�^3.0.0=�
�@�+��>O3.2.4loupex��$^3.1.42���H�bi=L^2.0.0�����+��uJ�3.2.41
��N�o߻^^3.0.3���K�7��^0.30.17��8�N�n� 3.2.4msw2^�����^2.4.9vite(iG	�x��tinyspySVu���϶^4.0.3��X�����4n^5.2.2chai_��=V�@^5.2.02���H�bi=L^2.0.0��8�N�n� 3.2.4=�
�@�+��>O3.2.45��_���=^2.0.1D��/jHU���^2.1.1deep-eql����$0��^5.0.1loupex��$^3.1.0pathval�YL <�E^2.0.0x���q���7*cac��u�>^6.7.14debug��4���^4.4.1K��@�l��l�^1.7.0pathe.��$Y"�^2.0.3vite(iG	�x�����s�U���^4.2.0�����t�N�^4.12.1Ӷ��!
=^0.20.1��wU���Ϭ^0.2.1���W$(v�^0.14.0	��e~�wrY�^3.3.1�
�YN��9.29.0#��sLkU`C��^0.3.15�
�Z�!z9���^0.16.6B��:1KT�߬^1.0.1`����#���?^0.4.2�
�>^����^1.0.6t����4�u���^7.0.15ajv�O�@�JA^6.12.4chalk��0L\�^4.0.0���P~l�ܱ��^7.0.6debug��4���^4.3.2(����U�}�U^4.0.0�����$�M���^8.4.0����y�W�q�^4.2.1espree�Ej��2^10.4.0esquery�3��
�(e^1.5.0esutilsx*�|��n^2.0.2���ȑ	݅��^3.1.3���2l����hg^8.0.0find-up�i�Qs^5.0.0BG����C���^6.0.2ignore�R���e�j^5.2.0Ϸ�/b���^0.1.4is-globw�f�.Ou5^4.0.0ڷ%�VH���^1.0.1���n�9�MjR^4.6.2�	��^Q��p^3.1.2����z�n�^1.4.0#�
� vJ�rJ�^0.9.3jiti���WV�*i�
����Bg�%^1.2.1deep-is�#�%�H�@^0.1.3s�	���G�d�^1.2.5|�
�8�-�!��^0.4.0levn3%MIL[�^0.4.1���x��7:I�^2.0.6i�
����Bg�%^1.2.1|�
�8�-�!��~0.4.0i�
����Bg�%^1.2.1v��Y�����(^1.1.7̺�WQ�M]���^1.0.0ں
�ɍ|�x0.0.1is-globw�f�.Ou5^4.0.3���VQ�Na��^6.0.0��G|�b^�^4.0.0p-locate�#<�y��^5.0.0p-limit�]P��s�*^3.0.2���/�>��b}^0.1.0��
��)_�w�f^4.0.0keyv��"��t�^4.5.4flattedѠ�Ԯ��^3.2.99��m)b��bO3.0.14�
�k=��q���^5.1.0acorn���d����^8.15.0��	���@�ԸX^5.3.2����y�W�q�^4.2.1acorn���d����@����	�a�!�G��^4.3.04�
�k=��q���^5.2.04�
�k=��q���^5.2.0which�m���O�F^2.0.1path-key�s���R<	^3.1.0��@ߘ:�}^2.0.0p�
�
�W?���^3.0.0isexe�,W�S��^2.0.0���N/¢��^4.1.0�V�E�cc�'�r^7.1.0has-flag��h�
X��^4.0.04�
�bq$=@8^2.0.1��
��X��I���~1.1.4uri-js'
��\+��^4.2.2���ȑ	݅��^3.1.1���و&�>[�	^0.4.1���?�J��G^2.0.0punycode)>b�7]^2.1.0`����#���?^0.3.0T�
���b{�-�^0.19.1���W$(v�^0.15.0levn3%MIL[�^0.4.1t����4�u���^7.0.15ajv�O�@�JA^6.12.4debug��4���^4.3.2espree�Ej��2^10.0.1globals.��.B2(�^14.0.0ignore�R���e�j^5.2.0���޶�cR��^3.2.1js-yaml�ً���^4.1.0�	��^Q��p^3.1.2���O��w��5^3.1.1argparse��V���^2.0.1��
��!X����$^1.0.0�����b�_4^4.0.0Z�	�� �%2^3.0.0t����4�u���^7.0.15���K܁#=�I^2.1.6debug��4���^4.3.1�	��^Q��p^3.1.2����y�W�q�^3.4.3eslint�T�{�����������ڐ���^7.27.1^�����0��Q�
�ǎ��VO¹�^1.4.0��"���ޖrU!%^7.27.1vueq6����^3.0.0vite(iG	�xs��vueq6����^3.2.25vite(iG	�xs��t��	o<��Q��~6.21.0��N{wp)�B^8.18.1eslint�T�{���2�������I��`�8.35.0���s�U���^4.7.0�� �n���$98.35.0��$����ղE�8.35.0eslint�T�{���2��x
��%�,+�eb���debug��4���^4.3.4semverI�V
�$�^7.6.0is-globw�f�.Ou5^4.0.3Q�	�1?�%|�^3.3.2�	��^Q��p^9.0.4Z���HA��j�^2.1.0�����I��`�8.35.0f��܆|��3n8.35.0��!����_[8.35.0��"�'d���k��8.35.0x
��%�,+�eb���debug��4���^4.3.4�����I��`�^8.35.0��!����_[^8.35.0x
��%�,+�eb���x
��%�,+�eb�������y�W�q�^4.2.1�����I��`�8.35.0x
��%�,+�eb>=4.8.4v��Y�����(^2.0.1̺�WQ�M]���^1.0.0���d������^2.0.2���,��;UJ^1.2.3BG����C���^5.1.2merge2����f�^1.3.0.�
��měX�Q�^4.0.8braces�����^3.0.3�
	�U`����a�^2.3.1fastqv�J�0N�]^1.6.0����M�Z��)2.1.5?���)�M���^1.1.9���d������2.0.5���;H^z�JK^1.2.2reusify$ET?�,\^1.0.4�����I��`�8.35.0f��܆|��3n8.35.0,R��hk�%^1.1.0A���P�#J���^0.11.0O�/�����d^4.5.0~���>�%Ⱥ�^6.6.0���E��ƾ#@W^5.0.0�� �����P^.^8.34.1���f�?�U-8�^8.34.1����md�	6�^1.2.7ansis�3�p��^4.1.0cac��u�>^6.7.14���q���ς�^2.1.0��A�:�;81�^2.1.0(����X�!�}t^2.0.0?��Kv<휜lG^3.1.1R���2Ͳ����^3.3.1g���{>'��f�^0.3.0���ikIpYԇ^51.2.1���+�r�+z^^2.20.1���F��r���^17.20.0����~�Z��d^3.3.0����k}p�X^4.15.0���W=cݨ>^0.3.1����-�M�;^2.9.0���!���^��^0.12.0#��М*܆�^59.0.18��>@A9�|^4.1.4T��!�P�%�8^10.2.0e���,�E��R^1.18.0v��z��w���^2.0.0globals.��.B2(�^16.2.0���}��¬I�^2.4.0<	�
�s��^1.1.1���;�v���^2.0.0����EK�%j��^0.10.0����G}T^10.1.3���1��o����^1.3.0���D~;	,z��^1.38.4��0Ҭ��/^3.4.1���n��Ǿ��>=0.50.0,���G$�g�^1.0.2?���;��^1.2.0R���'xhiy>=0.1.0f��Vt�yY��^5.2.0������[�E^0.4.19���*jå^0.14.3���_j,i��	>=2.35.1��!�;����j�^2.4.1�����U�cm�X^0.14.0����qONױT�^1.0.5
����,���>=0.37.0eslint�T�{���^9.10.0����y�W�q�^3.0.0yaml4��W��^^2.0.0debug��4���^4.4.0�����$�M���^8.2.0����y�W�q�^4.2.0espree�Ej��2^10.3.0esquery�3��
�(e^1.6.0lodash��v=�9N�^4.17.21semverI�V
�$�^7.6.3eslint�T�{���2������y�W�q�^3.0.0acorn���d����^8.5.0����y�W�q�^3.0.0espree�Ej��2^9.0.0semverI�V
�$�^7.3.5acorn���d����^8.9.0��	���@�ԸX^5.3.2����y�W�q�^3.4.1����D6a}��^3.3.0eslint�T�{���>=9.0.0debug��4���^4.3.2(����U�}�U4.0.0���~4�	�c��^0.6.0����z�n�^1.4.0���1��o����^1.2.1eslint�T�{���>=6.0.0semverI�V
�$�^7.5.4eslint�T�{���>=6.0.0���s�U���^4.4.0����z�n�^1.4.0��	�0s��S�U�^2.1.1���ĮwBD{^6.0.15semverI�V
�$�^7.6.3����e�&͎�/^4.0.0eslint�T�{���2������G}T^10.0.0boolbase0a��~]��^1.0.0�� �����P^.��&�eslint�T�{�������"��PzMU��^7.25.9���s�U���^4.5.1#��sLkU`C��^0.2.7ci-infoA�j�^4.2.0K��Q��9���4^1.0.0W��q�_�� [^3.41.0esquery�3��
�(e^1.6.0e��ú�*��^1.0.1globals.��.B2(�^16.0.0s�
��-����^5.0.0���S�6Vyi�^5.0.0jsesc�RJ>��R�^3.1.0��	�	K|���7�^8.0.0����Z�.�*�^0.1.27�����2>��BC^0.12.0semverI�V
�$�^7.7.1���f�É���2^4.0.0eslint�T�{���>=9.22.0��
�l�u�H��^1.0.1jsesc�RJ>��R�~3.0.2�����O1r�^5.0.02��o��~�L�^4.25.0(����U�}�U^1.0.5levn3%MIL[�^0.4.1���W$(v�^0.13.0t����4�u���^7.0.15debug��4���^4.1.1���~4�	�c��^0.6.0lodash��v=�9N�^4.17.19����EK�%j��^0.10.0eslint�T�{���>=6.0.0���s�U���^4.2.0�����t�N�^4.11.0���ơI����^1.4.0���l͒[=�^4.0.0refaލ
�>:$C^0.12.1���x�=!
�Y,^0.7.1scslre�;�=���^0.3.0eslint�T�{���>=8.44.0�����t�N�^4.8.0refaލ
�>:$C^0.12.0���x�=!
�Y,^0.7.0�����t�N�^4.8.0refaލ
�>:$C^0.12.1�����t�N�^4.8.0e��ú�*��^1.0.1���}��¬I�^2.4.0pathe.��$Y"�^2.0.3^

�3t��'�^0.2.12���1��o����^1.3.0`���Y����H0.3.1eslint�T�{���^9.0.0yaml4��W��^^2.7.0�����I��`�^8.34.1��N{wp)�B^8.34.1 ��6�C��-^5.0.0eslint�T�{���>=8.45.0���s�U���^4.5.0��N{wp)�B^8.26.1��h��R4t)^5.17.1+��2@^.��|�^7.8.0=��IZch�:^4.8.1globals.��.B2(�^15.11.0ignore�R���e�j^5.3.2�	��^Q��p^9.0.5semverI�V
�$�^7.6.3I��l����1qS^1.0.6eslint�T�{���>=8.23.0�
	�U`����a�^4.0.2x
��%�,+�eb>=4.0.0���3Fa�z�"^1.0.0���~4�	�c��^0.5.1�����t�N�^4.11.0���s�U���^4.1.2eslint�T�{���>=8semverI�V
�$�^7.5.4eslint�T�{���>=6.0.02��8J��2�x^4.2.4tapable��4�-��^2.2.0���s�U���^4.5.1���~4�	�c��^0.6.4�������7�^0.2.1espree�Ej��2��*�	��Y0�
���^1.4.0���}��¬I�^2.4.0����z�n�^1.4.0synckit�Tn�-~��3��eslint�T�{���>=6.0.0��
�1nfPb�X�^0.2.4esquery�3��
�(e^1.6.0eslint�T�{���*���}��¬I�^2.4.0���Kz�!�� ~0.52.0�����KN甫^0.0.2���ơI����1.4.1debug��4���^4.4.1(����U�}�U^4.0.0espree�Ej��2^10.4.0esquery�3��
�(e^1.6.0���*�A��_A^0.2.4semverI�V
�$�^7.7.2���:�L]�MAt^4.0.0eslint�T�{������d��?l�� �d^2.1.0s��&�$����|^3.0.0d��
�����,1.0.11�
�>^����^1.0.8�����I��`�^8.34.1���ơI����1.4.1esquery�3��
�(e^1.6.0���l͒[=�~4.1.0���s�U���^4.7.0�����I��`�^8.34.0x
��%�,+�eb>=4.5eslint�T�{���>=9.0.0���Kz�!�� ^0.50.2eslint�T�{���*esquery�3��
�(e^1.6.0�
�>^����^1.0.6���ơI����1.4.1���l͒[=�~4.1.0�����I��`�^8.11.0eslint�T�{���*eslint�T�{���*pathe.��$Y"�^2.0.3���)�9x?�^1.2.5eslint�T�{���^9.5.0eslint�T�{���^9.10.0��N{wp)�B^8.24.1x
��%�,+�eb>= 5.0.0vitest=�4�1Ej*eslint�T�{���m�	�debug��4���^4.3.4�����I��`�8.35.0f��܆|��3n8.35.0�� �n���$98.35.0��$����ղE�8.35.0eslint�T�{���2��x
��%�,+�eb���ignore�R���e�j^7.0.0*�	��Y0�
���^1.4.0Z���HA��j�^2.1.0����z�n�^1.4.0��N{wp)�B8.35.0�����t�N�^4.10.0������i"1�8.35.0f��܆|��3n8.35.0�� �n���$98.35.0eslint�T�{���2��x
��%�,+�eb������f�?�U-8�^8.35.0debug��4���^4.3.4Z���HA��j�^2.1.0��N{wp)�B8.35.0��$����ղE�8.35.0eslint�T�{���2��x
��%�,+�eb������s�U���^4.7.0�����I��`�^8.34.1����y�W�q�^4.2.1espree�Ej��2^10.4.04�
�k=��q���^5.3.0�
	�U`����a�^4.0.2eslint�T�{���>=9.0.0���W$(v�^0.14.0#��sLkU`C��^0.3.1����\����^2.0.0���x4퀼�^2.0.24����X}�c�^2.0.1J��5떢z��p^3.0.0X��y݊ߍ�AB^2.0.0w���cg�tu^3.0.0��(����#�^2.0.0� ��Bc�z{�n^2.0.0,�%����E^2.0.0Q���:$���f^2.0.0n�!�S�'f?��^2.0.0��&����#�rB/^2.0.0��!��ƶOk!�^2.0.0���O�4:�Z�^2.0.0���{p���f�^2.0.0���O�4:�Z�^2.0.0���W.B�o�^2.0.0devlop`oN/�'�i^1.0.0������Ŵ#M^2.0.0��������Õ^2.0.0���W.B�o�^2.0.0���O�4:�Z�^2.0.0���W.B�o�^2.0.0���O�4:�Z�^2.0.0��������Õ^2.0.0���O�4:�Z�^2.0.0���O�4:�Z�^2.0.0devlop`oN/�'�i^1.0.0������Ŵ#M^2.0.0��������Õ^2.0.0���W.B�o�^2.0.0���O�4:�Z�^2.0.0devlop`oN/�'�i^1.0.0���{p���f�^2.0.0�!�˟�_��^2.0.0%���8IN�$^2.0.0���W.B�o�^2.0.0���O�4:�Z�^2.0.0���O�4:�Z�^2.0.0��������Õ^2.0.0���W.B�o�^2.0.0���O�4:�Z�^2.0.0devlop`oN/�'�i^1.0.0���O�4:�Z�^2.0.0���W.B�o�^2.0.0������Ŵ#M^2.0.0��������Õ^2.0.0m��q�A����^2.0.0���mkz�v�W�^2.0.0��#�+CF�C��u^2.0.0���W.B�o�^2.0.0��������Õ^2.0.0���6G�����^2.0.0���W.B�o�^2.0.0Q� ��q��-�8�^1.0.0devlop`oN/�'�i^1.0.0q��NJA*�N˚^2.0.0���a:�G=���^2.0.0������Ŵ#M^2.0.0���&�� ^2.0.0����j*���^2.0.0��������Õ^2.0.0���{p���f�^2.0.0�!�˟�_��^2.0.0����qdB
Ѩ^2.0.0��#�+CF�C��u^2.0.0%���8IN�$^2.0.0���
:j#'F�^2.0.0���W.B�o�^2.0.0���O�4:�Z�^2.0.0devlop`oN/�'�i^1.0.0���{p���f�^2.0.0���W.B�o�^2.0.0���O�4:�Z�^2.0.0������Ŵ#M^2.0.0��������Õ^2.0.0���W.B�o�^2.0.0���O�4:�Z�^2.0.0������Ŵ#M^2.0.0��������Õ^2.0.0���W.B�o�^2.0.0���O�4:�Z�^2.0.0devlop`oN/�'�i^1.0.0��������Õ^2.0.0���W.B�o�^2.0.0���O�4:�Z�^2.0.0��������Õ^2.0.0���W.B�o�^2.0.0���O�4:�Z�^2.0.0��-�^���G^2.0.0��������Õ^2.0.0���mkz�v�W�^2.0.0���W.B�o�^2.0.0���O�4:�Z�^2.0.0faultH�r)�q{�^2.0.0��������Õ^2.0.0���W.B�o�^2.0.0���O�4:�Z�^2.0.0format����$^0.2.0���x4퀼�^2.0.0�����Ŏ�t�^2.0.0��<��D�2^2.0.0��
f�O���^2.0.0��/�����=�^2.0.0���~^��^�^2.0.0	�;[����K^2.0.0s���S�Ķ�/^4.0.0Yl�&���*�^3.0.0��)]��Y^3.0.0����@^4.0.0���!@�mH^4.0.0�!�˟�_��^2.0.0��sł粯J^2.0.0��$��
^5.0.0zwitch`x3qQ�^2.0.0Yl�&���*�^3.0.0\
�g;�|o�9^6.0.0i��&��c�^6.0.0Yl�&���*�^3.0.0\
�g;�|o�9^6.0.0Yl�&���*�^3.0.0��������Õ^2.0.0{1��"���Ĕ^2.0.0���W.B�o�^2.0.0Q� ��q��-�8�^1.0.0���W.B�o�^2.0.0s���S�Ķ�/^4.0.0Yl�&���*�*s���S�Ķ�/^4.0.0\
�g;�|o�9^6.0.0s���S�Ķ�/^4.0.0devlop`oN/�'�i^1.0.0���x4퀼�^2.0.0	�;[����K^2.0.0s���S�Ķ�/^4.0.0Yl�&���*�^3.0.0Q� ��q��-�8�^1.0.0devlop`oN/�'�i^1.0.0���!@�mH^4.0.0	�F��l�x��^4.0.0{1��"���Ĕ^2.0.0��sł粯J^2.0.0��#�+CF�C��u^2.0.0���W.B�o�^2.0.0���O�4:�Z�^2.0.0�4��!;��&^4.0.0Yl�&���*�^3.0.0����Ca�t��^4.0.0debug��4���^4.0.0Q� ��q��-�8�^1.0.0devlop`oN/�'�i^1.0.0m��q�A����^2.0.0������Ŵ#M^2.0.0��������Õ^2.0.0���{p���f�^2.0.0��!��ƶOk!�^2.0.0{1��"���Ĕ^2.0.0���6G�����^2.0.0��#�+CF�C��u^2.0.0%���8IN�$^2.0.0���mkz�v�W�^2.0.0���
:j#'F�^2.0.0���W.B�o�^2.0.0���O�4:�Z�^2.0.0		�ErT�X;�*s���S�Ķ�/^4.0.0devlop`oN/�'�i^1.0.0�	�	��;�K�^3.0.0���x4퀼�^2.0.0	�;[����K^2.0.0s���S�Ķ�/^4.0.0���x4퀼�^2.0.0	�;[����K^2.0.0s���S�Ķ�/^4.0.0devlop`oN/�'�i^1.1.0���x4퀼�^2.0.0	�;[����K^2.0.0��#�+CF�C��u^2.0.0s���S�Ķ�/^4.0.0ccount)N����F�^2.0.0devlop`oN/�'�i^1.0.0�=,wţ���^3.0.0��������Õ^2.0.0s���S�Ķ�/^4.0.0(����U�}�U^5.0.0\
�g;�|o�9^6.0.0i��&��c�^6.0.0s���S�Ķ�/^4.0.0devlop`oN/�'�i^1.0.0(����U�}�U^5.0.0���x4퀼�^2.0.0	�;[����K^2.0.0X��y݊ߍ�AB^2.0.0(����U�}�U^4.0.0ignore�R���e�j^5.2.4eslint�T�{����$�[
�s�H���$|^1.0.0

���z+t\�^1.0.5&
�|�w��0.5.0[
�s�H���$|^1.0.0

���z+t\�^1.0.5��@�
<src.install.semver.ExternalString> 16 sizeof, 8 alignof
|*�{�D!귪�*�Q��n�[7�*�����*��v�*���f�;�|*�{�D!귪�*�Q��n�[7�*�����*��v�*���f�;�tsc���r��bin/tscޣ<�q�tsserver]� �RfK����85�x�p��
<u8> 1 sizeof, 1 alignof
my-dvha-app@antfu/eslint-config@tanstack/eslint-plugin-query^22.15.21@types/node@vitejs/plugin-vue@vitejs/plugin-vue-jsxtypescript@duxweb/dvha-core@duxweb/dvha-naiveui@duxweb/dvha-pro@vueuse/core@vueuse/integrationslodash-espetite-vue-i18npinia-plugin-persistedstatevue-routerhttps://registry.npmjs.org/vue-router/-/vue-router-4.5.1.tgz@vue/devtools-apihttps://registry.npmjs.org/vue/-/vue-3.5.17.tgz@vue/shared@vue/runtime-dom@vue/compiler-dom@vue/compiler-sfc@vue/server-rendererhttps://registry.npmjs.org/@vue/server-renderer/-/server-renderer-3.5.17.tgz@vue/compiler-ssrhttps://registry.npmjs.org/@vue/compiler-ssr/-/compiler-ssr-3.5.17.tgzhttps://registry.npmjs.org/@vue/compiler-dom/-/compiler-dom-3.5.17.tgz@vue/compiler-corehttps://registry.npmjs.org/@vue/compiler-core/-/compiler-core-3.5.17.tgz@babel/parserestree-walkersource-map-jshttps://registry.npmjs.org/@vue/shared/-/shared-3.5.17.tgzhttps://registry.npmjs.org/source-map-js/-/source-map-js-1.2.1.tgzhttps://registry.npmjs.org/estree-walker/-/estree-walker-2.0.2.tgzhttps://registry.npmjs.org/entities/-/entities-4.5.0.tgz./bin/babel-parser.jshttps://registry.npmjs.org/@babel/parser/-/parser-7.27.5.tgz@babel/typeshttps://registry.npmjs.org/@babel/types/-/types-7.27.6.tgz@babel/helper-string-parser@babel/helper-validator-identifierhttps://registry.npmjs.org/@babel/helper-validator-identifier/-/helper-validator-identifier-7.27.1.tgzhttps://registry.npmjs.org/@babel/helper-string-parser/-/helper-string-parser-7.27.1.tgzhttps://registry.npmjs.org/@vue/compiler-sfc/-/compiler-sfc-3.5.17.tgzmagic-stringhttps://registry.npmjs.org/postcss/-/postcss-8.5.6.tgzpicocolorshttps://registry.npmjs.org/picocolors/-/picocolors-1.1.1.tgzbin/nanoid.cjshttps://registry.npmjs.org/nanoid/-/nanoid-3.3.11.tgzhttps://registry.npmjs.org/magic-string/-/magic-string-0.30.17.tgz@jridgewell/sourcemap-codechttps://registry.npmjs.org/@jridgewell/sourcemap-codec/-/sourcemap-codec-1.5.0.tgzhttps://registry.npmjs.org/@vue/runtime-dom/-/runtime-dom-3.5.17.tgz@vue/reactivity@vue/runtime-corehttps://registry.npmjs.org/@vue/runtime-core/-/runtime-core-3.5.17.tgzhttps://registry.npmjs.org/@vue/reactivity/-/reactivity-3.5.17.tgzhttps://registry.npmjs.org/csstype/-/csstype-3.1.3.tgzhttps://registry.npmjs.org/@vue/devtools-api/-/devtools-api-6.6.4.tgzhttps://registry.npmjs.org/pinia-plugin-persistedstate/-/pinia-plugin-persistedstate-4.3.0.tgz@nuxt/kitdeep-pick-omit@pinia/nuxthttps://registry.npmjs.org/destr/-/destr-2.0.5.tgzhttps://registry.npmjs.org/defu/-/defu-6.1.4.tgzhttps://registry.npmjs.org/deep-pick-omit/-/deep-pick-omit-1.2.1.tgzhttps://registry.npmjs.org/@nuxt/kit/-/kit-3.17.5.tgzpkg-typestinyglobbyhttps://registry.npmjs.org/tinyglobby/-/tinyglobby-0.2.14.tgzpicomatchhttps://registry.npmjs.org/picomatch/-/picomatch-4.0.2.tgzhttps://registry.npmjs.org/fdir/-/fdir-6.4.6.tgzhttps://registry.npmjs.org/pkg-types/-/pkg-types-2.1.0.tgzhttps://registry.npmjs.org/pathe/-/pathe-2.0.3.tgzhttps://registry.npmjs.org/exsolve/-/exsolve-1.0.7.tgzhttps://registry.npmjs.org/confbox/-/confbox-0.2.2.tgzhttps://registry.npmjs.org/unimport/-/unimport-5.0.1.tgzescape-string-regexplocal-pkgstrip-literalunplugin-utilshttps://registry.npmjs.org/unplugin-utils/-/unplugin-utils-0.2.4.tgzhttps://registry.npmjs.org/unplugin/-/unplugin-2.3.5.tgzwebpack-virtual-moduleshttps://registry.npmjs.org/webpack-virtual-modules/-/webpack-virtual-modules-0.6.2.tgzbin/acornhttps://registry.npmjs.org/acorn/-/acorn-8.15.0.tgzhttps://registry.npmjs.org/strip-literal/-/strip-literal-3.0.0.tgzjs-tokenshttps://registry.npmjs.org/js-tokens/-/js-tokens-9.0.1.tgzhttps://registry.npmjs.org/scule/-/scule-1.3.0.tgzhttps://registry.npmjs.org/mlly/-/mlly-1.7.4.tgzhttps://registry.npmjs.org/ufo/-/ufo-1.6.1.tgzhttps://registry.npmjs.org/pkg-types/-/pkg-types-1.3.1.tgzhttps://registry.npmjs.org/confbox/-/confbox-0.1.8.tgzhttps://registry.npmjs.org/local-pkg/-/local-pkg-1.1.1.tgzhttps://registry.npmjs.org/quansync/-/quansync-0.2.10.tgzhttps://registry.npmjs.org/estree-walker/-/estree-walker-3.0.3.tgz@types/estreehttps://registry.npmjs.org/@types/estree/-/estree-1.0.8.tgzhttps://registry.npmjs.org/escape-string-regexp/-/escape-string-regexp-5.0.0.tgzhttps://registry.npmjs.org/knitwork/-/knitwork-1.2.0.tgzdist/cli.mjshttps://registry.npmjs.org/untyped/-/untyped-2.0.0.tgzlib/jiti-cli.mjshttps://registry.npmjs.org/jiti/-/jiti-2.4.2.tgzhttps://registry.npmjs.org/citty/-/citty-0.1.6.tgzhttps://registry.npmjs.org/consola/-/consola-3.4.2.tgzhttps://registry.npmjs.org/std-env/-/std-env-3.9.0.tgzbin/semver.jshttps://registry.npmjs.org/semver/-/semver-7.7.2.tgzhttps://registry.npmjs.org/ignore/-/ignore-7.0.5.tgzhttps://registry.npmjs.org/unctx/-/unctx-2.4.1.tgzhttps://registry.npmjs.org/ohash/-/ohash-2.0.11.tgzhttps://registry.npmjs.org/klona/-/klona-2.0.6.tgzhttps://registry.npmjs.org/errx/-/errx-0.1.0.tgzhttps://registry.npmjs.org/c12/-/c12-3.0.4.tgzperfect-debouncehttps://registry.npmjs.org/rc9/-/rc9-2.1.2.tgzhttps://registry.npmjs.org/perfect-debounce/-/perfect-debounce-1.0.0.tgzhttps://registry.npmjs.org/giget/-/giget-2.0.0.tgznode-fetch-nativehttps://registry.npmjs.org/nypm/-/nypm-0.6.0.tgzhttps://registry.npmjs.org/tinyexec/-/tinyexec-0.3.2.tgzhttps://registry.npmjs.org/node-fetch-native/-/node-fetch-native-1.6.6.tgzhttps://registry.npmjs.org/dotenv/-/dotenv-16.5.0.tgzhttps://registry.npmjs.org/chokidar/-/chokidar-4.0.3.tgzhttps://registry.npmjs.org/readdirp/-/readdirp-4.1.2.tgzhttps://registry.npmjs.org/pinia/-/pinia-3.0.3.tgz^2.7.0 || ^3.5.11https://registry.npmjs.org/@vue/devtools-api/-/devtools-api-7.7.7.tgz@vue/devtools-kithttps://registry.npmjs.org/@vue/devtools-kit/-/devtools-kit-7.7.7.tgzspeakingurlsuperjson@vue/devtools-sharedhttps://registry.npmjs.org/@vue/devtools-shared/-/devtools-shared-7.7.7.tgzhttps://registry.npmjs.org/rfdc/-/rfdc-1.4.1.tgzhttps://registry.npmjs.org/superjson/-/superjson-2.2.2.tgzcopy-anythinghttps://registry.npmjs.org/copy-anything/-/copy-anything-3.0.5.tgzhttps://registry.npmjs.org/is-what/-/is-what-4.1.16.tgzhttps://registry.npmjs.org/speakingurl/-/speakingurl-14.0.1.tgzhttps://registry.npmjs.org/mitt/-/mitt-3.0.1.tgzhttps://registry.npmjs.org/hookable/-/hookable-5.5.3.tgzhttps://registry.npmjs.org/birpc/-/birpc-2.4.0.tgzhttps://registry.npmjs.org/petite-vue-i18n/-/petite-vue-i18n-11.1.7.tgz@intlify/core-base@intlify/sharedhttps://registry.npmjs.org/@intlify/shared/-/shared-11.1.7.tgzhttps://registry.npmjs.org/@intlify/core-base/-/core-base-11.1.7.tgz@intlify/message-compilerhttps://registry.npmjs.org/@intlify/message-compiler/-/message-compiler-11.1.7.tgzhttps://registry.npmjs.org/naive-ui/-/naive-ui-2.42.0.tgz@css-render/plugin-bem@css-render/vue3-ssr@types/katex^4.14.198@types/lodash@types/lodash-esasync-validatorcss-renderdate-fns-tzhighlight.jshttps://registry.npmjs.org/vueuc/-/vueuc-0.4.64.tgz@juggle/resize-observerhttps://registry.npmjs.org/vooks/-/vooks-0.2.12.tgzhttps://registry.npmjs.org/evtd/-/evtd-0.2.4.tgzhttps://registry.npmjs.org/vdirs/-/vdirs-0.1.8.tgzhttps://registry.npmjs.org/seemly/-/seemly-0.3.10.tgzhttps://registry.npmjs.org/css-render/-/css-render-0.15.14.tgz@emotion/hashhttps://registry.npmjs.org/csstype/-/csstype-3.0.11.tgzhttps://registry.npmjs.org/@emotion/hash/-/hash-0.8.0.tgzhttps://registry.npmjs.org/@juggle/resize-observer/-/resize-observer-3.4.0.tgzhttps://registry.npmjs.org/@css-render/vue3-ssr/-/vue3-ssr-0.15.14.tgzhttps://registry.npmjs.org/treemate/-/treemate-0.3.11.tgzhttps://registry.npmjs.org/lodash-es/-/lodash-es-4.17.21.tgzhttps://registry.npmjs.org/lodash/-/lodash-4.17.21.tgzhttps://registry.npmjs.org/highlight.js/-/highlight.js-11.11.1.tgzhttps://registry.npmjs.org/date-fns-tz/-/date-fns-tz-3.2.0.tgz^3.0.0 || ^4.0.0https://registry.npmjs.org/date-fns/-/date-fns-3.6.0.tgzhttps://registry.npmjs.org/async-validator/-/async-validator-4.2.5.tgzhttps://registry.npmjs.org/@types/lodash-es/-/lodash-es-4.17.12.tgzhttps://registry.npmjs.org/@types/lodash/-/lodash-4.17.18.tgzhttps://registry.npmjs.org/@types/katex/-/katex-0.16.7.tgzhttps://registry.npmjs.org/@css-render/plugin-bem/-/plugin-bem-0.15.14.tgzhttps://registry.npmjs.org/clsx/-/clsx-2.1.1.tgzhttps://registry.npmjs.org/axios/-/axios-1.10.0.tgzfollow-redirectsform-dataproxy-from-envhttps://registry.npmjs.org/proxy-from-env/-/proxy-from-env-1.1.0.tgzhttps://registry.npmjs.org/form-data/-/form-data-4.0.3.tgzcombined-streames-set-tostringtagmime-typeshttps://registry.npmjs.org/mime-types/-/mime-types-2.1.35.tgzhttps://registry.npmjs.org/mime-db/-/mime-db-1.52.0.tgzhttps://registry.npmjs.org/hasown/-/hasown-2.0.2.tgzfunction-bindhttps://registry.npmjs.org/function-bind/-/function-bind-1.1.2.tgzhttps://registry.npmjs.org/es-set-tostringtag/-/es-set-tostringtag-2.1.0.tgzes-errorsget-intrinsichas-tostringtaghttps://registry.npmjs.org/has-tostringtag/-/has-tostringtag-1.0.2.tgzhas-symbolshttps://registry.npmjs.org/has-symbols/-/has-symbols-1.1.0.tgzhttps://registry.npmjs.org/get-intrinsic/-/get-intrinsic-1.3.0.tgzcall-bind-apply-helperses-define-propertyes-object-atomsget-protomath-intrinsicshttps://registry.npmjs.org/math-intrinsics/-/math-intrinsics-1.1.0.tgzhttps://registry.npmjs.org/gopd/-/gopd-1.2.0.tgzhttps://registry.npmjs.org/get-proto/-/get-proto-1.0.1.tgzdunder-protohttps://registry.npmjs.org/es-object-atoms/-/es-object-atoms-1.1.1.tgzhttps://registry.npmjs.org/es-errors/-/es-errors-1.3.0.tgzhttps://registry.npmjs.org/dunder-proto/-/dunder-proto-1.0.1.tgzhttps://registry.npmjs.org/call-bind-apply-helpers/-/call-bind-apply-helpers-1.0.2.tgzhttps://registry.npmjs.org/es-define-property/-/es-define-property-1.0.1.tgzhttps://registry.npmjs.org/combined-stream/-/combined-stream-1.0.8.tgzdelayed-streamhttps://registry.npmjs.org/delayed-stream/-/delayed-stream-1.0.0.tgzhttps://registry.npmjs.org/asynckit/-/asynckit-0.4.0.tgzhttps://registry.npmjs.org/follow-redirects/-/follow-redirects-1.15.9.tgzhttps://registry.npmjs.org/@vueuse/integrations/-/integrations-13.4.0.tgz@vueuse/sharedchange-casefocus-trapidb-keyvaljwt-decodenprogresssortablejsuniversal-cookiehttps://registry.npmjs.org/@vueuse/shared/-/shared-13.4.0.tgzhttps://registry.npmjs.org/@vueuse/core/-/core-13.4.0.tgz@types/web-bluetooth@vueuse/metadatahttps://registry.npmjs.org/@vueuse/metadata/-/metadata-13.4.0.tgzhttps://registry.npmjs.org/@types/web-bluetooth/-/web-bluetooth-0.0.21.tgzhttps://registry.npmjs.org/@duxweb/dvha-pro/-/dvha-pro-1.0.15.tgz@ant-design/colors@iconify-json/tabler@overlastic/vue@tanstack/vue-query@unocss/preset-icons@unocss/preset-typography@unocss/runtime@vee-validate/i18n@vee-validate/rulesjinrishicisass-embeddedvee-validatevue-command-palettevue-croppervue-draggable-plusvue-echartshttps://registry.npmjs.org/vue-echarts/-/vue-echarts-7.0.3.tgz^2.7.0 || ^3.1.1https://registry.npmjs.org/echarts/-/echarts-5.6.0.tgzhttps://registry.npmjs.org/zrender/-/zrender-5.6.1.tgzhttps://registry.npmjs.org/tslib/-/tslib-2.3.0.tgzvue-demi-fixbin/vue-demi-fix.jsvue-demi-switchbin/vue-demi-switch.jshttps://registry.npmjs.org/vue-demi/-/vue-demi-0.13.11.tgz^1.0.0-rc.1@vue/composition-api^3.0.0-0 || ^2.6.0https://registry.npmjs.org/vue-draggable-plus/-/vue-draggable-plus-0.6.0.tgz@types/sortablejshttps://registry.npmjs.org/@types/sortablejs/-/sortablejs-1.15.8.tgzhttps://registry.npmjs.org/vue-cropper/-/vue-cropper-1.1.4.tgzhttps://registry.npmjs.org/vue-command-palette/-/vue-command-palette-0.2.3.tgzbin/nanoid.jshttps://registry.npmjs.org/nanoid/-/nanoid-4.0.2.tgzhttps://registry.npmjs.org/fuse.js/-/fuse.js-6.6.2.tgzhttps://registry.npmjs.org/vee-validate/-/vee-validate-4.15.1.tgztype-festhttps://registry.npmjs.org/type-fest/-/type-fest-4.41.0.tgzhttps://registry.npmjs.org/unocss/-/unocss-66.2.3.tgz@unocss/astro@unocss/cli@unocss/core@unocss/postcss@unocss/preset-attributify@unocss/preset-mini@unocss/preset-uno@unocss/preset-web-fonts@unocss/preset-wind3@unocss/preset-wind4@unocss/preset-wind@unocss/transformer-attributify-jsx@unocss/preset-tagify@unocss/transformer-compile-class@unocss/transformer-variant-group@unocss/transformer-directives@unocss/vite^2.9.0 || ^3.0.0-0 || ^4.0.0 || ^5.0.0-0 || ^6.0.0-0@unocss/webpackhttps://registry.npmjs.org/@unocss/vite/-/vite-66.2.3.tgz@ampproject/remapping@unocss/config@unocss/inspectorbin/vite.jshttps://registry.npmjs.org/vite/-/vite-6.3.5.tgz^18.0.0 || ^20.0.0 || >=22.0.0lightningcsshttps://registry.npmjs.org/fsevents/-/fsevents-2.3.3.tgzbin/esbuildhttps://registry.npmjs.org/esbuild/-/esbuild-0.25.5.tgz@esbuild/aix-ppc64@esbuild/android-arm@esbuild/android-arm64@esbuild/android-x64@esbuild/darwin-arm64@esbuild/darwin-x64@esbuild/freebsd-arm64@esbuild/freebsd-x64@esbuild/linux-arm@esbuild/linux-arm64@esbuild/linux-ia32@esbuild/linux-loong64@esbuild/linux-mips64el@esbuild/linux-ppc64@esbuild/linux-riscv64@esbuild/linux-s390x@esbuild/linux-x64@esbuild/netbsd-arm64@esbuild/netbsd-x64@esbuild/openbsd-arm64@esbuild/openbsd-x64@esbuild/sunos-x64@esbuild/win32-arm64@esbuild/win32-ia32@esbuild/win32-x64https://registry.npmjs.org/@esbuild/win32-x64/-/win32-x64-0.25.5.tgzhttps://registry.npmjs.org/@esbuild/win32-ia32/-/win32-ia32-0.25.5.tgzhttps://registry.npmjs.org/@esbuild/win32-arm64/-/win32-arm64-0.25.5.tgzhttps://registry.npmjs.org/@esbuild/sunos-x64/-/sunos-x64-0.25.5.tgzhttps://registry.npmjs.org/@esbuild/openbsd-x64/-/openbsd-x64-0.25.5.tgzhttps://registry.npmjs.org/@esbuild/openbsd-arm64/-/openbsd-arm64-0.25.5.tgzhttps://registry.npmjs.org/@esbuild/netbsd-x64/-/netbsd-x64-0.25.5.tgzhttps://registry.npmjs.org/@esbuild/netbsd-arm64/-/netbsd-arm64-0.25.5.tgzhttps://registry.npmjs.org/@esbuild/linux-x64/-/linux-x64-0.25.5.tgzhttps://registry.npmjs.org/@esbuild/linux-s390x/-/linux-s390x-0.25.5.tgzhttps://registry.npmjs.org/@esbuild/linux-riscv64/-/linux-riscv64-0.25.5.tgzhttps://registry.npmjs.org/@esbuild/linux-ppc64/-/linux-ppc64-0.25.5.tgzhttps://registry.npmjs.org/@esbuild/linux-mips64el/-/linux-mips64el-0.25.5.tgzhttps://registry.npmjs.org/@esbuild/linux-loong64/-/linux-loong64-0.25.5.tgzhttps://registry.npmjs.org/@esbuild/linux-ia32/-/linux-ia32-0.25.5.tgzhttps://registry.npmjs.org/@esbuild/linux-arm64/-/linux-arm64-0.25.5.tgzhttps://registry.npmjs.org/@esbuild/linux-arm/-/linux-arm-0.25.5.tgzhttps://registry.npmjs.org/@esbuild/freebsd-x64/-/freebsd-x64-0.25.5.tgzhttps://registry.npmjs.org/@esbuild/freebsd-arm64/-/freebsd-arm64-0.25.5.tgzhttps://registry.npmjs.org/@esbuild/darwin-x64/-/darwin-x64-0.25.5.tgzhttps://registry.npmjs.org/@esbuild/darwin-arm64/-/darwin-arm64-0.25.5.tgzhttps://registry.npmjs.org/@esbuild/android-x64/-/android-x64-0.25.5.tgzhttps://registry.npmjs.org/@esbuild/android-arm64/-/android-arm64-0.25.5.tgzhttps://registry.npmjs.org/@esbuild/android-arm/-/android-arm-0.25.5.tgzhttps://registry.npmjs.org/@esbuild/aix-ppc64/-/aix-ppc64-0.25.5.tgzdist/bin/rolluphttps://registry.npmjs.org/rollup/-/rollup-4.44.0.tgz@rollup/rollup-darwin-arm64@rollup/rollup-android-arm64@rollup/rollup-win32-arm64-msvc@rollup/rollup-freebsd-arm64@rollup/rollup-linux-arm64-gnu@rollup/rollup-linux-arm64-musl@rollup/rollup-android-arm-eabi@rollup/rollup-linux-arm-gnueabihf@rollup/rollup-linux-arm-musleabihf@rollup/rollup-win32-ia32-msvc@rollup/rollup-linux-loongarch64-gnu@rollup/rollup-linux-riscv64-gnu@rollup/rollup-linux-riscv64-musl@rollup/rollup-linux-powerpc64le-gnu@rollup/rollup-linux-s390x-gnu@rollup/rollup-darwin-x64@rollup/rollup-win32-x64-msvc@rollup/rollup-freebsd-x64@rollup/rollup-linux-x64-gnu@rollup/rollup-linux-x64-muslhttps://registry.npmjs.org/@rollup/rollup-linux-x64-musl/-/rollup-linux-x64-musl-4.44.0.tgzhttps://registry.npmjs.org/@rollup/rollup-linux-x64-gnu/-/rollup-linux-x64-gnu-4.44.0.tgzhttps://registry.npmjs.org/@rollup/rollup-freebsd-x64/-/rollup-freebsd-x64-4.44.0.tgzhttps://registry.npmjs.org/@rollup/rollup-win32-x64-msvc/-/rollup-win32-x64-msvc-4.44.0.tgzhttps://registry.npmjs.org/@rollup/rollup-darwin-x64/-/rollup-darwin-x64-4.44.0.tgzhttps://registry.npmjs.org/@rollup/rollup-linux-s390x-gnu/-/rollup-linux-s390x-gnu-4.44.0.tgzhttps://registry.npmjs.org/@rollup/rollup-linux-powerpc64le-gnu/-/rollup-linux-powerpc64le-gnu-4.44.0.tgzhttps://registry.npmjs.org/@rollup/rollup-linux-riscv64-musl/-/rollup-linux-riscv64-musl-4.44.0.tgzhttps://registry.npmjs.org/@rollup/rollup-linux-riscv64-gnu/-/rollup-linux-riscv64-gnu-4.44.0.tgzhttps://registry.npmjs.org/@rollup/rollup-linux-loongarch64-gnu/-/rollup-linux-loongarch64-gnu-4.44.0.tgzhttps://registry.npmjs.org/@rollup/rollup-win32-ia32-msvc/-/rollup-win32-ia32-msvc-4.44.0.tgzhttps://registry.npmjs.org/@rollup/rollup-linux-arm-musleabihf/-/rollup-linux-arm-musleabihf-4.44.0.tgzhttps://registry.npmjs.org/@rollup/rollup-linux-arm-gnueabihf/-/rollup-linux-arm-gnueabihf-4.44.0.tgzhttps://registry.npmjs.org/@rollup/rollup-android-arm-eabi/-/rollup-android-arm-eabi-4.44.0.tgzhttps://registry.npmjs.org/@rollup/rollup-linux-arm64-musl/-/rollup-linux-arm64-musl-4.44.0.tgzhttps://registry.npmjs.org/@rollup/rollup-linux-arm64-gnu/-/rollup-linux-arm64-gnu-4.44.0.tgzhttps://registry.npmjs.org/@rollup/rollup-freebsd-arm64/-/rollup-freebsd-arm64-4.44.0.tgzhttps://registry.npmjs.org/@rollup/rollup-win32-arm64-msvc/-/rollup-win32-arm64-msvc-4.44.0.tgzhttps://registry.npmjs.org/@rollup/rollup-android-arm64/-/rollup-android-arm64-4.44.0.tgzhttps://registry.npmjs.org/@rollup/rollup-darwin-arm64/-/rollup-darwin-arm64-4.44.0.tgzhttps://registry.npmjs.org/@unocss/core/-/core-66.2.3.tgzhttps://registry.npmjs.org/@unocss/inspector/-/inspector-66.2.3.tgzcolorettegzip-sizevue-flow-layout@unocss/rule-utilshttps://registry.npmjs.org/@unocss/rule-utils/-/rule-utils-66.2.3.tgzhttps://registry.npmjs.org/vue-flow-layout/-/vue-flow-layout-0.1.1.tgzhttps://registry.npmjs.org/sirv/-/sirv-3.0.1.tgz^1.0.0-next.24@polka/urlhttps://registry.npmjs.org/totalist/-/totalist-3.0.1.tgzhttps://registry.npmjs.org/mrmime/-/mrmime-2.0.1.tgzhttps://registry.npmjs.org/@polka/url/-/url-1.0.0-next.29.tgzhttps://registry.npmjs.org/gzip-size/-/gzip-size-6.0.0.tgzhttps://registry.npmjs.org/duplexer/-/duplexer-0.1.2.tgzhttps://registry.npmjs.org/colorette/-/colorette-2.0.20.tgzhttps://registry.npmjs.org/@unocss/config/-/config-66.2.3.tgzhttps://registry.npmjs.org/unconfig/-/unconfig-7.3.2.tgz@quansync/fshttps://registry.npmjs.org/@quansync/fs/-/fs-0.1.3.tgzhttps://registry.npmjs.org/chokidar/-/chokidar-3.6.0.tgzglob-parentis-binary-pathnormalize-pathhttps://registry.npmjs.org/normalize-path/-/normalize-path-3.0.0.tgzhttps://registry.npmjs.org/is-binary-path/-/is-binary-path-2.1.0.tgzbinary-extensionshttps://registry.npmjs.org/binary-extensions/-/binary-extensions-2.3.0.tgzhttps://registry.npmjs.org/glob-parent/-/glob-parent-5.1.2.tgzhttps://registry.npmjs.org/is-glob/-/is-glob-4.0.3.tgzis-extglobhttps://registry.npmjs.org/is-extglob/-/is-extglob-2.1.1.tgzhttps://registry.npmjs.org/readdirp/-/readdirp-3.6.0.tgzhttps://registry.npmjs.org/picomatch/-/picomatch-2.3.1.tgzhttps://registry.npmjs.org/anymatch/-/anymatch-3.1.3.tgzhttps://registry.npmjs.org/braces/-/braces-3.0.3.tgzfill-rangehttps://registry.npmjs.org/fill-range/-/fill-range-7.1.1.tgzto-regex-rangehttps://registry.npmjs.org/to-regex-range/-/to-regex-range-5.0.1.tgzis-numberhttps://registry.npmjs.org/is-number/-/is-number-7.0.0.tgzhttps://registry.npmjs.org/@ampproject/remapping/-/remapping-2.3.0.tgz@jridgewell/gen-mapping@jridgewell/trace-mappinghttps://registry.npmjs.org/@jridgewell/trace-mapping/-/trace-mapping-0.3.25.tgz@jridgewell/resolve-urihttps://registry.npmjs.org/@jridgewell/resolve-uri/-/resolve-uri-3.1.2.tgzhttps://registry.npmjs.org/@jridgewell/gen-mapping/-/gen-mapping-0.3.8.tgz@jridgewell/set-arrayhttps://registry.npmjs.org/@jridgewell/set-array/-/set-array-1.2.1.tgzhttps://registry.npmjs.org/@unocss/transformer-directives/-/transformer-directives-66.2.3.tgzhttps://registry.npmjs.org/css-tree/-/css-tree-3.1.0.tgzhttps://registry.npmjs.org/mdn-data/-/mdn-data-2.12.2.tgzhttps://registry.npmjs.org/@unocss/transformer-variant-group/-/transformer-variant-group-66.2.3.tgzhttps://registry.npmjs.org/@unocss/transformer-compile-class/-/transformer-compile-class-66.2.3.tgzhttps://registry.npmjs.org/@unocss/preset-tagify/-/preset-tagify-66.2.3.tgzhttps://registry.npmjs.org/@unocss/transformer-attributify-jsx/-/transformer-attributify-jsx-66.2.3.tgzhttps://registry.npmjs.org/@unocss/preset-wind/-/preset-wind-66.2.3.tgzhttps://registry.npmjs.org/@unocss/preset-wind3/-/preset-wind3-66.2.3.tgzhttps://registry.npmjs.org/@unocss/preset-mini/-/preset-mini-66.2.3.tgz@unocss/extractor-arbitrary-variantshttps://registry.npmjs.org/@unocss/extractor-arbitrary-variants/-/extractor-arbitrary-variants-66.2.3.tgzhttps://registry.npmjs.org/@unocss/preset-wind4/-/preset-wind4-66.2.3.tgzhttps://registry.npmjs.org/@unocss/preset-web-fonts/-/preset-web-fonts-66.2.3.tgzhttps://registry.npmjs.org/ofetch/-/ofetch-1.4.1.tgzhttps://registry.npmjs.org/@unocss/preset-uno/-/preset-uno-66.2.3.tgzhttps://registry.npmjs.org/@unocss/preset-typography/-/preset-typography-66.2.3.tgzhttps://registry.npmjs.org/@unocss/preset-icons/-/preset-icons-66.2.3.tgz@iconify/utilshttps://registry.npmjs.org/@iconify/utils/-/utils-2.3.0.tgz@antfu/install-pkg@antfu/utils@iconify/typeshttps://registry.npmjs.org/@iconify/types/-/types-2.0.0.tgzhttps://registry.npmjs.org/kolorist/-/kolorist-1.8.0.tgzhttps://registry.npmjs.org/globals/-/globals-15.15.0.tgzhttps://registry.npmjs.org/debug/-/debug-4.4.1.tgzhttps://registry.npmjs.org/ms/-/ms-2.1.3.tgzhttps://registry.npmjs.org/@antfu/utils/-/utils-8.1.1.tgzhttps://registry.npmjs.org/@antfu/install-pkg/-/install-pkg-1.1.0.tgzpackage-manager-detectorhttps://registry.npmjs.org/tinyexec/-/tinyexec-1.0.1.tgzhttps://registry.npmjs.org/package-manager-detector/-/package-manager-detector-1.3.0.tgzhttps://registry.npmjs.org/@unocss/preset-attributify/-/preset-attributify-66.2.3.tgzhttps://registry.npmjs.org/@unocss/postcss/-/postcss-66.2.3.tgzbin/unocss.mjshttps://registry.npmjs.org/@unocss/cli/-/cli-66.2.3.tgzhttps://registry.npmjs.org/cac/-/cac-6.7.14.tgzhttps://registry.npmjs.org/@unocss/astro/-/astro-66.2.3.tgz@unocss/resethttps://registry.npmjs.org/@unocss/reset/-/reset-66.2.3.tgzhttps://registry.npmjs.org/tslib/-/tslib-2.8.1.tgzdist/bin/sass.jshttps://registry.npmjs.org/sass-embedded/-/sass-embedded-1.89.2.tgz@bufbuild/protobufbuffer-buildercolorjs.ioimmutablesupports-colorsync-child-processsass-embedded-android-armsass-embedded-android-arm64sass-embedded-android-riscv64sass-embedded-android-x64sass-embedded-darwin-arm64sass-embedded-darwin-x64sass-embedded-linux-armsass-embedded-linux-arm64sass-embedded-linux-riscv64sass-embedded-linux-x64sass-embedded-linux-musl-armsass-embedded-linux-musl-arm64sass-embedded-linux-musl-riscv64sass-embedded-linux-musl-x64sass-embedded-win32-arm64sass-embedded-win32-x64https://registry.npmjs.org/sass-embedded-win32-x64/-/sass-embedded-win32-x64-1.89.2.tgzhttps://registry.npmjs.org/sass-embedded-win32-arm64/-/sass-embedded-win32-arm64-1.89.2.tgzhttps://registry.npmjs.org/sass-embedded-linux-musl-x64/-/sass-embedded-linux-musl-x64-1.89.2.tgzhttps://registry.npmjs.org/sass-embedded-linux-musl-riscv64/-/sass-embedded-linux-musl-riscv64-1.89.2.tgzhttps://registry.npmjs.org/sass-embedded-linux-musl-arm64/-/sass-embedded-linux-musl-arm64-1.89.2.tgzhttps://registry.npmjs.org/sass-embedded-linux-musl-arm/-/sass-embedded-linux-musl-arm-1.89.2.tgzhttps://registry.npmjs.org/sass-embedded-linux-x64/-/sass-embedded-linux-x64-1.89.2.tgzhttps://registry.npmjs.org/sass-embedded-linux-riscv64/-/sass-embedded-linux-riscv64-1.89.2.tgzhttps://registry.npmjs.org/sass-embedded-linux-arm64/-/sass-embedded-linux-arm64-1.89.2.tgzhttps://registry.npmjs.org/sass-embedded-linux-arm/-/sass-embedded-linux-arm-1.89.2.tgzhttps://registry.npmjs.org/sass-embedded-darwin-x64/-/sass-embedded-darwin-x64-1.89.2.tgzhttps://registry.npmjs.org/sass-embedded-darwin-arm64/-/sass-embedded-darwin-arm64-1.89.2.tgzhttps://registry.npmjs.org/sass-embedded-android-x64/-/sass-embedded-android-x64-1.89.2.tgzhttps://registry.npmjs.org/sass-embedded-android-riscv64/-/sass-embedded-android-riscv64-1.89.2.tgzhttps://registry.npmjs.org/sass-embedded-android-arm64/-/sass-embedded-android-arm64-1.89.2.tgzhttps://registry.npmjs.org/sass-embedded-android-arm/-/sass-embedded-android-arm-1.89.2.tgzhttps://registry.npmjs.org/varint/-/varint-6.0.0.tgzhttps://registry.npmjs.org/sync-child-process/-/sync-child-process-1.0.2.tgzsync-message-porthttps://registry.npmjs.org/sync-message-port/-/sync-message-port-1.1.3.tgzhttps://registry.npmjs.org/supports-color/-/supports-color-8.1.1.tgzhttps://registry.npmjs.org/has-flag/-/has-flag-4.0.0.tgzhttps://registry.npmjs.org/rxjs/-/rxjs-7.8.2.tgzhttps://registry.npmjs.org/immutable/-/immutable-5.1.3.tgzhttps://registry.npmjs.org/colorjs.io/-/colorjs.io-0.5.2.tgzhttps://registry.npmjs.org/buffer-builder/-/buffer-builder-0.2.0.tgzhttps://registry.npmjs.org/@bufbuild/protobuf/-/protobuf-2.5.2.tgzbin/cli.jshttps://registry.npmjs.org/mime/-/mime-4.0.7.tgzhttps://registry.npmjs.org/mathjs/-/mathjs-14.5.2.tgz@babel/runtimecomplex.jsdecimal.jsescape-latexfraction.jsjavascript-natural-sortseedrandomtiny-emittertyped-functionhttps://registry.npmjs.org/typed-function/-/typed-function-4.2.1.tgzhttps://registry.npmjs.org/tiny-emitter/-/tiny-emitter-2.1.0.tgzhttps://registry.npmjs.org/seedrandom/-/seedrandom-3.0.5.tgzhttps://registry.npmjs.org/javascript-natural-sort/-/javascript-natural-sort-0.7.1.tgzhttps://registry.npmjs.org/fraction.js/-/fraction.js-5.2.2.tgzhttps://registry.npmjs.org/escape-latex/-/escape-latex-1.2.0.tgzhttps://registry.npmjs.org/decimal.js/-/decimal.js-10.5.0.tgzhttps://registry.npmjs.org/complex.js/-/complex.js-2.4.2.tgzhttps://registry.npmjs.org/@babel/runtime/-/runtime-7.27.6.tgzhttps://registry.npmjs.org/jsep/-/jsep-1.4.0.tgzhttps://registry.npmjs.org/jinrishici/-/jinrishici-1.0.6.tgzhttps://registry.npmjs.org/dayjs/-/dayjs-1.11.13.tgzhttps://registry.npmjs.org/colorizr/-/colorizr-3.0.8.tgzhttps://registry.npmjs.org/aieditor/-/aieditor-1.3.9.tgz@tiptap/core@tiptap/extension-bubble-menu@tiptap/extension-character-count@tiptap/extension-code-block-lowlight@tiptap/extension-color@tiptap/extension-font-family@tiptap/extension-gapcursor@tiptap/extension-heading@tiptap/extension-highlight@tiptap/extension-image@tiptap/extension-link@tiptap/extension-mention@tiptap/extension-placeholder@tiptap/extension-subscript@tiptap/extension-superscript@tiptap/extension-table@tiptap/extension-table-cell@tiptap/extension-table-header@tiptap/extension-table-row@tiptap/extension-task-item@tiptap/extension-task-list@tiptap/extension-text-align@tiptap/extension-text-style@tiptap/extension-underline@tiptap/pm@tiptap/starter-kit@tiptap/suggestioncrypto-jsfetch-event-streamjoplin-turndown-plugin-gfmmarkdown-itmarkdown-it-containermarkdown-it-task-listshttps://registry.npmjs.org/turndown/-/turndown-7.2.0.tgz@mixmark-io/dominohttps://registry.npmjs.org/@mixmark-io/domino/-/domino-2.2.0.tgzhttps://registry.npmjs.org/tippy.js/-/tippy.js-6.3.7.tgz@popperjs/corehttps://registry.npmjs.org/@popperjs/core/-/core-2.11.8.tgzhttps://registry.npmjs.org/markdown-it-task-lists/-/markdown-it-task-lists-2.1.1.tgzhttps://registry.npmjs.org/markdown-it-container/-/markdown-it-container-4.0.0.tgzbin/markdown-it.mjshttps://registry.npmjs.org/markdown-it/-/markdown-it-14.1.0.tgzlinkify-itpunycode.jshttps://registry.npmjs.org/uc.micro/-/uc.micro-2.1.0.tgzhttps://registry.npmjs.org/punycode.js/-/punycode.js-2.3.1.tgzhttps://registry.npmjs.org/mdurl/-/mdurl-2.0.0.tgzhttps://registry.npmjs.org/linkify-it/-/linkify-it-5.0.0.tgzhttps://registry.npmjs.org/argparse/-/argparse-2.0.1.tgzhttps://registry.npmjs.org/lowlight/-/lowlight-3.3.0.tgz@types/hasthttps://registry.npmjs.org/devlop/-/devlop-1.1.0.tgzhttps://registry.npmjs.org/dequal/-/dequal-2.0.3.tgzhttps://registry.npmjs.org/@types/hast/-/hast-3.0.4.tgz@types/unisthttps://registry.npmjs.org/@types/unist/-/unist-3.0.3.tgzhttps://registry.npmjs.org/joplin-turndown-plugin-gfm/-/joplin-turndown-plugin-gfm-1.0.12.tgzhttps://registry.npmjs.org/i18next/-/i18next-23.16.8.tgzhttps://registry.npmjs.org/fetch-event-stream/-/fetch-event-stream-0.1.5.tgzhttps://registry.npmjs.org/crypto-js/-/crypto-js-4.2.0.tgzhttps://registry.npmjs.org/@tiptap/suggestion/-/suggestion-2.22.3.tgzhttps://registry.npmjs.org/@tiptap/core/-/core-2.22.3.tgzhttps://registry.npmjs.org/@tiptap/pm/-/pm-2.22.3.tgzprosemirror-menuprosemirror-viewprosemirror-modelprosemirror-stateprosemirror-collabprosemirror-keymapprosemirror-tablesprosemirror-historyprosemirror-commandsprosemirror-markdownprosemirror-changesetprosemirror-gapcursorprosemirror-transformprosemirror-dropcursorprosemirror-inputrulesprosemirror-schema-listprosemirror-schema-basicprosemirror-trailing-nodehttps://registry.npmjs.org/prosemirror-trailing-node/-/prosemirror-trailing-node-3.0.0.tgz@remirror/core-constantshttps://registry.npmjs.org/prosemirror-view/-/prosemirror-view-1.40.0.tgzhttps://registry.npmjs.org/prosemirror-transform/-/prosemirror-transform-1.10.4.tgzhttps://registry.npmjs.org/prosemirror-model/-/prosemirror-model-1.25.1.tgzorderedmaphttps://registry.npmjs.org/orderedmap/-/orderedmap-2.1.1.tgzhttps://registry.npmjs.org/prosemirror-state/-/prosemirror-state-1.4.3.tgzhttps://registry.npmjs.org/escape-string-regexp/-/escape-string-regexp-4.0.0.tgzhttps://registry.npmjs.org/@remirror/core-constants/-/core-constants-3.0.0.tgzhttps://registry.npmjs.org/prosemirror-schema-basic/-/prosemirror-schema-basic-1.2.4.tgzhttps://registry.npmjs.org/prosemirror-schema-list/-/prosemirror-schema-list-1.5.1.tgzhttps://registry.npmjs.org/prosemirror-inputrules/-/prosemirror-inputrules-1.5.0.tgzhttps://registry.npmjs.org/prosemirror-dropcursor/-/prosemirror-dropcursor-1.8.2.tgzhttps://registry.npmjs.org/prosemirror-gapcursor/-/prosemirror-gapcursor-1.3.2.tgzhttps://registry.npmjs.org/prosemirror-keymap/-/prosemirror-keymap-1.2.3.tgzw3c-keynamehttps://registry.npmjs.org/w3c-keyname/-/w3c-keyname-2.2.8.tgzhttps://registry.npmjs.org/prosemirror-changeset/-/prosemirror-changeset-2.3.1.tgzhttps://registry.npmjs.org/prosemirror-markdown/-/prosemirror-markdown-1.13.2.tgz@types/markdown-ithttps://registry.npmjs.org/@types/markdown-it/-/markdown-it-14.1.2.tgz@types/mdurl@types/linkify-ithttps://registry.npmjs.org/@types/linkify-it/-/linkify-it-5.0.0.tgzhttps://registry.npmjs.org/@types/mdurl/-/mdurl-2.0.0.tgzhttps://registry.npmjs.org/prosemirror-commands/-/prosemirror-commands-1.7.1.tgzhttps://registry.npmjs.org/prosemirror-history/-/prosemirror-history-1.4.1.tgzrope-sequencehttps://registry.npmjs.org/rope-sequence/-/rope-sequence-1.3.4.tgzhttps://registry.npmjs.org/prosemirror-tables/-/prosemirror-tables-1.7.1.tgzhttps://registry.npmjs.org/prosemirror-collab/-/prosemirror-collab-1.3.1.tgzhttps://registry.npmjs.org/prosemirror-menu/-/prosemirror-menu-1.2.5.tgzhttps://registry.npmjs.org/crelt/-/crelt-1.0.6.tgzhttps://registry.npmjs.org/@tiptap/starter-kit/-/starter-kit-2.22.3.tgz@tiptap/extension-bold@tiptap/extension-code@tiptap/extension-text@tiptap/extension-italic@tiptap/extension-strike@tiptap/extension-history@tiptap/extension-document@tiptap/extension-list-item@tiptap/extension-paragraph@tiptap/extension-blockquote@tiptap/extension-code-block@tiptap/extension-dropcursor@tiptap/extension-hard-break@tiptap/extension-bullet-list@tiptap/extension-ordered-list@tiptap/extension-horizontal-rulehttps://registry.npmjs.org/@tiptap/extension-horizontal-rule/-/extension-horizontal-rule-2.22.3.tgzhttps://registry.npmjs.org/@tiptap/extension-ordered-list/-/extension-ordered-list-2.22.3.tgzhttps://registry.npmjs.org/@tiptap/extension-bullet-list/-/extension-bullet-list-2.22.3.tgzhttps://registry.npmjs.org/@tiptap/extension-text-style/-/extension-text-style-2.22.3.tgzhttps://registry.npmjs.org/@tiptap/extension-hard-break/-/extension-hard-break-2.22.3.tgzhttps://registry.npmjs.org/@tiptap/extension-dropcursor/-/extension-dropcursor-2.22.3.tgzhttps://registry.npmjs.org/@tiptap/extension-code-block/-/extension-code-block-2.22.3.tgzhttps://registry.npmjs.org/@tiptap/extension-blockquote/-/extension-blockquote-2.22.3.tgzhttps://registry.npmjs.org/@tiptap/extension-paragraph/-/extension-paragraph-2.22.3.tgzhttps://registry.npmjs.org/@tiptap/extension-list-item/-/extension-list-item-2.22.3.tgzhttps://registry.npmjs.org/@tiptap/extension-gapcursor/-/extension-gapcursor-2.22.3.tgzhttps://registry.npmjs.org/@tiptap/extension-document/-/extension-document-2.22.3.tgzhttps://registry.npmjs.org/@tiptap/extension-history/-/extension-history-2.22.3.tgzhttps://registry.npmjs.org/@tiptap/extension-heading/-/extension-heading-2.22.3.tgzhttps://registry.npmjs.org/@tiptap/extension-strike/-/extension-strike-2.22.3.tgzhttps://registry.npmjs.org/@tiptap/extension-italic/-/extension-italic-2.22.3.tgzhttps://registry.npmjs.org/@tiptap/extension-text/-/extension-text-2.22.3.tgzhttps://registry.npmjs.org/@tiptap/extension-code/-/extension-code-2.22.3.tgzhttps://registry.npmjs.org/@tiptap/extension-bold/-/extension-bold-2.22.3.tgzhttps://registry.npmjs.org/@tiptap/extension-underline/-/extension-underline-2.22.3.tgzhttps://registry.npmjs.org/@tiptap/extension-text-align/-/extension-text-align-2.22.3.tgzhttps://registry.npmjs.org/@tiptap/extension-task-list/-/extension-task-list-2.22.3.tgzhttps://registry.npmjs.org/@tiptap/extension-task-item/-/extension-task-item-2.22.3.tgzhttps://registry.npmjs.org/@tiptap/extension-table-row/-/extension-table-row-2.22.3.tgzhttps://registry.npmjs.org/@tiptap/extension-table-header/-/extension-table-header-2.22.3.tgzhttps://registry.npmjs.org/@tiptap/extension-table-cell/-/extension-table-cell-2.22.3.tgzhttps://registry.npmjs.org/@tiptap/extension-table/-/extension-table-2.22.3.tgzhttps://registry.npmjs.org/@tiptap/extension-superscript/-/extension-superscript-2.22.3.tgzhttps://registry.npmjs.org/@tiptap/extension-subscript/-/extension-subscript-2.22.3.tgzhttps://registry.npmjs.org/@tiptap/extension-placeholder/-/extension-placeholder-2.22.3.tgzhttps://registry.npmjs.org/@tiptap/extension-mention/-/extension-mention-2.22.3.tgzhttps://registry.npmjs.org/@tiptap/extension-link/-/extension-link-2.22.3.tgzlinkifyjshttps://registry.npmjs.org/linkifyjs/-/linkifyjs-4.3.1.tgzhttps://registry.npmjs.org/@tiptap/extension-image/-/extension-image-2.22.3.tgzhttps://registry.npmjs.org/@tiptap/extension-highlight/-/extension-highlight-2.22.3.tgzhttps://registry.npmjs.org/@tiptap/extension-font-family/-/extension-font-family-2.22.3.tgzhttps://registry.npmjs.org/@tiptap/extension-color/-/extension-color-2.22.3.tgzhttps://registry.npmjs.org/@tiptap/extension-code-block-lowlight/-/extension-code-block-lowlight-2.22.3.tgzhttps://registry.npmjs.org/@tiptap/extension-character-count/-/extension-character-count-2.22.3.tgzhttps://registry.npmjs.org/@tiptap/extension-bubble-menu/-/extension-bubble-menu-2.22.3.tgzhttps://registry.npmjs.org/@vee-validate/rules/-/rules-4.15.1.tgzhttps://registry.npmjs.org/@vee-validate/i18n/-/i18n-4.15.1.tgzhttps://registry.npmjs.org/@unocss/runtime/-/runtime-66.2.3.tgzhttps://registry.npmjs.org/@tanstack/vue-query/-/vue-query-5.81.2.tgz@tanstack/match-sorter-utils@tanstack/query-core^2.6.0 || ^3.3.0https://registry.npmjs.org/@tanstack/query-core/-/query-core-5.81.2.tgzhttps://registry.npmjs.org/vue-demi/-/vue-demi-0.14.10.tgzhttps://registry.npmjs.org/@tanstack/match-sorter-utils/-/match-sorter-utils-8.19.4.tgzremove-accentshttps://registry.npmjs.org/remove-accents/-/remove-accents-0.5.0.tgzhttps://registry.npmjs.org/@overlastic/vue/-/vue-0.8.1.tgzpascal-case@overlastic/corehttps://registry.npmjs.org/@overlastic/core/-/core-0.8.1.tgzhttps://registry.npmjs.org/pascal-case/-/pascal-case-3.1.2.tgzhttps://registry.npmjs.org/no-case/-/no-case-3.0.4.tgzlower-casehttps://registry.npmjs.org/lower-case/-/lower-case-2.0.2.tgzhttps://registry.npmjs.org/@vueuse/core/-/core-10.11.1.tgzhttps://registry.npmjs.org/@types/web-bluetooth/-/web-bluetooth-0.0.20.tgzhttps://registry.npmjs.org/@vueuse/metadata/-/metadata-10.11.1.tgzhttps://registry.npmjs.org/@vueuse/shared/-/shared-10.11.1.tgzhttps://registry.npmjs.org/@iconify-json/tabler/-/tabler-1.2.19.tgzhttps://registry.npmjs.org/@duxweb/dvha-naiveui/-/dvha-naiveui-1.0.15.tgzhttps://registry.npmjs.org/@duxweb/dvha-core/-/dvha-core-1.0.15.tgzjson-2-csvvue3-sfc-loaderhttps://registry.npmjs.org/vue3-sfc-loader/-/vue3-sfc-loader-0.9.5.tgz@babel/code-frame@babel/core@babel/generator@babel/plugin-proposal-dynamic-import@babel/plugin-proposal-nullish-coalescing-operator@babel/plugin-proposal-optional-chaining@babel/plugin-transform-arrow-functions@babel/plugin-transform-modules-commonjs@babel/plugin-transform-typescript@vue/babel-helper-vue-jsx-merge-props@vue/babel-plugin-jsx@vue/babel-preset-jsx@vue/component-compiler-utilsspark-md5vue-template-compilerhttps://registry.npmjs.org/vue-template-compiler/-/vue-template-compiler-2.7.16.tgzde-indenthttps://registry.npmjs.org/he/-/he-1.2.0.tgzhttps://registry.npmjs.org/de-indent/-/de-indent-1.0.2.tgzhttps://registry.npmjs.org/spark-md5/-/spark-md5-3.0.2.tgzhttps://registry.npmjs.org/@vue/component-compiler-utils/-/component-compiler-utils-3.3.0.tgzconsolidatelru-cachemerge-source-mappostcss-selector-parsersource-mapvue-template-es2015-compiler^1.18.2 || ^2.0.0bin-prettier.jshttps://registry.npmjs.org/prettier/-/prettier-2.8.8.tgzhttps://registry.npmjs.org/vue-template-es2015-compiler/-/vue-template-es2015-compiler-1.9.1.tgzhttps://registry.npmjs.org/source-map/-/source-map-0.6.1.tgzhttps://registry.npmjs.org/postcss-selector-parser/-/postcss-selector-parser-6.1.2.tgzutil-deprecatehttps://registry.npmjs.org/util-deprecate/-/util-deprecate-1.0.2.tgzbin/csseschttps://registry.npmjs.org/cssesc/-/cssesc-3.0.0.tgzhttps://registry.npmjs.org/postcss/-/postcss-7.0.39.tgzhttps://registry.npmjs.org/picocolors/-/picocolors-0.2.1.tgzhttps://registry.npmjs.org/merge-source-map/-/merge-source-map-1.1.0.tgzhttps://registry.npmjs.org/lru-cache/-/lru-cache-4.1.5.tgzpseudomaphttps://registry.npmjs.org/pseudomap/-/pseudomap-1.0.2.tgzhttps://registry.npmjs.org/yallist/-/yallist-2.1.2.tgzhttps://registry.npmjs.org/hash-sum/-/hash-sum-1.0.2.tgzhttps://registry.npmjs.org/consolidate/-/consolidate-0.15.1.tgzhttps://registry.npmjs.org/bluebird/-/bluebird-3.7.2.tgzhttps://registry.npmjs.org/@vue/babel-preset-jsx/-/babel-preset-jsx-1.4.0.tgz@vue/babel-plugin-transform-vue-jsx@vue/babel-sugar-composition-api-inject-h@vue/babel-sugar-composition-api-render-instance@vue/babel-sugar-functional-vue@vue/babel-sugar-inject-h@vue/babel-sugar-v-model@vue/babel-sugar-v-onhttps://registry.npmjs.org/@babel/core/-/core-7.27.4.tgz^1.0.0-beta.2@babel/helpers@babel/template@babel/traverseconvert-source-map@babel/helper-module-transforms@babel/helper-compilation-targetshttps://registry.npmjs.org/@babel/helper-compilation-targets/-/helper-compilation-targets-7.27.2.tgzbrowserslist@babel/compat-data@babel/helper-validator-optionhttps://registry.npmjs.org/@babel/helper-validator-option/-/helper-validator-option-7.27.1.tgzhttps://registry.npmjs.org/@babel/compat-data/-/compat-data-7.27.5.tgzhttps://registry.npmjs.org/browserslist/-/browserslist-4.25.0.tgz^1.0.30001718caniuse-liteelectron-to-chromiumnode-releasesupdate-browserslist-dbhttps://registry.npmjs.org/update-browserslist-db/-/update-browserslist-db-1.1.3.tgz>= 4.21.0https://registry.npmjs.org/escalade/-/escalade-3.2.0.tgzhttps://registry.npmjs.org/node-releases/-/node-releases-2.0.19.tgzhttps://registry.npmjs.org/electron-to-chromium/-/electron-to-chromium-1.5.172.tgzhttps://registry.npmjs.org/caniuse-lite/-/caniuse-lite-1.0.30001724.tgzhttps://registry.npmjs.org/lru-cache/-/lru-cache-5.1.1.tgzhttps://registry.npmjs.org/yallist/-/yallist-3.1.1.tgzhttps://registry.npmjs.org/semver/-/semver-6.3.1.tgzhttps://registry.npmjs.org/@babel/helper-module-transforms/-/helper-module-transforms-7.27.3.tgz@babel/helper-module-importshttps://registry.npmjs.org/@babel/helper-module-imports/-/helper-module-imports-7.27.1.tgzhttps://registry.npmjs.org/@babel/traverse/-/traverse-7.27.4.tgzhttps://registry.npmjs.org/@babel/code-frame/-/code-frame-7.27.1.tgzhttps://registry.npmjs.org/js-tokens/-/js-tokens-4.0.0.tgzhttps://registry.npmjs.org/@babel/generator/-/generator-7.27.5.tgzbin/jseschttps://registry.npmjs.org/jsesc/-/jsesc-3.1.0.tgzhttps://registry.npmjs.org/@babel/template/-/template-7.27.2.tgzhttps://registry.npmjs.org/globals/-/globals-11.12.0.tgzhttps://registry.npmjs.org/convert-source-map/-/convert-source-map-2.0.0.tgzhttps://registry.npmjs.org/@babel/helpers/-/helpers-7.27.6.tgzhttps://registry.npmjs.org/gensync/-/gensync-1.0.0-beta.2.tgzlib/cli.jshttps://registry.npmjs.org/json5/-/json5-2.2.3.tgzhttps://registry.npmjs.org/@vue/babel-sugar-v-on/-/babel-sugar-v-on-1.4.0.tgz@babel/plugin-syntax-jsxcamelcasehttps://registry.npmjs.org/camelcase/-/camelcase-5.3.1.tgzhttps://registry.npmjs.org/@vue/babel-plugin-transform-vue-jsx/-/babel-plugin-transform-vue-jsx-1.4.0.tgzhtml-tagslodash.kebabcasehttps://registry.npmjs.org/svg-tags/-/svg-tags-1.0.0.tgzhttps://registry.npmjs.org/lodash.kebabcase/-/lodash.kebabcase-4.1.1.tgzhttps://registry.npmjs.org/html-tags/-/html-tags-2.0.0.tgzhttps://registry.npmjs.org/@vue/babel-helper-vue-jsx-merge-props/-/babel-helper-vue-jsx-merge-props-1.4.0.tgzhttps://registry.npmjs.org/@babel/plugin-syntax-jsx/-/plugin-syntax-jsx-7.27.1.tgz@babel/helper-plugin-utilshttps://registry.npmjs.org/@babel/helper-plugin-utils/-/helper-plugin-utils-7.27.1.tgzhttps://registry.npmjs.org/@vue/babel-sugar-v-model/-/babel-sugar-v-model-1.4.0.tgzhttps://registry.npmjs.org/@vue/babel-sugar-inject-h/-/babel-sugar-inject-h-1.4.0.tgzhttps://registry.npmjs.org/@vue/babel-sugar-functional-vue/-/babel-sugar-functional-vue-1.4.0.tgzhttps://registry.npmjs.org/@vue/babel-sugar-composition-api-render-instance/-/babel-sugar-composition-api-render-instance-1.4.0.tgzhttps://registry.npmjs.org/@vue/babel-sugar-composition-api-inject-h/-/babel-sugar-composition-api-inject-h-1.4.0.tgzhttps://registry.npmjs.org/@vue/babel-plugin-jsx/-/babel-plugin-jsx-1.4.0.tgz@vue/babel-helper-vue-transform-on@vue/babel-plugin-resolve-typehttps://registry.npmjs.org/@vue/babel-plugin-resolve-type/-/babel-plugin-resolve-type-1.4.0.tgzhttps://registry.npmjs.org/@vue/babel-helper-vue-transform-on/-/babel-helper-vue-transform-on-1.4.0.tgzhttps://registry.npmjs.org/@babel/plugin-transform-typescript/-/plugin-transform-typescript-7.27.1.tgz@babel/helper-annotate-as-pure@babel/plugin-syntax-typescript@babel/helper-create-class-features-plugin@babel/helper-skip-transparent-expression-wrappershttps://registry.npmjs.org/@babel/helper-skip-transparent-expression-wrappers/-/helper-skip-transparent-expression-wrappers-7.27.1.tgzhttps://registry.npmjs.org/@babel/helper-create-class-features-plugin/-/helper-create-class-features-plugin-7.27.1.tgz@babel/helper-replace-supers@babel/helper-optimise-call-expression@babel/helper-member-expression-to-functionshttps://registry.npmjs.org/@babel/helper-member-expression-to-functions/-/helper-member-expression-to-functions-7.27.1.tgzhttps://registry.npmjs.org/@babel/helper-optimise-call-expression/-/helper-optimise-call-expression-7.27.1.tgzhttps://registry.npmjs.org/@babel/helper-annotate-as-pure/-/helper-annotate-as-pure-7.27.3.tgzhttps://registry.npmjs.org/@babel/helper-replace-supers/-/helper-replace-supers-7.27.1.tgzhttps://registry.npmjs.org/@babel/plugin-syntax-typescript/-/plugin-syntax-typescript-7.27.1.tgzhttps://registry.npmjs.org/@babel/plugin-transform-modules-commonjs/-/plugin-transform-modules-commonjs-7.27.1.tgzhttps://registry.npmjs.org/@babel/plugin-transform-arrow-functions/-/plugin-transform-arrow-functions-7.27.1.tgzhttps://registry.npmjs.org/@babel/plugin-proposal-optional-chaining/-/plugin-proposal-optional-chaining-7.21.0.tgz@babel/plugin-syntax-optional-chaininghttps://registry.npmjs.org/@babel/plugin-syntax-optional-chaining/-/plugin-syntax-optional-chaining-7.8.3.tgzhttps://registry.npmjs.org/@babel/plugin-proposal-nullish-coalescing-operator/-/plugin-proposal-nullish-coalescing-operator-7.18.6.tgz@babel/plugin-syntax-nullish-coalescing-operatorhttps://registry.npmjs.org/@babel/plugin-syntax-nullish-coalescing-operator/-/plugin-syntax-nullish-coalescing-operator-7.8.3.tgzhttps://registry.npmjs.org/@babel/plugin-proposal-dynamic-import/-/plugin-proposal-dynamic-import-7.18.6.tgz@babel/plugin-syntax-dynamic-importhttps://registry.npmjs.org/@babel/plugin-syntax-dynamic-import/-/plugin-syntax-dynamic-import-7.8.3.tgzhttps://registry.npmjs.org/vue-i18n/-/vue-i18n-11.1.7.tgzhttps://registry.npmjs.org/json-2-csv/-/json-2-csv-5.5.9.tgzhttps://registry.npmjs.org/doc-path/-/doc-path-4.1.1.tgzhttps://registry.npmjs.org/deeks/-/deeks-3.1.0.tgzhttps://registry.npmjs.org/@ant-design/colors/-/colors-7.2.1.tgz@ant-design/fast-colorhttps://registry.npmjs.org/@ant-design/fast-color/-/fast-color-2.0.6.tgzvitest.mjshttps://registry.npmjs.org/vitest/-/vitest-3.2.4.tgz^5.0.0 || ^6.0.0 || ^7.0.0-0tinybenchvite-node@types/chai@vitest/spyexpect-typetinyrainbow@vitest/utils@vitest/expect@vitest/mocker@vitest/runner@vitest/snapshotwhy-is-node-running@vitest/pretty-formathappy-dom@vitest/ui@types/debug@vitest/browser@edge-runtime/vmhttps://registry.npmjs.org/@vitest/pretty-format/-/pretty-format-3.2.4.tgzhttps://registry.npmjs.org/tinyrainbow/-/tinyrainbow-2.0.0.tgzhttps://registry.npmjs.org/why-is-node-running/-/why-is-node-running-2.3.0.tgzstackbackhttps://registry.npmjs.org/stackback/-/stackback-0.0.2.tgzhttps://registry.npmjs.org/siginfo/-/siginfo-2.0.0.tgzhttps://registry.npmjs.org/@vitest/snapshot/-/snapshot-3.2.4.tgzhttps://registry.npmjs.org/@vitest/runner/-/runner-3.2.4.tgzhttps://registry.npmjs.org/@vitest/utils/-/utils-3.2.4.tgzhttps://registry.npmjs.org/loupe/-/loupe-3.1.4.tgzhttps://registry.npmjs.org/@vitest/mocker/-/mocker-3.2.4.tgzhttps://registry.npmjs.org/@vitest/spy/-/spy-3.2.4.tgzhttps://registry.npmjs.org/tinyspy/-/tinyspy-4.0.3.tgzhttps://registry.npmjs.org/@vitest/expect/-/expect-3.2.4.tgzhttps://registry.npmjs.org/chai/-/chai-5.2.0.tgzassertion-errorcheck-errorhttps://registry.npmjs.org/pathval/-/pathval-2.0.0.tgzhttps://registry.npmjs.org/deep-eql/-/deep-eql-5.0.2.tgzhttps://registry.npmjs.org/check-error/-/check-error-2.1.1.tgzhttps://registry.npmjs.org/assertion-error/-/assertion-error-2.0.1.tgzhttps://registry.npmjs.org/@types/chai/-/chai-5.2.2.tgz@types/deep-eqlhttps://registry.npmjs.org/@types/deep-eql/-/deep-eql-4.0.2.tgzhttps://registry.npmjs.org/expect-type/-/expect-type-1.2.1.tgzvite-node.mjshttps://registry.npmjs.org/vite-node/-/vite-node-3.2.4.tgzes-module-lexerhttps://registry.npmjs.org/es-module-lexer/-/es-module-lexer-1.7.0.tgzhttps://registry.npmjs.org/tinybench/-/tinybench-2.9.0.tgzhttps://registry.npmjs.org/tinypool/-/tinypool-1.1.1.tgzbin/tsserverhttps://registry.npmjs.org/typescript/-/typescript-5.8.3.tgzbin/eslint.jshttps://registry.npmjs.org/eslint/-/eslint-9.29.0.tgz@eslint-community/eslint-utils@eslint-community/regexpp@eslint/config-array@eslint/config-helpers@eslint/core@eslint/eslintrc@eslint/js@eslint/plugin-kit@humanfs/node@humanwhocodes/module-importer@humanwhocodes/retry@types/json-schemacross-spawneslint-scopeeslint-visitor-keysfast-deep-equalfile-entry-cacheimurmurhashjson-stable-stringify-without-jsonifylodash.mergeminimatchnatural-compareoptionatorhttps://registry.npmjs.org/optionator/-/optionator-0.9.4.tgzprelude-lsword-wraptype-checkfast-levenshteinhttps://registry.npmjs.org/fast-levenshtein/-/fast-levenshtein-2.0.6.tgzhttps://registry.npmjs.org/levn/-/levn-0.4.1.tgzhttps://registry.npmjs.org/type-check/-/type-check-0.4.0.tgzhttps://registry.npmjs.org/prelude-ls/-/prelude-ls-1.2.1.tgzhttps://registry.npmjs.org/word-wrap/-/word-wrap-1.2.5.tgzhttps://registry.npmjs.org/deep-is/-/deep-is-0.1.4.tgzhttps://registry.npmjs.org/natural-compare/-/natural-compare-1.4.0.tgzhttps://registry.npmjs.org/minimatch/-/minimatch-3.1.2.tgzbrace-expansionhttps://registry.npmjs.org/brace-expansion/-/brace-expansion-1.1.12.tgzbalanced-matchconcat-maphttps://registry.npmjs.org/concat-map/-/concat-map-0.0.1.tgzhttps://registry.npmjs.org/balanced-match/-/balanced-match-1.0.2.tgzhttps://registry.npmjs.org/lodash.merge/-/lodash.merge-4.6.2.tgzhttps://registry.npmjs.org/json-stable-stringify-without-jsonify/-/json-stable-stringify-without-jsonify-1.0.1.tgzhttps://registry.npmjs.org/imurmurhash/-/imurmurhash-0.1.4.tgzhttps://registry.npmjs.org/ignore/-/ignore-5.3.2.tgzhttps://registry.npmjs.org/glob-parent/-/glob-parent-6.0.2.tgzhttps://registry.npmjs.org/find-up/-/find-up-5.0.0.tgzlocate-pathpath-existshttps://registry.npmjs.org/path-exists/-/path-exists-4.0.0.tgzhttps://registry.npmjs.org/locate-path/-/locate-path-6.0.0.tgzhttps://registry.npmjs.org/p-locate/-/p-locate-5.0.0.tgzhttps://registry.npmjs.org/p-limit/-/p-limit-3.1.0.tgzyocto-queuehttps://registry.npmjs.org/yocto-queue/-/yocto-queue-0.1.0.tgzhttps://registry.npmjs.org/file-entry-cache/-/file-entry-cache-8.0.0.tgzflat-cachehttps://registry.npmjs.org/flat-cache/-/flat-cache-4.0.1.tgzhttps://registry.npmjs.org/flatted/-/flatted-3.3.3.tgzhttps://registry.npmjs.org/keyv/-/keyv-4.5.4.tgzjson-bufferhttps://registry.npmjs.org/json-buffer/-/json-buffer-3.0.1.tgzhttps://registry.npmjs.org/fast-deep-equal/-/fast-deep-equal-3.1.3.tgzhttps://registry.npmjs.org/esutils/-/esutils-2.0.3.tgzhttps://registry.npmjs.org/esquery/-/esquery-1.6.0.tgzestraversehttps://registry.npmjs.org/estraverse/-/estraverse-5.3.0.tgzhttps://registry.npmjs.org/espree/-/espree-10.4.0.tgzacorn-jsxhttps://registry.npmjs.org/eslint-visitor-keys/-/eslint-visitor-keys-4.2.1.tgzhttps://registry.npmjs.org/acorn-jsx/-/acorn-jsx-5.3.2.tgz^6.0.0 || ^7.0.0 || ^8.0.0https://registry.npmjs.org/eslint-scope/-/eslint-scope-8.4.0.tgzesrecursehttps://registry.npmjs.org/esrecurse/-/esrecurse-4.3.0.tgzhttps://registry.npmjs.org/cross-spawn/-/cross-spawn-7.0.6.tgzshebang-commandhttps://registry.npmjs.org/shebang-command/-/shebang-command-2.0.0.tgzshebang-regexhttps://registry.npmjs.org/shebang-regex/-/shebang-regex-3.0.0.tgzhttps://registry.npmjs.org/path-key/-/path-key-3.1.1.tgznode-which./bin/node-whichhttps://registry.npmjs.org/which/-/which-2.0.2.tgzhttps://registry.npmjs.org/isexe/-/isexe-2.0.0.tgzhttps://registry.npmjs.org/chalk/-/chalk-4.1.2.tgzansi-styleshttps://registry.npmjs.org/supports-color/-/supports-color-7.2.0.tgzhttps://registry.npmjs.org/ansi-styles/-/ansi-styles-4.3.0.tgzcolor-converthttps://registry.npmjs.org/color-convert/-/color-convert-2.0.1.tgzcolor-namehttps://registry.npmjs.org/color-name/-/color-name-1.1.4.tgzhttps://registry.npmjs.org/ajv/-/ajv-6.12.6.tgzjson-schema-traversefast-json-stable-stringifyhttps://registry.npmjs.org/fast-json-stable-stringify/-/fast-json-stable-stringify-2.1.0.tgzhttps://registry.npmjs.org/json-schema-traverse/-/json-schema-traverse-0.4.1.tgzhttps://registry.npmjs.org/uri-js/-/uri-js-4.4.1.tgzhttps://registry.npmjs.org/punycode/-/punycode-2.3.1.tgzhttps://registry.npmjs.org/@types/json-schema/-/json-schema-7.0.15.tgzhttps://registry.npmjs.org/@humanwhocodes/retry/-/retry-0.4.3.tgzhttps://registry.npmjs.org/@humanwhocodes/module-importer/-/module-importer-1.0.1.tgzhttps://registry.npmjs.org/@humanfs/node/-/node-0.16.6.tgz@humanfs/corehttps://registry.npmjs.org/@humanfs/core/-/core-0.19.1.tgzhttps://registry.npmjs.org/@humanwhocodes/retry/-/retry-0.3.1.tgzhttps://registry.npmjs.org/@eslint/plugin-kit/-/plugin-kit-0.3.2.tgzhttps://registry.npmjs.org/@eslint/core/-/core-0.15.0.tgzhttps://registry.npmjs.org/@eslint/js/-/js-9.29.0.tgzhttps://registry.npmjs.org/@eslint/eslintrc/-/eslintrc-3.3.1.tgzimport-freshstrip-json-commentshttps://registry.npmjs.org/strip-json-comments/-/strip-json-comments-3.1.1.tgzbin/js-yaml.jshttps://registry.npmjs.org/js-yaml/-/js-yaml-4.1.0.tgzhttps://registry.npmjs.org/import-fresh/-/import-fresh-3.3.1.tgzparent-moduleresolve-fromhttps://registry.npmjs.org/resolve-from/-/resolve-from-4.0.0.tgzhttps://registry.npmjs.org/parent-module/-/parent-module-1.0.1.tgzcallsiteshttps://registry.npmjs.org/callsites/-/callsites-3.1.0.tgzhttps://registry.npmjs.org/globals/-/globals-14.0.0.tgzhttps://registry.npmjs.org/@eslint/core/-/core-0.14.0.tgzhttps://registry.npmjs.org/@eslint/config-helpers/-/config-helpers-0.2.3.tgzhttps://registry.npmjs.org/@eslint/config-array/-/config-array-0.20.1.tgz@eslint/object-schemahttps://registry.npmjs.org/@eslint/object-schema/-/object-schema-2.1.6.tgzhttps://registry.npmjs.org/@eslint-community/regexpp/-/regexpp-4.12.1.tgzhttps://registry.npmjs.org/@eslint-community/eslint-utils/-/eslint-utils-4.7.0.tgz^6.0.0 || ^7.0.0 || >=8.0.0https://registry.npmjs.org/eslint-visitor-keys/-/eslint-visitor-keys-3.4.3.tgzhttps://registry.npmjs.org/@vitejs/plugin-vue-jsx/-/plugin-vue-jsx-4.2.0.tgz^1.0.0-beta.9@rolldown/pluginutils^5.0.0 || ^6.0.0beta.9-commit.d91dfb5https://registry.npmjs.org/@rolldown/pluginutils/-/pluginutils-1.0.0-beta.9-commit.d91dfb5.tgzhttps://registry.npmjs.org/@vitejs/plugin-vue/-/plugin-vue-5.2.4.tgzhttps://registry.npmjs.org/@types/node/-/node-22.15.32.tgzundici-typeshttps://registry.npmjs.org/undici-types/-/undici-types-6.21.0.tgzhttps://registry.npmjs.org/@tanstack/eslint-plugin-query/-/eslint-plugin-query-5.81.2.tgz@typescript-eslint/utils^8.57.0 || ^9.0.0https://registry.npmjs.org/@typescript-eslint/utils/-/utils-8.35.0.tgz@typescript-eslint/types@typescript-eslint/scope-manager@typescript-eslint/typescript-estree>=4.8.4 <5.9.0https://registry.npmjs.org/@typescript-eslint/typescript-estree/-/typescript-estree-8.35.0.tgzfast-globts-api-utils@typescript-eslint/visitor-keys@typescript-eslint/tsconfig-utils@typescript-eslint/project-servicehttps://registry.npmjs.org/@typescript-eslint/project-service/-/project-service-8.35.0.tgzhttps://registry.npmjs.org/@typescript-eslint/tsconfig-utils/-/tsconfig-utils-8.35.0.tgzhttps://registry.npmjs.org/@typescript-eslint/types/-/types-8.35.0.tgzhttps://registry.npmjs.org/@typescript-eslint/visitor-keys/-/visitor-keys-8.35.0.tgzhttps://registry.npmjs.org/ts-api-utils/-/ts-api-utils-2.1.0.tgzhttps://registry.npmjs.org/minimatch/-/minimatch-9.0.5.tgzhttps://registry.npmjs.org/brace-expansion/-/brace-expansion-2.0.2.tgzhttps://registry.npmjs.org/fast-glob/-/fast-glob-3.3.3.tgz@nodelib/fs.stat@nodelib/fs.walkmicromatchhttps://registry.npmjs.org/micromatch/-/micromatch-4.0.8.tgzhttps://registry.npmjs.org/merge2/-/merge2-1.4.1.tgzhttps://registry.npmjs.org/@nodelib/fs.walk/-/fs.walk-1.2.8.tgz@nodelib/fs.scandirhttps://registry.npmjs.org/@nodelib/fs.scandir/-/fs.scandir-2.1.5.tgzrun-parallelhttps://registry.npmjs.org/@nodelib/fs.stat/-/fs.stat-2.0.5.tgzhttps://registry.npmjs.org/run-parallel/-/run-parallel-1.2.0.tgzqueue-microtaskhttps://registry.npmjs.org/queue-microtask/-/queue-microtask-1.2.3.tgzhttps://registry.npmjs.org/fastq/-/fastq-1.19.1.tgzhttps://registry.npmjs.org/reusify/-/reusify-1.1.0.tgzhttps://registry.npmjs.org/@typescript-eslint/scope-manager/-/scope-manager-8.35.0.tgzeslint-configbin/index.jshttps://registry.npmjs.org/@antfu/eslint-config/-/eslint-config-4.16.1.tgz@clack/prompts@eslint-community/eslint-plugin-eslint-comments@eslint/markdown@stylistic/eslint-plugin@typescript-eslint/eslint-plugin@typescript-eslint/parser@vitest/eslint-plugineslint-config-flat-gitignoreeslint-flat-config-utilseslint-merge-processorseslint-plugin-antfueslint-plugin-commandeslint-plugin-import-liteeslint-plugin-jsdoceslint-plugin-jsonceslint-plugin-neslint-plugin-no-only-testseslint-plugin-perfectionisteslint-plugin-pnpmeslint-plugin-regexpeslint-plugin-tomleslint-plugin-unicorneslint-plugin-unused-importseslint-plugin-vueeslint-plugin-ymleslint-processor-vue-blocksjsonc-eslint-parserparse-gitignoretoml-eslint-parservue-eslint-parseryaml-eslint-parser@eslint-react/eslint-plugin@prettier/plugin-xml@unocss/eslint-pluginastro-eslint-parsereslint-plugin-astroeslint-plugin-formateslint-plugin-react-hookseslint-plugin-react-refresheslint-plugin-solideslint-plugin-svelteeslint-plugin-vuejs-accessibilityprettier-plugin-astroprettier-plugin-slidevsvelte-eslint-parserhttps://registry.npmjs.org/yaml-eslint-parser/-/yaml-eslint-parser-1.3.0.tgzhttps://registry.npmjs.org/yaml/-/yaml-2.8.0.tgzhttps://registry.npmjs.org/vue-eslint-parser/-/vue-eslint-parser-10.1.4.tgzhttps://registry.npmjs.org/toml-eslint-parser/-/toml-eslint-parser-0.10.0.tgzhttps://registry.npmjs.org/parse-gitignore/-/parse-gitignore-2.0.0.tgzhttps://registry.npmjs.org/jsonc-eslint-parser/-/jsonc-eslint-parser-2.4.0.tgzhttps://registry.npmjs.org/espree/-/espree-9.6.1.tgzhttps://registry.npmjs.org/globals/-/globals-16.2.0.tgzhttps://registry.npmjs.org/eslint-processor-vue-blocks/-/eslint-processor-vue-blocks-2.0.0.tgzhttps://registry.npmjs.org/eslint-plugin-yml/-/eslint-plugin-yml-1.18.0.tgzeslint-compat-utilshttps://registry.npmjs.org/eslint-compat-utils/-/eslint-compat-utils-0.6.5.tgzhttps://registry.npmjs.org/eslint-plugin-vue/-/eslint-plugin-vue-10.2.0.tgznth-checkxml-name-validatorhttps://registry.npmjs.org/xml-name-validator/-/xml-name-validator-4.0.0.tgzhttps://registry.npmjs.org/nth-check/-/nth-check-2.1.1.tgzhttps://registry.npmjs.org/boolbase/-/boolbase-1.0.0.tgzhttps://registry.npmjs.org/eslint-plugin-unused-imports/-/eslint-plugin-unused-imports-4.1.4.tgz^8.0.0-0 || ^7.0.0 || ^6.0.0 || ^5.0.0^9.0.0 || ^8.0.0https://registry.npmjs.org/eslint-plugin-unicorn/-/eslint-plugin-unicorn-59.0.1.tgzclean-regexpcore-js-compatfind-up-simpleindent-stringis-builtin-modulepluralizeregexp-treeregjsparserstrip-indenthttps://registry.npmjs.org/strip-indent/-/strip-indent-4.0.0.tgzmin-indenthttps://registry.npmjs.org/min-indent/-/min-indent-1.0.1.tgzbin/parserhttps://registry.npmjs.org/regjsparser/-/regjsparser-0.12.0.tgzhttps://registry.npmjs.org/jsesc/-/jsesc-3.0.2.tgzbin/regexp-treehttps://registry.npmjs.org/regexp-tree/-/regexp-tree-0.1.27.tgzhttps://registry.npmjs.org/pluralize/-/pluralize-8.0.0.tgzhttps://registry.npmjs.org/is-builtin-module/-/is-builtin-module-5.0.0.tgzbuiltin-moduleshttps://registry.npmjs.org/builtin-modules/-/builtin-modules-5.0.0.tgzhttps://registry.npmjs.org/indent-string/-/indent-string-5.0.0.tgzhttps://registry.npmjs.org/find-up-simple/-/find-up-simple-1.0.1.tgzhttps://registry.npmjs.org/core-js-compat/-/core-js-compat-3.43.0.tgzhttps://registry.npmjs.org/clean-regexp/-/clean-regexp-1.0.0.tgzhttps://registry.npmjs.org/escape-string-regexp/-/escape-string-regexp-1.0.5.tgzhttps://registry.npmjs.org/ci-info/-/ci-info-4.2.0.tgzhttps://registry.npmjs.org/@eslint/plugin-kit/-/plugin-kit-0.2.8.tgzhttps://registry.npmjs.org/@eslint/core/-/core-0.13.0.tgzhttps://registry.npmjs.org/eslint-plugin-toml/-/eslint-plugin-toml-0.12.0.tgzhttps://registry.npmjs.org/eslint-plugin-regexp/-/eslint-plugin-regexp-2.9.0.tgzcomment-parserjsdoc-type-pratt-parserregexp-ast-analysishttps://registry.npmjs.org/scslre/-/scslre-0.3.0.tgzhttps://registry.npmjs.org/regexp-ast-analysis/-/regexp-ast-analysis-0.7.1.tgzhttps://registry.npmjs.org/refa/-/refa-0.12.1.tgzhttps://registry.npmjs.org/jsdoc-type-pratt-parser/-/jsdoc-type-pratt-parser-4.1.0.tgzhttps://registry.npmjs.org/comment-parser/-/comment-parser-1.4.1.tgzhttps://registry.npmjs.org/eslint-plugin-pnpm/-/eslint-plugin-pnpm-0.3.1.tgzpnpm-workspace-yamlhttps://registry.npmjs.org/pnpm-workspace-yaml/-/pnpm-workspace-yaml-0.3.1.tgzhttps://registry.npmjs.org/eslint-plugin-perfectionist/-/eslint-plugin-perfectionist-4.15.0.tgznatural-orderbyhttps://registry.npmjs.org/natural-orderby/-/natural-orderby-5.0.0.tgzhttps://registry.npmjs.org/eslint-plugin-no-only-tests/-/eslint-plugin-no-only-tests-3.3.0.tgzhttps://registry.npmjs.org/eslint-plugin-n/-/eslint-plugin-n-17.20.0.tgzenhanced-resolveeslint-plugin-es-xget-tsconfigts-declaration-locationhttps://registry.npmjs.org/ts-declaration-location/-/ts-declaration-location-1.0.7.tgzhttps://registry.npmjs.org/get-tsconfig/-/get-tsconfig-4.10.1.tgzresolve-pkg-mapshttps://registry.npmjs.org/resolve-pkg-maps/-/resolve-pkg-maps-1.0.0.tgzhttps://registry.npmjs.org/eslint-plugin-es-x/-/eslint-plugin-es-x-7.8.0.tgzhttps://registry.npmjs.org/eslint-compat-utils/-/eslint-compat-utils-0.5.1.tgzhttps://registry.npmjs.org/enhanced-resolve/-/enhanced-resolve-5.18.1.tgzgraceful-fshttps://registry.npmjs.org/tapable/-/tapable-2.2.2.tgzhttps://registry.npmjs.org/graceful-fs/-/graceful-fs-4.2.11.tgzhttps://registry.npmjs.org/eslint-plugin-jsonc/-/eslint-plugin-jsonc-2.20.1.tgzeslint-json-compat-utils^9.6.1 || ^10.3.0graphemer^0.6.2 || ^0.7.3 || ^0.11.5https://registry.npmjs.org/synckit/-/synckit-0.11.8.tgz@pkgr/corehttps://registry.npmjs.org/@pkgr/core/-/core-0.2.7.tgzhttps://registry.npmjs.org/graphemer/-/graphemer-1.4.0.tgzhttps://registry.npmjs.org/eslint-json-compat-utils/-/eslint-json-compat-utils-0.2.1.tgzhttps://registry.npmjs.org/eslint-plugin-jsdoc/-/eslint-plugin-jsdoc-51.2.2.tgz@es-joy/jsdoccommentare-docs-informativeparse-imports-exportsspdx-expression-parse^7.0.0 || ^8.0.0 || ^9.0.0https://registry.npmjs.org/spdx-expression-parse/-/spdx-expression-parse-4.0.0.tgzspdx-exceptionsspdx-license-idshttps://registry.npmjs.org/spdx-license-ids/-/spdx-license-ids-3.0.21.tgzhttps://registry.npmjs.org/spdx-exceptions/-/spdx-exceptions-2.5.0.tgzhttps://registry.npmjs.org/parse-imports-exports/-/parse-imports-exports-0.2.4.tgzparse-statementshttps://registry.npmjs.org/parse-statements/-/parse-statements-1.0.11.tgzhttps://registry.npmjs.org/are-docs-informative/-/are-docs-informative-0.0.2.tgzhttps://registry.npmjs.org/@es-joy/jsdoccomment/-/jsdoccomment-0.52.0.tgzhttps://registry.npmjs.org/eslint-plugin-import-lite/-/eslint-plugin-import-lite-0.3.0.tgzhttps://registry.npmjs.org/eslint-plugin-command/-/eslint-plugin-command-3.3.1.tgzhttps://registry.npmjs.org/@es-joy/jsdoccomment/-/jsdoccomment-0.50.2.tgzhttps://registry.npmjs.org/eslint-plugin-antfu/-/eslint-plugin-antfu-3.1.1.tgzhttps://registry.npmjs.org/eslint-merge-processors/-/eslint-merge-processors-2.0.0.tgzhttps://registry.npmjs.org/eslint-flat-config-utils/-/eslint-flat-config-utils-2.1.0.tgzhttps://registry.npmjs.org/eslint-config-flat-gitignore/-/eslint-config-flat-gitignore-2.1.0.tgz@eslint/compathttps://registry.npmjs.org/@eslint/compat/-/compat-1.3.0.tgzhttps://registry.npmjs.org/ansis/-/ansis-4.1.0.tgzhttps://registry.npmjs.org/@vitest/eslint-plugin/-/eslint-plugin-1.2.7.tgz>= 8.57.0https://registry.npmjs.org/@typescript-eslint/parser/-/parser-8.35.0.tgzhttps://registry.npmjs.org/@typescript-eslint/eslint-plugin/-/eslint-plugin-8.35.0.tgz@typescript-eslint/type-utilshttps://registry.npmjs.org/@typescript-eslint/type-utils/-/type-utils-8.35.0.tgzhttps://registry.npmjs.org/@stylistic/eslint-plugin/-/eslint-plugin-5.0.0.tgzhttps://registry.npmjs.org/@eslint/markdown/-/markdown-6.6.0.tgzgithub-sluggermdast-util-from-markdownmdast-util-frontmattermdast-util-gfmmicromark-extension-frontmattermicromark-extension-gfmhttps://registry.npmjs.org/micromark-extension-gfm/-/micromark-extension-gfm-3.0.0.tgzmicromark-extension-gfm-autolink-literalmicromark-extension-gfm-footnotemicromark-extension-gfm-strikethroughmicromark-extension-gfm-tablemicromark-extension-gfm-tagfiltermicromark-extension-gfm-task-list-itemmicromark-util-combine-extensionsmicromark-util-typeshttps://registry.npmjs.org/micromark-util-types/-/micromark-util-types-2.0.2.tgzhttps://registry.npmjs.org/micromark-util-combine-extensions/-/micromark-util-combine-extensions-2.0.1.tgzmicromark-util-chunkedhttps://registry.npmjs.org/micromark-util-chunked/-/micromark-util-chunked-2.0.1.tgzmicromark-util-symbolhttps://registry.npmjs.org/micromark-util-symbol/-/micromark-util-symbol-2.0.1.tgzhttps://registry.npmjs.org/micromark-extension-gfm-task-list-item/-/micromark-extension-gfm-task-list-item-2.1.0.tgzmicromark-factory-spacemicromark-util-characterhttps://registry.npmjs.org/micromark-util-character/-/micromark-util-character-2.1.1.tgzhttps://registry.npmjs.org/micromark-factory-space/-/micromark-factory-space-2.0.1.tgzhttps://registry.npmjs.org/micromark-extension-gfm-tagfilter/-/micromark-extension-gfm-tagfilter-2.0.0.tgzhttps://registry.npmjs.org/micromark-extension-gfm-table/-/micromark-extension-gfm-table-2.1.1.tgzhttps://registry.npmjs.org/micromark-extension-gfm-strikethrough/-/micromark-extension-gfm-strikethrough-2.1.0.tgzmicromark-util-classify-charactermicromark-util-resolve-allhttps://registry.npmjs.org/micromark-util-resolve-all/-/micromark-util-resolve-all-2.0.1.tgzhttps://registry.npmjs.org/micromark-util-classify-character/-/micromark-util-classify-character-2.0.1.tgzhttps://registry.npmjs.org/micromark-extension-gfm-footnote/-/micromark-extension-gfm-footnote-2.1.0.tgzmicromark-core-commonmarkmicromark-util-sanitize-urimicromark-util-normalize-identifierhttps://registry.npmjs.org/micromark-util-normalize-identifier/-/micromark-util-normalize-identifier-2.0.1.tgzhttps://registry.npmjs.org/micromark-util-sanitize-uri/-/micromark-util-sanitize-uri-2.0.1.tgzmicromark-util-encodehttps://registry.npmjs.org/micromark-util-encode/-/micromark-util-encode-2.0.1.tgzhttps://registry.npmjs.org/micromark-core-commonmark/-/micromark-core-commonmark-2.0.3.tgzdecode-named-character-referencemicromark-factory-destinationmicromark-factory-labelmicromark-factory-titlemicromark-factory-whitespacemicromark-util-html-tag-namemicromark-util-subtokenizehttps://registry.npmjs.org/micromark-util-subtokenize/-/micromark-util-subtokenize-2.1.0.tgzhttps://registry.npmjs.org/micromark-util-html-tag-name/-/micromark-util-html-tag-name-2.0.1.tgzhttps://registry.npmjs.org/micromark-factory-whitespace/-/micromark-factory-whitespace-2.0.1.tgzhttps://registry.npmjs.org/micromark-factory-title/-/micromark-factory-title-2.0.1.tgzhttps://registry.npmjs.org/micromark-factory-label/-/micromark-factory-label-2.0.1.tgzhttps://registry.npmjs.org/micromark-factory-destination/-/micromark-factory-destination-2.0.1.tgzhttps://registry.npmjs.org/decode-named-character-reference/-/decode-named-character-reference-1.2.0.tgzcharacter-entitieshttps://registry.npmjs.org/character-entities/-/character-entities-2.0.2.tgzhttps://registry.npmjs.org/micromark-extension-gfm-autolink-literal/-/micromark-extension-gfm-autolink-literal-2.1.0.tgzhttps://registry.npmjs.org/micromark-extension-frontmatter/-/micromark-extension-frontmatter-2.0.0.tgzhttps://registry.npmjs.org/fault/-/fault-2.0.1.tgzhttps://registry.npmjs.org/format/-/format-0.2.2.tgzhttps://registry.npmjs.org/mdast-util-gfm/-/mdast-util-gfm-3.1.0.tgzmdast-util-gfm-autolink-literalmdast-util-gfm-footnotemdast-util-gfm-strikethroughmdast-util-gfm-tablemdast-util-gfm-task-list-itemmdast-util-to-markdownhttps://registry.npmjs.org/mdast-util-to-markdown/-/mdast-util-to-markdown-2.1.2.tgz@types/mdastlongest-streakmdast-util-phrasingmdast-util-to-stringmicromark-util-decode-stringunist-util-visithttps://registry.npmjs.org/zwitch/-/zwitch-2.0.4.tgzhttps://registry.npmjs.org/unist-util-visit/-/unist-util-visit-5.0.0.tgzunist-util-isunist-util-visit-parentshttps://registry.npmjs.org/unist-util-visit-parents/-/unist-util-visit-parents-6.0.1.tgzhttps://registry.npmjs.org/unist-util-is/-/unist-util-is-6.0.0.tgzhttps://registry.npmjs.org/micromark-util-decode-string/-/micromark-util-decode-string-2.0.1.tgzmicromark-util-decode-numeric-character-referencehttps://registry.npmjs.org/micromark-util-decode-numeric-character-reference/-/micromark-util-decode-numeric-character-reference-2.0.2.tgzhttps://registry.npmjs.org/mdast-util-to-string/-/mdast-util-to-string-4.0.0.tgzhttps://registry.npmjs.org/@types/mdast/-/mdast-4.0.4.tgzhttps://registry.npmjs.org/mdast-util-phrasing/-/mdast-util-phrasing-4.1.0.tgzhttps://registry.npmjs.org/longest-streak/-/longest-streak-3.1.0.tgzhttps://registry.npmjs.org/mdast-util-gfm-task-list-item/-/mdast-util-gfm-task-list-item-2.0.0.tgzhttps://registry.npmjs.org/mdast-util-from-markdown/-/mdast-util-from-markdown-2.0.2.tgzmicromarkunist-util-stringify-positionhttps://registry.npmjs.org/unist-util-stringify-position/-/unist-util-stringify-position-4.0.0.tgzhttps://registry.npmjs.org/micromark/-/micromark-4.0.2.tgzhttps://registry.npmjs.org/@types/debug/-/debug-4.1.12.tgz@types/mshttps://registry.npmjs.org/@types/ms/-/ms-2.1.0.tgzhttps://registry.npmjs.org/mdast-util-gfm-table/-/mdast-util-gfm-table-2.0.0.tgzmarkdown-tablehttps://registry.npmjs.org/markdown-table/-/markdown-table-3.0.4.tgzhttps://registry.npmjs.org/mdast-util-gfm-strikethrough/-/mdast-util-gfm-strikethrough-2.0.0.tgzhttps://registry.npmjs.org/mdast-util-gfm-footnote/-/mdast-util-gfm-footnote-2.1.0.tgzhttps://registry.npmjs.org/mdast-util-gfm-autolink-literal/-/mdast-util-gfm-autolink-literal-2.0.1.tgzmdast-util-find-and-replacehttps://registry.npmjs.org/mdast-util-find-and-replace/-/mdast-util-find-and-replace-3.0.2.tgzhttps://registry.npmjs.org/ccount/-/ccount-2.0.1.tgzhttps://registry.npmjs.org/mdast-util-frontmatter/-/mdast-util-frontmatter-2.0.1.tgzhttps://registry.npmjs.org/github-slugger/-/github-slugger-2.0.0.tgzhttps://registry.npmjs.org/@eslint-community/eslint-plugin-eslint-comments/-/eslint-plugin-eslint-comments-4.5.0.tgz^6.0.0 || ^7.0.0 || ^8.0.0 || ^9.0.0https://registry.npmjs.org/@clack/prompts/-/prompts-0.11.0.tgzsisteransi@clack/corehttps://registry.npmjs.org/@clack/core/-/core-0.5.0.tgzhttps://registry.npmjs.org/sisteransi/-/sisteransi-1.0.5.tgz


---
File: /apps/cdn/config.ts
---

import type { IConfig } from '@duxweb/dvha-core'
import { i18nProvider, simpleAuthProvider, simpleDataProvider } from '@duxweb/dvha-core'
import * as DuxNaiveUI from '@duxweb/dvha-naiveui'
import { enUS, zhCN } from '@duxweb/dvha-pro'
import * as DuxPro from '@duxweb/dvha-pro'
import * as NaiveUI from 'naive-ui'

declare global {
  interface Window {
    duxConfig?: {
      defaultManage?: string
      theme?: {
        logo?: string
        darkLogo?: string
        banner?: string
        darkBanner?: string
      }
      copyright?: string
      manage?: Array<{
        name?: string
        title?: string
        description?: string
        routePrefix?: string
        apiBasePath?: string
        apiRoutePath?: string
        userMenus?: Array<{
          key?: string
          label?: string
          icon?: string
          path?: string
        }>
      }>
    }
  }
}

const config = {
  theme: {},
  manages: [
  ],
  dataProvider: simpleDataProvider({
    apiUrl: '',
  }),
  authProvider: simpleAuthProvider(),
  i18nProvider: i18nProvider({
    locale: 'zh-CN',
    fallbackLocale: 'en-US',
    messages: {
      'zh-CN': zhCN,
      'en-US': enUS,
    },
  }),
  remote: {
    packages: {
      'naive-ui': NaiveUI,
      '@duxweb/dvha-pro': DuxPro,
      '@duxweb/dvha-naiveui': DuxNaiveUI,
    },
  },
  jsonSchema: {
    components: [
      ...Object.values(DuxPro).filter(comp => comp?.name?.startsWith?.('Dux')),
      ...Object.values(DuxNaiveUI).filter(comp => comp?.name?.startsWith?.('Dux')),
      ...Object.entries(NaiveUI)
        .filter(([key, _comp]) => {
          return key.startsWith?.('N')
        })
        .map((comp) => {
          const component = comp[1] as any
          component.name = comp[0]
          return component
        }),
    ],
  },

}

function injectConfig(config: IConfig): IConfig {
  if (typeof window == 'undefined' || !window.duxConfig) {
    throw new Error('config not found')
  }

  const serverConfig = window.duxConfig

  config.defaultManage = serverConfig.defaultManage || config.defaultManage

  if (serverConfig.theme) {
    config.theme = {
      ...config.theme,
      ...serverConfig.theme,
    }
  }

  config.copyright = serverConfig.copyright || config.copyright

  serverConfig?.manage?.forEach((serverManage) => {
    config.manages.push({
      ...serverManage,
      components: {
        authLayout: DuxPro.DuxAuthLayout,
        noAuthLayout: DuxPro.DuxLayout,
        notFound: DuxPro.DuxPage404,
        loading: DuxPro.DuxPageLoading,
        error: DuxPro.DuxPage500,
      },
      routes: [
        {
          name: `${serverManage.name}.login`,
          path: 'login',
          component: DuxPro.DuxLoginPage,
          meta: {
            authorization: false,
          },
        },
      ],
    } as any)
  })

  return config as IConfig
}

export default injectConfig(config)



---
File: /apps/cdn/index.html
---

<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <link rel="icon" type="image/svg+xml" href="/vite.svg" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Dux Vue Example</title>
  </head>
  <body>
    <div id="app" v-cloak un-cloak></div>
    <script type="module" src="/main.ts"></script>
  </body>
</html>



---
File: /apps/cdn/main.ts
---

import { createDux } from '@duxweb/dvha-core'
import * as DuxPro from '@duxweb/dvha-pro'
import * as NaiveUI from 'naive-ui'
import { createApp } from 'vue'
import config from './config'

// import '@duxweb/dvha-pro/style.css'

import '@duxweb/dvha-pro/theme/style.scss'

const { createDuxPro, DuxApp } = DuxPro

const app = createApp(DuxApp)

app.use(createDux(config))
app.use(NaiveUI)
app.use(createDuxPro())

app.mount('#app')



---
File: /apps/cdn/package.json
---

{
  "name": "@duxweb/dvha-cdn",
  "type": "module",
  "version": "0.0.0",
  "author": "DuxWeb",
  "license": "MIT",
  "files": [
    "README.md",
    "dist",
    "package.json"
  ],
  "scripts": {
    "dev": "vite dev",
    "build": "vite build",
    "preview": "vite preview"
  },
  "dependencies": {
    "@duxweb/dvha-core": "workspace:*",
    "@duxweb/dvha-naiveui": "workspace:*",
    "@duxweb/dvha-pro": "workspace:*",
    "@vueuse/core": "^13.3.0",
    "@vueuse/integrations": "^13.3.0",
    "axios": "^1.9.0",
    "clsx": "^2.1.1",
    "lodash-es": "^4.17.21",
    "naive-ui": "^2.42.0",
    "petite-vue-i18n": "^11.1.4",
    "pinia": "^3.0.3",
    "pinia-plugin-persistedstate": "^4.3.0",
    "vue": "^3.5.0",
    "vue-router": "^4.5.1"
  },
  "devDependencies": {
    "@antfu/eslint-config": "^4.16.1",
    "@tanstack/eslint-plugin-query": "^5.81.2",
    "@types/node": "^22.15.33",
    "@vitejs/plugin-vue": "^6.0.0",
    "@vitejs/plugin-vue-jsx": "^5.0.0",
    "eslint": "^9.29.0",
    "typescript": "^5.8.3",
    "vite": "^7.0.0",
    "vitest": "^3.1.4"
  }
}



---
File: /apps/cdn/README.md
---

# Dux Template - 基础管理系统模板

这是一个基于 `@duxweb/dvha-core` 框架构建的基础管理系统模板，使用 Vue 3 + UnoCSS 提供简洁现代的界面设计。

## ✨ 特性

- 🎨 **纯 UnoCSS** - 原子化 CSS 框架，无额外 UI 库依赖
- 🚀 **Vue 3** - 基于最新的 Vue 3 Composition API
- 📱 **响应式设计** - 完美适配桌面端和移动端
- 🔧 **@duxweb/dvha-core** - 集成 Dux 框架的完整功能
- 🎯 **开箱即用** - 包含常用页面和组件
- 🔒 **权限管理** - 内置登录和权限控制
- 📦 **模块化** - 易于扩展和定制

## 📁 项目结构

```
packages/template/
├── pages/           # 页面组件
│   ├── layout.vue   # 主布局（侧边栏+头部）
│   ├── home.vue     # 首页
│   ├── login.vue    # 登录页
│   └── 404.vue      # 404错误页
├── main.ts          # 应用入口
├── App.vue          # 根组件
├── uno.config.ts    # UnoCSS 配置
└── package.json     # 依赖配置
```

## 🚀 快速开始

### 1. 安装依赖

```bash
npm install
```

### 2. 启动开发服务器

```bash
npm run dev
```

### 3. 构建生产版本

```bash
npm run build
```

## 📄 页面说明

### 🏠 首页 (home.vue)
- 系统概览和统计数据
- 快速操作入口
- 最近活动记录
- 系统状态监控

### 🔐 登录页 (login.vue)
- 用户身份验证
- 表单验证和错误提示
- 记住登录状态
- 第三方登录支持

### 🎯 布局 (layout.vue)
- 固定头部导航
- 可折叠侧边栏
- 移动端适配
- 用户菜单和通知

### ❌ 404页面 (404.vue)
- 友好的错误提示
- 搜索功能
- 快速导航链接

## 🎨 样式系统

本模板使用 UnoCSS 原子化 CSS 框架，主要包含：

- **颜色系统**: 基于 Tailwind 的颜色调色板
- **图标库**: Tabler Icons (@iconify-json/tabler)
- **响应式**: 移动优先的响应式设计
- **动画**: 平滑的过渡和交互效果


## 🔧 配置说明

### Dux 配置 (main.ts)

```typescript
const config: IConfig = {
  apiUrl: 'your-api-url',
  defaultManage: 'admin',
  manages: [
    {
      name: 'admin',
      title: '管理系统标题',
      routePrefix: '/admin',
      components: {
        authLayout: () => import('./pages/layout.vue'),
        notFound: () => import('./pages/404.vue'),
      },
      menus: [
        // 菜单配置
      ]
    }
  ],
  simpleDataProvider,
  simpleAuthProvider,
}
```

### UnoCSS 配置 (uno.config.ts)

```typescript
export default defineConfig({
  presets: [
    presetWind3(),        // Tailwind CSS 兼容
    presetIcons({         // 图标支持
      collections: {
        tabler: () => import('@iconify-json/tabler/icons.json')
      }
    })
  ]
})
```

## 🛠 自定义和扩展

### 添加新页面

1. 在 `pages/` 目录创建新的 Vue 组件
2. 在 `main.ts` 中添加路由配置
3. 在菜单配置中添加导航项

```typescript
// 添加新菜单项
menus: [
  {
    name: 'new-page',
    path: 'new-page',
    icon: 'i-tabler:page',
    label: '新页面',
    component: () => import('./pages/new-page.vue'),
  }
]
```

## 📄 许可证

MIT License

---

**提示**: 这是一个基础模板，你可以根据实际需求进行定制和扩展。如果需要更多功能，请参考 @duxweb/dvha-core 的官方文档。


---
File: /apps/cdn/tsconfig.json
---

{
  "compilerOptions": {
    "target": "ESNext",
    "jsx": "preserve",
    "jsxImportSource": "vue",
    "lib": ["ESNext", "DOM"],
    "moduleDetection": "force",
    "useDefineForClassFields": true,

    "baseUrl": ".",
    "module": "ESNext",

    "moduleResolution": "bundler",
    "resolveJsonModule": true,
    "allowJs": true,
    "strict": true,
    "noFallthroughCasesInSwitch": true,

    "noImplicitAny": false,
    "noUnusedLocals": true,
    "noUnusedParameters": true,
    "declaration": true,
    "noEmit": false,
    "outDir": "./dist",
    "allowSyntheticDefaultImports": true,
    "esModuleInterop": true,
    "isolatedModules": true,
    "skipLibCheck": true
  },
  "include": [
    "**/*.ts",
    "**/*.d.ts"
  ],
  "exclude": ["node_modules", "dist"]
}



---
File: /apps/cdn/typings.d.ts
---

// typings.d.ts
declare module '*.css' {
  const content: string
  export default content
}

declare module '*?raw' {
  const content: string
  export default content
}



---
File: /apps/cdn/vite-env.d.ts
---

/// <reference types="vite/client" />



---
File: /apps/cdn/vite.config.ts
---

import { resolve } from 'node:path'
import vue from '@vitejs/plugin-vue'
import VueJsx from '@vitejs/plugin-vue-jsx'
import { defineConfig } from 'vite'

export default defineConfig({
  plugins: [
    vue(),
    VueJsx(),
  ],
  base: '/static/web/',
  resolve: {
    alias: {
      '@duxweb/dvha-core': resolve(__dirname, '../../packages/core/src'),
      '@duxweb/dvha-naiveui': resolve(__dirname, '../../packages/naiveui/src'),
      '@duxweb/dvha-elementui': resolve(__dirname, '../../packages/elementui/src'),
      '@duxweb/dvha-pro': resolve(__dirname, '../../packages/pro/src'),
    },
  },
  server: {
    cors: {
      origin: '*',
    },
  },
  build: {
    emptyOutDir: true,
    outDir: 'dist',
    manifest: true,
    cssCodeSplit: false,
    chunkSizeWarningLimit: 500,
    rollupOptions: {
      input: {
        index: 'main.ts',
      },
      output: {
        manualChunks: {
          'vendor-vue': ['vue', 'vue-router'],
          'vendor-naive': ['naive-ui'],
          'vendor-echarts': ['echarts', 'vue-echarts'],
          'vendor-vueuse': ['@vueuse/core'],
          'vendor-pinia': ['pinia', 'pinia-plugin-persistedstate'],
          'vendor-loader': ['vue3-sfc-loader'],
          'vendor-lodash': ['lodash-es', 'lodash'],
          'vendor-icon': ['@iconify-json/tabler'],
          'vendor-dux': ['@duxweb/dvha-core', '@duxweb/dvha-pro'],
        },
      },
    },
  },
})



---
File: /apps/start/dvha/authLayout.vue
---

<script setup lang="ts">
import { DuxAuthLayout } from '@duxweb/dvha-pro'
</script>

<template>
  <DuxAuthLayout />
</template>



---
File: /apps/start/dvha/layout.vue
---

<script setup lang="ts">
import { DuxLayout } from '@duxweb/dvha-pro'
</script>

<template>
  <DuxLayout />
</template>



---
File: /apps/start/dvha/page404.vue
---

<script setup lang="ts">
import { DuxPage404 } from '@duxweb/dvha-pro'
</script>

<template>
  <DuxPage404 />
</template>



---
File: /apps/start/dvha/page500.vue
---

<script setup lang="ts">
import { DuxPage500 } from '@duxweb/dvha-pro'
</script>

<template>
  <DuxPage500 />
</template>



---
File: /apps/start/dvha/pageLoading.vue
---

<script setup lang="ts">
import { DuxPageLoading } from '@duxweb/dvha-pro'
</script>

<template>
  <DuxPageLoading />
</template>



---
File: /apps/start/langs/en-US.json
---

{}



---
File: /apps/start/langs/zh-CN.json
---

{}



---
File: /apps/start/pages/form/modal.vue
---

<script setup lang="ts">
import { DuxFormItem, DuxModalForm } from '@duxweb/dvha-pro'
import { NInput } from 'naive-ui'
import { ref } from 'vue'

const props = defineProps<{
  id?: string | number
}>()

const model = ref({
  nickname: 'test123',
  email: '',
  phone: '',
})
</script>

<template>
  <DuxModalForm :id="props.id" title="用户" :data="model" path="user">
    <DuxFormItem label="昵称" path="nickname" rule="required">
      <NInput v-model:value="model.nickname" />
    </DuxFormItem>
    <DuxFormItem label="邮箱" path="email" rule="required|email">
      <NInput v-model:value="model.email" />
    </DuxFormItem>
    <DuxFormItem label="手机号" path="phone">
      <NInput v-model:value="model.phone" />
    </DuxFormItem>
  </DuxModalForm>
</template>

<style scoped>
</style>



---
File: /apps/start/pages/form/page.vue
---

<script setup lang="ts">
import { DuxSelect, DuxTreeSelect } from '@duxweb/dvha-naiveui'
// @ts-expect-error - DuxFileManage 组件导入
import { DuxAiEditor, DuxCard, DuxDynamicData, DuxDynamicSelect, DuxFileManage, DuxFileUpload, DuxFormItem, DuxFormLayout, DuxImageCrop, DuxImageUpload, DuxLevel, DuxPageForm, DuxSelectCard, useDownload } from '@duxweb/dvha-pro'
import { NButton, NInput, NInputNumber, NProgress, NSelect } from 'naive-ui'
import { ref } from 'vue'

// Props 定义
const props = defineProps<{
  id?: string | number
}>()

// 下载功能
const { file: downloadFile, loading: downloadLoading, progress: downloadProgress } = useDownload()

// 下载示例函数
function handleDownload() {
  // 这里使用一个示例下载地址，实际使用时替换为真实的API路径
  downloadFile(
    'files/sample.pdf', // API路径
    { version: '1.0' }, // 查询参数
    undefined, // 内容类型（自动检测）
    'sample-document.pdf', // 自定义文件名
    (progress) => {
      downloadProgress.value = progress
    },
  )
}

// 表单数据模型
const model = ref({
  // 数据选择组件
  user: null,
  category: null,
  region: ['四川省', '成都市', '青羊区'],

  // 上传组件
  avatar: '',
  images: [],
  files: [] as any[],

  // 编辑器
  description: '<p>这是富文本编辑器的示例内容，支持 AI 辅助编辑功能。</p><p>你可以尝试各种富文本格式。</p>',

  // 卡片选择
  cardSelect: null as string | null,

  // 动态数据
  tableData: [
    { name: '商品A', price: 299.99, category: '电子产品', desc: '高质量的电子产品' },
    { name: '商品B', price: 159.50, category: '生活用品', desc: '实用的生活必需品' },
    { name: '商品C', price: 89.90, category: '办公用品', desc: '提高工作效率的好帮手' },
  ],

  // 动态选择
  selectedUsers: [],
})

// 卡片选择配置
const cardSelectOptions = [
  {
    value: 'basic',
    label: '基础版',
    description: '适合个人用户使用，包含基础功能',
    icon: 'i-tabler:user',
    iconColor: 'primary',
  },
  {
    value: 'pro',
    label: '专业版',
    description: '适合企业用户，功能更加丰富',
    icon: 'i-tabler:briefcase',
    iconColor: 'success',
  },
  {
    value: 'enterprise',
    label: '企业版',
    description: '大型企业定制解决方案',
    icon: 'i-tabler:building',
    iconColor: 'warning',
  },
  {
    value: 'ultimate',
    label: '旗舰版',
    description: '最全面的功能集合，无限制使用',
    icon: 'i-tabler:crown',
    iconColor: 'error',
  },
]

// DuxDynamicData 列配置
const dynamicDataColumns = [
  {
    key: 'name',
    title: '商品名称',
    width: 200,
    schema: {
      tag: NInput,
      attrs: {
        'v-model:value': 'row.name',
        'placeholder': '请输入商品名称',
      },
    },
  },
  {
    key: 'price',
    title: '价格',
    width: 150,
    copy: true,
    schema: {
      tag: NInputNumber,
      attrs: {
        'v-model:value': 'row.price',
        'min': 0,
        'precision': 2,
        'style': { width: '100%' },
        'placeholder': '请输入价格',
      },
    },
  },
  {
    key: 'category',
    title: '分类',
    width: 150,
    schema: {
      tag: NSelect,
      attrs: {
        'v-model:value': 'row.category',
        'options': [
          { label: '电子产品', value: '电子产品' },
          { label: '生活用品', value: '生活用品' },
          { label: '办公用品', value: '办公用品' },
          { label: '运动户外', value: '运动户外' },
        ],
        'placeholder': '请选择分类',
      },
    },
  },
  {
    key: 'desc',
    title: '描述',
    width: 300,
    schema: {
      tag: NInput,
      attrs: {
        'v-model:value': 'row.desc',
        'type': 'textarea',
        'rows': 2,
        'placeholder': '请输入商品描述',
      },
    },
  },
]

// DuxDynamicSelect 显示列配置
const dynamicSelectColumns = [
  {
    key: 'nickname',
    title: '用户名',
    width: 150,
  },
  {
    key: 'email',
    title: '邮箱',
    width: 200,
  },
  {
    key: 'role',
    title: '角色',
    width: 100,
  },
]

// DuxDynamicSelect 表格列配置
const userTableColumns = [
  {
    key: 'id',
    title: 'ID',
    width: 80,
  },
  {
    key: 'nickname',
    title: '用户名',
    width: 150,
  },
  {
    key: 'email',
    title: '邮箱',
    width: 200,
  },
  {
    key: 'role',
    title: '角色',
    width: 100,
  },
  {
    key: 'created_at',
    title: '创建时间',
    width: 180,
  },
]
</script>

<template>
  <DuxPageForm
    :id="props.id"
    title="Dux 高阶组件展示"
    :data="model"
    path="dux-components-demo"
  >
    <div class="flex flex-col gap-4">
      <!-- 数据选择组件 -->
      <DuxCard
        title="数据选择组件"
        description="从后端数据源选择数据的高级组件"
        header-bordered
      >
        <div class="container mx-auto max-w-2xl">
          <DuxFormLayout label-placement="left">
            <DuxFormItem label="用户选择" path="user">
              <DuxSelect
                v-model:value="model.user"
                path="user"
                label-field="nickname"
                value-field="id"
                avatar-field="avatar"
                desc-field="email"
                placeholder="请选择用户"
                clearable
              />
            </DuxFormItem>

            <DuxFormItem label="分类选择" path="category">
              <DuxTreeSelect
                v-model:value="model.category"
                path="classify"
                label-field="name"
                key-field="id"
                placeholder="请选择分类"
                clearable
              />
            </DuxFormItem>

            <DuxFormItem label="地区选择" path="region">
              <DuxLevel
                v-model:value="model.region"
                path="area"
                :max-level="3"
                placeholder="请选择地区"
              />
            </DuxFormItem>
          </DuxFormLayout>
        </div>
      </DuxCard>

      <!-- 文件上传组件 -->
      <DuxCard
        title="文件上传组件"
        description="支持图片裁剪、多文件上传的高级上传组件"
        header-bordered
      >
        <div class="container mx-auto max-w-2xl">
          <DuxFormLayout label-placement="left">
            <DuxFormItem label="头像裁剪" path="avatar">
              <DuxImageCrop
                v-model:value="model.avatar"
                :aspect-ratio="1"
                upload-path="upload"
              />
            </DuxFormItem>

            <DuxFormItem label="图片上传" path="images">
              <DuxImageUpload
                v-model:value="model.images"
                multiple
                :max="5"
                path="upload"
                manager
              />
            </DuxFormItem>

            <DuxFormItem label="文件上传" path="files">
              <DuxFileUpload
                v-model:value="model.files"
                manager
                multiple
                :max="3"
                accept="*"
                path="upload"
              />
            </DuxFormItem>
          </DuxFormLayout>
        </div>
      </DuxCard>

      <!-- 富文本编辑器 -->
      <DuxCard
        title="AI 富文本编辑器"
        description="支持 AI 辅助编辑的富文本编辑器"
        header-bordered
      >
        <div class="container mx-auto max-w-4xl">
          <DuxFormLayout label-placement="top">
            <DuxFormItem label="内容编辑" path="description">
              <DuxAiEditor
                v-model:value="model.description"
                :min-height="300"
                placeholder="请输入内容，支持 AI 辅助编辑..."
              />
            </DuxFormItem>
          </DuxFormLayout>
        </div>
      </DuxCard>

      <!-- 卡片选择组件 -->
      <DuxCard
        title="卡片选择组件"
        description="美观的卡片式选择组件，支持图标和描述"
        header-bordered
      >
        <div class="container mx-auto max-w-4xl">
          <DuxFormLayout label-placement="top">
            <DuxFormItem label="选择套餐" path="cardSelect">
              <DuxSelectCard
                v-model="model.cardSelect"
                max-width="220px"
                :options="cardSelectOptions"
                :columns="2"
              />
            </DuxFormItem>
          </DuxFormLayout>
        </div>
      </DuxCard>

      <!-- 动态数据组件 -->
      <DuxCard
        title="动态数据组件"
        description="可编辑的动态表格，支持增删改查和拖拽排序"
        header-bordered
      >
        <div class="container mx-auto max-w-6xl">
          <DuxFormLayout label-placement="top" class="space-y-6">
            <DuxFormItem label="商品管理" path="tableData">
              <DuxDynamicData
                v-model:value="model.tableData"
                :columns="dynamicDataColumns"
                :create-action="true"
                :delete-action="true"
                :sort-action="true"
                :create-callback="() => ({ name: '', price: 0, category: '', desc: '' })"
              />
            </DuxFormItem>
          </DuxFormLayout>
        </div>
      </DuxCard>

      <!-- 动态选择组件 -->
      <DuxCard
        title="动态选择组件"
        description="从数据源动态选择多个项目，支持搜索和筛选"
        header-bordered
      >
        <div class="container mx-auto max-w-4xl">
          <DuxFormLayout label-placement="top">
            <DuxFormItem label="选择用户" path="selectedUsers">
              <DuxDynamicSelect
                v-model:value="model.selectedUsers"
                path="user"
                row-key="id"
                :columns="dynamicSelectColumns"
                :filter-columns="userTableColumns"
                placeholder="点击选择用户"
              />
            </DuxFormItem>
          </DuxFormLayout>
        </div>
      </DuxCard>

      <!-- 下载进度演示 -->
      <DuxCard
        title="下载进度演示"
        description="展示带进度条的文件下载功能"
        header-bordered
      >
        <div class="container mx-auto max-w-2xl">
          <DuxFormLayout label-placement="top" class="space-y-4">
            <DuxFormItem label="文件下载">
              <div class="space-y-4">
                <div class="flex items-center gap-4">
                  <NButton
                    type="primary"
                    :loading="downloadLoading"
                    @click="handleDownload"
                  >
                    {{ downloadLoading ? '下载中...' : '下载示例文件' }}
                  </NButton>

                  <div v-if="downloadLoading" class="text-sm text-muted">
                    {{ downloadProgress.speedText }} | 剩余 {{ Math.round(downloadProgress.remainingTime || 0) }}s
                  </div>
                </div>

                <div v-if="downloadLoading || downloadProgress.percent > 0" class="space-y-2">
                  <div class="flex justify-between text-sm">
                    <span>下载进度</span>
                    <span>{{ downloadProgress.percent?.toFixed(1) }}%</span>
                  </div>
                  <NProgress
                    :percentage="downloadProgress.percent || 0"
                    :show-indicator="false"
                    status="success"
                  />
                  <div class="flex justify-between text-xs text-muted">
                    <span>{{ downloadProgress.speedText }}</span>
                  </div>
                </div>
              </div>
            </DuxFormItem>
          </DuxFormLayout>
        </div>
      </DuxCard>

      <!-- 文件管理器组件 -->
      <DuxCard
        title="文件管理器组件"
        description="展示文件管理功能"
        header-bordered
      >
        <div class="container mx-auto max-w-4xl">
          <DuxFileManage
            v-model:value="model.files"
            :page="false"
            :max="3"
            accept="*"
            path="uploadManage"
          />
        </div>
      </DuxCard>

      <!-- 表单数据预览 -->
      <DuxCard
        title="表单数据预览"
        description="实时显示当前表单数据"
        header-bordered
      >
        <pre class="bg-gray-50 dark:bg-gray-800 p-4 rounded text-sm overflow-auto max-h-96">{{ JSON.stringify(model, null, 2) }}</pre>
      </DuxCard>
    </div>
  </DuxPageForm>
</template>

<style scoped>
/* 自定义样式 */
</style>



---
File: /apps/start/pages/form/ui.vue
---

<script setup lang="ts">
import { DuxCard, DuxFormItem, DuxFormLayout, DuxPageForm } from '@duxweb/dvha-pro'
import {
  NAutoComplete,
  NButton,
  NCascader,
  NCheckbox,
  NCheckboxGroup,
  NColorPicker,
  NDatePicker,
  NDynamicInput,
  NDynamicTags,
  NInput,
  NInputNumber,
  NMention,
  NRadio,
  NRadioGroup,
  NRate,
  NSelect,
  NSlider,
  NSwitch,
  NTimePicker,
  NTransfer,
  NTreeSelect,
  NUpload,
  NUploadDragger,
} from 'naive-ui'
import { ref } from 'vue'

// Props 定义
const props = defineProps<{
  id?: string | number
}>()

// 表单数据模型
const model = ref({
  // 基础输入
  input: '示例文本',
  inputPassword: '',
  inputNumber: 100,
  textarea: '这是多行文本输入框的示例内容\n支持换行显示',

  // 选择器
  select: 'option1',
  multiSelect: ['option1', 'option2'],
  autoComplete: '',
  cascader: null,
  treeSelect: null,

  // 选择控件
  radio: 'option1',
  checkbox: true,
  checkboxGroup: ['option1', 'option3'],
  switch: true,

  // 日期时间
  date: null,
  dateRange: null,
  datetime: null,
  time: null,
  timeRange: null,

  // 数值控件
  slider: 50,
  sliderRange: [20, 80],
  rate: 4,
  color: '#18a058',

  // 文件上传
  fileList: [],

  // 穿梭框
  transfer: ['option1'],

  // 动态控件
  dynamicInput: ['项目一', '项目二'],
  dynamicTags: ['标签一', '标签二', '标签三'],

  // 提及
  mention: '@张三 你好',
})

const selectOptions = [
  { label: '选项一', value: 'option1' },
  { label: '选项二', value: 'option2' },
  { label: '选项三', value: 'option3' },
  { label: '选项四', value: 'option4' },
]

const radioOptions = [
  { label: '单选一', value: 'option1' },
  { label: '单选二', value: 'option2' },
  { label: '单选三', value: 'option3' },
]

const checkboxOptions = [
  { label: '复选一', value: 'option1' },
  { label: '复选二', value: 'option2' },
]

const cascaderOptions = [
  {
    label: '四川省',
    value: 'sichuan',
    children: [
      {
        label: '成都市',
        value: 'chengdu',
        children: [
          { label: '青羊区', value: 'qingyang' },
          { label: '锦江区', value: 'jinjiang' },
        ],
      },
    ],
  },
]

const treeSelectOptions = [
  {
    label: '技术部门',
    key: 'tech',
    children: [
      { label: '前端组', key: 'frontend' },
      { label: '后端组', key: 'backend' },
    ],
  },
]

const transferOptions = [
  { label: '选项一', value: 'option1' },
  { label: '选项二', value: 'option2' },
  { label: '选项三', value: 'option3' },
]

const autoCompleteOptions = [
  '张三',
  '李四',
  '王五',
]

const mentionOptions = [
  { label: '张三', value: '张三' },
  { label: '李四', value: '李四' },
]

function handleUpload({ fileList }) {
  model.value.fileList = fileList
  return false
}
</script>

<template>
  <DuxPageForm
    :id="props.id"
    title="Naive UI 表单组件展示"
    :data="model"
    path="naive-ui-demo"
  >
    <div class="flex flex-col gap-4">
      <!-- 基础输入组件 -->
      <DuxCard
        title="基础输入组件"
        description="文本输入、数字输入等基础输入控件"
        header-bordered
      >
        <div class="container mx-auto max-w-2xl">
          <DuxFormLayout label-placement="left">
            <DuxFormItem label="文本输入" path="input">
              <NInput
                v-model:value="model.input"
                placeholder="请输入文本"
                clearable
              />
            </DuxFormItem>

            <DuxFormItem label="密码输入" path="inputPassword">
              <NInput
                v-model:value="model.inputPassword"
                type="password"
                placeholder="请输入密码"
                show-password-on="mousedown"
                clearable
              />
            </DuxFormItem>

            <DuxFormItem label="数字输入" path="inputNumber">
              <NInputNumber
                v-model:value="model.inputNumber"
                :min="0"
                :max="1000"
                :precision="0"
                style="width: 100%"
                placeholder="请输入数字"
              />
            </DuxFormItem>

            <DuxFormItem label="多行文本" path="textarea">
              <NInput
                v-model:value="model.textarea"
                type="textarea"
                :rows="4"
                placeholder="请输入多行文本"
                show-count
                :maxlength="200"
              />
            </DuxFormItem>
          </DuxFormLayout>
        </div>
      </DuxCard>

      <!-- 选择器组件 -->
      <DuxCard
        title="选择器组件"
        description="下拉选择、级联选择、自动完成等选择控件"
        header-bordered
      >
        <div class="container mx-auto max-w-2xl">
          <DuxFormLayout label-placement="left">
            <DuxFormItem label="单选下拉" path="select">
              <NSelect
                v-model:value="model.select"
                :options="selectOptions"
                placeholder="请选择单个选项"
                clearable
              />
            </DuxFormItem>

            <DuxFormItem label="多选下拉" path="multiSelect">
              <NSelect
                v-model:value="model.multiSelect"
                :options="selectOptions"
                multiple
                placeholder="请选择多个选项"
                clearable
              />
            </DuxFormItem>

            <DuxFormItem label="自动完成" path="autoComplete">
              <NAutoComplete
                v-model:value="model.autoComplete"
                :options="autoCompleteOptions"
                placeholder="输入姓名搜索"
                clearable
              />
            </DuxFormItem>

            <DuxFormItem label="级联选择" path="cascader">
              <NCascader
                v-model:value="model.cascader"
                :options="cascaderOptions"
                placeholder="请选择地区"
                clearable
                expand-trigger="hover"
              />
            </DuxFormItem>

            <DuxFormItem label="树选择" path="treeSelect">
              <NTreeSelect
                v-model:value="model.treeSelect"
                :options="treeSelectOptions"
                placeholder="请选择部门"
                clearable
              />
            </DuxFormItem>

            <DuxFormItem label="穿梭框" path="transfer">
              <NTransfer
                v-model:value="model.transfer"
                :options="transferOptions"
                style="width: 100%"
              />
            </DuxFormItem>
          </DuxFormLayout>
        </div>
      </DuxCard>

      <!-- 选择控件 -->
      <DuxCard
        title="选择控件"
        description="单选、复选、开关等选择控件"
        header-bordered
      >
        <div class="container mx-auto max-w-2xl">
          <DuxFormLayout label-placement="left">
            <DuxFormItem label="单选按钮" path="radio">
              <NRadioGroup v-model:value="model.radio">
                <div class="flex flex-col gap-2">
                  <NRadio
                    v-for="option in radioOptions"
                    :key="option.value"
                    :value="option.value"
                  >
                    {{ option.label }}
                  </NRadio>
                </div>
              </NRadioGroup>
            </DuxFormItem>

            <DuxFormItem label="复选框组" path="checkboxGroup">
              <NCheckboxGroup v-model:value="model.checkboxGroup">
                <div class="flex flex-col gap-2">
                  <NCheckbox
                    v-for="option in checkboxOptions"
                    :key="option.value"
                    :value="option.value"
                  >
                    {{ option.label }}
                  </NCheckbox>
                </div>
              </NCheckboxGroup>
            </DuxFormItem>

            <DuxFormItem label="单个复选框" path="checkbox">
              <NCheckbox v-model:checked="model.checkbox">
                我同意用户协议和隐私政策
              </NCheckbox>
            </DuxFormItem>

            <DuxFormItem label="开关" path="switch">
              <NSwitch v-model:value="model.switch">
                <template #checked>
                  开启
                </template>
                <template #unchecked>
                  关闭
                </template>
              </NSwitch>
            </DuxFormItem>
          </DuxFormLayout>
        </div>
      </DuxCard>

      <!-- 日期时间组件 -->
      <DuxCard
        title="日期时间组件"
        description="日期选择、时间选择等时间相关控件"
        header-bordered
      >
        <div class="container mx-auto max-w-2xl">
          <DuxFormLayout label-placement="left">
            <DuxFormItem label="日期选择" path="date">
              <NDatePicker
                v-model:value="model.date"
                type="date"
                placeholder="请选择日期"
                style="width: 100%"
                clearable
              />
            </DuxFormItem>

            <DuxFormItem label="时间选择" path="time">
              <NTimePicker
                v-model:value="model.time"
                placeholder="请选择时间"
                style="width: 100%"
                clearable
              />
            </DuxFormItem>
          </DuxFormLayout>
        </div>
      </DuxCard>

      <!-- 数值控件 -->
      <DuxCard
        title="数值控件"
        description="滑块、评分、颜色选择等数值控件"
        header-bordered
      >
        <div class="container mx-auto max-w-2xl">
          <DuxFormLayout label-placement="left">
            <DuxFormItem label="滑块" path="slider">
              <div class="flex items-center gap-4">
                <NSlider v-model:value="model.slider" :min="0" :max="100" style="flex: 1" />
                <span class="text-sm text-gray-500 w-12">{{ model.slider }}</span>
              </div>
            </DuxFormItem>

            <DuxFormItem label="评分" path="rate">
              <NRate v-model:value="model.rate" allow-half />
            </DuxFormItem>

            <DuxFormItem label="颜色选择" path="color">
              <NColorPicker v-model:value="model.color" :modes="['hex', 'rgb', 'hsl']" />
            </DuxFormItem>
          </DuxFormLayout>
        </div>
      </DuxCard>

      <!-- 文件上传 -->
      <DuxCard
        title="文件上传"
        description="文件上传控件"
        header-bordered
      >
        <div class="container mx-auto max-w-2xl">
          <DuxFormLayout label-placement="left">
            <DuxFormItem label="文件上传" path="fileList">
              <NUpload
                v-model:file-list="model.fileList"
                multiple
                :max="5"
                @change="handleUpload"
              >
                <NButton>选择文件</NButton>
              </NUpload>
            </DuxFormItem>

            <DuxFormItem label="拖拽上传" path="fileList">
              <NUpload
                v-model:file-list="model.fileList"
                multiple
                directory-dnd
                @change="handleUpload"
              >
                <NUploadDragger />
              </NUpload>
            </DuxFormItem>
          </DuxFormLayout>
        </div>
      </DuxCard>

      <!-- 动态控件 -->
      <DuxCard
        title="动态控件"
        description="动态输入、动态标签、提及等高级控件"
        header-bordered
      >
        <div class="container mx-auto max-w-2xl">
          <DuxFormLayout label-placement="left">
            <DuxFormItem label="动态输入" path="dynamicInput">
              <NDynamicInput
                v-model:value="model.dynamicInput"
                placeholder="点击添加项目"
              />
            </DuxFormItem>

            <DuxFormItem label="动态标签" path="dynamicTags">
              <NDynamicTags
                v-model:value="model.dynamicTags"
                :max="10"
              />
            </DuxFormItem>

            <DuxFormItem label="提及功能" path="mention">
              <NMention
                v-model:value="model.mention"
                :options="mentionOptions"
                type="textarea"
                :rows="3"
                placeholder="输入 @ 可以提及用户"
              />
            </DuxFormItem>
          </DuxFormLayout>
        </div>
      </DuxCard>

      <!-- 表单数据预览 -->
      <DuxCard
        title="表单数据预览"
        description="实时显示当前表单数据"
        header-bordered
      >
        <pre class="bg-gray-50 dark:bg-gray-800 p-4 rounded text-sm overflow-auto max-h-96">{{ JSON.stringify(model, null, 2) }}</pre>
      </DuxCard>
    </div>
  </DuxPageForm>
</template>

<style scoped>
/* 自定义样式 */
</style>



---
File: /apps/start/pages/list/article.vue
---

<script setup lang="ts">
import { DuxCard, DuxCardPage } from '@duxweb/dvha-pro'
import { NCheckbox, NDropdown, NInput, NTag, NTooltip } from 'naive-ui'
import { h, ref } from 'vue'

const form = ref({
  title: '',
})
</script>

<template>
  <DuxCardPage
    v-slot="{ item, isChecked, toggleChecked }"
    checkable
    row-key="id"
    path="article"
    :filter="form"
    :filter-schema="[
      {
        tag: NInput,
        label: '姓名',
        attrs: {
          'placeholder': '请输入标题',
          'v-model:value': [form, 'title'],
        },
      },
    ]"
    :tabs="[
      {
        label: '全部',
        value: 'all',
      },
      {
        label: '发布',
        value: 'enabled',
      },
      {
        label: '草稿',
        value: 'disabled',
      },
    ]"
  >
    <DuxCard :key="item.id" size="none" class="relative group bg-elevated" bordered :shadow="false" divide header-size="none">
      <div class="absolute top-2 left-2 z-10  group-hover:block" :class="[isChecked(item.id) ? 'block' : 'hidden']">
        <NCheckbox :checked="isChecked(item.id)" @update:checked="toggleChecked(item.id)" />
      </div>
      <template #header>
        <div class="h-50 rounded-t overflow-hidden">
          <img :src="`https://picsum.photos/800/800?random=${item.id}`" alt="article" class="w-full h-full object-cover">
        </div>
      </template>

      <div class="flex flex-col gap-2">
        <div class="text-sm text-muted">
          {{ item.created_at }} | 1 分钟前
        </div>
        <div class="text-base font-bold">
          {{ item.title }}
        </div>
        <div class="text-sm text-muted line-clamp-2">
          {{ item.desc }}
        </div>
      </div>

      <template #footer>
        <div class="flex flex-row items-center justify-between gap-2">
          <div>
            <NTag :type="item.status ? 'success' : 'warning'">
              {{ item.status ? '发布' : '草稿' }}
            </NTag>
          </div>
          <div>
            <div class="flex flex-row gap-2">
              <NTooltip>
                <template #trigger>
                  <NButton secondary size="small" circle>
                    <template #icon>
                      <i class="i-tabler:chart-bar" />
                    </template>
                  </NButton>
                </template>
                分析
              </NTooltip>
              <NTooltip>
                <template #trigger>
                  <NButton secondary type="primary" size="small" circle>
                    <template #icon>
                      <i class="i-tabler:eye" />
                    </template>
                  </NButton>
                </template>
                预览
              </NTooltip>
              <NDropdown
                trigger="click"
                :options="[
                  {
                    label: '编辑',
                    key: 'edit',
                    icon: () => h('i', { class: 'i-tabler:edit' }),
                  },
                  {
                    label: '删除',
                    key: 'delete',
                    icon: () => h('i', { class: 'i-tabler:trash' }),
                  },
                ]"
              >
                <NButton secondary size="small" circle>
                  <template #icon>
                    <i class="i-tabler:dots-vertical" />
                  </template>
                </NButton>
              </NDropdown>
            </div>
          </div>
        </div>
      </template>
    </DuxCard>
  </DuxCardPage>
</template>



---
File: /apps/start/pages/list/card.vue
---

<script setup lang="ts">
import { DuxCard, DuxCardPage, DuxMedia } from '@duxweb/dvha-pro'
import { NButton, NCheckbox, NInput } from 'naive-ui'
import { ref } from 'vue'

const form = ref({
  title: '',
})
</script>

<template>
  <DuxCardPage

    checkable
    row-key="id"
    path="user"
    :filter="form"
    :filter-schema="[
      {
        tag: NInput,
        label: '姓名',
        attrs: {
          'placeholder': '请输入姓名',
          'v-model:value': [form, 'title'],
        },
      },
    ]"
    :tabs="[
      {
        label: '全部',
        value: 'all',
      },
      {
        label: '已启用',
        value: 'enabled',
      },
      {
        label: '已禁用',
        value: 'disabled',
      },
    ]"
  >
    <template #default="{ item, isChecked, toggleChecked }">
      <DuxCard :key="item.id" size="none" class="relative group" divide bordered :shadow="false">
        <div class="absolute top-2 left-2 z-10  group-hover:block" :class="[isChecked(item.id) ? 'block' : 'hidden']">
          <NCheckbox :checked="isChecked(item.id)" @update:checked="toggleChecked(item.id)" />
        </div>
        <template #header>
          <div class="flex gap-2 justify-between items-center ">
            <div>
              <DuxMedia
                :image="item.avatar"
                :image-width="38"
                avatar
                :title="item.nickname"
                :desc="item.email"
              />
            </div>
            <div>
              <NButton circle quaternary>
                <template #icon>
                  <i class="i-tabler:dots-vertical" />
                </template>
              </NButton>
            </div>
          </div>
        </template>

        <div class="flex flex-col gap-1 text-muted">
          <div class="flex flex-row gap-2 justify-between">
            <div class="text-sm">
              注册时间
            </div>
            <div class="text-sm">
              2025-01-01
            </div>
          </div>
          <div class="flex flex-row gap-2 justify-between">
            <div class="text-sm">
              登录时间
            </div>
            <div class="text-sm">
              2025-01-01
            </div>
          </div>
        </div>

        <template #footer>
          <div class="grid grid-cols-2 gap-2">
            <NButton secondary>
              资料
            </NButton>
            <NButton secondary type="primary">
              日志
            </NButton>
          </div>
        </template>
      </DuxCard>
    </template>
  </DuxCardPage>
</template>



---
File: /apps/start/pages/list/list.vue
---

<script setup lang="ts">
import { DuxCard, DuxListPage, DuxMedia } from '@duxweb/dvha-pro'
import { NButton, NInput, NTag } from 'naive-ui'
import { ref } from 'vue'

const form = ref({
  title: '',
})
</script>

<template>
  <DuxListPage
    v-slot="{ item }"
    checkable
    row-key="id"
    path="order"
    :filter="form"
    :filter-schema="[
      {
        tag: NInput,
        label: '项目名称',
        attrs: {
          'placeholder': '请输入项目名称',
          'v-model:value': [form, 'title'],
        },
      },
    ]"
    :tabs="[
      {
        label: '全部',
        value: 'all',
      },
      {
        label: '进行中',
        value: 'in_progress',
      },
      {
        label: '已完成',
        value: 'completed',
      },
      {
        label: '已中止',
        value: 'aborted',
      },
    ]"
  >
    <DuxCard divide>
      <template #header>
        <div class="flex items-center justify-between">
          <div class="flex flex-col">
            <div class="flex gap-2 items-center">
              <div class="text-base font-bold">
                订单号：# {{ item.order_no }}
              </div>
              <NTag type="success" size="small">
                已付款
              </NTag>
            </div>
            <div class="text-sm text-muted">
              {{ item.products.length }} 个商品 | {{ item.username }} | {{ item.city }} | {{ item.created_at }}
            </div>
          </div>

          <div class="flex justify-end items-center gap-2">
            <NButton>
              <template #icon>
                <div class="i-tabler:eye" />
              </template>
              下载账单
            </NButton>
            <div class="flex items-center gap-2">
              <NButton>
                <template #icon>
                  <div class="i-tabler:dots-vertical" />
                </template>
              </NButton>
            </div>
          </div>
        </div>
      </template>

      <div class="grid gap-4" :style="{ 'grid-template-columns': `repeat(auto-fit, minmax(250px, 250px))` }">
        <DuxMedia
          v-for="product in item.products"
          :key="product.id"
          :title="product.title"
          :image="`https://picsum.photos/800/800?random=${item.id}-${product.id}`"
          :image-width="60"
          :desc="[
            `数量：${product.num}x ${product.price}元`,
            `颜色：${product.color}`,
          ]"
        />
      </div>
    </DuxCard>
  </DuxListPage>
</template>



---
File: /apps/start/pages/404.vue
---

<script setup lang="ts">
</script>

<template>
    <div>
      <h1>4042</h1>
    </div>
</template>

<style scoped>
</style>



---
File: /apps/start/pages/chart.vue
---

<script setup lang="ts">
import { NCard, NGrid, NGridItem } from 'naive-ui'

// 基础柱状图
const barData = {
  data: [
    { name: '一月', value: 120 },
    { name: '二月', value: 200 },
    { name: '三月', value: 150 },
    { name: '四月', value: 180 },
    { name: '五月', value: 220 },
    { name: '六月', value: 300 },
  ],
  name: '销售额',
}

// 堆叠柱状图
const stackBarData = {
  labels: ['一月', '二月', '三月', '四月', '五月', '六月'],
  data: [
    { name: '产品A', data: [100, 150, 120, 180, 200, 250], stack: 'total' },
    { name: '产品B', data: [80, 120, 100, 140, 160, 200], stack: 'total' },
    { name: '产品C', data: [60, 90, 80, 110, 130, 150], stack: 'total' },
  ],
}

// 多系列柱状图
const multiBarData = {
  labels: ['一月', '二月', '三月', '四月', '五月', '六月'],
  data: [
    { name: '销售额', data: [120, 200, 150, 180, 220, 300] },
    { name: '利润', data: [60, 100, 75, 90, 110, 150] },
    { name: '成本', data: [40, 80, 60, 70, 85, 120] },
  ],
}

// 水平柱状图
const horizontalBarData = {
  data: [
    { name: '产品A', value: 300 },
    { name: '产品B', value: 250 },
    { name: '产品C', value: 200 },
    { name: '产品D', value: 180 },
    { name: '产品E', value: 150 },
  ],
  horizontal: true,
}

// 基础折线图
const lineData = {
  labels: ['周一', '周二', '周三', '周四', '周五', '周六', '周日'],
  data: [
    { name: '访问量', data: [120, 132, 101, 134, 90, 230, 210] },
    { name: '下载量', data: [220, 182, 191, 234, 290, 330, 310] },
  ],
  smooth: true,
}

// 堆叠面积图
const stackLineData = {
  labels: ['1月', '2月', '3月', '4月', '5月', '6月'],
  data: [
    { name: '邮件营销', data: [120, 132, 101, 134, 90, 230], stack: 'total' },
    { name: '联盟广告', data: [220, 182, 191, 234, 290, 330], stack: 'total' },
    { name: '视频广告', data: [150, 232, 201, 154, 190, 330], stack: 'total' },
    { name: '直接访问', data: [320, 332, 301, 334, 390, 330], stack: 'total' },
  ],
}

// 饼图
const pieData = {
  data: [
    { name: 'Chrome', value: 335 },
    { name: 'Safari', value: 310 },
    { name: 'Firefox', value: 234 },
    { name: 'Edge', value: 135 },
    { name: 'Opera', value: 48 },
  ],
}

// 环形图
const ringData = {
  data: [
    { name: '完成', value: 75 },
    { name: '进行中', value: 15 },
    { name: '未开始', value: 10 },
  ],
  ringLabel: '项目进度',
}

// 玫瑰图
const roseData = {
  data: [
    { name: '玫瑰1', value: 40 },
    { name: '玫瑰2', value: 38 },
    { name: '玫瑰3', value: 32 },
    { name: '玫瑰4', value: 30 },
    { name: '玫瑰5', value: 28 },
  ],
}

// 雷达图
const radarData = {
  indicator: [
    { name: '销售', max: 100 },
    { name: '管理', max: 100 },
    { name: '信息技术', max: 100 },
    { name: '客服', max: 100 },
    { name: '研发', max: 100 },
    { name: '市场', max: 100 },
  ],
  data: [
    {
      value: [80, 70, 60, 80, 90, 70],
      name: '预算分配',
    },
    {
      value: [90, 80, 70, 70, 80, 80],
      name: '实际开销',
    },
  ],
}

// 漏斗图
const funnelData = {
  data: [
    { name: '访问', value: 60 },
    { name: '咨询', value: 40 },
    { name: '订单', value: 20 },
    { name: '点击', value: 80 },
    { name: '付款', value: 12 },
  ],
}

// 矩形树图
const treeMapData = {
  name: ['公司组织架构', '项目分布情况'],
  data: [
    [
      {
        name: '技术部',
        value: 100,
        children: [
          { name: '前端', value: 40 },
          { name: '后端', value: 35 },
          { name: 'UI设计', value: 25 },
        ],
      },
      {
        name: '销售部',
        value: 80,
        children: [
          { name: '华北', value: 30 },
          { name: '华南', value: 25 },
          { name: '华东', value: 25 },
        ],
      },
      {
        name: '市场部',
        value: 60,
        children: [
          { name: '推广', value: 35 },
          { name: '运营', value: 25 },
        ],
      },
    ],
    [
      {
        name: '移动端项目',
        value: 120,
        children: [
          { name: 'iOS应用', value: 50 },
          { name: 'Android应用', value: 45 },
          { name: '小程序', value: 25 },
        ],
      },
      {
        name: 'Web项目',
        value: 90,
        children: [
          { name: '管理后台', value: 35 },
          { name: '官网', value: 30 },
          { name: '商城', value: 25 },
        ],
      },
      {
        name: '数据项目',
        value: 70,
        children: [
          { name: '数据分析', value: 40 },
          { name: '报表系统', value: 30 },
        ],
      },
    ],
  ],
}

// 12色彩调试柱状图
const colorDebugBarData = {
  labels: ['1月', '2月', '3月', '4月', '5月', '6月', '7月', '8月', '9月', '10月', '11月', '12月'],
  data: [
    { name: '红色系', data: [120, 132, 101, 134, 90, 230, 210, 180, 160, 140, 120, 100] },
    { name: '橙色系', data: [220, 182, 191, 234, 290, 330, 310, 280, 260, 240, 220, 200] },
    { name: '黄色系', data: [150, 232, 201, 154, 190, 330, 280, 250, 230, 210, 190, 170] },
    { name: '黄绿系', data: [320, 332, 301, 334, 390, 330, 350, 320, 300, 280, 260, 240] },
    { name: '绿色系', data: [180, 200, 180, 200, 220, 250, 230, 210, 190, 170, 150, 130] },
    { name: '青绿系', data: [280, 300, 280, 300, 320, 350, 330, 310, 290, 270, 250, 230] },
    { name: '青色系', data: [160, 180, 160, 180, 200, 230, 210, 190, 170, 150, 130, 110] },
    { name: '蓝色系', data: [240, 260, 240, 260, 280, 310, 290, 270, 250, 230, 210, 190] },
    { name: '蓝紫系', data: [200, 220, 200, 220, 240, 270, 250, 230, 210, 190, 170, 150] },
    { name: '紫色系', data: [300, 320, 300, 320, 340, 370, 350, 330, 310, 290, 270, 250] },
    { name: '紫红系', data: [140, 160, 140, 160, 180, 210, 190, 170, 150, 130, 110, 90] },
    { name: '深红系', data: [260, 280, 260, 280, 300, 330, 310, 290, 270, 250, 230, 210] },
  ],
}

// 迷你图表数据
const miniBarData = {
  data: [
    { name: 'A', value: 100 },
    { name: 'B', value: 200 },
    { name: 'C', value: 150 },
    { name: 'D', value: 180 },
    { name: 'E', value: 120 },
  ],
  min: true,
}

const miniStackBarData = {
  labels: ['Q1', 'Q2', 'Q3', 'Q4'],
  data: [
    { name: '收入', data: [100, 120, 110, 140], stack: 'total' },
    { name: '支出', data: [80, 90, 85, 100], stack: 'total' },
  ],
  min: true,
}

const miniHorizontalBarData = {
  data: [
    { name: '产品A', value: 85 },
    { name: '产品B', value: 92 },
    { name: '产品C', value: 78 },
  ],
  horizontal: true,
  min: true,
}

const miniLineData = {
  labels: ['1', '2', '3', '4', '5', '6', '7'],
  data: [{ name: '趋势', data: [10, 20, 15, 25, 30, 22, 28] }],
  min: true,
}

const miniSmoothLineData = {
  labels: ['周一', '周二', '周三', '周四', '周五'],
  data: [{ name: '访问量', data: [120, 180, 150, 200, 170] }],
  smooth: true,
  min: true,
}

const miniStackLineData = {
  labels: ['1月', '2月', '3月', '4月'],
  data: [
    { name: '线上', data: [50, 60, 55, 70], stack: 'total' },
    { name: '线下', data: [30, 40, 35, 50], stack: 'total' },
  ],
  min: true,
}

const miniPieData = {
  data: [
    { name: '成功', value: 70 },
    { name: '失败', value: 30 },
  ],
  min: true,
}

const miniRingData = {
  data: [
    { name: '已完成', value: 85 },
    { name: '进行中', value: 15 },
  ],
  ringLabel: '进度',
  min: true,
}

const miniRoseData = {
  data: [
    { name: '类型A', value: 25 },
    { name: '类型B', value: 35 },
    { name: '类型C', value: 40 },
  ],
  min: true,
}

const miniRadarData = {
  indicator: [
    { name: '速度', max: 100 },
    { name: '质量', max: 100 },
    { name: '效率', max: 100 },
    { name: '稳定', max: 100 },
  ],
  data: [
    {
      value: [80, 90, 85, 75],
      name: '指标',
    },
  ],
  min: true,
}

const miniFunnelData = {
  data: [
    { name: '浏览', value: 100 },
    { name: '点击', value: 80 },
    { name: '购买', value: 60 },
    { name: '支付', value: 40 },
  ],
  min: true,
}

const miniTreeMapData = {
  data: [
    {
      name: '技术',
      value: 60,
      children: [
        { name: '前端', value: 30 },
        { name: '后端', value: 30 },
      ],
    },
    {
      name: '产品',
      value: 40,
      children: [
        { name: '设计', value: 20 },
        { name: '运营', value: 20 },
      ],
    },
  ],
  min: true,
}
</script>

<template>
  <dux-page :card="false">
    <NGrid cols="1 s:2 m:3 l:4" responsive="screen" :x-gap="16" :y-gap="16">
      <!-- 基础柱状图 -->
      <NGridItem>
        <NCard title="基础柱状图" size="small">
          <dux-chart
            type="bar"
            class="h-250px"
            :option="barData"
          />
        </NCard>
      </NGridItem>

      <!-- 堆叠柱状图 -->
      <NGridItem>
        <NCard title="堆叠柱状图" size="small">
          <dux-chart
            type="bar"
            class="h-250px"
            :option="stackBarData"
          />
        </NCard>
      </NGridItem>

      <!-- 多系列柱状图 -->
      <NGridItem>
        <NCard title="多系列柱状图" size="small">
          <dux-chart
            type="bar"
            class="h-250px"
            :option="multiBarData"
          />
        </NCard>
      </NGridItem>

      <!-- 水平柱状图 -->
      <NGridItem>
        <NCard title="水平柱状图" size="small">
          <dux-chart
            type="bar"
            class="h-250px"
            :option="horizontalBarData"
          />
        </NCard>
      </NGridItem>

      <!-- 基础折线图 -->
      <NGridItem>
        <NCard title="基础折线图" size="small">
          <dux-chart
            type="line"
            class="h-250px"
            :option="lineData"
          />
        </NCard>
      </NGridItem>

      <!-- 堆叠面积图 -->
      <NGridItem>
        <NCard title="堆叠面积图" size="small">
          <dux-chart
            type="line"
            class="h-250px"
            :option="stackLineData"
          />
        </NCard>
      </NGridItem>

      <!-- 饼图 -->
      <NGridItem>
        <NCard title="饼图" size="small">
          <dux-chart
            type="pie"
            class="h-250px"
            :option="pieData"
          />
        </NCard>
      </NGridItem>

      <!-- 环形图 -->
      <NGridItem>
        <NCard title="环形图" size="small">
          <dux-chart
            type="ring"
            class="h-250px"
            :option="ringData"
          />
        </NCard>
      </NGridItem>

      <!-- 玫瑰图 -->
      <NGridItem>
        <NCard title="玫瑰图" size="small">
          <dux-chart
            type="rose"
            class="h-250px"
            :option="roseData"
          />
        </NCard>
      </NGridItem>

      <!-- 雷达图 -->
      <NGridItem>
        <NCard title="雷达图" size="small">
          <dux-chart
            type="radar"
            class="h-250px"
            :option="radarData"
          />
        </NCard>
      </NGridItem>

      <!-- 漏斗图 -->
      <NGridItem>
        <NCard title="漏斗图" size="small">
          <dux-chart
            type="funnel"
            class="h-250px"
            :option="funnelData"
          />
        </NCard>
      </NGridItem>

      <!-- 矩形树图 -->
      <NGridItem>
        <NCard title="矩形树图" size="small">
          <dux-chart
            type="treemap"
            class="h-250px"
            :option="treeMapData"
          />
        </NCard>
      </NGridItem>

      <!-- 12色彩调试柱状图 -->
      <NGridItem span="1 s:2 m:3 l:4">
        <NCard title="12色彩调试柱状图" size="small">
          <dux-chart
            type="bar"
            class="h-400px"
            :option="colorDebugBarData"
          />
        </NCard>
      </NGridItem>

      <!-- 迷你图表 -->
      <NGridItem span="1 s:2 m:3 l:4">
        <NCard title="迷你图表" size="small">
          <div class="grid grid-cols-4 gap-4">
            <!-- 第一行 -->
            <div class="text-center">
              <div class="text-xs text-gray-500 mb-2">
                柱状图
              </div>
              <dux-chart
                type="bar"
                class="h-60px"
                :option="miniBarData"
              />
            </div>
            <div class="text-center">
              <div class="text-xs text-gray-500 mb-2">
                堆叠柱状图
              </div>
              <dux-chart
                type="bar"
                class="h-60px"
                :option="miniStackBarData"
              />
            </div>
            <div class="text-center">
              <div class="text-xs text-gray-500 mb-2">
                水平柱状图
              </div>
              <dux-chart
                type="bar"
                class="h-60px"
                :option="miniHorizontalBarData"
              />
            </div>
            <div class="text-center">
              <div class="text-xs text-gray-500 mb-2">
                折线图
              </div>
              <dux-chart
                type="line"
                class="h-60px"
                :option="miniLineData"
              />
            </div>

            <!-- 第二行 -->
            <div class="text-center">
              <div class="text-xs text-gray-500 mb-2">
                平滑折线图
              </div>
              <dux-chart
                type="line"
                class="h-60px"
                :option="miniSmoothLineData"
              />
            </div>
            <div class="text-center">
              <div class="text-xs text-gray-500 mb-2">
                堆叠面积图
              </div>
              <dux-chart
                type="line"
                class="h-60px"
                :option="miniStackLineData"
              />
            </div>
            <div class="text-center">
              <div class="text-xs text-gray-500 mb-2">
                饼图
              </div>
              <dux-chart
                type="pie"
                class="h-60px"
                :option="miniPieData"
              />
            </div>
            <div class="text-center">
              <div class="text-xs text-gray-500 mb-2">
                环形图
              </div>
              <dux-chart
                type="ring"
                class="h-60px"
                :option="miniRingData"
              />
            </div>

            <!-- 第三行 -->
            <div class="text-center">
              <div class="text-xs text-gray-500 mb-2">
                玫瑰图
              </div>
              <dux-chart
                type="rose"
                class="h-60px"
                :option="miniRoseData"
              />
            </div>
            <div class="text-center">
              <div class="text-xs text-gray-500 mb-2">
                雷达图
              </div>
              <dux-chart
                type="radar"
                class="h-60px"
                :option="miniRadarData"
              />
            </div>
            <div class="text-center">
              <div class="text-xs text-gray-500 mb-2">
                漏斗图
              </div>
              <dux-chart
                type="funnel"
                class="h-60px"
                :option="miniFunnelData"
              />
            </div>
            <div class="text-center">
              <div class="text-xs text-gray-500 mb-2">
                矩形树图
              </div>
              <dux-chart
                type="treemap"
                class="h-60px"
                :option="miniTreeMapData"
              />
            </div>
          </div>
        </NCard>
      </NGridItem>
    </NGrid>
  </dux-page>
</template>



---
File: /apps/start/pages/designEditor.vue
---

<script setup lang="ts">
import { DuxFormEditor } from '@duxweb/dvha-pro'
import { ref, watch } from 'vue'
</script>

<template>
  <DuxFormEditor
    :width="750"
    :height="1000"
    background-color="#ffffff"
  />
</template>



---
File: /apps/start/pages/form.vue
---

<script setup lang="ts">
import { createS3UploadDriver, useSelect, useUpload } from '@duxweb/dvha-core'
import { NButton, NDataTable, useMessage } from 'naive-ui'
import { h, onMounted, ref } from 'vue'

const model = ref({
  name: '',
  asyncSelect: 40,
})

const { options, onSearch } = useSelect({
  path: 'user',
  optionLabel: 'nickname',
  defaultValue: model.value.asyncSelect,
})

function handleSearch(value: string) {
  onSearch(value)
}

const message = useMessage()

const { trigger, uploadFiles, open, removeFiles, cancelFiles, progress, clearFiles, addDataFiles } = useUpload({
  path: 'upload',
  method: 'POST',
  multiple: false,
  driver: createS3UploadDriver({
    signPath: 'uploadSign',
  }),
  onError: (error) => {
    message.error(error.message || '上传失败')
  },
})

onMounted(() => {
  addDataFiles([
    {
      url: 'https://www.baidu.com/img/PCtm_d9c8750bed0b3c7d089fa7d55720d6cf.png',
      filename: 'test.png',
      filetype: 'image/png',
      filesize: 1000,
    },
  ])
})
</script>

<template>
  <div class="p-4">
    <n-form
      :model="model"
      label-placement="left"
      :label-width="160"
    >
      <n-form-item label="文本框" path="name">
        <n-input v-model:value="model.name" />
      </n-form-item>

      <n-form-item label="异步选择器" path="async-select">
        <n-select v-model:value="model.asyncSelect" :options="options" placeholder="请选择用户" clearable filterable remote @search="handleSearch" />
      </n-form-item>

      <n-form-item label="上传" path="upload">
        <div class="flex flex-col gap-2 flex-1 min-h-0">
          <div class="flex items-center gap-2">
            <NButton @click="() => open()">
              选择文件
            </NButton>
            <NButton @click="trigger">
              上传 {{ progress.totalPercent }}%
            </NButton>
            <NButton @click="clearFiles">
              清空
            </NButton>
          </div>
          <div class="flex flex-col gap-2">
            <NDataTable
              :bordered="true"
              :columns="[
                {
                  key: 'filename',
                  title: '文件名',
                },
                {
                  key: 'filesizeText',
                  title: '大小',
                },
                {
                  key: 'filetype',
                  title: '类型',
                },
                {
                  key: 'status',
                  title: '状态',
                  render: (row) => {
                    return h('div', {
                      class: 'flex flex-col gap-2',
                    }, [
                      h('div', {}, row.status),
                      h('div', { class: 'text-red-500' }, row?.error),
                    ])
                  },
                },
                {
                  key: 'progress.percent',
                  title: '进度',
                  render: (row) => {
                    return `${row.progress?.percent}%`
                  },
                },
                {
                  key: 'progress.speedText',
                  title: '速度',
                },
                {
                  key: 'progress.uploadTime',
                  title: '上传时间',
                  render: (row) => {
                    return `${row.progress?.uploadTime} seconds`
                  },
                },
                {
                  key: 'progress.remainingTime',
                  title: '剩余时间',
                  render: (row) => {
                    return `${row.progress?.remainingTime} seconds`
                  },
                },
                {
                  key: 'actions',
                  title: '操作',
                  render: (row) => {
                    return h('div', {
                      class: 'flex items-center gap-2',
                    }, [
                      h(NButton, {
                        type: 'warning',
                        size: 'small',
                        disabled: row.status === 'success' || row.status === 'error' || row.status === 'cancelled',
                        onClick: () => {
                          cancelFiles([row.id])
                        },
                      }, { default: () => '取消' }),
                      h(NButton, {
                        type: 'error',
                        size: 'small',
                        onClick: () => {
                          removeFiles([row.id])
                        },
                      }, { default: () => '删除' }),
                    ])
                  },
                },
              ]"
              :data="uploadFiles"
            />
          </div>
        </div>
      </n-form-item>
    </n-form>
  </div>
</template>

<style scoped>
</style>



---
File: /apps/start/pages/home.vue
---

<script setup lang="ts">
import { DuxCard, DuxCarousel, DuxChart, DuxDashboardQuick, DuxMedia, DuxWidgetConnect } from '@duxweb/dvha-pro'
import { NAvatar, NButton, NCalendar, NCard, NScrollbar, NTabPane, NTabs, NTag } from 'naive-ui'
import { computed, ref } from 'vue'

// 生成随机数的工具函数
function randomBetween(min: number, max: number): number {
  return Math.floor(Math.random() * (max - min + 1)) + min
}

function randomFloat(min: number, max: number, decimals: number = 2): number {
  return Number((Math.random() * (max - min) + min).toFixed(decimals))
}

// 顶部统计数据
const topStats = ref([
  {
    label: '今日订单',
    icon: 'i-tabler:shopping-cart',
    value: randomBetween(45, 180),
  },
  {
    label: '待发货',
    icon: 'i-tabler:truck',
    value: randomBetween(15, 65),
  },
  {
    label: '待处理售后',
    icon: 'i-tabler:headset',
    value: randomBetween(3, 18),
  },
])

// 订单趋势图表数据
const orderTrendData = ref({
  title: '近7天订单趋势',
  labels: ['12-02', '12-03', '12-04', '12-05', '12-06', '12-07', '12-08'],
  data: [
    {
      name: '订单量',
      type: 'bar',
      data: Array.from({ length: 7 }, () => randomBetween(80, 200)),
      color: '#18a058',
    },
    {
      name: '销售额(万)',
      type: 'line',
      data: Array.from({ length: 7 }, () => randomFloat(15, 45, 1)),
      color: '#2080f0',
    },
  ],
})

// 图表配置对象
const chartOption = computed(() => ({
  labels: orderTrendData.value.labels,
  data: orderTrendData.value.data,
  showLegend: true,
  showGrid: true,
  showXAxisLabel: true,
  showYAxisLabel: true,
}))

// 销售统计数据
const salesStats = ref([
  {
    title: '今日销售额',
    value: `¥${randomBetween(50000, 120000).toLocaleString()}`,
    change: randomFloat(-15, 25, 1),
    changeType: (Math.random() > 0.5 ? 'up' : 'down') as 'up' | 'down',
  },
  {
    title: '今日订单数',
    value: randomBetween(150, 350),
    change: randomFloat(-10, 30, 1),
    changeType: (Math.random() > 0.5 ? 'up' : 'down') as 'up' | 'down',
  },
  {
    title: '平均客单价',
    value: `¥${randomFloat(280, 580, 0)}`,
    change: randomFloat(-8, 15, 1),
    changeType: (Math.random() > 0.5 ? 'up' : 'down') as 'up' | 'down',
  },
  {
    title: '转化率',
    value: `${randomFloat(8, 18, 2)}%`,
    change: randomFloat(-3, 6, 1),
    changeType: (Math.random() > 0.5 ? 'up' : 'down') as 'up' | 'down',
  },
])

// 订单数据（原任务数据）
const orderData = ref([
  {
    title: '苹果iPhone 15 Pro 256GB 天然钛色',
    section: '订单号：2024120800001',
    nickname: '张先生',
    status: 1,
    date: '12-08',
    amount: '¥8999',
  },
  {
    title: '小米14 Ultra 16GB+1TB 黑色',
    section: '订单号：2024120800002',
    nickname: '李女士',
    status: 2,
    date: '12-08',
    amount: '¥6999',
  },
  {
    title: '华为Mate60 Pro 12GB+256GB 雅川青',
    section: '订单号：2024120800003',
    nickname: '王先生',
    status: 3,
    date: '12-07',
    amount: '¥6999',
  },
  {
    title: '戴森V15 Detect 无绳吸尘器',
    section: '订单号：2024120800004',
    nickname: '赵女士',
    status: 1,
    date: '12-07',
    amount: '¥4990',
  },
  {
    title: 'Apple MacBook Pro 14英寸 M3芯片',
    section: '订单号：2024120800005',
    nickname: '刘先生',
    status: 2,
    date: '12-06',
    amount: '¥14999',
  },
  {
    title: 'Nike Air Jordan 1 Retro High OG',
    section: '订单号：2024120800006',
    nickname: '陈女士',
    status: 3,
    date: '12-06',
    amount: '¥1299',
  },
  {
    title: '海尔冰箱 BCD-452WDPCU1',
    section: '订单号：2024120800007',
    nickname: '孙先生',
    status: 1,
    date: '12-05',
    amount: '¥3299',
  },
  {
    title: '索尼WH-1000XM5 头戴式降噪耳机',
    section: '订单号：2024120800008',
    nickname: '周女士',
    status: 2,
    date: '12-05',
    amount: '¥2399',
  },
  {
    title: 'Levi\'s 501 经典直筒牛仔裤',
    section: '订单号：2024120800009',
    nickname: '吴先生',
    status: 3,
    date: '12-04',
    amount: '¥699',
  },
  {
    title: '美的空调 KFR-35GW/BP3DN8Y-PH200',
    section: '订单号：2024120800010',
    nickname: '郑女士',
    status: 1,
    date: '12-04',
    amount: '¥2899',
  },
  {
    title: 'SK-II 神仙水 230ml',
    section: '订单号：2024120800011',
    nickname: '何女士',
    status: 1,
    date: '12-03',
    amount: '¥1690',
  },
  {
    title: '小鹏汽车G9 智能座舱版',
    section: '订单号：2024120800012',
    nickname: '林先生',
    status: 2,
    date: '12-02',
    amount: '¥289999',
  },
  {
    title: 'Hermès Kelly 28 手袋 金棕色',
    section: '订单号：2024120800013',
    nickname: '王女士',
    status: 3,
    date: '12-01',
    amount: '¥89999',
  },
])

// 当前选中的tab
const currentTab = ref('1')

// 根据tab过滤数据
const filteredOrderData = computed(() => {
  const statusMap = {
    1: 1, // 待发货
    2: 2, // 配送中
    3: 3, // 已完成
  }
  return orderData.value.filter(item => item.status === statusMap[currentTab.value])
})

// 电商功能列表
const ecommerceFeatures = [
  {
    title: '商品管理',
    icon: 'i-tabler:package',
  },
  {
    title: '订单管理',
    icon: 'i-tabler:clipboard-list',
  },
  {
    title: '库存管理',
    icon: 'i-tabler:packages',
  },
  {
    title: '客户管理',
    icon: 'i-tabler:users',
  },
  {
    title: '营销活动',
    icon: 'i-tabler:speakerphone',
  },
  {
    title: '数据分析',
    icon: 'i-tabler:chart-bar',
  },
  {
    title: '财务管理',
    icon: 'i-tabler:coins',
  },
  {
    title: '客服中心',
    icon: 'i-tabler:headset',
  },
]

// 系统公告数据
const announcements = [
  {
    type: 'success' as const,
    tag: '活动',
    content: '双12购物节活动即将开始，优惠力度空前',
  },
  {
    type: 'info' as const,
    tag: '系统',
    content: '订单管理系统升级完成，新增批量处理功能',
  },
  {
    type: 'warning' as const,
    tag: '提醒',
    content: '部分商品库存紧张，请及时补货',
  },
  {
    type: 'info' as const,
    tag: '通知',
    content: '新增支付方式：支持微信分付、花呗分期',
  },
  {
    type: 'success' as const,
    tag: '活动',
    content: '新用户注册送100元优惠券活动进行中',
  },
  {
    type: 'info' as const,
    tag: '系统',
    content: '物流跟踪系统优化，支持实时位置查询',
  },
]

// 轮播图数据
const carouselData = [
  'https://picsum.photos/400/200?random=1',
  'https://picsum.photos/400/200?random=2',
  'https://picsum.photos/400/200?random=3',
  'https://picsum.photos/400/200?random=4',
]

// 刷新数据
function refreshData() {
  topStats.value.forEach((stat) => {
    switch (stat.label) {
      case '今日订单':
        stat.value = randomBetween(45, 180)
        break
      case '待发货':
        stat.value = randomBetween(15, 65)
        break
      case '待处理售后':
        stat.value = randomBetween(3, 18)
        break
    }
  })

  // 刷新图表数据
  orderTrendData.value.data[0].data = Array.from({ length: 7 }, () => randomBetween(80, 200))
  orderTrendData.value.data[1].data = Array.from({ length: 7 }, () => randomFloat(15, 45, 1))

  // 刷新销售统计数据
  salesStats.value.forEach((stat) => {
    stat.change = randomFloat(-15, 25, 1)
    stat.changeType = (Math.random() > 0.5 ? 'up' : 'down') as 'up' | 'down'

    switch (stat.title) {
      case '今日销售额':
        stat.value = `¥${randomBetween(50000, 120000).toLocaleString()}`
        break
      case '今日订单数':
        stat.value = randomBetween(150, 350)
        break
      case '平均客单价':
        stat.value = `¥${randomFloat(280, 580, 0)}`
        break
      case '转化率':
        stat.value = `${randomFloat(8, 18, 2)}%`
        break
    }
  })
}

// 获取订单状态显示
function getOrderStatusDisplay(status: number) {
  switch (status) {
    case 1:
      return { text: '待发货', class: 'text-warning bg-warning/10' }
    case 2:
      return { text: '配送中', class: 'text-info bg-info/10' }
    case 3:
      return { text: '已完成', class: 'text-success bg-success/10' }
    default:
      return { text: '未知', class: 'text-gray bg-gray/10' }
  }
}

// 获取变化指示器样式
function getChangeIndicator(change: number, changeType: 'up' | 'down') {
  const isPositive = changeType === 'up'
  return {
    icon: isPositive ? 'i-tabler:arrow-up' : 'i-tabler:arrow-down',
    class: isPositive ? 'text-success' : 'text-error',
    text: `${isPositive ? '+' : ''}${change}%`,
  }
}
</script>

<template>
  <DuxPage :card="false">
    <div class="flex gap-2 flex-col lg:flex-row">
      <div class="flex-1 flex flex-col gap-2 lg:w-1">
        <DuxDashboardHelloBig
          title="HELLO，店长"
          :data="topStats"
        />

        <div class="bg-primary rounded-sm text-white px-10 py-6 relative overflow-hidden flex justify-between">
          <div>
            <div class="text-xl">
              电商管理平台
            </div>
            <div class="text-sm opacity-60">
              基于 Vue3 和 Naive UI 的电商管理系统
            </div>
          </div>

          <div class="flex items-center text-lg italic">
            专业、高效、可靠
          </div>

          <div class="absolute top-7 -right-20 rounded-full size-40 bg-white/8" />
          <div class="absolute top-0 -right-20 rounded-full size-50 bg-white/8" />
          <div class="absolute -top-7 -right-18 rounded-full size-60 bg-white/8" />
        </div>

        <!-- 新增：订单趋势图表卡片 -->
        <DuxCard title="数据概览" content-class="flex flex-col gap-4">
          <template #headerExtra>
            <NButton size="small" text @click="refreshData">
              <template #icon>
                <div class="i-tabler:refresh size-4" />
              </template>
              刷新
            </NButton>
          </template>

          <div class="grid grid-cols-2 lg:grid-cols-4 gap-4">
            <div v-for="stat in salesStats" :key="stat.title" class="flex flex-col gap-2 p-4 rounded-lg bg-muted/30">
              <div class="text-sm text-muted">
                {{ stat.title }}
              </div>
              <div class="text-2xl font-bold text-default">
                {{ stat.value }}
              </div>
              <div class="flex items-center gap-1 text-xs">
                <div class="size-3" :class="[getChangeIndicator(stat.change, stat.changeType).icon, getChangeIndicator(stat.change, stat.changeType).class]" />
                <span :class="getChangeIndicator(stat.change, stat.changeType).class">
                  {{ getChangeIndicator(stat.change, stat.changeType).text }}
                </span>
                <span class="text-muted">较昨日</span>
              </div>
            </div>
          </div>

          <div class="h-80">
            <DuxChart
              type="bar"
              height="320px"
              :option="chartOption"
            />
          </div>
        </DuxCard>

        <div class="grid grid-cols-1 xl:grid-cols-2 gap-2">
          <div>
            <NCard
              class="shadow-sm"
              :bordered="false"
              title="订单管理"
              content-class="!p-0"
              :segmented="{
                content: true,
              }"
              size="small"
            >
              <template #header-extra>
                <NTabs v-model:value="currentTab" pane-class="!p-0" type="segment" size="small" animated class="!w-50">
                  <NTabPane name="1" tab="待发货" />
                  <NTabPane name="2" tab="配送中" />
                  <NTabPane name="3" tab="已完成" />
                </NTabs>
              </template>
              <NScrollbar>
                <div class="flex flex-col gap-4 p-4">
                  <DuxMedia v-for="(item, key) in filteredOrderData" :key="key">
                    {{ item.title }}
                    <template #image>
                      <NAvatar round class="!bg-primary">
                        {{ item.nickname.charAt(0) }}
                      </NAvatar>
                    </template>
                    <template #desc>
                      <div>{{ item.section }} <span class="text-primary">{{ item.nickname }}</span></div>
                    </template>
                    <template #extend>
                      <div class="flex items-center justify-center h-10 w-16 rounded" :class="getOrderStatusDisplay(item.status).class">
                        {{ getOrderStatusDisplay(item.status).text }}
                      </div>
                      <div class="text-success bg-success/10 flex flex-col gap-0 items-center justify-center h-10 w-16 rounded text-xs">
                        <div>{{ item.amount }}</div>
                        <div>{{ item.date }}</div>
                      </div>
                    </template>
                  </DuxMedia>
                </div>
              </NScrollbar>
            </NCard>
          </div>

          <div class="flex flex-col gap-4">
            <NCard
              class="shadow-sm"
              :bordered="false"
              size="small"
              title="营销日历"
              :segmented="{
                content: true,
              }"
            >
              <div>
                <NCalendar class="!h-92" />
              </div>
            </NCard>
          </div>
        </div>
      </div>
      <div class="flex-none flex flex-col gap-2 lg:w-86">
        <DuxCarousel
          :height="200"
          :data="carouselData"
        />
        <NCard
          class="shadow-sm"
          :bordered="false"
          title="平台公告"
          size="small"
          :segmented="{
            content: true,
          }"
        >
          <template #header-extra>
            <NButton size="small" text @click="refreshData">
              刷新
            </NButton>
          </template>
          <div class="flex flex-col gap-2">
            <DuxMedia v-for="(item, index) in announcements" :key="index" @click="() => {}">
              <template #prefix>
                <NTag :type="item.type" size="small">
                  {{ item.tag }}
                </NTag>
              </template>
              {{ item.content }}
            </DuxMedia>
          </div>
        </NCard>

        <NCard
          class="shadow-sm"
          :bordered="false"
          size="small"
          title="常用功能"
          :segmented="{
            content: true,
          }"
        >
          <DuxDashboardQuick
            :col="4"
            :data="ecommerceFeatures"
          />
        </NCard>

        <DuxWidgetConnect title="电商服务升级" desc="助力商家提升销售业绩">
          <NButton type="primary" size="small">
            了解更多
          </NButton>
        </DuxWidgetConnect>
      </div>
    </div>
  </DuxPage>
</template>



---
File: /apps/start/pages/interaction.vue
---

<script setup lang="ts">
import { DuxCard, DuxPage, useDialog, useDrawer, useModal } from '@duxweb/dvha-pro'
import {
  NAlert,
  NButton,
  NDropdown,
  NInput,
  NPopconfirm,
  NPopover,
  NSwitch,
  NTooltip,
  useLoadingBar,
  useMessage,
  useDialog as useNaiveDialog,
  useNotification,
} from 'naive-ui'
import { h } from 'vue'

// 基础数据（已删除不使用的变量）

// NaiveUI 交互 hooks
const message = useMessage()
const notification = useNotification()
const naiveDialog = useNaiveDialog()
const loadingBar = useLoadingBar()

// Pro 库交互 hooks
const modal = useModal()
const dialog = useDialog()
const drawer = useDrawer()

// 消息通知方法
function showMessage(type: 'info' | 'success' | 'warning' | 'error') {
  const messages = {
    info: '这是一条信息消息',
    success: '操作成功！',
    warning: '请注意这个警告',
    error: '操作失败，请重试',
  }
  message[type](messages[type])
}

// 通知方法
function showNotification(type: 'info' | 'success' | 'warning' | 'error') {
  const notifications = {
    info: { title: '信息通知', content: '这是一条信息通知，用于展示一般性信息' },
    success: { title: '成功通知', content: '操作已成功完成，数据已保存' },
    warning: { title: '警告通知', content: '请注意，某些操作可能存在风险' },
    error: { title: '错误通知', content: '操作失败，请检查网络连接或联系管理员' },
  }
  notification[type](notifications[type])
}

// NaiveUI 对话框
function showNaiveDialog(type: 'info' | 'success' | 'warning' | 'error') {
  const dialogs = {
    info: { title: '信息对话框', content: '这是一个信息对话框，用于展示重要信息' },
    success: { title: '成功对话框', content: '操作成功完成！' },
    warning: { title: '警告对话框', content: '请确认是否继续此操作？' },
    error: { title: '错误对话框', content: '发生了错误，请重试或联系技术支持' },
  }
  naiveDialog[type](dialogs[type])
}

// 加载条
function showLoadingBar() {
  loadingBar.start()
  setTimeout(() => {
    loadingBar.finish()
  }, 2000)
}

function showErrorLoadingBar() {
  loadingBar.start()
  setTimeout(() => {
    loadingBar.error()
  }, 2000)
}

// Pro Modal 示例
function showModal() {
  modal.show({
    title: '异步框示例',
    width: '600px',
    component: () => import('./form/modal.vue'),
    componentProps: {
      message: '这是一个 Pro 模态框示例',
    },
  })
}

function showSimpleModal() {
  modal.show({
    title: '简单内容模态框',
    width: '500px',
    component: () => Promise.resolve({
      setup() {
        return () => h('div', { class: 'p-6' }, [
          h('h3', { class: 'text-lg font-semibold mb-4' }, '模态框内容'),
          h('p', { class: 'text-muted mb-4' }, '这是一个简单的模态框内容示例。'),
          h('div', { class: 'flex justify-end gap-2' }, [
            h(NButton, {
              onClick: () => {
                message.success('操作成功')
              },
            }, { default: () => '确定' }),
          ]),
        ])
      },
    }),
  })
}

// Pro Dialog 示例
function showProDialog(type: 'confirm' | 'success' | 'error') {
  const dialogs = {
    confirm: {
      title: '确认操作',
      content: '确定要执行这个操作吗？此操作不可撤销。',
    },
    success: {
      title: '操作成功',
      content: '您的操作已成功完成！',
    },
    error: {
      title: '操作失败',
      content: '操作执行失败，请稍后重试。',
    },
  }

  dialog[type](dialogs[type]).then(() => {
    if (type === 'confirm') {
      message.success('已确认操作')
    }
  }).catch(() => {
    if (type === 'confirm') {
      message.info('已取消操作')
    }
  })
}

function showPromptDialog() {
  dialog.prompt({
    title: '输入信息',
    formSchema: [
      {
        name: 'username',
        label: '用户名',
        tag: NInput,
        required: true,
        placeholder: '请输入用户名',
      },
      {
        name: 'email',
        label: '邮箱',
        tag: NInput,
        required: true,
        placeholder: '请输入邮箱地址',
      },
    ],
  }).then((result) => {
    message.success(`用户名: ${result.username}, 邮箱: ${result.email}`)
  }).catch(() => {
    message.info('已取消输入')
  })
}

function showNodeDialog() {
  dialog.node({
    title: '自定义内容对话框',
    render: () => h('div', { class: 'p-4' }, [
      h('div', { class: 'mb-4' }, [
        h('h4', { class: 'text-base font-medium mb-2' }, '自定义内容'),
        h('p', { class: 'text-sm text-muted' }, '这是一个包含自定义 Vue 节点的对话框。'),
      ]),
      h('div', { class: 'grid grid-cols-2 gap-4' }, [
        h('div', { class: 'p-3 bg-blue-50 rounded' }, [
          h('div', { class: 'text-sm font-medium text-blue-800' }, '信息卡片'),
          h('div', { class: 'text-xs text-blue-600 mt-1' }, '这是一个信息卡片'),
        ]),
        h('div', { class: 'p-3 bg-green-50 rounded' }, [
          h('div', { class: 'text-sm font-medium text-green-800' }, '状态卡片'),
          h('div', { class: 'text-xs text-green-600 mt-1' }, '状态正常'),
        ]),
      ]),
    ]),
  }).then(() => {
    message.success('对话框已确认')
  })
}

// Pro Drawer 示例
function showDrawer() {
  drawer.show({
    title: '抽屉示例',
    width: '400px',
    component: () => Promise.resolve({
      setup() {
        return () => h('div', { class: 'p-6' }, [
          h('h3', { class: 'text-lg font-semibold mb-4' }, '抽屉内容'),
          h('p', { class: 'text-muted mb-4' }, '这是一个 Pro 抽屉组件示例。'),
          h('div', { class: 'space-y-3' }, [
            h('div', { class: 'flex items-center justify-between p-3 rounded' }, [
              h('span', { class: 'text-sm' }, '设置项 1'),
              h(NSwitch, { defaultValue: true }),
            ]),
            h('div', { class: 'flex items-center justify-between p-3 rounded' }, [
              h('span', { class: 'text-sm' }, '设置项 2'),
              h(NSwitch, { defaultValue: false }),
            ]),
            h('div', { class: 'flex items-center justify-between p-3 rounded' }, [
              h('span', { class: 'text-sm' }, '设置项 3'),
              h(NSwitch, { defaultValue: true }),
            ]),
          ]),
        ])
      },
    }),
  })
}

// 下拉菜单选项
const dropdownOptions = [
  {
    label: '编辑',
    key: 'edit',
  },
  {
    label: '复制',
    key: 'copy',
  },
  {
    label: '删除',
    key: 'delete',
  },
]

function handleDropdownSelect(key: string) {
  message.info(`选择了: ${key}`)
}

// 确认操作
function handleConfirm() {
  message.success('确认操作')
}

function handleCancel() {
  message.info('取消操作')
}
</script>

<template>
  <DuxPage :card="false">
    <div class="max-w-6xl mx-auto p-4">
      <div class="flex flex-col gap-4">
        <!-- Pro 库交互组件 -->
        <div class="grid grid-cols-1 lg:grid-cols-3 gap-4">
          <!-- Modal 模态框 -->
          <DuxCard title="Modal 模态框" description="支持异步组件的模态框组件">
            <div class="flex flex-col gap-3">
              <NButton block @click="showModal">
                复杂模态框
              </NButton>
              <NButton block @click="showSimpleModal">
                简单模态框
              </NButton>
            </div>
          </DuxCard>

          <!-- Dialog 对话框 -->
          <DuxCard title="Dialog 对话框" description="Pro 库提供的高级对话框组件">
            <div class="flex flex-col gap-3">
              <NButton block @click="showProDialog('confirm')">
                确认对话框
              </NButton>
              <NButton block @click="showProDialog('success')">
                成功对话框
              </NButton>
              <NButton block @click="showProDialog('error')">
                错误对话框
              </NButton>
              <NButton block @click="showPromptDialog">
                表单对话框
              </NButton>
              <NButton block @click="showNodeDialog">
                自定义对话框
              </NButton>
            </div>
          </DuxCard>

          <!-- Drawer 抽屉 -->
          <DuxCard title="Drawer 抽屉" description="侧边滑出的抽屉组件">
            <div class="flex flex-col gap-3">
              <NButton block @click="showDrawer">
                显示抽屉
              </NButton>
            </div>
          </DuxCard>
        </div>

        <!-- NaiveUI 交互组件 -->
        <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4">
          <!-- 消息通知 -->
          <DuxCard title="消息通知" description="轻量级的消息提示，用于操作反馈">
            <div class="flex flex-col gap-3">
              <NButton type="info" block @click="showMessage('info')">
                信息消息
              </NButton>
              <NButton type="success" block @click="showMessage('success')">
                成功消息
              </NButton>
              <NButton type="warning" block @click="showMessage('warning')">
                警告消息
              </NButton>
              <NButton type="error" block @click="showMessage('error')">
                错误消息
              </NButton>
            </div>
          </DuxCard>

          <!-- 通知 -->
          <DuxCard title="通知" description="显示在页面右上角的通知消息">
            <div class="flex flex-col gap-3">
              <NButton type="info" block @click="showNotification('info')">
                信息通知
              </NButton>
              <NButton type="success" block @click="showNotification('success')">
                成功通知
              </NButton>
              <NButton type="warning" block @click="showNotification('warning')">
                警告通知
              </NButton>
              <NButton type="error" block @click="showNotification('error')">
                错误通知
              </NButton>
            </div>
          </DuxCard>

          <!-- NaiveUI 对话框 -->
          <DuxCard title="NaiveUI 对话框" description="系统级别的对话框组件">
            <div class="flex flex-col gap-3">
              <NButton type="info" block @click="showNaiveDialog('info')">
                信息对话框
              </NButton>
              <NButton type="success" block @click="showNaiveDialog('success')">
                成功对话框
              </NButton>
              <NButton type="warning" block @click="showNaiveDialog('warning')">
                警告对话框
              </NButton>
              <NButton type="error" block @click="showNaiveDialog('error')">
                错误对话框
              </NButton>
            </div>
          </DuxCard>

          <!-- 加载条 -->
          <DuxCard title="加载条" description="页面顶部的加载进度条">
            <div class="flex flex-col gap-3">
              <NButton type="primary" block @click="showLoadingBar">
                显示加载条
              </NButton>
              <NButton type="error" block @click="showErrorLoadingBar">
                显示错误加载条
              </NButton>
            </div>
          </DuxCard>
        </div>

        <!-- 其他交互组件 -->
        <DuxCard title="其他交互组件" description="更多交互式组件示例">
          <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4">
            <!-- 确认弹出框 -->
            <div class="flex flex-col gap-2">
              <div class="text-sm font-medium">
                确认弹出框
              </div>
              <NPopconfirm
                @positive-click="handleConfirm"
                @negative-click="handleCancel"
              >
                <template #trigger>
                  <NButton>删除项目</NButton>
                </template>
                确定要删除这个项目吗？
              </NPopconfirm>
            </div>

            <!-- 工具提示 -->
            <div class="flex flex-col gap-2">
              <div class="text-sm font-medium">
                工具提示
              </div>
              <NTooltip trigger="hover">
                <template #trigger>
                  <NButton>悬停查看提示</NButton>
                </template>
                这是一个工具提示，提供额外的信息说明
              </NTooltip>
            </div>

            <!-- 下拉菜单 -->
            <div class="flex flex-col gap-2">
              <div class="text-sm font-medium">
                下拉菜单
              </div>
              <NDropdown
                :options="dropdownOptions"
                @select="handleDropdownSelect"
              >
                <NButton>操作菜单</NButton>
              </NDropdown>
            </div>

            <!-- 弹出框 -->
            <div class="flex flex-col gap-2">
              <div class="text-sm font-medium">
                弹出框
              </div>
              <NPopover trigger="click">
                <template #trigger>
                  <NButton>点击弹出</NButton>
                </template>
                <div class="p-2">
                  <div class="text-sm font-medium mb-2">
                    弹出框内容
                  </div>
                  <div class="text-muted text-xs">
                    这是一个弹出框，可以包含更复杂的内容和交互
                  </div>
                  <div class="mt-2 flex gap-2">
                    <NButton size="small" type="primary">
                      确定
                    </NButton>
                    <NButton size="small">
                      取消
                    </NButton>
                  </div>
                </div>
              </NPopover>
            </div>
          </div>
        </DuxCard>

        <!-- 警告提示 -->
        <DuxCard title="警告提示" description="页面内的警告和提示组件">
          <div class="flex flex-col gap-4">
            <NAlert title="信息提示" type="info">
              这是一个信息提示，用于展示一般性信息
            </NAlert>
            <NAlert title="成功提示" type="success" closable>
              这是一个成功提示，操作已成功完成
            </NAlert>
            <NAlert title="警告提示" type="warning" closable>
              这是一个警告提示，请注意相关风险
            </NAlert>
            <NAlert title="错误提示" type="error" closable>
              这是一个错误提示，操作失败请重试
            </NAlert>
          </div>
        </DuxCard>
      </div>
    </div>
  </DuxPage>
</template>



---
File: /apps/start/pages/list.vue
---

<script setup lang="ts">
import { useInfiniteList } from '@duxweb/dvha-core'
import { NInfiniteScroll } from 'naive-ui'
import { ref } from 'vue'

const pagination = ref({
  page: 1,
  pageSize: 20,
})

const filters = ref({
  keyword: '',
})

const { data, isLoading, fetchNextPage, hasNextPage } = useInfiniteList({
  path: 'user',
  pagination: pagination.value,
  filters: filters.value,
})

function handleLoad() {
  if (hasNextPage.value) {
    fetchNextPage()
  }
}
</script>

<template>
  <div class="h-full flex flex-col gap-2">
    <div class="flex gap-4 items-center">
      <NInput v-model:value="filters.keyword" placeholder="搜索" />
    </div>

    <NInfiniteScroll :distance="10" class="flex-1 h-auto" @load="handleLoad">
      <template v-for="(page, key) in data?.pages" :key="key">
        <div
          v-for="(item, index) in page?.data || []"
          :key="index"
          class="flex gap-2 items-center my-2 p-4 bg-gray-9"
        >
          <img :src="item.avatar" class="size-10">
          <div class="flex flex-col gap-1">
            <div class="text-sm">
              {{ item.nickname }}
            </div>
            <div class="text-xs text-gray-500">
              {{ item.email }}
            </div>
          </div>
        </div>
        <div v-if="isLoading" class="text-center">
          加载中...
        </div>
        <div v-if="!hasNextPage" class="text-center">
          没有更多了 🤪
        </div>
      </template>
    </NInfiniteScroll>
  </div>
</template>

<style scoped>
</style>



---
File: /apps/start/pages/login.vue
---

<script setup lang="ts">
import type { FormInst } from 'naive-ui'
import { useLogin } from '@duxweb/dvha-core'
import { useMessage } from 'naive-ui'
import { reactive, ref } from 'vue'
import { useRouter } from 'vue-router'

const router = useRouter()
const message = useMessage()

const formRef = ref<FormInst | null>(null)

const formModel = reactive({
  username: '',
  password: '',
  remember: false,
})

const rules = {
  username: [
    { required: true, message: '请输入用户名', trigger: 'blur' },
  ],
  password: [
    { required: true, message: '请输入密码', trigger: 'blur' },
  ],
}

const { mutate, isLoading } = useLogin({
  onSuccess: () => {
    message.success('登录成功')
  },
  onError: (error) => {
    message.error(error?.message || '登录失败，请检查用户名和密码')
  },
})

function handleSubmit() {
  if (!formRef.value)
    return

  formRef.value.validate((errors) => {
    if (errors)
      return

    mutate({
      username: formModel.username,
      password: formModel.password,
      code: '0000',
    })
  })
}
</script>

<template>
  <div class="flex justify-center items-center min-h-screen bg-gray-100">
    <div class="w-400px p-40px rounded-8px bg-white shadow-sm">
      <div class="text-center mb-40px">
        <h1 class="m-0 mb-8px text-24px font-600 text-gray-800">
          系统登录
        </h1>
        <p class="m-0 text-gray-500 text-14px">
          欢迎使用管理系统，请登录
        </p>
      </div>

      <n-form
        ref="formRef"
        :model="formModel"
        :rules="rules"
        label-placement="left"
      >
        <n-form-item path="username">
          <n-input
            v-model:value="formModel.username"
            placeholder="请输入用户名"
          >
            <template #prefix>
              <div class="i-tabler:user size-4" />
            </template>
          </n-input>
        </n-form-item>

        <n-form-item path="password">
          <n-input
            v-model:value="formModel.password"
            type="password"
            placeholder="请输入密码"
            show-password-on="click"
          >
            <template #prefix>
              <div class="i-tabler:lock size-4" />
            </template>
          </n-input>
        </n-form-item>

        <div class="flex justify-between items-center mb-4">
          <n-checkbox v-model:checked="formModel.remember">
            记住我
          </n-checkbox>
          <n-button text>
            忘记密码？
          </n-button>
        </div>

        <n-button
          type="primary"
          block
          :loading="isLoading"
          @click="handleSubmit"
        >
          登录
        </n-button>

        <div class="flex justify-center items-center mt-6 text-14px text-gray-500">
          <span>还没有账号？</span>
          <n-button text class="ml-2 text-primary" @click="router.push('/register')">
            立即注册
          </n-button>
        </div>
      </n-form>
    </div>
  </div>
</template>

<style scoped>
/* 所有CSS样式已替换为UnoCSS原子类 */
</style>



---
File: /apps/start/pages/posterEditor.vue
---

<script setup lang="ts">
import { DuxPosterEditor } from '@duxweb/dvha-pro'
import { ref, watch } from 'vue'

const posterData = ref('')

// 监听数据变化
watch(() => posterData.value, (newValue) => {
  if (newValue) {
    // 数据更新时的处理逻辑
  }
})
</script>

<template>
  <DuxPosterEditor
    v-model:value="posterData"
    :width="750"
    :height="1000"
    background-color="#ffffff"
  />
</template>



---
File: /apps/start/pages/render.vue
---

<script setup>
import { useJsonSchema } from '@duxweb/dvha-core'
import { DuxPage } from '@duxweb/dvha-pro'
import { computed, ref } from 'vue'

const data = ref({
  name: '张三',
  age: 18,
  gender: '男',
  address: '北京市海淀区',
  phone: '12345678901',
  email: 'zhangsan@example.com',
  isMarried: false,
  showDetails: true,
  selectedColor: 'blue',
  interests: ['编程', '阅读', '音乐'],
  counter: 0,
})

const interestOptions = ref([
  { label: '编程', value: '编程' },
  { label: '阅读', value: '阅读' },
  { label: '音乐', value: '音乐' },
  { label: '运动', value: '运动' },
  { label: '旅行', value: '旅行' },
  { label: '摄影', value: '摄影' },
])

const colorOptions = ref([
  { label: '蓝色', value: 'blue' },
  { label: '红色', value: 'red' },
  { label: '绿色', value: 'green' },
  { label: '紫色', value: 'purple' },
])

const testData = ref({
  user: {
    role: 'admin',
    permissions: ['read', 'write', 'delete'],
    settings: {
      theme: 'dark',
      language: 'zh-CN',
    },
  },
  app: {
    version: '1.0.0',
    debug: true,
  },
  numbers: [1, 2, 3, 4, 5],
  config: {
    maxItems: 3,
    showAdvanced: false,
  },
  utils: {
    formatRole: role => `角色：${role}`,
    checkPermission: (permissions, required) => permissions.includes(required),
    multiply: (a, b) => a * b,
  },
  globalFunction: data => `处理数据：${JSON.stringify(data)}`,
  mathFunc: x => x * 2 + 1,
})

const schema = computed(() => [
  {
    tag: 'n-card',
    attrs: {
      title: '全局数据访问测试',
      class: 'mb-4',
    },
    children: [
      {
        tag: 'div',
        attrs: {
          'v-if': 'testData.user.role === "admin"',
          'class': 'p-3 bg-elevated rounded mb-3',
        },
        children: [
          {
            tag: 'h4',
            attrs: {
              class: 'text-green-600 mb-2',
            },
            children: '🔑 管理员专区',
          },
          {
            tag: 'p',
            children: '当前用户角色：{{testData.user.role}}',
          },
          {
            tag: 'p',
            children: '权限数量：{{testData.user.permissions.length}}',
          },
        ],
      },
      {
        tag: 'div',
        attrs: {
          'v-show': 'testData.app.debug',
          'class': 'p-3 bg-yellow/10 border border-yellow rounded mb-3',
        },
        children: [
          {
            tag: 'h4',
            attrs: {
              class: 'text-yellow-600 mb-2',
            },
            children: '🐛 调试信息',
          },
          {
            tag: 'p',
            children: '应用版本：{{testData.app.version}}',
          },
          {
            tag: 'p',
            children: '主题设置：{{testData.user.settings.theme}}',
          },
          {
            tag: 'p',
            children: '语言设置：{{testData.user.settings.language}}',
          },
        ],
      },
      {
        tag: 'div',
        attrs: {
          'v-if': 'testData.user.permissions.includes("write")',
          'class': 'p-3 bg-primary/10 rounded',
        },
        children: [
          {
            tag: 'h4',
            attrs: {
              class: 'text-blue-600 mb-2',
            },
            children: '✏️ 编辑权限已开启',
          },
          {
            tag: 'n-button',
            attrs: {
              'type': 'primary',
              '@click': () => {
                testData.value.user.role = testData.value.user.role === 'admin' ? 'user' : 'admin'
              },
            },
            children: '切换角色 (当前: {{testData.user.role}})',
          },
        ],
      },
    ],
  },

  {
    tag: 'n-card',
    attrs: {
      title: '函数调用测试',
      class: 'mb-4',
    },
    children: [
      {
        tag: 'div',
        attrs: {
          'v-if': 'testData.utils.checkPermission(testData.user.permissions, "write")',
          'class': 'p-3 bg-green/10 rounded mb-3',
        },
        children: [
          {
            tag: 'h4',
            attrs: {
              class: 'text-green-600 mb-2',
            },
            children: '🔧 函数调用测试',
          },
          {
            tag: 'p',
            children: '{{testData.utils.formatRole(testData.user.role)}}',
          },
          {
            tag: 'p',
            children: '数学计算：2 * 3 = {{testData.utils.multiply(2, 3)}}',
          },
          {
            tag: 'p',
            children: '全局函数调用：{{testData.globalFunction(testData.user)}}',
          },
          {
            tag: 'p',
            children: '数学函数 f(5) = {{testData.mathFunc(5)}}',
          },
        ],
      },
      {
        tag: 'div',
        attrs: {
          'v-if': 'testData.numbers.length > 3',
          'class': 'p-3 bg-blue/10 rounded',
        },
        children: [
          {
            tag: 'p',
            children: '数组长度检查：{{testData.numbers.length}}',
          },
          {
            tag: 'p',
            children: '数组方法：{{testData.numbers.join(", ")}}',
          },
        ],
      },
    ],
  },

  {
    tag: 'n-card',
    attrs: {
      title: '基础信息',
      class: 'mb-4',
    },
    children: [
      {
        tag: 'div',
        attrs: {
          class: 'mb-2',
        },
        children: `姓名：${data.value.name}，年龄：${data.value.age}岁`,
      },
      {
        tag: 'n-space',
        attrs: {
          vertical: true,
          size: 'medium',
        },
        children: [
          {
            tag: 'n-input',
            attrs: {
              'v-model:value': [data.value, 'name'],
              'placeholder': '请输入姓名',
            },
            slots: {
              prefix: () => ({
                tag: 'span',
                children: '👤',
              }),
            },
          },
          {
            tag: 'n-input',
            attrs: {
              'v-model:value': [
                () => String(data.value.age),
                (val) => { data.value.age = Number(val) || 0 },
              ],
              'placeholder': '请输入年龄',
              'type': 'number',
            },
            slots: {
              prefix: () => ({
                tag: 'span',
                children: '🎂',
              }),
            },
          },
        ],
      },
    ],
  },

  {
    tag: 'n-card',
    attrs: {
      title: '条件渲染示例 (v-if/v-else)',
      class: 'mb-4',
    },
    children: [
      {
        tag: 'n-switch',
        attrs: {
          'v-model:value': [data.value, 'showDetails'],
        },
        children: '显示详细信息',
      },
      {
        tag: 'div',
        attrs: {
          'v-if': data.value.showDetails,
          'class': 'mt-3 p-3 bg-blue/10 rounded',
        },
        children: [
          {
            tag: 'h4',
            children: '详细信息',
          },
          {
            tag: 'p',
            children: `地址：${data.value.address}`,
          },
          {
            tag: 'p',
            children: `电话：${data.value.phone}`,
          },
          {
            tag: 'p',
            children: `邮箱：${data.value.email}`,
          },
        ],
      },
      {
        tag: 'div',
        attrs: {
          'v-else': true,
          'class': 'mt-3 p-3 bg-gray/10 rounded text-gray-500',
        },
        children: '详细信息已隐藏',
      },
    ],
  },

  {
    tag: 'n-card',
    attrs: {
      title: 'v-show 显示隐藏示例',
      class: 'mb-4',
    },
    children: [
      {
        tag: 'n-checkbox',
        attrs: {
          'v-model:checked': [data.value, 'isMarried'],
        },
        children: '已婚',
      },
      {
        tag: 'div',
        attrs: {
          'v-show': data.value.isMarried,
          'class': 'mt-2 p-2 bg-pink/10 rounded',
        },
        children: '💑 恭喜！已婚人士可享受特殊福利',
      },
    ],
  },

  {
    tag: 'n-card',
    attrs: {
      title: 'v-for 循环渲染示例',
      class: 'mb-4',
    },
    children: [
      {
        tag: 'h4',
        attrs: {
          class: 'mb-2',
        },
        children: '兴趣爱好：',
      },
      {
        tag: 'n-space',
        children: [
          {
            tag: 'n-tag',
            attrs: {
              'v-for': data.value.interests,
              'type': 'info',
              'round': true,
            },
            children: '{{item}}',
          },
        ],
      },
      {
        tag: 'div',
        attrs: {
          class: 'mt-3',
        },
        children: '选择更多兴趣：',
      },
      {
        tag: 'n-select',
        attrs: {
          'v-model:value': [data.value, 'interests'],
          'options': interestOptions.value,
          'multiple': true,
          'placeholder': '选择兴趣爱好',
          'class': 'mt-2',
        },
      },
    ],
  },

  // v-on 事件处理示例
  {
    tag: 'n-card',
    attrs: {
      title: 'v-on 事件处理示例',
      class: 'mb-4',
    },
    children: [
      {
        tag: 'div',
        attrs: {
          class: 'mb-3',
        },
        children: `计数器：${data.value.counter}`,
      },
      {
        tag: 'n-space',
        children: [
          {
            tag: 'n-button',
            attrs: {
              '@click': () => data.value.counter++,
              'type': 'primary',
            },
            children: '增加',
          },
          {
            tag: 'n-button',
            attrs: {
              '@click': () => data.value.counter--,
              'type': 'default',
            },
            children: '减少',
          },
          {
            tag: 'n-button',
            attrs: {
              '@click': () => data.value.counter = 0,
              'type': 'warning',
            },
            children: '重置',
          },
          {
            tag: 'n-button',
            attrs: {
              '@click.stop': (e) => {
                e.preventDefault()
                // 查看当前计数值
                data.value.name = `${data.value.name} (计数:${data.value.counter})`
              },
              'type': 'info',
            },
            children: '查看 (阻止冒泡)',
          },
        ],
      },
    ],
  },

  // 文本插值示例
  {
    tag: 'n-card',
    attrs: {
      title: '文本插值示例',
      class: 'mb-4',
    },
    children: [
      {
        tag: 'n-select',
        attrs: {
          'v-model:value': [data.value, 'selectedColor'],
          'options': colorOptions.value,
          'placeholder': '选择颜色',
          'class': 'mb-3',
        },
      },
      {
        tag: 'div',
        attrs: {
          class: `p-3 rounded bg-${data.value.selectedColor}/10 border-${data.value.selectedColor}/10 border`,
        },
        children: `您选择的颜色是：${data.value.selectedColor}`,
      },
    ],
  },

  // 综合示例：条件 + 循环 + 事件
  {
    tag: 'n-card',
    attrs: {
      title: '综合示例',
      class: 'mb-4',
    },
    children: [
      {
        tag: 'div',
        class: 'flex flex-col gap-2',
        attrs: {
          'v-if': data.value.age >= 18,
        },
        children: [
          {
            tag: 'h4',
            attrs: {
              class: 'text-green-600 mb-2',
            },
            children: '🎉 成年人专区',
          },
          {
            tag: 'div',
            attrs: {
              'v-if': data.value.interests.length > 0,
            },
            children: [
              {
                tag: 'p',
                children: '您的兴趣标签：',
              },
              {
                tag: 'div',
                attrs: {
                  class: 'flex gap-2 flex-wrap mb-1 mt-2',
                },
                children: [
                  {
                    tag: 'n-tag',
                    attrs: {
                      'v-for': data.value.interests,
                      'type': 'success',
                      'round': true,
                    },
                    children: '{{item}}',
                  },
                ],
              },
            ],
          },
          {
            tag: 'div',
            attrs: {
              'v-else': true,
              'class': 'text-gray-500',
            },
            children: '还没有添加兴趣爱好哦~',
          },
        ],
      },
      {
        tag: 'div',
        attrs: {
          'v-else': true,
          'class': 'text-orange-600',
        },
        children: '👶 未成年用户，部分功能受限',
      },
    ],
  },

  // slot 插槽示例
  {
    tag: 'n-card',
    attrs: {
      title: '插槽示例',
      class: 'mb-4',
    },
    children: [
      {
        tag: 'n-input',
        attrs: {
          'v-model:value': [data.value, 'phone'],
          'placeholder': '请输入手机号',
        },
        slots: {
          prefix: () => ({
            tag: 'n-tag',
            attrs: {
              size: 'small',
              type: 'info',
            },
            children: '📱',
          }),
          suffix: () => ({
            tag: 'n-button',
            attrs: {
              'size': 'small',
              '@click': () => {
                if (data.value.phone.length === 11) {
                  data.value.email = '验证通过✅'
                }
                else {
                  data.value.email = '请输入11位手机号❌'
                }
              },
            },
            children: '验证',
          }),
        },
      },
    ],
  },

  // 数字显示示例
  {
    tag: 'n-card',
    attrs: {
      title: '动态数字显示',
      class: 'mb-4',
    },
    children: [
      {
        tag: 'div',
        attrs: {
          class: 'mb-3',
        },
        children: `当前计数：${data.value.counter}`,
      },
      {
        tag: 'n-space',
        attrs: {
          class: 'mb-3',
        },
        children: [
          {
            tag: 'n-button',
            attrs: {
              '@click': () => data.value.counter++,
              'type': 'primary',
              'size': 'small',
            },
            children: '+1',
          },
          {
            tag: 'n-button',
            attrs: {
              '@click': () => data.value.counter += 5,
              'type': 'info',
              'size': 'small',
            },
            children: '+5',
          },
          {
            tag: 'n-button',
            attrs: {
              '@click': () => data.value.counter -= 1,
              'type': 'warning',
              'size': 'small',
            },
            children: '-1',
          },
          {
            tag: 'n-button',
            attrs: {
              '@click': () => data.value.counter = Math.max(0, data.value.counter - 5),
              'type': 'error',
              'size': 'small',
            },
            children: '-5',
          },
        ],
      },
      {
        tag: 'div',
        attrs: {
          class: 'p-3 bg-gray/10 rounded',
        },
        children: [
          {
            tag: 'p',
            attrs: {
              class: 'mb-2 text-sm text-gray-600',
            },
            children: '动态计算结果：',
          },
          {
            tag: 'n-tag',
            attrs: {
              type: 'primary',
              size: 'large',
            },
            children: `${data.value.counter}² = ${data.value.counter * data.value.counter}`,
          },
          {
            tag: 'div',
            attrs: {
              class: 'mt-2',
            },
            children: [
              {
                tag: 'n-tag',
                attrs: {
                  type: 'success',
                  class: 'mr-2',
                },
                children: `✕2 = ${data.value.counter * 2}`,
              },
              {
                tag: 'n-tag',
                attrs: {
                  type: 'warning',
                },
                children: `÷2 = ${(data.value.counter / 2).toFixed(1)}`,
              },
            ],
          },
        ],
      },
    ],
  },

  // v-for 数字列表示例
  {
    tag: 'n-card',
    attrs: {
      title: 'v-for 数字列表示例',
      class: 'mb-4',
    },
    children: [
      {
        tag: 'p',
        attrs: {
          class: 'mb-2',
        },
        children: '数字 1-5 的列表：',
      },
      {
        tag: 'n-space',
        children: [
          {
            tag: 'n-tag',
            attrs: {
              'v-for': [1, 2, 3, 4, 5],
              'type': 'primary',
              'round': true,
            },
            children: 'Number: {{item}}',
          },
        ],
      },
      {
        tag: 'div',
        attrs: {
          class: 'mt-3 mb-2',
        },
        children: '使用对象格式的 v-for：',
      },
      {
        tag: 'n-space',
        children: [
          {
            tag: 'n-tag',
            attrs: {
              'v-for': {
                list: ['红色', '绿色', '蓝色'],
                item: 'color',
                index: 'idx',
              },
              'type': 'info',
            },
            children: '{{idx}}: {{color}}',
          },
        ],
      },
    ],
  },
])

const { render } = useJsonSchema({
  data: schema,
  context: { testData },
  // components: naive,
})
</script>

<template>
  <DuxPage>
    <div class="max-w-4xl mx-auto p-4">
      <h1 class="text-2xl font-bold mb-6 text-center">
        useJsonSchema 适配器测试页面
      </h1>
      <component :is="render" />
    </div>
  </DuxPage>
</template>

<style scoped>
</style>



---
File: /apps/start/pages/setting.vue
---

<script setup lang="ts">
import { DuxFormItem, DuxFormLayout, DuxPanelAlert, DuxPanelCard, DuxSettingForm } from '@duxweb/dvha-pro'
import { NButton, NTabPane } from 'naive-ui'
import { ref } from 'vue'

const form = ref({
  nickname: '',
})
</script>

<template>
  <DuxSettingForm default-tab="account" tabs>
    <NTabPane name="account" tab="账号信息" animated>
      <DuxPanelCard title="个人资料" description="公开的个人资料信息显示">
        <template #actions>
          <NButton secondary type="primary">
            保存资料
          </NButton>
        </template>
        <DuxFormLayout class="p-6 pb-2" divider label-placement="setting" label-align="right">
          <DuxFormItem label="昵称" description="昵称是您在系统中的唯一标识，用于显示和识别。" path="nickname" rule="required">
            <NInput v-model:value="form.nickname" class="w-full" />
          </DuxFormItem>
          <DuxFormItem label="昵称" path="nickname" rule="required">
            <NInput v-model:value="form.nickname" />
          </DuxFormItem>
          <DuxFormItem label="昵称" path="nickname" rule="required">
            <NInput v-model:value="form.nickname" />
          </DuxFormItem>
          <DuxFormItem label="昵称" path="nickname" rule="required">
            <NInput v-model:value="form.nickname" />
          </DuxFormItem>
          <DuxFormItem label="昵称" path="nickname" rule="required">
            <NInput v-model:value="form.nickname" />
          </DuxFormItem>
          <DuxFormItem label="昵称" path="nickname" rule="required">
            <NInput v-model:value="form.nickname" />
          </DuxFormItem>
        </DuxFormLayout>
      </DuxPanelCard>
      <DuxPanelAlert type="error" class="mt-4" title="账号删除" description="您可以删除您的账号，但请注意，删除后将无法恢复。">
        <template #actions>
          <NButton type="error">
            删除账号
          </NButton>
        </template>
      </DuxPanelAlert>
    </NTabPane>
    <NTabPane name="security" tab="安全设置" />
    <NTabPane name="notification" tab="通知设置" />
    <NTabPane name="privacy" tab="隐私设置" />
    <NTabPane name="other" tab="其他设置" />
  </DuxSettingForm>
</template>



---
File: /apps/start/pages/stats.vue
---

<script setup lang="ts">
import { DuxCard, DuxChart, DuxMedia, DuxPage, DuxStatsNumber, DuxStatsRealTime, DuxStatsStore, DuxStatsStoreItem } from '@duxweb/dvha-pro'
import { NAlert, NButton, NDatePicker, NScrollbar } from 'naive-ui'
import { onMounted, ref } from 'vue'

// 生成随机数的工具函数
function randomBetween(min: number, max: number): number {
  return Math.floor(Math.random() * (max - min + 1)) + min
}

function randomFloat(min: number, max: number, decimals: number = 2): number {
  return Number((Math.random() * (max - min) + min).toFixed(decimals))
}

// 实时数据卡片
const realTimeCards = ref([
  {
    label: '今日订单',
    value: randomBetween(150, 500),
    color: 'text-primary',
  },
  {
    label: '待付款',
    value: randomBetween(30, 120),
    color: 'text-warning',
  },
  {
    label: '待发货',
    value: randomBetween(20, 80),
    color: 'text-info',
  },
  {
    label: '待收货',
    value: randomBetween(40, 150),
    color: 'text-success',
  },
  {
    label: '退款申请',
    value: randomBetween(2, 15),
    color: 'text-error',
  },
  {
    label: '库存预警',
    value: randomBetween(5, 25),
    color: 'text-error',
  },
])

// 实时数据图表（双图表）
const realTimeCharts = ref([
  {
    title: '今日销售额(元)',
    value: (randomBetween(50000, 200000)).toLocaleString(),
    subtitle: '较昨日',
    change: randomFloat(-15, 25, 1),
    changeType: Math.random() > 0.5 ? 'up' : 'down' as const,
    data: Array.from({ length: 7 }, () => randomBetween(40000, 180000)),
    labels: ['周一', '周二', '周三', '周四', '周五', '周六', '周日'],
  },
  {
    title: '今日订单数',
    value: randomBetween(200, 800),
    subtitle: '较昨日',
    change: randomFloat(-10, 30, 1),
    changeType: Math.random() > 0.5 ? 'up' : 'down' as const,
    data: Array.from({ length: 7 }, () => randomBetween(150, 700)),
    labels: ['周一', '周二', '周三', '周四', '周五', '周六', '周日'],
  },
])

// 店铺数据统计
const storeStats = ref([
  {
    title: '支付转化率',
    value: `${randomFloat(8, 15, 2)}%`,
    subtitle: '较昨日',
    change: randomFloat(-5, 8, 1),
    changeType: Math.random() > 0.5 ? 'up' : 'down' as const,
  },
  {
    title: '访客数',
    value: randomBetween(2000, 8000).toLocaleString(),
    subtitle: '较昨日',
    change: randomFloat(-20, 35, 1),
    changeType: Math.random() > 0.5 ? 'up' : 'down' as const,
  },
  {
    title: '浏览量',
    value: randomBetween(15000, 50000).toLocaleString(),
    subtitle: '较昨日',
    change: randomFloat(-15, 40, 1),
    changeType: Math.random() > 0.5 ? 'up' : 'down' as const,
  },
  {
    title: '客单价',
    value: `¥${randomFloat(180, 680, 2)}`,
    subtitle: '较昨日',
    change: randomFloat(-12, 25, 1),
    changeType: Math.random() > 0.5 ? 'up' : 'down' as const,
  },
  {
    title: '复购率',
    value: `${randomFloat(25, 45, 2)}%`,
    subtitle: '较昨日',
    change: randomFloat(-8, 12, 1),
    changeType: Math.random() > 0.5 ? 'up' : 'down' as const,
  },
  {
    title: '商品评分',
    value: randomFloat(4.2, 4.9, 1),
    subtitle: '较昨日',
    change: randomFloat(-0.5, 0.3, 2),
    changeType: Math.random() > 0.5 ? 'up' : 'down' as const,
  },
])

// 店铺等级
const storeLevel = ref(randomBetween(1, 5))

// 店铺余额信息
const storeBalance = ref({
  available: randomFloat(50000, 200000, 2),
  frozen: randomFloat(5000, 30000, 2),
})

// 店铺报告雷达图配置
const chartOptions = ref({
  indicator: [
    { name: '商品描述', max: 5 },
    { name: '服务态度', max: 5 },
    { name: '物流速度', max: 5 },
    { name: '商品质量', max: 5 },
    { name: '售后服务', max: 5 },
    { name: '购物体验', max: 5 },
  ],
  data: [
    {
      name: '当前评分',
      value: Array.from({ length: 6 }, () => randomFloat(4.0, 5.0, 1)),
    },
  ],
})

// 转化漏斗数据
const funnelData = ref([
  {
    name: '商品浏览',
    rate: '100%',
    metrics: [
      { label: '浏览人数', value: '0' },
      { label: '浏览次数', value: '0' },
      { label: '平均停留时间', value: '0' },
    ],
  },
  {
    name: '商品详情',
    rate: '0%',
    metrics: [
      { label: '详情人数', value: '0' },
      { label: '详情访问量', value: '0' },
      { label: '跳出率', value: '0' },
    ],
  },
  {
    name: '加入购物车',
    rate: '0%',
    metrics: [
      { label: '加购人数', value: '0' },
      { label: '加购商品数', value: '0' },
      { label: '加购转化率', value: '0' },
    ],
  },
  {
    name: '下单支付',
    rate: '0%',
    metrics: [
      { label: '下单人数', value: '0' },
      { label: '订单金额', value: '0' },
      { label: '支付成功率', value: '0' },
    ],
  },
])

// 随机生成转化漏斗数据的函数
function generateRandomFunnelData() {
  const baseVisitors = randomBetween(8000, 25000) // 基础访问量

  // 生成递减的转化率
  const detailRate = randomFloat(60, 85)
  const cartRate = randomFloat(15, 35)
  const orderRate = randomFloat(5, 18)

  const detailVisitors = Math.floor(baseVisitors * detailRate / 100)
  const cartVisitors = Math.floor(baseVisitors * cartRate / 100)
  const orderVisitors = Math.floor(baseVisitors * orderRate / 100)

  funnelData.value = [
    {
      name: '商品浏览',
      rate: '100%',
      metrics: [
        { label: '浏览人数', value: baseVisitors.toLocaleString() },
        { label: '浏览次数', value: Math.floor(baseVisitors * randomFloat(2.5, 4.5)).toLocaleString() },
        { label: '平均停留时间', value: `${randomFloat(1.5, 4.5, 1)}分钟` },
      ],
    },
    {
      name: '商品详情',
      rate: `${detailRate.toFixed(1)}%`,
      metrics: [
        { label: '详情人数', value: detailVisitors.toLocaleString() },
        { label: '详情访问量', value: Math.floor(detailVisitors * randomFloat(1.2, 2.8)).toLocaleString() },
        { label: '跳出率', value: `${randomFloat(35, 65, 1)}%` },
      ],
    },
    {
      name: '加入购物车',
      rate: `${cartRate.toFixed(1)}%`,
      metrics: [
        { label: '加购人数', value: cartVisitors.toLocaleString() },
        { label: '加购商品数', value: Math.floor(cartVisitors * randomFloat(1.3, 2.5)).toLocaleString() },
        { label: '加购转化率', value: `${(cartRate / detailRate * 100).toFixed(1)}%` },
      ],
    },
    {
      name: '下单支付',
      rate: `${orderRate.toFixed(1)}%`,
      metrics: [
        { label: '下单人数', value: orderVisitors.toLocaleString() },
        { label: '订单金额', value: `¥${(orderVisitors * randomFloat(200, 800)).toLocaleString()}` },
        { label: '支付成功率', value: `${randomFloat(88, 96, 1)}%` },
      ],
    },
  ]
}

// 刷新所有数据
function refreshAllData() {
  // 刷新实时数据卡片
  realTimeCards.value.forEach((card) => {
    switch (card.label) {
      case '今日订单':
        card.value = randomBetween(150, 500)
        break
      case '待付款':
        card.value = randomBetween(30, 120)
        break
      case '待发货':
        card.value = randomBetween(20, 80)
        break
      case '待收货':
        card.value = randomBetween(40, 150)
        break
      case '退款申请':
        card.value = randomBetween(2, 15)
        break
      case '库存预警':
        card.value = randomBetween(5, 25)
        break
    }
  })

  // 刷新实时图表数据
  realTimeCharts.value.forEach((chart) => {
    if (chart.title === '今日销售额(元)') {
      chart.value = randomBetween(50000, 200000).toLocaleString()
      chart.data = Array.from({ length: 7 }, () => randomBetween(40000, 180000))
    }
    else if (chart.title === '今日订单数') {
      chart.value = randomBetween(200, 800)
      chart.data = Array.from({ length: 7 }, () => randomBetween(150, 700))
    }
    chart.change = randomFloat(-15, 25, 1)
    chart.changeType = Math.random() > 0.5 ? 'up' : 'down'
  })

  // 刷新店铺统计数据
  storeStats.value.forEach((stat) => {
    stat.change = randomFloat(-15, 25, 1)
    stat.changeType = Math.random() > 0.5 ? 'up' : 'down'

    switch (stat.title) {
      case '支付转化率':
        stat.value = `${randomFloat(8, 15, 2)}%`
        break
      case '访客数':
        stat.value = randomBetween(2000, 8000).toLocaleString()
        break
      case '浏览量':
        stat.value = randomBetween(15000, 50000).toLocaleString()
        break
      case '客单价':
        stat.value = `¥${randomFloat(180, 680, 2)}`
        break
      case '复购率':
        stat.value = `${randomFloat(25, 45, 2)}%`
        break
      case '商品评分':
        stat.value = randomFloat(4.2, 4.9, 1)
        break
    }
  })

  // 刷新店铺余额
  storeBalance.value = {
    available: randomFloat(50000, 200000, 2),
    frozen: randomFloat(5000, 30000, 2),
  }

  // 刷新雷达图数据
  chartOptions.value.data[0].value = Array.from({ length: 6 }, () => randomFloat(4.0, 5.0, 1))

  // 刷新转化漏斗数据
  generateRandomFunnelData()
}

// 初始化时生成随机数据
onMounted(() => {
  generateRandomFunnelData()
})

// 定时刷新数据（每60秒）
// setInterval(refreshAllData, 60000)
</script>

<template>
  <DuxPage :card="false">
    <div class="flex flex-col lg:flex-row gap-4">
      <div class="flex-1 min-w-0 flex flex-col gap-4">
        <DuxStatsRealTime
          title="实时数据"
          :subtitle="`截止至 ${new Date().toLocaleDateString()} ${new Date().toLocaleTimeString()}`"
          :cards="realTimeCards"
          :charts="realTimeCharts"
          style="min-height: 300px;"
        />

        <DuxCard title="店铺数据" content-class="flex flex-col gap-4" footer-bordered>
          <NAlert type="info">
            欢迎使用商城管理系统，实时掌握店铺运营数据
          </NAlert>

          <div class="flex flex-col lg:flex-row gap-4 py-4">
            <div class="flex flex-col w-40">
              <div class="flex gap-1 items-center text-muted">
                店铺等级

                <div class="flex gap-1">
                  <div
                    v-for="i in 5" :key="i" class="size-3 rounded" :class="[
                      i <= storeLevel ? 'bg-warning' : 'bg-elevated',
                    ]"
                  />
                </div>
              </div>
              <div>当前 <span class="text-warning text-3xl font-bold">{{ storeLevel }}</span> 级</div>
              <div class="text-muted">
                <span class="text-warning">{{ storeLevel }}</span> 级店铺享受{{ storeLevel > 3 ? '高级' : '普通' }}特权
              </div>
            </div>
            <div class="h-20 flex-1 min-w-0">
              <NScrollbar x-scrollable>
                <div class="grid grid-cols-2 lg:grid-cols-[repeat(auto-fit,minmax(150px,1fr))] gap-2">
                  <DuxStatsNumber
                    v-for="stat in storeStats"
                    :key="stat.title"
                    :title="stat.title"
                    :value="stat.value"
                    :subtitle="stat.subtitle"
                    :change="stat.change"
                    :change-type="stat.changeType as any"
                  />
                </div>
              </NScrollbar>
            </div>
          </div>

          <template #footer>
            <div class="grid grid-cols-2 lg:grid-cols-[repeat(auto-fit,minmax(150px,1fr))] gap-2 overflow-hidden h-12">
              <DuxMedia title="实时在线" :desc="`当前 ${randomBetween(180, 520)} 人在线购物`">
                <template #image>
                  <div class="p-2 bg-primary/10 rounded-full text-primary">
                    <div class="i-tabler:users size-6" />
                  </div>
                </template>
              </DuxMedia>

              <DuxMedia title="热销商品" :desc="`今日热销 ${randomBetween(50, 200)} 件商品`">
                <template #image>
                  <div class="p-2 bg-info/10 rounded-full text-info">
                    <div class="i-tabler:flame size-6" />
                  </div>
                </template>
              </DuxMedia>

              <DuxMedia title="新增会员" :desc="`今日新增 ${randomBetween(20, 80)} 位会员`">
                <template #image>
                  <div class="p-2 bg-warning/10 rounded-full text-warning">
                    <div class="i-tabler:user-plus size-6" />
                  </div>
                </template>
              </DuxMedia>

              <DuxMedia title="好评率" :desc="`本月好评率 ${randomFloat(95, 99, 1)}%`">
                <template #image>
                  <div class="p-2 bg-success/10 rounded-full text-success">
                    <div class="i-tabler:thumb-up size-6" />
                  </div>
                </template>
              </DuxMedia>
            </div>
          </template>
        </DuxCard>
      </div>
      <div class="lg:w-100 flex flex-col gap-4">
        <DuxStatsStore
          title="官方自营旗舰店"
          avatar="https://picsum.photos/200/300"
          desc="优质商品，诚信经营"
          style="height: 300px;"
        >
          <template #header>
            <div>店铺评分</div>
            <div>
              描述 <span class="text-default">{{ chartOptions.data[0].value[0] }}</span>
              服务 <span class="text-default">{{ chartOptions.data[0].value[1] }}</span>
              物流 <span class="text-default">{{ chartOptions.data[0].value[2] }}</span>
            </div>
          </template>
          <template #extra>
            <NButton @click="refreshAllData">
              刷新数据
            </NButton>
          </template>
          <DuxStatsStoreItem label="可用余额" :value="`¥${storeBalance.available.toLocaleString()}`" />
          <DuxStatsStoreItem label="冻结金额" :value="`¥${storeBalance.frozen.toLocaleString()}`" />
          <DuxStatsStoreItem label="总余额" :value="`¥${(storeBalance.available + storeBalance.frozen).toLocaleString()}`" />
          <template #footer>
            <div class="flex gap-2">
              <div class="flex-1">
                <NButton secondary block>
                  提现
                </NButton>
              </div>
              <div class="flex-1">
                <NButton secondary block type="primary">
                  充值
                </NButton>
              </div>
            </div>
          </template>
        </DuxStatsStore>

        <DuxCard title="店铺报告" content-size="none">
          <DuxChart type="radar" :option="chartOptions" height="285px" />
        </DuxCard>
      </div>
    </div>
    <div class="mt-4">
      <DuxCard title="销售转化漏斗">
        <template #headerExtra>
          <div class="flex gap-2">
            <NDatePicker />
            <NButton secondary @click="generateRandomFunnelData">
              刷新数据
            </NButton>
          </div>
        </template>
        <div class="grid grid-cols-1 lg:grid-cols-3 gap-10">
          <div class="col-span-1 flex flex-col items-center gap-2 lg:gap-3.5 pt-6">
            <div class="bg-primary/30 shadow rounded w-full h-8" />
            <div class="text-muted">
              ↓ {{ funnelData[1]?.rate }}
            </div>
            <div class="bg-primary/50 shadow rounded h-8" :style="`width: ${parseFloat(funnelData[1]?.rate)}%;`" />
            <div class="text-muted">
              ↓ {{ funnelData[2]?.rate }}
            </div>
            <div class="bg-primary/70 shadow rounded h-8" :style="`width: ${parseFloat(funnelData[2]?.rate)}%;`" />
            <div class="text-muted">
              ↓ {{ funnelData[3]?.rate }}
            </div>
            <div class="bg-primary/100 shadow rounded h-8" :style="`width: ${parseFloat(funnelData[3]?.rate)}%;`" />
          </div>
          <div class="col-span-2 flex flex-col divide-y divide-muted">
            <div v-for="item in funnelData" :key="item.name" class="flex gap-2 items-center py-4">
              <div class="flex-none w-20">
                {{ item.name }}
              </div>
              <div class="flex-none w-20 text-2xl">
                {{ item.rate }}
              </div>
              <div class="flex-1 min-w-0 items-center grid grid-cols-3">
                <div v-for="metric in item.metrics" :key="metric.label" class="flex flex-col gap-1 items-center">
                  <div class="text-muted">
                    {{ metric.label }}
                    <div class="i-tabler:help-circle-filled size-4 inline ml-1 text-muted/50" />
                  </div>
                  <div class="text-default">
                    {{ metric.value }}
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </DuxCard>
    </div>
  </DuxPage>
</template>



---
File: /apps/start/pages/table.vue
---

<script setup lang="ts">
import type { TableColumn } from '@duxweb/dvha-naiveui'
import type { UseActionItem } from '@duxweb/dvha-pro'
import { DuxTablePage, useAction, useDialog, useModal, useTableColumn } from '@duxweb/dvha-pro'
import { NInput } from 'naive-ui'
import { ref } from 'vue'

const filters = ref({
  keyword: '',
})

const { show } = useModal()

const { confirm } = useDialog()

function handleCreate() {
  // confirm({
  //   title: '新增',
  //   content: 'Are you sure you want to create?',
  // })

  show({
    title: '新增',
    component: () => import('./form/modal.vue'),
    draggable: true,
  })
}

const { renderTable, renderAction } = useAction()

const { renderMedia, renderSwitch, renderStatus, renderMap, renderInput, renderImage, renderCopy, renderHidden } = useTableColumn()

const columns: TableColumn[] = [
  {
    type: 'selection',
    key: 'selection',
    width: 50,
  },
  {
    title: 'ID',
    key: 'id',
    width: 100,
  },
  {
    title: '昵称',
    key: 'nickname',
    minWidth: 100,
    render: renderInput({
      key: 'nickname',
      tag: NInput,
    }),
  },
  {
    title: '邮箱',
    key: 'email',
    minWidth: 200,
    render: renderCopy({
      key: 'email',
    }),
  },
  {
    title: '电话',
    key: 'phone',
    minWidth: 150,
    render: renderHidden({
      key: 'phone',
    }),
  },
  {
    title: '用户',
    key: 'nickname',
    minWidth: 150,
    render: renderMedia({
      image: 'avatar',
      title: 'nickname',
      desc: 'email',
      avatar: true,
      imageWidth: 36,
      imageHeight: 36,
    }),
  },
  {
    title: '联系',
    key: 'info',
    width: 300,
    render: renderMap({
      maps: [
        {
          key: 'email',
          label: '邮箱',
          icon: 'i-tabler:mail',
        },
        {
          key: 'phone',
          label: '手机',
          icon: 'i-tabler:phone',
        },
      ],
    }),
  },
  {
    title: '图片',
    key: 'images',
    minWidth: 100,
    render: renderImage({
      key: 'images',
    }),
  },
  {
    title: '状态',
    key: 'status',
    minWidth: 100,
    render: renderStatus({
      key: 'status',
      maps: {
        success: {
          label: '正常',
          value: true,
        },
        error: {
          label: '禁用',
          value: false,
        },
      },
    }),
  },
  {
    title: '状态',
    key: 'status',
    minWidth: 100,
    render: renderSwitch({
      key: 'status',
    }),
  },
  {
    title: 'Action',
    key: 'actions',
    fixed: 'right',
    width: 130,
    align: 'center',
    render: renderTable({
      type: 'dropdown',
      text: true,
      align: 'center',
      items: [
        {
          label: '编辑',
          type: 'modal',
          component: () => import('./form/modal.vue'),
          draggable: true,
        },
        {
          label: '删除',
          type: 'delete',
        },
      ],
    }),
  },
]

const tabs = ref([
  {
    label: '全部',
    value: 'all',
  },
  {
    label: '已启用',
    value: 'enabled',
  },
  {
    label: '已禁用',
    value: 'disabled',
  },
])

const filterSchema = [
  {
    tag: NInput,
    attrs: {
      'placeholder': '请输入关键词搜索',
      'v-model:value': [filters.value, 'keyword'],
    },
  },
]

const actions = ref<UseActionItem[]>([
  {
    label: '新增',
    type: 'modal',
    component: () => import('./form/modal.vue'),
    draggable: true,
  },
])
</script>

<template>
  <DuxTablePage
    path="user"
    :columns="columns"
    :filter="filters"
    :tabs="tabs"
    :filter-schema="filterSchema"
    :actions="actions"
    pagination
  />
</template>

<style scoped>
</style>



---
File: /apps/start/.gitignore
---

# See https://help.github.com/articles/ignoring-files/ for more about ignoring files.

# dependencies
/node_modules
/.pnp
.pnp.js
.yarn/install-state.gz

# testing
/coverage

# next.js
/.next/
/out/

# production
/build

# misc
.DS_Store
*.pem

# debug
npm-debug.log*
yarn-debug.log*
yarn-error.log*

# env files (can opt-in for commiting if needed)
.env*

# vercel
.vercel

# typescript
*.tsbuildinfo
next-env.d.ts



---
File: /apps/start/CHANGELOG.md
---

# dvha-pro

## 0.0.2

### Patch Changes

- Updated dependencies
  - @duxweb/dvha-naiveui@1.0.4
  - @duxweb/dvha-core@0.1.18



---
File: /apps/start/index.html
---

<!doctype html>
<html lang="en">
  <head>
    <meta name="naive-ui-style" />
    <meta charset="UTF-8" />
    <link rel="icon" type="image/svg+xml" href="/vite.svg" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Dux Vue Example</title>
  </head>
  <body>
    <div id="app" v-cloak un-cloak></div>
    <script type="module" src="/main.ts"></script>
  </body>
</html>



---
File: /apps/start/main.ts
---

import type { IConfig } from '@duxweb/dvha-core'
import { createDux, i18nProvider, simpleAuthProvider, simpleDataProvider } from '@duxweb/dvha-core'
import * as DuxNaiveUI from '@duxweb/dvha-naiveui'
import * as DuxPro from '@duxweb/dvha-pro'
import * as NaiveUI from 'naive-ui'
import { createApp } from 'vue'

// import '@duxweb/dvha-pro/style.css'

import '@duxweb/dvha-pro/theme/style.scss'

const { createDuxPro, DuxApp, DuxAuthLayout, DuxLayout, DuxLoginPage, DuxPage404, DuxPage500, enUS, zhCN } = DuxPro

const app = createApp(DuxApp)

const config: IConfig = {
  defaultManage: 'admin',
  manages: [
    {
      name: 'admin',
      title: 'Dvha Pro',
      routePrefix: '/admin',
      apiBasePath: '/admin',
      apiRoutePath: '/routes',
      components: {
        authLayout: DuxAuthLayout,
        noAuthLayout: DuxLayout,
        notFound: DuxPage404,
        error: DuxPage500,
      },
      userMenus: [
        {
          label: '设置',
          key: 'setting',
          icon: 'i-tabler:settings',
          path: 'setting',
        },
      ],
      routes: [
        {
          name: 'admin.login',
          path: 'login',
          component: DuxLoginPage,
          meta: {
            authorization: false,
          },
        },
      ],
      menus: [
        {
          name: 'home',
          path: 'index',
          icon: 'i-tabler:home',
          label: '工作台',
          component: () => import('./pages/home.vue'),
        },
        {
          name: 'stats',
          path: 'stats',
          icon: 'i-tabler:chart-bar',
          label: '统计',
          component: () => import('./pages/stats.vue'),
        },

        {
          name: 'example.list',
          icon: 'i-tabler:layout-kanban',
          label: '列表 ',
        },
        {
          name: 'table',
          path: 'table',
          icon: 'i-tabler:table',
          label: '表格列表',
          component: () => import('./pages/table.vue'),
          parent: 'example.list',
        },
        {
          name: 'list.card',
          path: 'list/card',
          icon: 'i-tabler:list-check',
          label: '卡片列表',
          parent: 'example.list',
          component: () => import('./pages/list/card.vue'),
        },
        {
          name: 'list.article',
          path: 'list/article',
          icon: 'i-tabler:article',
          label: '文章列表',
          parent: 'example.list',
          component: () => import('./pages/list/article.vue'),
        },
        {
          name: 'list.list',
          path: 'list/list',
          icon: 'i-tabler:list',
          label: '订单列表',
          parent: 'example.list',
          component: () => import('./pages/list/list.vue'),
        },
        {
          name: 'example.form',
          icon: 'i-tabler:layout-kanban',
          label: '表单',
        },
        {
          name: 'form.ui',
          path: 'form/ui',
          icon: 'i-tabler:forms',
          label: '基本组件',
          component: () => import('./pages/form/ui.vue'),
          parent: 'example.form',
        },
        {
          name: 'form.form',
          path: 'form/form',
          icon: 'i-tabler:forms',
          label: '高阶组件',
          component: () => import('./pages/form/page.vue'),
          parent: 'example.form',
        },
        {
          name: 'form.setting',
          path: 'form/setting',
          icon: 'i-tabler:settings',
          label: '设置页面',
          hidden: false,
          component: () => import('./pages/setting.vue'),
          parent: 'example.form',
        },
        {
          name: 'interaction',
          path: 'interaction',
          icon: 'i-tabler:chart-bar',
          label: '交互',
          component: () => import('./pages/interaction.vue'),
        },
        {
          name: 'chart',
          path: 'chart',
          icon: 'i-tabler:chart-bar',
          label: '图表',
          component: () => import('./pages/chart.vue'),
        },
        {
          name: 'render',
          icon: 'i-tabler:layout-kanban',
          label: '渲染',
        },
        {
          name: 'render.json',
          path: 'render/json',
          label: 'Json渲染',
          parent: 'render',
          icon: 'i-tabler:json',
          component: () => import('./pages/render.vue'),
        },
        {
          name: 'render.remote',
          path: 'render/remote',
          icon: 'i-tabler:list-check',
          label: '远程渲染',
          loader: 'remote',
          parent: 'render',
          meta: {
            path: '/remote',
          },

        },
        {
          name: 'poster',
          path: 'poster',
          icon: 'i-tabler:photo',
          label: '图像',
          component: () => import('./pages/posterEditor.vue'),
        },
        {
          name: 'design',
          path: 'design',
          icon: 'i-tabler:code',
          label: '设计',
          component: () => import('./pages/designEditor.vue'),
        },
      ],
    },
  ],
  dataProvider: simpleDataProvider({
    apiUrl: 'https://m1.apifoxmock.com/m1/4407506-4052338-default',
  }),
  authProvider: simpleAuthProvider(),
  i18nProvider: i18nProvider({
    locale: 'zh-CN',
    fallbackLocale: 'en-US',
    messages: {
      'zh-CN': zhCN,
      'en-US': enUS,
    },
  }),
  remote: {
    packages: {
      'naive-ui': NaiveUI,
      '@duxweb/dvha-pro': DuxPro,
    },
  },
  jsonSchema: {
    components: [
      ...Object.values(DuxPro).filter(comp => comp?.name?.startsWith?.('Dux')),
      ...Object.values(DuxNaiveUI).filter(comp => comp?.name?.startsWith?.('Dux')),
      ...Object.entries(NaiveUI)
        .filter(([key, _comp]) => {
          return key.startsWith?.('N')
        })
        .map((comp) => {
          const component = comp[1] as any
          component.name = comp[0]
          return component
        }),
    ],
  },
}

app.use(createDux(config))

app.use(NaiveUI)
app.use(createDuxPro())

app.mount('#app')



---
File: /apps/start/package.json
---

{
  "name": "dvha-start",
  "type": "module",
  "version": "0.0.1",
  "private": true,
  "author": "DuxWeb",
  "license": "MIT",
  "files": [
    "README.md",
    "dist",
    "package.json"
  ],
  "scripts": {
    "dev": "vite dev",
    "build": "vite build",
    "preview": "vite preview"
  },
  "dependencies": {
    "@duxweb/dvha-core": "workspace:*",
    "@duxweb/dvha-naiveui": "workspace:*",
    "@duxweb/dvha-pro": "workspace:*"
  },
  "devDependencies": {
    "naive-ui": "^2.42.0",
    "vue": "^3.5.0",
    "vue-router": "^4.5.1"
  }
}



---
File: /apps/start/tsconfig.json
---

{
  "compilerOptions": {
    "target": "ESNext",
    "jsx": "preserve",
    "jsxImportSource": "vue",
    "lib": ["ESNext", "DOM"],
    "moduleDetection": "force",
    "useDefineForClassFields": true,

    "baseUrl": ".",
    "module": "ESNext",

    "moduleResolution": "bundler",
    "resolveJsonModule": true,
    "allowJs": true,
    "strict": true,
    "noFallthroughCasesInSwitch": true,

    "noImplicitAny": false,
    "noUnusedLocals": true,
    "noUnusedParameters": true,
    "declaration": true,
    "importHelpers": true,
    "noEmit": false,
    "outDir": "./dist",
    "allowSyntheticDefaultImports": true,
    "esModuleInterop": true,
    "isolatedModules": true,
    "skipLibCheck": true
  },
  "include": [
    "**/*.ts",
    "**/*.tsx",
    "**/*.d.ts"
  ],
  "exclude": ["node_modules", "dist"]
}



---
File: /apps/start/typings.d.ts
---

// typings.d.ts
declare module '*.css' {
  const content: string
  export default content
}

declare module '*?raw' {
  const content: string
  export default content
}



---
File: /apps/start/vite-env.d.ts
---

/// <reference types="vite/client" />



---
File: /apps/start/vite.config.ts
---

import { resolve } from 'node:path'
import vue from '@vitejs/plugin-vue'
import VueJsx from '@vitejs/plugin-vue-jsx'
import { defineConfig } from 'vite'

export default defineConfig(({ mode }) => ({
  base: mode === 'production' ? '/dvha/start/' : '/',
  plugins: [
    vue(),
    VueJsx(),
  ],
  resolve: {
    alias: {
      '@duxweb/dvha-core': resolve(__dirname, '../../packages/core/src'),
      '@duxweb/dvha-naiveui': resolve(__dirname, '../../packages/naiveui/src'),
      '@duxweb/dvha-elementui': resolve(__dirname, '../../packages/elementui/src'),
      '@duxweb/dvha-pro': resolve(__dirname, '../../packages/pro/src'),
    },
  },
  output: {
    manualChunks: {
      'vendor-vue': ['vue', 'vue-router'],
      'vendor-naive': ['naive-ui'],
      'vendor-echarts': ['echarts', 'vue-echarts'],
      'vendor-vueuse': ['@vueuse/core'],
      'vendor-pinia': ['pinia', 'pinia-plugin-persistedstate'],
      'vendor-loader': ['vue3-sfc-loader'],
      'vendor-lodash': ['lodash-es', 'lodash'],
      'vendor-icon': ['@iconify-json/tabler'],
    },
  },
  build: {
    rollupOptions: {
      input: {
        index: resolve(__dirname, 'index.html'),
      },
      output: {
      },
    },
    outDir: resolve(__dirname, 'dist'),
  },
}))



---
File: /packages/core/src/components/auth/can.tsx
---

import type { PropType } from 'vue'
import { defineComponent } from 'vue'
import { useCan } from '../../hooks'

export const DuxCan = defineComponent({
  name: 'DuxCan',
  props: {
    name: { type: String, required: true },
    params: { type: Object as PropType<any> },
  },
  setup(props, { slots }) {
    const can = useCan()
    return () => can(props.name, props.params) ? slots.default?.() : (slots.fallback?.() || null)
  },
})



---
File: /packages/core/src/components/auth/index.ts
---

export * from './can'



---
File: /packages/core/src/components/common/icon.tsx
---

import clsx from 'clsx'
import { defineComponent } from 'vue'

export const DuxLogoIcon = defineComponent({
  name: 'DuxLogoIcon',
  props: {
    highlight: { type: String, default: 'fill-primary' },
  },
  setup(props) {
    return () => (
      <svg
        xmlns="http://www.w3.org/2000/svg"
        viewBox="0 0 202.97 197.7"
        class={clsx([
          props.highlight,
        ])}
      >
        <path d="M170,94.52l-35.9-20.73-24.34,14,11.62,6.71a5,5,0,0,1,0,8.66L32.5,154.52a5,5,0,0,1-7.5-4.33V99.61a6.44,6.44,0,0,1,0-1.52V47.51a5,5,0,0,1,7.5-4.33l35,20.23,24.32-14L7.5.68A5,5,0,0,0,0,5V192.69A5,5,0,0,0,7.5,197L170,103.18A5,5,0,0,0,170,94.52Z" />
        <path d="M32.93,103.18l35.9,20.73,24.34-14-11.62-6.71a5,5,0,0,1,0-8.66l88.92-51.34a5,5,0,0,1,7.5,4.33V98.09a6.44,6.44,0,0,1,0,1.52v50.58a5,5,0,0,1-7.5,4.33l-35-20.23-24.32,14L195.47,197a5,5,0,0,0,7.5-4.33V5a5,5,0,0,0-7.5-4.33L32.93,94.52A5,5,0,0,0,32.93,103.18Z" />
      </svg>
    )
  },
})



---
File: /packages/core/src/components/common/index.ts
---

export * from './logo'
export * from './icon'



---
File: /packages/core/src/components/common/logo.tsx
---

import clsx from 'clsx'
import { defineComponent } from 'vue'

export const DuxLogo = defineComponent({
  name: 'DuxLogo',
  props: {
    dark: { type: Boolean, default: false },
    highlight: { type: String, default: 'fill-primary' },
  },
  setup(props) {
    return () => (
      <svg
        class="w-auto h-full"
        viewBox="0 0 400.893 121.787"
        version="1.1"
        xmlns="http://www.w3.org/2000/svg"
      >
        <g
          transform="translate(-6545.000000, -3038.106602) translate(6345.000000, 2899.000000) translate(200.000000, 132.393398)"
          fill-rule="nonzero"
          stroke="none"
          stroke-width="1"
          fill="none"
        >
          <path
            d="M0 62.607v50c0 8.284 6.716 15 15 15s15-6.716 15-15v-50c0-8.285-6.716-15-15-15s-15 6.715-15 15z"
            class={clsx([
              props.dark ? 'fill-white/90' : 'fill-black dark:fill-white/90',
            ])}
          />
          <path
            d="M60 7.607c33.137 0 60 26.863 60 60s-26.863 60-60 60h-5c-8.284 0-15-6.716-15-15 0-8.285 6.716-15 15-15h5c16.57 0 30-13.432 30-30 0-16.57-13.43-30-30-30H15c-8.284 0-15-6.716-15-15 0-8.285 6.716-15 15-15h45z"
            class={clsx([
              props.dark ? 'fill-white/90' : 'fill-black dark:fill-white/90',
            ])}
          />
          <path
            d="M201 7.607c33.137 0 60 26.863 60 60s-26.863 60-60 60h-46c-8.284 0-15-6.716-15-15 0-8.285 6.716-15 15-15h46c16.57 0 30-13.432 30-30 0-16.57-13.43-30-30-30h-45.5c-8.284 0-15-6.716-15-15 0-8.285 6.716-15 15-15H201z"
            class={clsx([
              props.dark ? 'fill-white/90' : 'fill-black dark:fill-white/90',
            ])}
            transform="translate(200.500000, 67.606602) rotate(90.000000) translate(-200.500000, -67.606602) "
          />
          <g transform="translate(279.106602, 6.713203)">
            <path
              d="M25.607 4.393 52.893 31.68c5.858 5.858 5.858 15.356 0 21.213-5.857 5.858-15.355 5.858-21.213 0L4.393 25.607c-5.857-5.858-5.857-15.356 0-21.214 5.858-5.857 15.356-5.857 21.214 0zm91.786 0c5.858 5.858 5.858 15.356 0 21.214L90.107 52.893c-5.858 5.858-15.356 5.858-21.214 0-5.857-5.857-5.857-15.355 0-21.213L96.18 4.393c5.858-5.857 15.356-5.857 21.213 0zm-64.5 64.5c5.858 5.858 5.858 15.356 0 21.214l-27.286 27.286c-5.858 5.858-15.356 5.858-21.214 0-5.857-5.857-5.857-15.355 0-21.213L31.68 68.893c5.858-5.857 15.356-5.857 21.213 0z"
              class={clsx([
                props.dark ? 'fill-white/90' : 'fill-black dark:fill-white/90',
              ])}
            />
            <path
              d="m90.107 68.893 27.286 27.287c5.858 5.858 5.858 15.356 0 21.213-5.857 5.858-15.355 5.858-21.213 0L68.893 90.107c-5.857-5.858-5.857-15.356 0-21.214 5.858-5.857 15.356-5.857 21.214 0z"
              class={clsx([
                props.highlight,
              ])}
            />
          </g>
        </g>
      </svg>
    )
  },
})



---
File: /packages/core/src/components/loader/remote/index.ts
---

export * from './loader'
export * from './render'



---
File: /packages/core/src/components/loader/remote/loader.tsx
---

import type { Options, Resource } from 'vue3-sfc-loader'
import * as vueQuery from '@tanstack/vue-query'
import * as vueUse from '@vueuse/core'
import axios from 'axios'
import crypto from 'crypto-js'
import dayjs from 'dayjs'
import * as _ from 'lodash-es'
import * as math from 'mathjs'
import mime from 'mime'
import mitt from 'mitt'
import * as pinia from 'pinia'
import * as Vue from 'vue'
import { loadModule } from 'vue3-sfc-loader'
import * as vueRouter from 'vue-router'
import { useManage } from '../../../hooks'
import * as index from '../../../index'

const styleCache = new Map<string, boolean>()

function hashString(str: string): string {
  return crypto.MD5(str).toString().substring(0, 10)
}

export function sfcLoader(path: string) {
  const client = index.useClient()

  const { mergeLocale } = index.useI18n()

  const { config } = useManage()

  const options: Options = {
    moduleCache: {
      'vue': Vue,
      '@duxweb/dvha-core': index,
      '@vueuse/core': vueUse,
      '@tanstack/vue-query': vueQuery,
      'axios': axios,
      'crypto': crypto,
      'mime': mime,
      'math': math,
      'mitt': mitt,
      'lodash-es': _,
      'pinia': pinia,
      'dayjs': dayjs,
      'vue-router': vueRouter,
      ...config?.remote?.packages,

      'static!': function (content: string, _path: string, type: string) {
        const name = mime.getType(type)
        if (name?.startsWith('image')) {
          return `data:${name};charset=utf-8;base64,${btoa(content)}`
        }
        if (type === '.json') {
          return JSON.parse(content)
        }
        throw new Error(`${type} unable to parse`)
      },
    },
    async handleModule(type: string, getContentData: () => any) {
      if (type === '.vue') {
        return undefined
      }
      if (type === '.json') {
        const contentData = await getContentData()

        const { render: JsonRender } = index.useJsonSchema({
          data: contentData?.nodes || {},
          context: contentData?.data || {},
        })

        return () => <JsonRender />
      }
      if (type === '.mjs') {
        return undefined
      }
      return getContentData()
    },
    customBlockHandler(block) {
      if (block.type === 'i18n') {
        const messages = JSON.parse(block.content)
        for (const locale in messages) {
          mergeLocale(locale, messages[locale])
        }
      }
    },
    getFile: async (url) => {
      url = removeSuffix(url, '.vue')
      url = removeSuffix(url, '.json')

      const res = await client.request({
        path: typeof config?.remote?.apiRoutePath === 'function' ? config?.remote?.apiRoutePath(url) : config?.remote?.apiRoutePath || `static`,
        payload: {
          path: url,
        },
        method: config?.remote?.apiMethod || 'POST',
      }).then((res) => {
        return res?.data
      }).catch((err) => {
        throw new Error(`${err?.message} ${url}`)
      })

      let fileType = res?.type || '.vue'

      if (res?.type?.endsWith('js') || res?.type?.endsWith('ts') || res?.type?.endsWith('jsx') || res?.type?.endsWith('tsx')) {
        fileType = '.mjs'
      }

      return {
        content: res?.content,
        type: fileType,
      }
    },
    getResource({ refPath, relPath }, options: Options): Resource {
      const { moduleCache, pathResolve, getFile } = options

      const [resourceRelPath, ...loaders] = relPath.match(/([^!]+!)|[^!]+$/g).reverse()

      const processContentThroughLoaders = (content, path, type, options) => {
        return loaders.reduce((content, loader) => {
          return moduleCache[loader](content, path, type, options)
        }, content)
      }

      const path = pathResolve({ refPath, relPath: resourceRelPath }, options)
      const id = loaders.join('') + path

      const isPackage = (p: string) => {
        if (p.startsWith('@'))
          return true
        return !p.includes('/') && !p.startsWith('.')
      }

      return {
        id,
        path,
        async getContent() {
          if (isPackage(path)) {
            throw new Error(`Package ${path} not imported`)
          }

          const { content, type } = await getFile(path)

          return {
            getContentData: async (_asBinary: boolean) => processContentThroughLoaders(content, path, type, options),
            type,
          }
        },
      }
    },
    addStyle(textContent) {
      const hash = hashString(textContent)

      if (styleCache.has(hash)) {
        return
      }

      styleCache.set(hash, true)

      const style = document.createElement('style')
      style.textContent = textContent
      style.setAttribute('data-hash', hash)

      document.head.appendChild(style)
    },
  }

  return () => loadModule(`${path}`, { ...options })
}

function removeSuffix(url: string, suffix: string) {
  const regex = new RegExp(`${suffix}$`)
  return url.replace(regex, '')
}



---
File: /packages/core/src/components/loader/remote/render.tsx
---

import { defineAsyncComponent, defineComponent } from 'vue'
import { useRoute } from 'vue-router'
import { useRouteStore } from '../../../stores'
import { sfcLoader } from './loader'

export const DuxRemoteRender = defineComponent({
  name: 'DuxRemoteRender',
  setup(_props) {
    const route = useRoute()
    const routeStore = useRouteStore()
    const info = routeStore.searchRouteName(route.name as string)

    const AsyncComp = defineAsyncComponent({
      loader: sfcLoader(info?.meta?.path),
    })

    return () => <AsyncComp />
  },
})



---
File: /packages/core/src/components/loader/iframe.tsx
---

import { defineComponent } from 'vue'
import { useRoute } from 'vue-router'

export default defineComponent({
  name: 'DuxLoaderIframe',
  setup(_props) {
    const route = useRoute()
    return () => (
      <iframe src={route.meta?.url as string} style={{ width: '100%', height: '100%', border: 'none' }}></iframe>
    )
  },
})



---
File: /packages/core/src/components/loader/index.ts
---

export { default as DuxLoaderIframe } from './iframe'



---
File: /packages/core/src/components/loader/loader.tsx
---

import { defineComponent } from 'vue'
import { DuxException } from '../status'
import { DuxRemoteRender } from './remote'

export default defineComponent({
  name: 'DuxLoaderRemote',
  setup(_props) {

    return () => (
      <div class="app-remote-loader">
        <DuxException>
          <DuxRemoteRender />
        </DuxException>
      </div>
    )
  },
})



---
File: /packages/core/src/components/overlay/index.ts
---

export * from './overlay'



---
File: /packages/core/src/components/overlay/overlay.tsx
---

import { useExtendOverlay } from '@overlastic/vue'
import { defineAsyncComponent, defineComponent, Transition } from 'vue'

export const DuxOverlay = defineComponent({
  name: 'DuxOverlay',
  props: {
    component: Function,
    componentProps: Object,
    mask: {
      type: Boolean,
      default: true,
    },
    maskClosable: {
      type: Boolean,
      default: true,
    },
    duration: {
      type: Number,
      default: 300,
    },
    zIndex: {
      type: Number,
      default: 1000,
    },
  },
  setup(props) {
    const { visible, resolve, reject } = useExtendOverlay({
      duration: props.duration,
    })

    const params = props?.componentProps || {}
    params.onConfirm = resolve
    params.onClose = reject

    const Modal = defineAsyncComponent(props.component as () => Promise<any>)

    const handleMaskClick = () => {
      if (props.maskClosable) {
        reject()
      }
    }
    return () => (
      <div
        class="fixed inset-0 flex items-center justify-center overflow-auto"
        style={{
          zIndex: props.zIndex,
        }}
      >
        <Transition
          enterActiveClass="transition-opacity"
          enterFromClass="opacity-0"
          enterToClass="opacity-100"
          leaveActiveClass="transition-opacity"
          leaveFromClass="opacity-100"
          leaveToClass="opacity-0"
        >
          {visible.value && props.mask && (
            <div
              class="fixed inset-0 bg-black bg-opacity-30"
              style={{
                transitionDuration: `${props.duration}ms`,
              }}
              onClick={handleMaskClick}
            >
            </div>
          )}
        </Transition>

        <Transition
          enterActiveClass="transition-all"
          enterFromClass="opacity-0 scale-95"
          enterToClass="opacity-100 scale-100"
          leaveActiveClass="transition-all"
          leaveFromClass="opacity-100 scale-100"
          leaveToClass="opacity-0 scale-95"
        >
          {visible.value && (
            <Modal {...params} />
          )}
        </Transition>
      </div>
    )
  },
})



---
File: /packages/core/src/components/status/error.tsx
---

import { defineComponent } from 'vue'

export const DuxError = defineComponent({
  name: 'DuxError',
  setup() {
    return () => (
      <div>
        <h1>500</h1>
        <p>Internal Server Error</p>
      </div>
    )
  },
})



---
File: /packages/core/src/components/status/exception.tsx
---

import { defineComponent, onErrorCaptured, ref } from 'vue'
import { useRoute } from 'vue-router'

export const DuxException = defineComponent({
  name: 'DuxException',
  setup(_props, { slots }) {
    const data = ref<Record<string, any> | null>(null)
    const route = useRoute()

    onErrorCaptured((err) => {
      console.error(err)
      if (!route.name) {
        data.value = {
          title: '404',
          desc: 'Page not found',
        }
      }
      else {
        data.value = {
          title: '500',
          desc: err?.message || 'Internal Server Error',
        }
      }
      return false
    })

    return () => data.value
      ? (
          <div>
            <h1>{data.value?.title || 'Unknown'}</h1>
            <p>{data.value?.desc || 'Unknown Description'}</p>
            <p>Use config.components.exception to configure the exception layout</p>
          </div>
        )
      : slots.default?.()
  },
})



---
File: /packages/core/src/components/status/index.ts
---

export * from './error'
export * from './exception'
export * from './notAuthorized'
export * from './notFound'



---
File: /packages/core/src/components/status/notAuthorized.tsx
---

import { defineComponent } from 'vue'

export const DuxNotAuthorized = defineComponent({
  name: 'DuxNotAuthorized',
  setup() {
    return () => (
      <div>
        <h1>403</h1>
        <p>You are not authorized to access this page</p>
      </div>
    )
  },
})



---
File: /packages/core/src/components/status/notFound.tsx
---

import { defineComponent } from 'vue'

export const DuxNotFound = defineComponent({
  name: 'DuxNotFound',
  setup() {
    return () => (
      <div>
        <h1>404</h1>
        <p>Page not found</p>
      </div>
    )
  },
})



---
File: /packages/core/src/components/index.ts
---

export * from './auth'
export * from './common'
export * from './loader'
export * from './overlay'
export * from './status'



---
File: /packages/core/src/config/color.ts
---

export const themeColor = {
  slate: {
    50: '#f8fafc',
    100: '#f1f5f9',
    200: '#e2e8f0',
    300: '#cbd5e1',
    400: '#94a3b8',
    500: '#64748b',
    600: '#475569',
    700: '#334155',
    800: '#1e293b',
    900: '#0f172a',
    950: '#020617',
  },
  gray: {
    50: '#f9fafb',
    100: '#f3f4f6',
    200: '#e5e7eb',
    300: '#d1d5db',
    400: '#9ca3af',
    500: '#6b7280',
    600: '#4b5563',
    700: '#374151',
    800: '#1f2937',
    900: '#111827',
    950: '#030712',
  },
  zinc: {
    50: '#fafafa',
    100: '#f4f4f5',
    200: '#e4e4e7',
    300: '#d4d4d8',
    400: '#a1a1aa',
    500: '#71717a',
    600: '#52525b',
    700: '#3f3f46',
    800: '#27272a',
    900: '#18181b',
    950: '#09090b',
  },
  neutral: {
    50: '#fafafa',
    100: '#f5f5f5',
    200: '#e5e5e5',
    300: '#d4d4d4',
    400: '#a3a3a3',
    500: '#737373',
    600: '#525252',
    700: '#404040',
    800: '#262626',
    900: '#171717',
    950: '#0a0a0a',
  },
  stone: {
    50: '#fafaf9',
    100: '#f5f5f4',
    200: '#e7e5e4',
    300: '#d6d3d1',
    400: '#a8a29e',
    500: '#78716c',
    600: '#57534e',
    700: '#44403c',
    800: '#292524',
    900: '#1c1917',
    950: '#0c0a09',
  },
  red: {
    50: '#fef2f2',
    100: '#fee2e2',
    200: '#fecaca',
    300: '#fca5a5',
    400: '#f87171',
    500: '#ef4444',
    600: '#dc2626',
    700: '#b91c1c',
    800: '#991b1b',
    900: '#7f1d1d',
    950: '#450a0a',
  },
  orange: {
    50: '#fff7ed',
    100: '#ffedd5',
    200: '#fed7aa',
    300: '#fdba74',
    400: '#fb923c',
    500: '#f97316',
    600: '#ea580c',
    700: '#c2410c',
    800: '#9a3412',
    900: '#7c2d12',
    950: '#431407',
  },
  amber: {
    50: '#fffbeb',
    100: '#fef3c7',
    200: '#fde68a',
    300: '#fcd34d',
    400: '#fbbf24',
    500: '#f59e0b',
    600: '#d97706',
    700: '#b45309',
    800: '#92400e',
    900: '#78350f',
    950: '#451a03',
  },
  yellow: {
    50: '#fefce8',
    100: '#fef9c3',
    200: '#fef08a',
    300: '#fde047',
    400: '#facc15',
    500: '#eab308',
    600: '#ca8a04',
    700: '#a16207',
    800: '#854d0e',
    900: '#713f12',
    950: '#422006',
  },
  lime: {
    50: '#f7fee7',
    100: '#ecfccb',
    200: '#d9f99d',
    300: '#bef264',
    400: '#a3e635',
    500: '#84cc16',
    600: '#65a30d',
    700: '#4d7c0f',
    800: '#3f6212',
    900: '#365314',
    950: '#1a2e05',
  },
  green: {
    50: '#f0fdf4',
    100: '#dcfce7',
    200: '#bbf7d0',
    300: '#86efac',
    400: '#4ade80',
    500: '#22c55e',
    600: '#16a34a',
    700: '#15803d',
    800: '#166534',
    900: '#14532d',
    950: '#052e16',
  },
  emerald: {
    50: '#ecfdf5',
    100: '#d1fae5',
    200: '#a7f3d0',
    300: '#6ee7b7',
    400: '#34d399',
    500: '#10b981',
    600: '#059669',
    700: '#047857',
    800: '#065f46',
    900: '#064e3b',
    950: '#022c22',
  },
  teal: {
    50: '#f0fdfa',
    100: '#ccfbf1',
    200: '#99f6e4',
    300: '#5eead4',
    400: '#2dd4bf',
    500: '#14b8a6',
    600: '#0d9488',
    700: '#0f766e',
    800: '#115e59',
    900: '#134e4a',
    950: '#042f2e',
  },
  cyan: {
    50: '#ecfeff',
    100: '#cffafe',
    200: '#a5f3fc',
    300: '#67e8f9',
    400: '#22d3ee',
    500: '#06b6d4',
    600: '#0891b2',
    700: '#0e7490',
    800: '#155e75',
    900: '#164e63',
    950: '#083344',
  },
  sky: {
    50: '#f0f9ff',
    100: '#e0f2fe',
    200: '#bae6fd',
    300: '#7dd3fc',
    400: '#38bdf8',
    500: '#0ea5e9',
    600: '#0284c7',
    700: '#0369a1',
    800: '#075985',
    900: '#0c4a6e',
    950: '#082f49',
  },
  blue: {
    50: '#eff6ff',
    100: '#dbeafe',
    200: '#bfdbfe',
    300: '#93c5fd',
    400: '#60a5fa',
    500: '#3b82f6',
    600: '#2563eb',
    700: '#1d4ed8',
    800: '#1e40af',
    900: '#1e3a8a',
    950: '#172554',
  },
  indigo: {
    50: '#eef2ff',
    100: '#e0e7ff',
    200: '#c7d2fe',
    300: '#a5b4fc',
    400: '#818cf8',
    500: '#6366f1',
    600: '#4f46e5',
    700: '#4338ca',
    800: '#3730a3',
    900: '#312e81',
    950: '#1e1b4b',
  },
  violet: {
    50: '#f5f3ff',
    100: '#ede9fe',
    200: '#ddd6fe',
    300: '#c4b5fd',
    400: '#a78bfa',
    500: '#8b5cf6',
    600: '#7c3aed',
    700: '#6d28d9',
    800: '#5b21b6',
    900: '#4c1d95',
    950: '#2e1065',
  },
  purple: {
    50: '#faf5ff',
    100: '#f3e8ff',
    200: '#e9d5ff',
    300: '#d8b4fe',
    400: '#c084fc',
    500: '#a855f7',
    600: '#9333ea',
    700: '#7e22ce',
    800: '#6b21a8',
    900: '#581c87',
    950: '#3b0764',
  },
  fuchsia: {
    50: '#fdf4ff',
    100: '#fae8ff',
    200: '#f5d0fe',
    300: '#f0abfc',
    400: '#e879f9',
    500: '#d946ef',
    600: '#c026d3',
    700: '#a21caf',
    800: '#86198f',
    900: '#701a75',
    950: '#4a044e',
  },
  pink: {
    50: '#fdf2f8',
    100: '#fce7f3',
    200: '#fbcfe8',
    300: '#f9a8d4',
    400: '#f472b6',
    500: '#ec4899',
    600: '#db2777',
    700: '#be185d',
    800: '#9d174d',
    900: '#831843',
    950: '#500724',
  },
  rose: {
    50: '#fff1f2',
    100: '#ffe4e6',
    200: '#fecdd3',
    300: '#fda4af',
    400: '#fb7185',
    500: '#f43f5e',
    600: '#e11d48',
    700: '#be123c',
    800: '#9f1239',
    900: '#881337',
    950: '#4c0519',
  },
}



---
File: /packages/core/src/config/index.ts
---

export * from './color'



---
File: /packages/core/src/directive/index.ts
---

export * from './permission'



---
File: /packages/core/src/directive/permission.ts
---

import type { Directive, DirectiveBinding } from 'vue'
import { useCan } from '../hooks'

export const permissionDirective: Directive = {
  mounted(el: HTMLElement, binding: DirectiveBinding): void {
    const { value } = binding
    if (!value) {
      return
    }
    const can = useCan()
    if (!can(value)) {
      el.parentElement?.removeChild(el)
    }
  },
}



---
File: /packages/core/src/hooks/json/utils/contextManager.ts
---

/**
 * 合并父子上下文
 */
export function mergeContext(parentContext: Record<string, any>, childContext: Record<string, any>): Record<string, any> {
  return {
    ...parentContext,
    ...childContext,
  }
}

/**
 * 从属性中提取上下文
 */
export function extractContext(props: Record<string, any>): Record<string, any> {
  return props._context || {}
}

/**
 * 注入上下文到属性
 */
export function injectContext(props: Record<string, any>, context: Record<string, any>): Record<string, any> {
  if (Object.keys(context).length === 0) {
    return props
  }

  return {
    ...props,
    _context: context,
  }
}

/**
 * 清理属性中的内部字段
 */
export function cleanProps(props: Record<string, any>): Record<string, any> {
  const { _context, ...cleanedProps } = props
  return cleanedProps
}

/**
 * 创建适配器处理结果
 */
export function createAdaptorResult(props: Record<string, any>, options: {
  skip?: boolean
  nodes?: any[]
  cleanKeys?: string[]
} = {}) {
  const cleanedProps = { ...props }

  if (options.cleanKeys) {
    options.cleanKeys.forEach(key => delete cleanedProps[key])
  }

  return {
    props: cleanedProps,
    skip: options.skip,
    nodes: options.nodes,
  }
}

/**
 * 通用条件求值函数
 */
export function evaluateCondition(value: any, context: Record<string, any>, evaluateExpression: (expr: string, ctx: Record<string, any>) => any): boolean {
  if (typeof value === 'string') {
    return Boolean(evaluateExpression(value, context))
  }
  return Boolean(value)
}



---
File: /packages/core/src/hooks/json/utils/expressionParser.ts
---

import jsep from 'jsep'
import { unref } from 'vue'

jsep.addIdentifierChar('$')
jsep.addIdentifierChar('@')

export function parseExpression(expression: string): jsep.Expression | null {
  try {
    return jsep(expression)
  }
  catch (error) {
    console.warn(`Expression parsing failed: ${expression}`, error)
    return null
  }
}

export function evaluateExpression(expression: string, context: Record<string, any>): any {
  const ast = parseExpression(expression)
  if (!ast)
    return undefined

  return evaluateAst(ast, context)
}

function evaluateAst(node: any, context: Record<string, any>): any {
  if (!node || typeof node !== 'object')
    return undefined

  switch (node.type) {
    case 'Literal':
      return node.value

    case 'Identifier':
      return getNestedValue(context, node.name)

    case 'MemberExpression': {
      const object = evaluateAst(node.object, context)
      if (object == null)
        return undefined

      const property = node.computed
        ? evaluateAst(node.property, context)
        : node.property?.name

      // 解包响应式数据
      const unwrappedObject = unref(object)
      return unwrappedObject?.[property]
    }

    case 'BinaryExpression': {
      const left = evaluateAst(node.left, context)
      const right = evaluateAst(node.right, context)

      const ops = {
        '+': () => left + right,
        '-': () => left - right,
        '*': () => left * right,
        '/': () => left / right,
        '%': () => left % right,
        '==': () => left === right,
        '===': () => left === right,
        '!=': () => left !== right,
        '!==': () => left !== right,
        '<': () => left < right,
        '>': () => left > right,
        '<=': () => left <= right,
        '>=': () => left >= right,
      }

      return ops[node.operator]?.() ?? undefined
    }

    case 'LogicalExpression': {
      const left = evaluateAst(node.left, context)

      if (node.operator === '&&')
        return left && evaluateAst(node.right, context)
      if (node.operator === '||')
        return left || evaluateAst(node.right, context)
      if (node.operator === '??')
        return left ?? evaluateAst(node.right, context)

      return undefined
    }

    case 'UnaryExpression': {
      const arg = evaluateAst(node.argument, context)

      if (node.operator === '!')
        return !arg
      if (node.operator === '-')
        return -arg
      if (node.operator === '+')
        return +arg

      return undefined
    }

    case 'ConditionalExpression': {
      const test = evaluateAst(node.test, context)
      return test
        ? evaluateAst(node.consequent, context)
        : evaluateAst(node.alternate, context)
    }

    case 'CallExpression': {
      const callee = evaluateAst(node.callee, context)

      // 解包响应式函数
      const unwrappedCallee = unref(callee)

      if (typeof unwrappedCallee !== 'function') {
        console.warn('Attempting to call non-function value:', unwrappedCallee)
        return undefined
      }

      const args = Array.isArray(node.arguments)
        ? node.arguments.map((arg: any) => {
            const result = evaluateAst(arg, context)
            return unref(result) // 解包参数中的响应式数据
          })
        : []

      try {
        // 获取函数所属的对象作为 this 上下文
        let thisContext
        if (node.callee.type === 'MemberExpression') {
          const object = evaluateAst(node.callee.object, context)
          thisContext = unref(object)
        }

        return unwrappedCallee.apply(thisContext, args)
      }
      catch (error) {
        console.warn('Function call error:', error)
        return undefined
      }
    }

    case 'ArrayExpression': {
      if (!Array.isArray(node.elements))
        return []

      return node.elements.map((element: any) => {
        if (!element)
          return undefined
        const result = evaluateAst(element, context)
        return unref(result)
      })
    }

    default:
      console.warn(`Unsupported expression type: ${node.type}`)
      return undefined
  }
}

function getNestedValue(obj: any, path: string): any {
  if (!path || !obj)
    return undefined

  try {
    return path.split('.').reduce((current, key) => {
      if (current == null)
        return undefined
      // 解包每一层的响应式数据
      const unwrapped = unref(current)
      return unwrapped?.[key]
    }, obj)
  }
  catch {
    return undefined
  }
}

export interface VForParseResult {
  items: any[]
  itemName: string
  indexName: string
}

export function parseVForExpression(expression: string, context: Record<string, any>): VForParseResult {
  const trimmed = expression.trim()

  const tupleMatch = trimmed.match(/^\((\w+),\s*(\w+)\) in (.+)$/)
  if (tupleMatch) {
    const [, itemName, indexName, listExpr] = tupleMatch
    const items = evaluateExpression(listExpr, context)
    const unwrappedItems = unref(items)
    return {
      items: Array.isArray(unwrappedItems) ? unwrappedItems : [],
      itemName,
      indexName,
    }
  }

  const simpleMatch = trimmed.match(/^(\w+) in (.+)$/)
  if (simpleMatch) {
    const [, itemName, listExpr] = simpleMatch
    const items = evaluateExpression(listExpr, context)
    const unwrappedItems = unref(items)
    return {
      items: Array.isArray(unwrappedItems) ? unwrappedItems : [],
      itemName,
      indexName: 'index',
    }
  }

  throw new Error(`Invalid v-for expression: ${expression}`)
}

export function extractVariables(ast: jsep.Expression): string[] {
  const variables = new Set<string>()

  function walk(node: any): void {
    if (!node || typeof node !== 'object')
      return

    switch (node.type) {
      case 'Identifier':
        variables.add(node.name)
        break
      case 'MemberExpression':
        walk(node.object)
        if (node.computed)
          walk(node.property)
        break
      case 'BinaryExpression':
      case 'LogicalExpression':
        walk(node.left)
        walk(node.right)
        break
      case 'UnaryExpression':
        walk(node.argument)
        break
      case 'ConditionalExpression':
        walk(node.test)
        walk(node.consequent)
        walk(node.alternate)
        break
      case 'CallExpression':
        walk(node.callee)
        if (Array.isArray(node.arguments)) {
          node.arguments.forEach((arg: any) => walk(arg))
        }
        break
      case 'ArrayExpression':
        if (Array.isArray(node.elements)) {
          node.elements.forEach((element: any) => {
            if (element)
              walk(element)
          })
        }
        break
    }
  }

  walk(ast)
  return Array.from(variables)
}



---
File: /packages/core/src/hooks/json/index.ts
---

import type { IJsonAdaptor } from './types'
import { vForAdaptor } from './vFor'
import { vIfAdaptor } from './vIf'
import { vModelAdaptor } from './vModel'
import { vOnAdaptor } from './vOn'
import { vShowAdaptor } from './vShow'
import { vTextAdaptor } from './vText'

export const defaultAdaptors: IJsonAdaptor[] = [
  vIfAdaptor,
  vShowAdaptor,
  vForAdaptor,
  vModelAdaptor,
  vOnAdaptor,
  vTextAdaptor,
].sort((a, b) => b.priority - a.priority)

export * from './types'
export {
  vForAdaptor,
  vIfAdaptor,
  vModelAdaptor,
  vOnAdaptor,
  vShowAdaptor,
  vTextAdaptor,
}



---
File: /packages/core/src/hooks/json/types.ts
---

import type { Component } from 'vue'

export interface JsonSchemaNode {
  tag: string | Component
  attrs?: Record<string, any>
  children?: JsonSchemaNode | JsonSchemaNode[] | string
  slots?: Record<string, SlotContent>
  [key: string]: any
}

export type SlotContent =
  | string
  | JsonSchemaNode
  | JsonSchemaNode[]
  | ((slotProps?: any) => SlotContent)

export interface IJsonAdaptorResult {
  props: Record<string, any>
  skip?: boolean
  nodes?: JsonSchemaNode[]
}

export interface IJsonAdaptor {
  name: string
  priority: number
  process: (node: JsonSchemaNode, props: Record<string, any>) => IJsonAdaptorResult | null
}

export interface JsonAdaptorOptions {
  adaptors?: IJsonAdaptor[]
}

export type EventModifier = 'prevent' | 'stop' | 'once' | 'capture' | 'self' | 'passive'

export interface VForConfig {
  list: any[]
  item?: string
  index?: string
}

export type VModelBinding =
  | [object, string]
  | [() => any, (val: any) => void]



---
File: /packages/core/src/hooks/json/vFor.ts
---

import type { IJsonAdaptor, IJsonAdaptorResult, JsonSchemaNode } from './types'
import type { VForParseResult } from './utils/expressionParser'
import { cleanProps, extractContext, injectContext } from './utils/contextManager'
import { parseVForExpression } from './utils/expressionParser'

export const vForAdaptor: IJsonAdaptor = {
  name: 'v-for',
  priority: 90,
  process(node: JsonSchemaNode, props: Record<string, any>): IJsonAdaptorResult | null {
    const vForValue = node.attrs?.['v-for'] || node.attrs?.vFor
    if (!vForValue) {
      return null
    }

    const newAttrs = { ...node.attrs }
    delete newAttrs['v-for']
    delete newAttrs.vFor

    const parentContext = extractContext(props)
    let parseResult: VForParseResult

    try {
      if (Array.isArray(vForValue)) {
        parseResult = {
          items: vForValue,
          itemName: 'item',
          indexName: 'index',
        }
      }
      else if (typeof vForValue === 'object' && vForValue.list) {
        parseResult = {
          items: Array.isArray(vForValue.list) ? vForValue.list : [],
          itemName: vForValue.item || 'item',
          indexName: vForValue.index || 'index',
        }
      }
      else if (typeof vForValue === 'string') {
        parseResult = parseVForExpression(vForValue, parentContext)
      }
      else {
        console.warn('Unsupported v-for format:', vForValue)
        return null
      }
    }
    catch (error) {
      console.warn('v-for parsing failed:', error)
      return null
    }

    const nodes: JsonSchemaNode[] = parseResult.items.map((item, index) => {
      const itemContext = {
        [parseResult.itemName]: item,
        [parseResult.indexName]: index,
      }

      const mergedContext = { ...parentContext, ...itemContext }

      return {
        ...node,
        attrs: {
          ...newAttrs,
          key: `${parseResult.itemName}_${index}`,
          ...injectContext({}, mergedContext),
        },
      }
    })

    return {
      props: cleanProps(props),
      nodes,
    }
  },
}



---
File: /packages/core/src/hooks/json/vIf.ts
---

import type { IJsonAdaptor, JsonSchemaNode } from './types'
import { createAdaptorResult, evaluateCondition, extractContext } from './utils/contextManager'
import { evaluateExpression } from './utils/expressionParser'

export const vIfAdaptor: IJsonAdaptor = {
  name: 'v-if',
  priority: 100,
  process(node: JsonSchemaNode, props: Record<string, any>) {
    const attrs = node.attrs || {}
    const context = extractContext(props)

    let condition: any

    if (attrs['v-if'] !== undefined) {
      condition = evaluateCondition(attrs['v-if'], context, evaluateExpression)
    }
    else if (attrs['v-else-if'] !== undefined) {
      condition = evaluateCondition(attrs['v-else-if'], context, evaluateExpression)
    }
    else if (attrs['v-else'] !== undefined) {
      condition = true
    }

    if (condition === undefined) {
      return null
    }

    return createAdaptorResult(props, {
      skip: !condition,
      cleanKeys: ['v-if', 'v-else-if', 'v-else'],
    })
  },
}



---
File: /packages/core/src/hooks/json/vModel.ts
---

import type { IJsonAdaptor, VModelBinding } from './types'
import { toRef } from 'vue'
import { extractContext } from './utils/contextManager'
import { evaluateExpression } from './utils/expressionParser'

export const vModelAdaptor: IJsonAdaptor = {
  name: 'v-model',
  priority: 70,
  process(_node, props) {
    const modelProps: Record<string, any> = {}
    const restProps: Record<string, any> = {}
    let hasModel = false
    const context = extractContext(props)

    Object.entries(props).forEach(([key, value]) => {
      if (key.startsWith('v-model') || key.startsWith('vModel')) {
        hasModel = true

        const [modelPart, ...modifiers] = key.split('.')

        let modelName: string
        if (modelPart === 'v-model' || modelPart === 'vModel') {
          modelName = 'modelValue'
        }
        else if (modelPart.startsWith('v-model:')) {
          modelName = modelPart.slice(8)
        }
        else if (modelPart.startsWith('vModel:')) {
          modelName = modelPart.slice(7)
        }
        else {
          modelName = 'modelValue'
        }

        try {
          const { modelValue, updateFn } = createModelBinding(value as VModelBinding, modifiers, context)

          modelProps[modelName] = modelValue
          modelProps[`onUpdate:${modelName}`] = updateFn
        }
        catch (error) {
          console.error(`v-model binding error (${modelName}):`, error)
        }
      }
      else {
        restProps[key] = value
      }
    })

    return hasModel ? { props: { ...restProps, ...modelProps } } : null
  },
}

function createModelBinding(value: VModelBinding | any, modifiers: string[], context: Record<string, any>) {
  // 如果是字符串表达式，尝试从 context 中解析
  if (typeof value === 'string') {
    // 简单的路径解析，如 'row.name' -> context.row.name
    const getValue = () => {
      try {
        return evaluateExpression(value, context)
      }
      catch (error) {
        console.warn(`v-model: Failed to evaluate expression "${value}"`, error)
        return undefined
      }
    }

    const setValue = (newValue: any) => {
      try {
        // 解析路径，如 'row.name' -> ['row', 'name']
        const parts = value.split('.')
        if (parts.length >= 2) {
          const objPath = parts.slice(0, -1).join('.')
          const propName = parts[parts.length - 1]
          const obj = evaluateExpression(objPath, context)

          if (obj && typeof obj === 'object') {
            obj[propName] = applyModifiers(newValue, modifiers)
            return
          }
        }
        console.warn(`v-model: Cannot update expression "${value}". Target object not found.`)
      }
      catch (error) {
        console.warn(`v-model: Failed to update expression "${value}"`, error)
      }
    }

    return {
      modelValue: getValue(),
      updateFn: setValue,
    }
  }

  if (Array.isArray(value) && value.length === 2
    && typeof value[0] === 'function' && typeof value[1] === 'function') {
    const [getter, setter] = value

    return {
      modelValue: getter(),
      updateFn: (newValue: any) => {
        setter(applyModifiers(newValue, modifiers))
      },
    }
  }

  if (Array.isArray(value) && value.length === 2) {
    const [obj, prop] = value

    if (!obj || typeof prop !== 'string') {
      throw new Error('Invalid v-model binding format: [obj, prop] expected')
    }

    const valueRef = toRef(obj, prop)

    return {
      modelValue: valueRef.value,
      updateFn: (newValue: any) => {
        valueRef.value = applyModifiers(newValue, modifiers)
      },
    }
  }

  const valueRef = toRef(value)

  if (valueRef === value && typeof value !== 'object') {
    return {
      modelValue: value,
      updateFn: () => {
        console.warn('v-model: Cannot update non-reactive value. Please use ref, [obj, prop], or [getter, setter] format.')
      },
    }
  }

  return {
    modelValue: valueRef.value,
    updateFn: (newValue: any) => {
      valueRef.value = applyModifiers(newValue, modifiers)
    },
  }
}

function applyModifiers(value: any, modifiers: string[]): any {
  return modifiers.reduce((val, modifier) => {
    switch (modifier) {
      case 'trim':
        return typeof val === 'string' ? val.trim() : val
      case 'number': {
        const num = Number(val)
        return Number.isNaN(num) ? val : num
      }
      case 'lazy':
        return val
      default:
        console.warn(`Unknown v-model modifier: ${modifier}`)
        return val
    }
  }, value)
}



---
File: /packages/core/src/hooks/json/vOn.ts
---

import type { IJsonAdaptor } from './types'

export const vOnAdaptor: IJsonAdaptor = {
  name: 'v-on',
  priority: 60,
  process(_node, props) {
    const eventProps: Record<string, any> = {}
    const restProps: Record<string, any> = {}
    let hasEvents = false

    Object.entries(props).forEach(([key, value]) => {
      if (key.startsWith('@') || key.startsWith('v-on:')) {
        hasEvents = true

        const eventPart = key.startsWith('@') ? key.slice(1) : key.slice(5)
        const [eventName, ...modifiers] = eventPart.split('.')

        if (!eventName) {
          console.warn(`Invalid event name: ${key}`)
          return
        }

        const handlerName = `on${eventName.charAt(0).toUpperCase()}${eventName.slice(1)}`

        const handler = (event: Event, ...args: any[]) => {
          if (modifiers.includes('prevent'))
            event.preventDefault?.()
          if (modifiers.includes('stop'))
            event.stopPropagation?.()
          try {
            if (typeof value === 'function') {
              return value(event, ...args)
            }
            else {
              console.warn(`Invalid event handler type: ${typeof value}`)
            }
          }
          catch (error) {
            console.error(`Event handler execution error (${eventName}):`, error)
          }
        }

        eventProps[handlerName] = handler
      }
      else {
        restProps[key] = value
      }
    })

    return hasEvents ? { props: { ...restProps, ...eventProps } } : null
  },
}



---
File: /packages/core/src/hooks/json/vShow.ts
---

import type { IJsonAdaptor, JsonSchemaNode } from './types'
import { evaluateCondition, extractContext } from './utils/contextManager'
import { evaluateExpression } from './utils/expressionParser'

export const vShowAdaptor: IJsonAdaptor = {
  name: 'v-show',
  priority: 95,
  process(node: JsonSchemaNode, props: Record<string, any>) {
    const vShowValue = node.attrs?.['v-show']
    if (vShowValue === undefined)
      return null

    const context = extractContext(props)
    const show = evaluateCondition(vShowValue, context, evaluateExpression)

    const cleanProps = { ...props }
    delete cleanProps['v-show']

    const currentStyle = cleanProps.style || {}
    const newStyle = typeof currentStyle === 'object'
      ? { ...currentStyle, display: show ? undefined : 'none' }
      : { display: show ? undefined : 'none' }

    return {
      props: {
        ...cleanProps,
        style: newStyle,
      },
    }
  },
}



---
File: /packages/core/src/hooks/json/vText.ts
---

import type { IJsonAdaptor, IJsonAdaptorResult, JsonSchemaNode } from './types'
import { evaluateExpression } from './utils/expressionParser'

/**
 * 检查字符串是否包含插值表达式
 */
function hasInterpolation(str: string): boolean {
  return typeof str === 'string' && /\{\{.+?\}\}/.test(str)
}

/**
 * 处理字符串插值
 */
function processStringInterpolation(text: string, context: Record<string, any>): string {
  if (!hasInterpolation(text)) {
    return text
  }

  return text.replace(/\{\{([^}]+)\}\}/g, (match, expression) => {
    try {
      const result = evaluateExpression(expression.trim(), context)
      return String(result ?? '')
    }
    catch (error) {
      console.warn(`Interpolation expression evaluation failed: ${expression}`, error)
      return match
    }
  })
}

export const vTextAdaptor: IJsonAdaptor = {
  name: 'v-text',
  priority: 50,
  process(node: JsonSchemaNode, props: Record<string, any>): IJsonAdaptorResult | null {
    const context = props._context || {}
    let hasChanges = false
    let childrenChanged = false

    const processedProps: Record<string, any> = {}
    Object.entries(props).forEach(([key, value]) => {
      if (typeof value === 'string' && hasInterpolation(value)) {
        const newValue = processStringInterpolation(value, context)
        if (newValue !== value) {
          processedProps[key] = newValue
          hasChanges = true
        }
        else {
          processedProps[key] = value
        }
      }
      else {
        processedProps[key] = value
      }
    })

    let processedChildren = node.children
    if (typeof node.children === 'string' && hasInterpolation(node.children)) {
      const newText = processStringInterpolation(node.children, context)
      if (newText !== node.children) {
        processedChildren = newText
        hasChanges = true
        childrenChanged = true
      }
    }

    if (!hasChanges) {
      return null
    }

    if (childrenChanged) {
      const newNode = {
        ...node,
        attrs: node.attrs,
        children: processedChildren,
      }
      return {
        props: processedProps,
        nodes: [newNode],
      }
    }

    return {
      props: processedProps,
    }
  },
}



---
File: /packages/core/src/hooks/upload/index.ts
---

export * from './types'
export * from './local'
export * from './s3'


---
File: /packages/core/src/hooks/upload/local.ts
---

import type { IDataProviderResponse } from '../../types'
import type { IUploadDriver, IUploadDriverOptions } from './types'
import { useClient } from '../data'

export function createLocalUploadDriver(): IUploadDriver {
  const client = useClient()
  return {
    upload(file: File, options: IUploadDriverOptions): Promise<IDataProviderResponse> {
      const query: Record<string, any> = options.query || {}
      let payload: File | FormData | null = null

      if (options.method === 'PUT') {
        Object.entries(options.params || {}).forEach(([key, value]) => {
          query[key] = value
        })
        payload = file
      }
      else {
        const formData = new FormData()
        formData.append('file', file)
        Object.entries(options.params || {}).forEach(([key, value]) => {
          formData.append(key, value)
        })
        payload = formData
      }

      return client.request({
        ...options,
        query,
        method: options.method || 'POST',
        payload,
        signal: options.signal,
        onUploadProgress: options.onUploadProgress,
      })
    },
  }
}



---
File: /packages/core/src/hooks/upload/s3.ts
---

import type { IDataProviderResponse } from '../../types'
import { useClient } from '../data'
import type { IUploadDriver, IUploadDriverOptions } from './types'
import axios from 'axios'

export interface IS3SignData {
  uploadUrl: string
  url: string
  params?: Record<string, string>
}

export function createS3UploadDriver(config: {
  signPath: string
  signCallback?: (response: IDataProviderResponse) => IS3SignData
  [key: string]: any
}): IUploadDriver {

  const client = useClient()

  return {
    async upload(file: File, options: IUploadDriverOptions): Promise<IDataProviderResponse> {

      const signResponse = await client.request({
        method: 'GET',
        path: config.signPath,
        query: {
          name: file.name,
          size: file.size,
          mime: file.type,
          ...options.params,
        },
        signal: options.signal,
        onUploadProgress: options.onUploadProgress,
      })

      const signData = config.signCallback?.(signResponse) || {
        uploadUrl: signResponse.data?.uploadUrl,
        url: signResponse.data?.url,
        params: signResponse.data?.params
      }

      if (!signData.uploadUrl) {
        throw new Error('Upload URL is required')
      }

      if (!signData.url) {
        throw new Error('File URL is required')
      }

      const method = options.method || 'POST'
      let uploadPayload: File | FormData | null = null
      const headers = options.headers || {}

      if (method === 'PUT') {
        uploadPayload = file
        headers['Content-Type'] = file.type || 'application/octet-stream'
      } else {
        const formData = new FormData()
        formData.append('Content-Type', file.type || 'application/octet-stream')
        formData.append('file', file)
        if (signData.params) {
          Object.entries(signData.params).forEach(([key, value]) => {
            formData.append(key, String(value))
          })
        }
        uploadPayload = formData
      }

      const uploadResponse = await axios.request({
        method,
        url: signData.uploadUrl,
        data: uploadPayload,
        signal: options.signal,
        headers,
        onUploadProgress: (progressEvent) => {
          if (options.onUploadProgress && progressEvent.total) {
            const percent = Math.round((progressEvent.loaded * 100) / progressEvent.total)
            options.onUploadProgress({
              loaded: progressEvent.loaded,
              total: progressEvent.total,
              percent,
            })
          }
        },
      })

      if (uploadResponse.status < 200 || uploadResponse.status >= 300) {
        throw new Error(`S3 upload failed: ${uploadResponse.statusText}`)
      }

      return {
        data: {
          url: signData.url,
          filename: file.name,
          size: file.size,
          mime: file.type,
        },
        message: 'upload successful',
      }
    }
  }
}


---
File: /packages/core/src/hooks/upload/types.ts
---

import type { IDataProviderCustomOptions, IDataProviderResponse } from '../../types'

export interface IUploadDriver {
  upload: (file: File, options: IUploadDriverOptions) => Promise<IDataProviderResponse>
}

export interface IUploadDriverOptions extends Omit<IDataProviderCustomOptions, 'onUploadProgress' | 'onDownloadProgress'> {
  method?: 'POST' | 'PUT'
  signal?: AbortSignal
  onUploadProgress?: (progressData: {
    loaded: number
    total?: number
    percent?: number
  }) => void
  params?: Record<string, string>
}



---
File: /packages/core/src/hooks/auth.ts
---

import type { IAuthActionResponse, IAuthCheckResponse, IAuthErrorResponse, IAuthLoginResponse, IAuthLogoutResponse, IDataProviderError } from '../types'
import { ref } from 'vue'
import { useRouter } from 'vue-router'
import { useAuthStore } from '../stores/auth'
import { useManage } from './manage'

/**
 * Auth login params
 */
export interface IAuthLoginParams {
  onSuccess?: (data?: IAuthLoginResponse) => void
  onError?: (error?: IAuthLoginResponse) => void
}

/**
 * Auth logout params
 */
export interface IAuthLogoutParams {
  onSuccess?: (data?: IAuthLogoutResponse) => void
  onError?: (error?: IAuthLogoutResponse) => void
}

/**
 * Auth check params
 */
export interface IAuthCheckParams {
  onSuccess?: (data?: IAuthCheckResponse) => void
  onError?: (error?: IAuthCheckResponse) => void
}

/**
 * Auth action params
 */
export interface IAuthActionParams {
  onSuccess?: (data?: IAuthActionResponse) => void
  onError?: (error?: IAuthActionResponse) => void
}

/**
 * Login
 * login to manage
 * @param onSuccess Login success callback
 * @param onError Login error callback
 * @returns Login method
 */
export function useLogin(props?: IAuthLoginParams) {
  const manage = useManage()
  const authStore = useAuthStore()
  const router = useRouter()
  const loading = ref(false)

  const mutate = async (data: Record<string, any>) => {
    loading.value = true
    const result = await manage.config.authProvider?.login(data, manage)
    loading.value = false
    if (result?.success) {
      if (!result?.data) {
        throw new Error('Login response data is undefined')
      }
      props?.onSuccess?.(result)
      authStore.login(result.data)
      router.push(manage.getRoutePath(result.redirectTo || '/'))
      return
    }
    props?.onError?.(result)
  }

  return {
    mutate,
    isLoading: loading,
  }
}

/**
 * Logout
 * logout from manage
 * @param onSuccess Logout success callback
 * @param onError Logout error callback
 * @returns Logout method
 */
export function useLogout(props?: IAuthLogoutParams) {
  const manage = useManage()
  const authStore = useAuthStore()
  const router = useRouter()

  const mutate = async (params?: any) => {
    const result = await manage.config.authProvider?.logout(params, manage)
    if (result?.success) {
      props?.onSuccess?.(result)
      authStore.logout()
      await router.replace(manage.getRoutePath(result.redirectTo || '/login'))
      setTimeout(() => {
        window.location.reload()
      }, 100)
      return
    }
    props?.onError?.(result)
  }

  return {
    mutate,
  }
}

/**
 * Check
 * check auth
 * @param onSuccess Check success callback
 * @param onError Check error callback
 * @returns Check method
 */
export function useCheck(props?: IAuthCheckParams) {
  const manage = useManage()
  const authStore = useAuthStore()
  const router = useRouter()

  const mutate = async (params?: any) => {
    const result = await manage.config.authProvider?.check?.(params, manage, authStore.getUser())
    if (result?.success) {
      props?.onSuccess?.(result)
      if (!result?.data) {
        throw new Error('Check response data is undefined')
      }
      authStore.update(result.data)
      return
    }
    props?.onError?.(result)
    if (!result?.logout) {
      return
    }
    await router.replace(manage.getRoutePath(result.redirectTo || '/login'))
    setTimeout(() => {
      window.location.reload()
    }, 100)
  }

  return {
    mutate,
  }
}

/**
 * Register
 * register to manage
 * @param onSuccess Register success callback
 * @param onError Register error callback
 * @returns Register method
 */
export function useRegister(props?: IAuthLoginParams) {
  const manage = useManage()
  const authStore = useAuthStore()
  const router = useRouter()
  const mutate = async (data: Record<string, any>) => {
    const result = await manage.config.authProvider?.register?.(data, manage)
    if (result?.success) {
      props?.onSuccess?.(result)
      if (!result?.data) {
        throw new Error('Register response data is undefined')
      }
      authStore.login(result.data)
      router.push(manage.getRoutePath(result.redirectTo || '/'))
      return
    }
    props?.onError?.(result)
  }
  return {
    mutate,
  }
}

/**
 * Forgot password
 * @param onSuccess Forgot password success callback
 * @param onError Forgot password error callback
 * @returns Forgot password method
 */
export function useForgotPassword(props?: IAuthActionParams) {
  const manage = useManage()
  const router = useRouter()

  const mutate = async (params?: any) => {
    const result = await manage.config.authProvider?.forgotPassword?.(params, manage)
    if (result?.success) {
      props?.onSuccess?.(result)
      if (result.redirectTo) {
        router.push(manage.getRoutePath(result.redirectTo || '/'))
      }
      return
    }
    props?.onError?.(result)
  }

  return {
    mutate,
  }
}

/**
 * Update password
 * @param onSuccess Update password success callback
 * @param onError Update password error callback
 * @returns Update password method
 */
export function useUpdatePassword(props?: IAuthActionParams) {
  const manage = useManage()
  const router = useRouter()

  const mutate = async (params?: any) => {
    const result = await manage.config.authProvider?.updatePassword?.(params, manage)
    if (result?.success) {
      props?.onSuccess?.(result)
      if (result.redirectTo) {
        router.push(manage.getRoutePath(result.redirectTo || '/'))
      }
      return
    }
    props?.onError?.(result)
  }

  return {
    mutate,
  }
}

/**
 * Error
 * handle auth error
 * @param onCallback Error callback
 * @returns Error method
 */
export function useError(onCallback?: (data?: IAuthErrorResponse) => void) {
  const { config: manage, getRoutePath } = useManage()
  const router = useRouter()
  const authStore = useAuthStore()

  const mutate = async (error?: IDataProviderError) => {
    const result = await manage.authProvider?.onError(error)
    onCallback?.(result)
    if (result?.logout) {
      authStore.logout()
      await router.replace(getRoutePath(result.redirectTo || '/login'))
      setTimeout(() => {
        window.location.reload()
      }, 100)
    }
  }
  return {
    mutate,
  }
}

/**
 * Get auth
 * get auth info
 * @returns Auth info
 */
export function useGetAuth(manageName?: string) {
  const authStore = useAuthStore(manageName)
  const user = authStore.getUser()
  return user
}

/**
 * Is login
 * check if user is login
 * @returns Is login
 */
export function useIsLogin(manageName?: string) {
  const authStore = useAuthStore(manageName)
  return authStore.isLogin()
}

/**
 * Can
 * check if user can access the route
 * @param manageName Manage name
 * @returns Can method
 */
export function useCan(manageName?: string) {
  const manage = useManage(manageName)
  const authStore = useAuthStore(manageName)
  const user = authStore.getUser()

  const can = (name: string, params?: any) => {
    if (manage.config.authProvider?.can) {
      return manage.config.authProvider.can(name, params, manage, user)
    }
    return true
  }

  return can
}



---
File: /packages/core/src/hooks/config.ts
---

import type { IConfig } from '../types'
import { inject } from 'vue'

/**
 * Config
 * get global config
 * @returns Config
 */
export function useConfig(): IConfig {
  const config = inject<IConfig>('dux.config')
  if (!config) {
    throw new Error('config is not defined')
  }

  return config
}



---
File: /packages/core/src/hooks/data.ts
---

/* eslint-disable @tanstack/query/exhaustive-deps */
import type { DefaultError, DefinedInitialDataInfiniteOptions, DefinedInitialQueryOptions, InfiniteData, UseMutationOptions } from '@tanstack/vue-query'
import type { IDataProviderCreateManyOptions, IDataProviderCreateOptions, IDataProviderCustomOptions, IDataProviderDeleteManyOptions, IDataProviderDeleteOptions, IDataProviderError, IDataProviderGetManyOptions, IDataProviderGetOneOptions, IDataProviderListOptions, IDataProviderPagination, IDataProviderResponse, IDataProviderUpdateManyOptions, IDataProviderUpdateOptions } from '../types'
import { useInfiniteQuery, useMutation, useQuery, useQueryClient } from '@tanstack/vue-query'
import { computed, ref, toRef, watch } from 'vue'
import { useError, useGetAuth } from './auth'
import { useManage } from './manage'

type IDataQueryOptions = Partial<DefinedInitialQueryOptions<IDataProviderResponse | undefined, DefaultError, IDataProviderResponse | undefined, any>>
type IDataQueryOptionsInfinite = Partial<DefinedInitialDataInfiniteOptions<IDataProviderResponse | undefined, DefaultError, InfiniteData<IDataProviderResponse | undefined>, any, number>>

export interface IListParams extends IDataProviderListOptions {
  providerName?: string
  options?: IDataQueryOptions
  onError?: (error: IDataProviderError) => void
}

/**
 * Get list data
 * @param params
 */
export function useList(params: IListParams) {
  const manage = useManage()
  const auth = useGetAuth()
  const providerName = params.providerName || 'default'

  const { mutate: onAuthError } = useError()

  const pagination = toRef<IDataProviderPagination>(params.pagination ? params.pagination as IDataProviderPagination : { page: 1, pageSize: 20 })
  const sorters = toRef(params, 'sorters', {})
  const filters = toRef(params, 'filters', {})
  const meta = toRef(params, 'meta', {})

  const props = computed((): IDataProviderListOptions => {
    const { onError, options, pagination, filters, sorters, meta, ...rest } = params
    return rest
  })

  watch(props, () => {
    if (!params.pagination) {
      return
    }
    pagination.value.page = 1
  }, {
    deep: true,
  })

  const queryProps = computed(() => {
    return {
      ...props.value,
      pagination: params.pagination ? pagination.value : undefined,
      filters: filters.value || {},
      sorters: sorters.value || {},
      meta: meta.value || {},
    }
  })

  const req = useQuery({
    queryKey: [`${manage.config?.name}:${providerName}:${params.path}`, queryProps.value],
    queryFn: () => manage.config?.dataProvider?.[providerName]?.getList(queryProps.value, manage, auth),
    ...params.options,
  })

  const isLoading = computed<boolean>(() => {
    return req.isFetching.value
  })

  watch(req.isError, (v) => {
    if (!v) {
      return
    }
    onAuthError(req.error.value as IDataProviderError)
    params?.onError?.(req.error.value as IDataProviderError)
  })

  const data = ref<IDataProviderResponse | undefined>(undefined)
  const total = ref(0)
  const pageCount = ref(0)

  watch(req.data, (v) => {
    if (!v) {
      return
    }
    data.value = v
    total.value = manage.config?.dataProvider?.[providerName]?.getTotal?.(v) || 0
    pageCount.value = Math.ceil(total.value / (pagination.value.pageSize || 20)) || 0
  }, {
    immediate: true,
  })

  return {
    ...req,
    isLoading,
    data,
    refetch: req.refetch,
    pagination,
    total,
    pageCount,
  }
}

export interface IInfiniteListParams extends IDataProviderListOptions {
  providerName?: string
  pagination?: IDataProviderPagination
  options?: IDataQueryOptionsInfinite
  onError?: (error: IDataProviderError) => void
}

/**
 * Get infinite list data
 * @param params
 */
export function useInfiniteList(params: IInfiniteListParams) {
  const manage = useManage()
  const auth = useGetAuth()
  const providerName = params.providerName || 'default'
  const { mutate: onAuthError } = useError()

  const pagination = toRef(params, 'pagination', { page: 1, pageSize: 20 })
  const sorters = toRef(params, 'sorters', {})
  const filters = toRef(params, 'filters', {})
  const meta = toRef(params, 'meta', {})

  const props = computed((): IDataProviderListOptions => {
    const { onError, options, pagination, filters, sorters, meta, ...rest } = params
    return rest
  })

  watch(props, () => {
    pagination.value.page = 1
  }, {
    deep: true,
  })

  const total = ref(0)
  const pageCount = ref(0)

  const queryProps = computed(() => {
    return {
      ...props.value,
      filters: filters.value || {},
      sorters: sorters.value || {},
      meta: meta.value || {},
    }
  })

  const req = useInfiniteQuery({
    queryKey: [`${manage.config?.name}:${providerName}:${params.path}:infinite`, queryProps.value],
    queryFn: ({ pageParam }) => {
      pagination.value.page = pageParam
      return manage.config?.dataProvider?.[providerName]?.getList({
        ...queryProps.value,
        pagination: {
          ...pagination.value,
          page: pageParam,
        },
      }, manage, auth)
    },
    initialPageParam: 1,
    getNextPageParam: (lastPage, _allPages, lastPageParam) => {
      if (!lastPage?.data || !lastPage?.data?.length) {
        return
      }

      const resTotal = manage.config?.dataProvider?.[providerName]?.getTotal?.(lastPage) || 0
      pageCount.value = Math.ceil(resTotal / (pagination.value.pageSize || 20)) || 0
      total.value = resTotal

      const currentTotal = lastPageParam * (pagination.value.pageSize || 20)
      if (currentTotal >= resTotal) {
        return
      }

      return lastPageParam + 1
    },
    getPreviousPageParam: (firstPage, _allPages, firstPageParam) => {
      if (firstPageParam <= 1) {
        return
      }
      const resTotal = manage.config?.dataProvider?.[providerName]?.getTotal?.(firstPage) || 0
      pageCount.value = Math.ceil(resTotal / (pagination.value.pageSize || 20)) || 0
      total.value = resTotal
      return firstPageParam - 1
    },
    ...params.options,
  })

  const isLoading = computed<boolean>(() => {
    return req.isFetching.value
  })

  watch(req.isError, (v) => {
    if (!v) {
      return
    }
    onAuthError(req.error.value as IDataProviderError)
    params?.onError?.(req.error.value as IDataProviderError)
  })

  const fetchNextPage = () => {
    if (!req.hasNextPage.value || req.isFetching.value) {
      return
    }
    return req.fetchNextPage()
  }

  const data = ref<IDataProviderResponse | undefined>(undefined)
  watch(req.data, (v) => {
    if (!v || !v?.pages || !v.pages?.length) {
      return
    }
    const allData = v.pages.reduce((acc, page) => {
      if (page?.data && Array.isArray(page.data) && page.data?.length) {
        return acc.concat(page.data)
      }
      return acc
    }, [] as any[])

    const firstPage = v.pages[0]
    if (firstPage) {
      data.value = {
        ...firstPage,
        data: allData,
      }
    }
  }, {
    deep: true,
    immediate: true,
  })

  return {
    ...req,
    isLoading,
    data,
    fetchNextPage,
    hasNextPage: req.hasNextPage,
    refetch: req.refetch,
    pagination,
    total,
    pageCount,
  }
}

export interface IOneParams extends IDataProviderGetOneOptions {
  providerName?: string
  options?: IDataQueryOptions
  onError?: (error: IDataProviderError) => void
}

/**
 * Get one data
 * @param params
 */
export function useOne(params: IOneParams) {
  const manage = useManage()
  const auth = useGetAuth()
  const providerName = params.providerName || 'default'
  const { mutate: onAuthError } = useError()

  const props = computed((): IDataProviderGetOneOptions => {
    const { onError, options, ...rest } = params
    return rest
  })

  const req = useQuery({
    queryKey: [`${manage.config?.name}:${providerName}:${params.path}`, props],
    queryFn: () => manage.config?.dataProvider?.[providerName]?.getOne(props.value, manage, auth),
    ...params.options,
  })

  const isLoading = computed<boolean>(() => {
    if (req.isFetched.value) {
      return false
    }
    return req.isFetching.value
  })

  watch(req.isError, (v) => {
    if (!v) {
      return
    }
    onAuthError(req.error.value as IDataProviderError)
    params?.onError?.(req.error.value as IDataProviderError)
  }, {
    immediate: true,
  })

  const data = ref<IDataProviderResponse | undefined>(undefined)
  watch(req.data, (v) => {
    if (!v) {
      return
    }
    data.value = v
  }, {
    immediate: true,
  })

  return {
    ...req,
    isLoading,
    data,
    refetch: req.refetch,
  }
}

export interface IManyParams extends IDataProviderGetManyOptions {
  providerName?: string
  options?: IDataQueryOptions
  onError?: (error: IDataProviderError) => void
}
/**
 * Get many data
 * @param params
 */
export function useMany(params: IManyParams) {
  const manage = useManage()
  const auth = useGetAuth()
  const providerName = params.providerName || 'default'
  const { mutate: onAuthError } = useError()

  const props = computed((): IDataProviderGetManyOptions => {
    const { onError, options, ...rest } = params
    return rest
  })

  const req = useQuery({
    queryKey: [`${manage.config?.name}:${providerName}:${params.path}`, props],
    queryFn: () => manage.config?.dataProvider?.[providerName]?.getMany(props.value, manage, auth),
    ...params.options,
  })

  const isLoading = computed<boolean>(() => {
    if (req.isFetched.value) {
      return false
    }
    return req.isFetching.value
  })

  watch(req.isError, (v) => {
    if (!v) {
      return
    }
    onAuthError(req.error.value as IDataProviderError)
    params?.onError?.(req.error.value as IDataProviderError)
  })

  const data = ref<IDataProviderResponse | undefined>(undefined)
  watch(req.data, (v) => {
    if (!v) {
      return
    }
    data.value = v
  }, {
    immediate: true,
  })

  return {
    ...req,
    isLoading,
    data,
    refetch: req.refetch,
  }
}

export interface ICreateParams extends IDataProviderCreateOptions {
  providerName?: string
  options?: UseMutationOptions<IDataProviderResponse, DefaultError, IDataProviderCreateOptions>
  onSuccess?: (data: IDataProviderResponse) => void
  onError?: (error: IDataProviderError) => void
}

/**
 * Create data
 * @param params
 */
export function useCreate(params: ICreateParams) {
  const manage = useManage()
  const auth = useGetAuth()
  const providerName = params.providerName || 'default'
  const { mutate: onAuthError } = useError()
  const { invalidate } = useInvalidate()

  const props = computed((): IDataProviderCreateOptions => {
    const { onError, options, ...rest } = params
    return rest
  })

  const req = useMutation({
    mutationFn: (data) => {
      if (!manage.config?.dataProvider) {
        throw new Error('Data provider is not initialized')
      }
      if (data.path) {
        params.path = data.path
      }
      return manage.config?.dataProvider?.[providerName]?.create({
        ...props.value,
        ...data,
      }, manage, auth)
    },
    onSuccess: (data) => {
      params.onSuccess?.(data)
      if (params.path) {
        invalidate(params.path)
      }
    },
    onError: (error) => {
      onAuthError(error)
      params?.onError?.(error)
    },
    ...params.options,
  })

  const isLoading = computed<boolean>(() => req.isPending.value)

  return {
    ...req,
    isLoading,
    mutate: req.mutate,
  }
}

export interface ICreateManyParams extends IDataProviderCreateManyOptions {
  providerName?: string
  options?: UseMutationOptions<IDataProviderResponse, DefaultError, IDataProviderCreateManyOptions>
  onSuccess?: (data: IDataProviderResponse) => void
  onError?: (error: IDataProviderError) => void
}

/**
 * Create data
 * @param params
 */
export function useCreateMany(params: ICreateManyParams) {
  const manage = useManage()
  const auth = useGetAuth()
  const providerName = params.providerName || 'default'
  const { mutate: onAuthError } = useError()
  const { invalidate } = useInvalidate()
  const props = computed((): IDataProviderCreateManyOptions => {
    const { onError, options, ...rest } = params
    return rest
  })

  const req = useMutation({
    mutationFn: (data) => {
      if (!manage.config?.dataProvider) {
        throw new Error('Data provider is not initialized')
      }
      if (data.path) {
        params.path = data.path
      }
      return manage.config?.dataProvider?.[providerName]?.createMany({
        ...props.value,
        ...data,
      }, manage, auth)
    },
    onSuccess: (data) => {
      params.onSuccess?.(data)
      if (params.path) {
        invalidate(params.path)
      }
    },
    onError: (error) => {
      onAuthError(error)
      params?.onError?.(error)
    },
    ...params.options,
  })

  const isLoading = computed<boolean>(() => req.isPending.value)

  return {
    ...req,
    isLoading,
    mutate: req.mutate,
  }
}

export interface IUpdateParams extends IDataProviderUpdateOptions {
  providerName?: string
  options?: UseMutationOptions<IDataProviderResponse, DefaultError, IDataProviderUpdateOptions>
  onSuccess?: (data: IDataProviderResponse) => void
  onError?: (error: IDataProviderError) => void
}

/**
 * Update data
 * @param params
 */
export function useUpdate(params: IUpdateParams) {
  const manage = useManage()
  const auth = useGetAuth()
  const providerName = params.providerName || 'default'
  const { mutate: onAuthError } = useError()
  const { invalidate } = useInvalidate()
  const props = computed((): IDataProviderUpdateOptions => {
    const { onError, options, ...rest } = params
    return rest
  })

  const req = useMutation({
    mutationFn: (data) => {
      if (!manage.config?.dataProvider) {
        throw new Error('Data provider is not initialized')
      }
      if (data.path) {
        params.path = data.path
      }
      return manage.config?.dataProvider?.[providerName]?.update({
        ...props.value,
        ...data,
      }, manage, auth)
    },
    onSuccess: (data) => {
      params.onSuccess?.(data)
      if (params.path) {
        invalidate(params.path)
      }
    },
    onError: (error) => {
      onAuthError(error)
      params?.onError?.(error)
    },
    ...params.options,
  })

  const isLoading = computed<boolean>(() => req.isPending.value)

  return {
    ...req,
    isLoading,
    mutate: req.mutate,
  }
}

export interface IUpdateManyParams extends IDataProviderUpdateManyOptions {
  providerName?: string
  options?: UseMutationOptions<IDataProviderResponse, DefaultError, IDataProviderUpdateManyOptions>
  onSuccess?: (data: IDataProviderResponse) => void
  onError?: (error: IDataProviderError) => void
}

export function useUpdateMany(params: IUpdateManyParams) {
  const manage = useManage()
  const auth = useGetAuth()
  const providerName = params.providerName || 'default'
  const { mutate: onAuthError } = useError()
  const { invalidate } = useInvalidate()

  const props = computed((): IDataProviderUpdateManyOptions => {
    const { onError, options, ...rest } = params
    return rest
  })

  const req = useMutation({
    mutationFn: (data) => {
      if (!manage.config?.dataProvider) {
        throw new Error('Data provider is not initialized')
      }
      if (data.path) {
        params.path = data.path
      }
      return manage.config?.dataProvider?.[providerName]?.updateMany({
        ...props.value,
        ...data,
      }, manage, auth)
    },
    onSuccess: (data) => {
      params.onSuccess?.(data)
      if (params.path) {
        invalidate(params.path)
      }
    },
    onError: (error) => {
      onAuthError(error)
      params?.onError?.(error)
    },
    ...params.options,
  })

  const isLoading = computed<boolean>(() => req.isPending.value)

  return {
    ...req,
    isLoading,
    mutate: req.mutate,
  }
}

export interface IDeleteParams extends IDataProviderDeleteOptions {
  providerName?: string
  options?: UseMutationOptions<IDataProviderResponse, DefaultError, IDataProviderDeleteOptions>
  onSuccess?: (data: IDataProviderResponse) => void
  onError?: (error: IDataProviderError) => void
}

/**
 * Update data
 * @param params
 */
export function useDelete(params: IDeleteParams) {
  const manage = useManage()
  const auth = useGetAuth()
  const providerName = params.providerName || 'default'
  const { mutate: onAuthError } = useError()
  const { invalidate } = useInvalidate()

  const props = computed((): IDataProviderDeleteOptions => {
    const { onError, options, ...rest } = params
    return rest
  })

  const req = useMutation({
    mutationFn: (data) => {
      if (!manage.config?.dataProvider) {
        throw new Error('Data provider is not initialized')
      }
      if (data.path) {
        params.path = data.path
      }
      return manage.config?.dataProvider?.[providerName]?.deleteOne({
        ...props.value,
        ...data,
      }, manage, auth)
    },
    onSuccess: (data) => {
      params.onSuccess?.(data)
      if (params.path) {
        invalidate(params.path)
      }
    },
    onError: (error) => {
      onAuthError(error)
      params?.onError?.(error)
    },
    ...params.options,
  })

  const isLoading = computed<boolean>(() => req.isPending.value)

  return {
    ...req,
    isLoading,
    mutate: req.mutate,
  }
}

export interface IDeleteManyParams extends IDataProviderDeleteManyOptions {
  providerName?: string
  options?: UseMutationOptions<IDataProviderResponse, DefaultError, IDataProviderDeleteManyOptions>
  onSuccess?: (data: IDataProviderResponse) => void
  onError?: (error: IDataProviderError) => void
}

/**
 * Update data
 * @param params
 */
export function useDeleteMany(params: IDeleteManyParams) {
  const manage = useManage()
  const auth = useGetAuth()
  const providerName = params.providerName || 'default'
  const { mutate: onAuthError } = useError()
  const { invalidate } = useInvalidate()
  const props = computed((): IDataProviderDeleteManyOptions => {
    const { onError, options, ...rest } = params
    return rest
  })

  const req = useMutation({
    mutationFn: (data) => {
      if (!manage.config?.dataProvider) {
        throw new Error('Data provider is not initialized')
      }
      if (data.path) {
        params.path = data.path
      }
      return manage.config?.dataProvider?.[providerName]?.deleteMany({
        ...props.value,
        ...data,
      }, manage, auth)
    },
    onSuccess: (data) => {
      params.onSuccess?.(data)
      if (params.path) {
        invalidate(params.path)
      }
    },
    onError: (error) => {
      onAuthError(error)
      params?.onError?.(error)
    },
    ...params.options,
  })

  const isLoading = computed<boolean>(() => req.isPending.value)

  return {
    ...req,
    isLoading,
    mutate: req.mutate,
  }
}

export interface ICustomParams extends IDataProviderCustomOptions {
  providerName?: string
  options?: IDataQueryOptions
  onError?: (error: IDataProviderError) => void
}

/**
 * Custom query request
 * @param params
 */
export function useCustom(params?: ICustomParams) {
  const manage = useManage()
  const auth = useGetAuth()
  const providerName = params?.providerName || 'default'
  const { mutate: onAuthError } = useError()

  const props = computed((): IDataProviderCustomOptions => {
    if (!params) {
      return {}
    }
    const { onError, options, ...rest } = params
    return rest
  })

  const req = useQuery({
    queryKey: [`${manage.config?.name}:${providerName}:${params?.path}`, props],
    queryFn: () => manage.config?.dataProvider?.[providerName]?.custom(props.value, manage, auth),
    ...params?.options,
  })

  const isLoading = computed<boolean>(() => {
    if (req.isFetched.value) {
      return false
    }
    return req.isFetching.value
  })

  watch(req.isError, (v) => {
    if (!v) {
      return
    }
    onAuthError(req.error.value as IDataProviderError)
    params?.onError?.(req.error.value as IDataProviderError)
  })

  const data = ref<IDataProviderResponse | undefined>(undefined)
  watch(req.data, (v) => {
    if (!v) {
      return
    }
    data.value = v
  }, {
    immediate: true,
  })

  return {
    ...req,
    isLoading,
    data,
    refetch: req.refetch,
  }
}

export interface ICustomMutationParams extends IDataProviderCustomOptions {
  providerName?: string
  options?: UseMutationOptions<IDataProviderResponse, DefaultError, IDataProviderCustomOptions>
  onSuccess?: (data: IDataProviderResponse) => void
  onError?: (error: IDataProviderError) => void
}

/**
 * Custom mutation request
 * @param params
 */
export function useCustomMutation(params?: ICustomMutationParams) {
  const manage = useManage()
  const auth = useGetAuth()
  const providerName = params?.providerName || 'default'
  const { mutate: onAuthError } = useError()

  const props = computed((): IDataProviderCustomOptions => {
    if (!params) {
      return {}
    }
    const { onError, options, ...rest } = params
    return rest
  })

  const req = useMutation({
    mutationFn: (data) => {
      if (!manage.config?.dataProvider) {
        throw new Error('Data provider is not initialized')
      }
      return manage.config?.dataProvider?.[providerName]?.custom({
        ...props.value,
        ...data,
      }, manage, auth)
    },
    onSuccess: (data) => {
      req.reset()
      params?.onSuccess?.(data)
    },
    onError: (error) => {
      onAuthError(error)
      params?.onError?.(error)
    },
    ...params?.options,
  })

  const isLoading = computed<boolean>(() => req.isPending.value)

  return {
    ...req,
    isLoading,
    mutate: req.mutate,
  }
}

interface IClientParams extends IDataProviderCustomOptions {
  providerName?: string
}

/**
 * Custom request client
 */
export function useClient() {
  const manage = useManage()
  const auth = useGetAuth()
  const request = (params: IClientParams) => {
    if (!manage.config?.dataProvider) {
      throw new Error('Data provider is not initialized')
    }
    const providerName = params.providerName || 'default'
    return manage.config?.dataProvider?.[providerName]?.custom({
      ...params,
    }, manage, auth) as Promise<IDataProviderResponse>
  }

  return {
    request,
  }
}

export function useInvalidate() {
  const queryClient = useQueryClient()
  const manage = useManage()

  const invalidate = (path: string, providerName?: string) => {
    let marks: any = path
    if (!Array.isArray(path)) {
      marks = [path]
    }

    for (const mark of marks) {
      const key = `${manage.config?.name}:${providerName || 'default'}:${mark}`
      queryClient.invalidateQueries({
        queryKey: [key],
      })
    }
  }

  return {
    invalidate,
  }
}



---
File: /packages/core/src/hooks/export.ts
---

import type { IDataProviderPagination, IDataProviderResponse } from '../types'
import type { IInfiniteListParams } from './data'
import { computed, ref } from 'vue'
import { useInfiniteList } from './data'

export interface IUseExportProps extends IInfiniteListParams {
  onSuccess?: (data?: IDataProviderResponse) => void
  onProgress?: (data?: IDataProviderPagination) => void
  interval?: number
  maxPage?: number | (() => number)
}

const sleep = (ms: number) => new Promise(resolve => setTimeout(resolve, ms))

export function useExport(props: IUseExportProps) {
  const isExporting = ref(false)

  const listProps = computed(() => {
    const { onSuccess, onProgress, interval, maxPage, ...rest } = props
    return {
      ...rest,
      options: {
        ...rest.options,
        enabled: false,
        refetchOnMount: false,
        refetchOnWindowFocus: false,
        refetchOnReconnect: false,
      },
    }
  })

  const interval = computed(() => {
    return props.interval || 300
  })

  const { data, isLoading, fetchNextPage, hasNextPage, refetch, pagination } = useInfiniteList(listProps.value)

  const trigger = async () => {
    if (isExporting.value) {
      return
    }

    try {
      isExporting.value = true
      pagination.value.page = 1

      props.onProgress?.(pagination.value)

      await refetch()

      const max = typeof props.maxPage === 'function' ? props.maxPage() : (props.maxPage || 0)

      while (hasNextPage.value) {
        if (max > 0 && pagination.value.page >= max) {
          break
        }

        if (interval.value > 0) {
          await sleep(interval.value)
        }

        await fetchNextPage()

        props.onProgress?.(pagination.value)
      }
      props.onSuccess?.(data.value as any)
    }
    finally {
      isExporting.value = false
    }
  }

  const loading = computed(() => {
    return isLoading.value || isExporting.value
  })

  return {
    data,
    isLoading: loading,
    trigger,
  }
}



---
File: /packages/core/src/hooks/exportCsv.ts
---

import type { IUseExportProps } from './export'
import { json2csv } from 'json-2-csv'
import { computed } from 'vue'
import { useExport } from './export'

export interface IUseExportCsvProps extends IUseExportProps {
  filename?: string
  headers?: string[] | boolean
  csvOptions?: {
    delimiter?: string
    quote?: string | boolean
    escape?: string
    eol?: string
    writeBOM?: boolean
  }
}

export function useExportCsv(props: IUseExportCsvProps) {
  const exportProps = computed(() => {
    const { filename, headers, csvOptions, ...rest } = props
    return rest
  })

  const csvOptions = computed(() => {
    const options = props.csvOptions || {}
    const wrapChar = options.quote
    return {
      prependHeader: props.headers !== false,
      keys: Array.isArray(props.headers) ? props.headers : undefined,
      delimiter: {
        field: options.delimiter || ',',
        wrap: typeof wrapChar === 'string' ? wrapChar : '"',
        eol: options.eol || '\n',
      },
      excelBOM: options.writeBOM || false,
    }
  })

  const res = useExport({
    ...exportProps.value,
    onSuccess: async (res) => {
      if (!res?.data || !res?.data?.length) {
        props.onError?.({
          message: 'No data to export',
          status: 400,
        })
        return
      }

      try {
        const csvString = await json2csv(res.data, csvOptions.value)

        const blob = new Blob([csvString], { type: 'text/csv;charset=utf-8;' })
        const url = URL.createObjectURL(blob)

        const link = document.createElement('a')
        link.href = url
        link.download = props.filename || 'export.csv'
        link.style.display = 'none'

        document.body.appendChild(link)
        link.click()

        document.body.removeChild(link)
        URL.revokeObjectURL(url)

        props.onSuccess?.(res)
      }
      catch (error) {
        props.onError?.({
          message: `CSV Export Error: ${error}`,
          status: 500,
        })
      }
    },
  })

  return res
}



---
File: /packages/core/src/hooks/form.ts
---

import type { MaybeRef } from 'vue'
import type { IDataProviderError, IDataProviderResponse } from '../types'
import { cloneDeep } from 'lodash-es'
import { computed, ref, toRef, watch } from 'vue'
import { useCreate, useOne, useUpdate } from './data'

type Key = string | number | undefined
export interface IUseFormProps {
  path?: string
  id?: MaybeRef<Key>
  form?: MaybeRef<Record<string, any>>
  onSuccess?: (data: IDataProviderResponse) => void
  onError?: (error: IDataProviderError) => void
  action?: 'create' | 'edit'
  providerName?: string
}

export function useForm(props: IUseFormProps) {
  const form = toRef(props, 'form', {})
  const id = toRef(props, 'id', undefined)

  // 初始化数据，用于重置表单数据
  const editResetData = ref(cloneDeep(form.value || {}))
  // 首次初始化数据，用于创建时，设置表单数据
  const createResetData = ref(cloneDeep(form.value || {}))

  const isEdit = computed(() => {
    return props.action === 'edit' || !!id.value
  })

  const { data: oneData, isLoading: isLoadingOne, refetch } = useOne({
    get path() {
      return props.path || ''
    },
    get id() {
      return id.value as Key
    },
    options: {
      enabled: false,
    },
    providerName: props.providerName,
  })

  // 重置表单数据
  const onReset = () => {
    let resetData = {}
    if (isEdit.value) {
      resetData = cloneDeep(editResetData.value)
    }
    else {
      resetData = cloneDeep(createResetData.value)
    }
    Object.assign(form.value, resetData)
  }

  // 初始化表单数据
  watch([id, isEdit], async () => {
    if (!isEdit.value) {
      onReset()
      return
    }
    await refetch()
    const data = cloneDeep(oneData.value?.data || {})
    Object.assign(form.value as object, data)
    Object.assign(editResetData.value as object, data)
  }, {
    immediate: true,
    deep: true,
  })

  const create = useCreate({
    path: props.path ?? '',
    data: form.value,
    onSuccess: (data) => {
      onReset()
      props.onSuccess?.(data)
    },
    onError: (error) => {
      props.onError?.(error)
    },
    providerName: props.providerName,
  })

  const update = useUpdate({
    get path() {
      return props.path ?? ''
    },
    get id() {
      return id.value as Key
    },
    data: form.value,
    onSuccess: (data) => {
      props.onSuccess?.(data)
    },
    onError: (error) => {
      props.onError?.(error)
    },
    providerName: props.providerName,
  })

  const onSubmit = (data?: Record<string, any>) => {
    if (!isEdit.value) {
      create.mutate({
        data: data || form.value,
      })
    }
    else {
      update.mutate({
        id: id.value as Key,
        data: data || form.value,
      })
    }
  }

  const isLoading = computed<boolean>(() => isLoadingOne.value || create.isLoading.value || update.isLoading.value)

  return {
    form,
    initData: isEdit.value ? editResetData.value : createResetData.value,
    isLoading,
    isEdit,
    onSubmit,
    onReset,
  }
}



---
File: /packages/core/src/hooks/formExtend.ts
---

import type { TypedSchema } from 'vee-validate'
import type { IUseFormProps } from './form'
import { computed, toRef } from 'vue'
import { useForm } from './form'
import { useValidateForm } from './formValidate'

export interface UseExtendFormProps extends IUseFormProps {
  rules?: TypedSchema
}

export function useExtendForm(props: UseExtendFormProps) {
  const form = toRef(props, 'form', {})

  const { validate, reset: onResetValidate } = useValidateForm({
    data: form,
    rules: props.rules,
  })

  const formProps = computed(() => {
    const { form, ...rest } = props
    return {
      ...rest,
    }
  })

  const result = useForm({
    ...formProps.value,
    form: form.value,
  })

  const onSubmit = (data?: Record<string, any>) => {
    validate().then((v) => {
      if (!v.valid) {
        props.onError?.({
          message: '表单验证失败',
        })
        return
      }
      result.onSubmit(data)
    })
  }

  const onReset = () => {
    result.onReset()
    onResetValidate()
  }

  return {
    isLoading: result.isLoading,
    isEdit: result.isEdit,
    form,
    onSubmit,
    onReset,
  }
}



---
File: /packages/core/src/hooks/formValidate.ts
---

import type { TypedSchema } from 'vee-validate'
import type { MaybeRef } from 'vue'
import { all } from '@vee-validate/rules'
import { cloneDeep } from 'lodash-es'
import { defineRule, useForm } from 'vee-validate'
import { toRef, watch } from 'vue'

export interface UseValidateFormProps {
  data?: MaybeRef<Record<string, any>>
  rules?: TypedSchema
}

export function useValidateForm(props: UseValidateFormProps) {
  const data = toRef(props, 'data')

  const { setValues, validate, resetForm, handleSubmit } = useForm({
    initialValues: cloneDeep(data.value || {}),
    validationSchema: props.rules,
  })

  watch(data, (v) => {
    setValues(v || {}, false)
  }, { deep: true })

  const reset = () => {
    resetForm()
  }

  return {
    validate,
    reset,
    submit: handleSubmit,
  }
}

export function initFormValidate() {
  Object.entries(all).forEach(([name, rule]) => {
    defineRule(name, rule)
  })
}



---
File: /packages/core/src/hooks/i18n.ts
---

import { useI18nStore } from '../stores'
import { useManage } from './manage'

export function useI18n() {
  const i18nStore = useI18nStore()
  const manage = useManage()

  const t = (key: string, options?: any, defaultMessage?: string) => {
    return manage.config?.i18nProvider?.t(key, options, defaultMessage)
  }

  const changeLocale = (lang: string) => {
    i18nStore.setLocale(lang)
    return manage.config?.i18nProvider?.changeLocale(lang)
  }

  const getLocale = () => {
    return manage.config?.i18nProvider?.getLocale()
  }

  const loadLocale = (lang: string, messages: Record<string, unknown>) => {
    return manage.config?.i18nProvider?.loadLocale(lang, messages)
  }

  const mergeLocale = (lang: string, messages: Record<string, unknown>) => {
    return manage.config?.i18nProvider?.mergeLocale(lang, messages)
  }

  const getLocales = () => {
    return manage.config?.i18nProvider?.getLocales()
  }

  return {
    t,
    changeLocale,
    getLocale,
    loadLocale,
    mergeLocale,
    getLocales,
  }
}



---
File: /packages/core/src/hooks/import.ts
---

import type { DefaultError, UseMutationOptions } from '@tanstack/vue-query'
import type { IDataProviderCustomOptions, IDataProviderError, IDataProviderResponse } from '../types'
import { computed, ref } from 'vue'
import { useCustomMutation } from './data'

export interface IImportProgress {
  totalItems: number // 总条数
  processedItems: number // 处理条数
  totalBatches: number // 总批次
  processedBatches: number // 处理批次
  percentage: number // 百分比
}

export interface IUseImportProps extends IDataProviderCustomOptions {
  options?: UseMutationOptions<IDataProviderResponse, DefaultError, IDataProviderCustomOptions>
  onComplete?: (progress: IImportProgress) => void
  onProgress?: (progress: IImportProgress) => void
  onError?: (error: IDataProviderError) => void
  interval?: number
  chunkSize?: number
}

const sleep = (ms: number) => new Promise(resolve => setTimeout(resolve, ms))

export function useImport(props: IUseImportProps) {
  const isImporting = ref(false)

  const progress = ref<IImportProgress>({
    totalItems: 0,
    processedItems: 0,
    totalBatches: 0,
    processedBatches: 0,
    percentage: 0,
  })

  const params = computed(() => {
    const { onComplete, onProgress, onError, interval, chunkSize, ...rest } = props
    return rest
  })

  const { mutate: onImport } = useCustomMutation({
    path: props.path,
    method: 'POST',
    ...params.value,
    options: {
      ...params.value.options,
    },
  })

  const trigger = async (data: Record<string, any>[]) => {
    if (isImporting.value) {
      return
    }

    const chunkSize = props.chunkSize || 100
    const interval = props.interval || 100
    const totalItems = data.length
    const chunks: Record<string, any>[][] = []

    // 分批处理数据
    for (let i = 0; i < totalItems; i += chunkSize) {
      chunks.push(data.slice(i, i + chunkSize))
    }

    const totalBatches = chunks.length

    // 初始化进度
    progress.value = {
      totalItems,
      processedItems: 0,
      totalBatches,
      processedBatches: 0,
      percentage: 0,
    }

    isImporting.value = true

    try {
      for (let i = 0; i < chunks.length; i++) {
        const chunk = chunks[i]

        await onImport({
          payload: chunk,
        })

        progress.value.processedBatches = i + 1
        progress.value.processedItems += chunk.length
        progress.value.percentage = Math.round((progress.value.processedItems / totalItems) * 100)

        props.onProgress?.(progress.value)

        if (i < chunks.length - 1) {
          await sleep(interval)
        }
      }

      isImporting.value = false
      props.onComplete?.(progress.value)
    }
    catch (error) {
      isImporting.value = false
      props.onError?.(error as IDataProviderError)
    }
  }

  const loading = computed(() => isImporting.value)

  return {
    isLoading: loading,
    progress: computed(() => progress.value),
    trigger,
  }
}



---
File: /packages/core/src/hooks/importCsv.ts
---

import type { IUseImportProps } from './import'
import { useFileDialog } from '@vueuse/core'
import { csv2json } from 'json-2-csv'
import { computed } from 'vue'
import { useImport } from './import'

export interface IUseImportCsvProps extends IUseImportProps {
  csvOptions?: {
    delimiter?: string
    wrap?: string
    eol?: string
    excelBOM?: boolean
    headerFields?: string[]
    keys?: string[]
    trimHeaderFields?: boolean
    trimFieldValues?: boolean
  }
}

export function useImportCsv(props: IUseImportCsvProps) {
  const importProps = computed(() => {
    const { csvOptions, ...rest } = props
    return rest
  })

  const csvOptions = computed(() => {
    const options = props.csvOptions || {}
    return {
      delimiter: {
        field: options.delimiter || ',',
        wrap: options.wrap || '"',
        eol: options.eol || '\n',
      },
      excelBOM: options.excelBOM || false,
      headerFields: options.headerFields,
      keys: options.keys,
      trimHeaderFields: options.trimHeaderFields || false,
      trimFieldValues: options.trimFieldValues || false,
    }
  })

  const res = useImport({
    ...importProps.value,
  })

  // 读取文件
  const readFile = async (file: File) => {
    try {
      const text = await file.text()

      const jsonData = await csv2json(text, csvOptions.value)

      if (jsonData && jsonData.length > 0) {
        // 调用导入触发器
        await res.trigger(jsonData)
      }
      else {
        props.onError?.({
          message: 'CSV 文件为空或格式不正确',
          status: 400,
        })
      }
    }
    catch (error) {
      props.onError?.({
        message: `CSV 解析错误: ${error}`,
        status: 500,
      })
    }
  }

  const { open: openFileDialog, reset, onChange } = useFileDialog({
    accept: '.csv',
    multiple: false,
  })

  onChange((selectedFiles) => {
    if (selectedFiles && selectedFiles.length > 0) {
      readFile(selectedFiles[0])
    }
  })

  const open = () => {
    reset()
    openFileDialog()
  }

  return {
    ...res,
    open,
    readFile,
  }
}



---
File: /packages/core/src/hooks/index.ts
---

export * from '../config/color'
export * from './auth'
export * from './config'
export * from './data'
export * from './export'
export * from './exportCsv'
export * from './form'
export * from './formExtend'
export * from './formValidate'
export * from './i18n'
export * from './import'
export * from './importCsv'
export * from './json'
export * from './json/index'
export * from './list'
export * from './manage'
export * from './menu'
export * from './overlay'
export * from './select'
export * from './theme'
export * from './tree'
export * from './upload'
export * from './upload/index'



---
File: /packages/core/src/hooks/json.tsx
---

import type { Component, Ref } from 'vue'
import type { IConfig } from '../types'
import type { JsonAdaptorOptions, JsonSchemaNode } from './json/index'
import { computed, defineComponent, h, isRef, markRaw, unref } from 'vue'
import { useJsonSchemaStore } from '../stores/jsonSchema'
import { useConfig } from './config'
import { defaultAdaptors } from './json/index'
import { injectContext } from './json/utils/contextManager'

function kebabCase(str: string): string {
  return str
    .replace(/([a-z0-9])([A-Z])/g, '$1-$2')
    .toLowerCase()
}

/**
 * 加载组件到 store
 */
function loadComponentsToStore(components: Record<string, Component> | Component[], jsonSchemaStore: any) {
  if (Array.isArray(components)) {
    components.forEach((component) => {
      const comp = component as any
      let name = comp.name
      if (!name && comp.__name) {
        name = comp.__name.replace(/\.(vue|ts|tsx|js|jsx)$/, '').split('/').pop()
      }
      if (name) {
        jsonSchemaStore.addComponent(markRaw(component), name)
      }
    })
  }
  else if (typeof components === 'object' && components !== null) {
    Object.entries(components).forEach(([name, component]) => {
      jsonSchemaStore.addComponent(markRaw(component), name)
    })
  }
}

/**
 * 初始化 JSON Schema 组件
 * 在应用启动时调用，将配置中的组件加载到全局缓存
 */
export function initJsonSchemaComponents(config: IConfig, manageName?: string) {
  const jsonSchemaStore = useJsonSchemaStore(manageName)

  if (config.jsonSchema?.components) {
    loadComponentsToStore(config.jsonSchema.components, jsonSchemaStore)
  }

  config.manages?.forEach((manage) => {
    if (manage.jsonSchema?.components) {
      loadComponentsToStore(manage.jsonSchema.components, jsonSchemaStore)
    }
  })
}

export type JsonSchemaData = JsonSchemaNode[] | Ref<JsonSchemaNode[]>

export interface UseJsonSchemaProps extends JsonAdaptorOptions {
  data?: JsonSchemaData
  components?: Record<string, Component> | Component[]
  context?: Record<string, any> | Ref<Record<string, any>>
}

/**
 * JSON Schema 渲染器
 */
export function useJsonSchema(props?: UseJsonSchemaProps) {
  const config = useConfig()
  const jsonSchemaStore = useJsonSchemaStore()

  const adaptors = [
    ...defaultAdaptors,
    ...(config.jsonSchema?.adaptors || []),
    ...(props?.adaptors || []),
  ]

  if (props?.components) {
    loadComponentsToStore(props.components, jsonSchemaStore)
  }
  const data = computed(() => {
    return isRef(props?.data) ? props?.data.value : props?.data
  })

  function getGlobalContext(): Record<string, any> {
    const ctx = isRef(props?.context) ? props?.context.value : props?.context
    return ctx || {}
  }

  /**
   * 处理节点属性，解包响应式数据
   */
  function processProps(nodeProps: Record<string, any>): Record<string, any> {
    const processedProps: Record<string, any> = {}

    Object.entries(nodeProps).forEach(([key, value]) => {
      if (key === '_context')
        return

      const isModelProp = key === 'modelValue' || key.startsWith('modelValue')
        || (key !== 'value' && (key.includes('model') || key.includes('Model')))

      processedProps[key] = isModelProp && isRef(value) ? unref(value) : value
    })

    return processedProps
  }

  /**
   * 处理插槽内容
   */
  function processSlotContent(slotContent: any, slotProps: any, context: Record<string, any>): any {
    if (typeof slotContent === 'string')
      return slotContent
    if (typeof slotContent === 'function')
      return processSlotContent(slotContent(slotProps), slotProps, context)
    if (Array.isArray(slotContent))
      return slotContent.flatMap(item => processSlotContent(item, slotProps, context)).filter(Boolean)
    if (slotContent?.tag) {
      // 将插槽参数注入到上下文中
      const slotContext = { ...context, ...slotProps }
      return processNode(slotContent, true, slotContext)
    }
    return slotContent
  }

  /**
   * 处理子元素
   */
  function processChildren(children: any, isSlotContent: boolean, context: Record<string, any>): any {
    if (!children)
      return undefined
    if (typeof children === 'string')
      return children
    if (Array.isArray(children)) {
      return children.flatMap((child) => {
        if (typeof child === 'string')
          return child
        return processNode(child, isSlotContent, context)
      }).filter(Boolean)
    }
    return processNode(children, isSlotContent, context)
  }

  /**
   * 处理单个节点
   */
  function processNode(schema: JsonSchemaNode, isSlotContent = false, parentContext: Record<string, any> = {}): any {
    const { tag, attrs = {}, children, slots } = schema

    const mergedContext = { ...getGlobalContext(), ...parentContext }

    let nodeProps = { ...attrs }
    if (Object.keys(mergedContext).length > 0) {
      nodeProps = { ...nodeProps, ...injectContext({}, mergedContext) }
    }

    for (const adaptor of adaptors) {
      const result = adaptor.process(schema, nodeProps)
      if (!result)
        continue

      nodeProps = result.props
      if (result.skip)
        return null
      if (result.nodes) {
        return result.nodes.map((node) => {
          const nodeContext = node.attrs?._context || {}
          return processNode(node, isSlotContent, { ...mergedContext, ...nodeContext })
        }).filter(Boolean)
      }
    }

    const resolveComponent = (tagName: string) => {
      // 直接从 store 中查找组件
      let component = jsonSchemaStore.getComponentByName(tagName)
      if (component) {
        return component
      }

      // 尝试 kebab-case 格式查找
      const kebabName = kebabCase(tagName)
      component = jsonSchemaStore.getComponentByName(kebabName)
      if (component) {
        return component
      }

      // 尝试 PascalCase 格式查找
      const pascalName = tagName.replace(/-([a-z])/g, (_, letter) => letter.toUpperCase())
        .replace(/^[a-z]/, letter => letter.toUpperCase())
      component = jsonSchemaStore.getComponentByName(pascalName)
      if (component) {
        return component
      }

      return null
    }

    let resolvedTag = typeof tag === 'string' ? (resolveComponent(tag) || tag) : tag

    if (typeof resolvedTag !== 'string' && typeof resolvedTag === 'object') {
      resolvedTag = markRaw(resolvedTag)
    }

    const isVueComponent = typeof resolvedTag !== 'string'
    const processedProps = processProps(nodeProps)

    if (slots && isVueComponent && !isSlotContent) {
      const slotFunctions: Record<string, any> = {}
      Object.entries(slots).forEach(([slotName, slotContent]) => {
        slotFunctions[slotName] = (slotProps: any = {}) => processSlotContent(slotContent, slotProps, mergedContext)
      })
      return h(resolvedTag, processedProps, slotFunctions)
    }

    const processedChildren = processChildren(children, isSlotContent, mergedContext)

    if (isVueComponent && processedChildren !== undefined) {
      return h(resolvedTag, processedProps, { default: () => processedChildren })
    }

    return h(resolvedTag, processedProps, processedChildren)
  }

  const render = defineComponent({
    name: 'JsonSchemaRenderer',
    render() {
      return data.value?.map(node => processNode(node)).filter(Boolean) || []
    },
  })

  function renderAsync(options: {
    data: JsonSchemaNode[]
    context?: Record<string, any>
  }) {
    return defineComponent({
      name: 'DynamicJsonSchemaRenderer',
      render() {
        const dynamicContext = { ...getGlobalContext(), ...options.context }
        return options.data?.map(node => processNode(node, false, dynamicContext)).filter(Boolean)
      },
    })
  }

  return { render, renderAsync }
}



---
File: /packages/core/src/hooks/list.tsx
---

import type { IDataProviderError, IDataProviderPagination, IDataProviderResponse } from '../types'
import type { IImportProgress } from './import'
import { reactiveComputed, useCountdown } from '@vueuse/core'
import { computed, ref, toRef, watch } from 'vue'
import { useList } from './data'
import { useExportCsv } from './exportCsv'
import { useImportCsv } from './importCsv'

type IListKey = string | number

export interface IListPagination {
  page: number
  pageSize: number
}

export interface UseExtendListProps {
  path: string
  key?: IListKey
  totalField?: string
  filters?: Record<string, any>
  sorters?: Record<string, 'asc' | 'desc'>
  pagination?: boolean | IListPagination
  exportFilename?: string
  exportMaxPage?: number
  total?: (data?: IDataProviderResponse) => number
  onExportSuccess?: (data?: IDataProviderResponse) => void
  onExportProgress?: (data?: IDataProviderPagination) => void
  onExportError?: (error?: IDataProviderError) => void
  onImportSuccess?: (progress?: IImportProgress) => void
  onImportProgress?: (progress?: IImportProgress) => void
  onImportError?: (error?: IDataProviderError) => void
}

export function useExtendList(props: UseExtendListProps) {
  const filters = toRef(props, 'filters', {})
  const sorters = toRef(props, 'sorters', {})

  // 分页处理
  const pagination = toRef(typeof props.pagination === 'object'
    ? props.pagination
    : {
        page: 1,
        pageSize: 20,
      })

  const standardSizes = [10, 20, 30, 40, 50, 100]

  const generatePageSizes = (pageSize: number) => {
    return standardSizes.includes(pageSize)
      ? standardSizes
      : Array.from({ length: 5 }, (_, i) => pageSize * (i + 1))
  }

  const currentPageSizes = ref<number[]>(generatePageSizes(pagination.value.pageSize))

  watch(() => pagination.value.pageSize, (newPageSize) => {
    if (!currentPageSizes.value.includes(newPageSize)) {
      currentPageSizes.value = generatePageSizes(newPageSize)
    }
  })

  const onUpdatePageSize = (v) => {
    pagination.value.pageSize = v
    pagination.value.page = 1
  }

  const onUpdatePage = (v) => {
    pagination.value.page = v
  }

  // 数据处理
  const { data, isLoading, refetch } = useList({
    path: props.path,
    pagination: props.pagination ? pagination.value : false,
    filters: filters.value,
    sorters: sorters.value,
  })

  const list = computed<Record<string, any>[]>(() => data.value?.data || [])
  const meta = computed<Record<string, any> | undefined>(() => data.value?.meta || {})

  const total = computed(() => {
    return props.total?.(data.value) || meta.value?.[props.totalField || 'total'] || 0
  })

  const pageCount = computed(() => Math.ceil(total.value / pagination.value.pageSize) || 0)

  const onUpdateFilters = (v: Record<string, any>) => {
    filters.value = v
  }

  const onUpdateSorters = (v: Record<string, 'asc' | 'desc'>) => {
    sorters.value = v
  }

  // 选中处理
  const checkeds = ref<IListKey[]>([])

  const isAllChecked = computed(() => {
    return checkeds.value.length > 0 && checkeds.value.length === data.value?.data?.length
  })

  const isIndeterminate = computed(() => {
    return checkeds.value.length > 0 && checkeds.value.length < (data.value?.data?.length || 0)
  })

  const toggleChecked = (id: string | number) => {
    const index = checkeds.value.indexOf(id)
    if (index > -1) {
      checkeds.value.splice(index, 1)
    }
    else {
      checkeds.value.push(id)
    }
  }

  const onUpdateChecked = (v: IListKey[]) => {
    checkeds.value = v
  }

  const isChecked = (id: string | number) => {
    return checkeds.value.includes(id)
  }

  const toggleSelectAll = () => {
    if (isAllChecked.value) {
      checkeds.value = []
    }
    else {
      checkeds.value = data.value?.data?.map(item => item[props.key || 'id']).filter(id => id != null) || []
    }
  }

  watch(() => data.value?.data, () => {
    checkeds.value = []
  })

  // 刷新处理
  const onRefresh = () => {
    checkeds.value = []
    refetch()
  }

  // 导出处理
  const exportPagination = ref({
    page: 1,
    pageSize: 100,
  })

  const { trigger: onExport, isLoading: isExporting } = useExportCsv({
    path: props.path,
    filters: filters.value || {},
    sorters: sorters.value || {},
    maxPage: () => {
      return props.exportMaxPage || 0
    },
    pagination: exportPagination.value,
    filename: props.exportFilename || 'data.csv',
    onSuccess: (data) => {
      props.onExportSuccess?.(data)
      exportPagination.value.page = 1
    },
    onProgress: (v) => {
      props.onExportProgress?.(v)
    },
    onError: (error) => {
      props.onExportError?.(error)
      exportPagination.value.page = 1
    },
  })

  // 导出指定数据
  const exportFilter = reactiveComputed(() => {
    return {
      ids: checkeds.value,
    }
  })

  const { trigger: onExportRows, isLoading: isExportingRows } = useExportCsv({
    path: props.path,
    filters: exportFilter,
    maxPage: 1,
    filename: props.exportFilename || 'rows.csv',
    onSuccess: (data) => {
      props.onExportSuccess?.(data)
    },
    onError: (error) => {
      props.onExportError?.(error)
    },
  })

  // 导入处理
  const { open: onImport, isLoading: isImporting } = useImportCsv({
    path: props.path,
    onComplete: (progress) => {
      props.onImportSuccess?.(progress)
    },
    onProgress: (v) => {
      props.onImportProgress?.(v)
    },
    onError: (error) => {
      props.onImportError?.(error)
    },
  })

  // 自动刷新处理
  const autoRefetch = ref(false)
  const { remaining, start, stop } = useCountdown(10, {
    onComplete: () => {
      onRefresh()
      start()
    },
  })

  const onAutoRefetch = () => {
    autoRefetch.value = !autoRefetch.value
    if (autoRefetch.value) {
      onRefresh()
      start()
    }
    else {
      stop()
    }
  }

  return {
    // 数据
    list,
    meta,
    isLoading,
    pagination,
    filters,
    sorters,
    onRefresh,
    onUpdateFilters,
    onUpdateSorters,

    // 选中
    checkeds,
    isAllChecked,
    isIndeterminate,
    toggleChecked,
    isChecked,
    toggleSelectAll,
    onUpdateChecked,

    // 分页
    total,
    page: computed(() => pagination.value.page),
    pageSize: computed(() => pagination.value.pageSize),
    pageSizes: currentPageSizes.value,
    pageCount,
    onUpdatePage,
    onUpdatePageSize,

    // 导出
    onExport,
    isExporting,
    onExportRows,
    isExportingRows,

    // 导入
    onImport,
    isImporting,

    // 自动刷新
    autoRefetch,
    onAutoRefetch,
    autoCountdown: remaining,
  }
}



---
File: /packages/core/src/hooks/manage.ts
---

import type { Ref } from 'vue'
import type { IManage } from '../types'
import { trimStart } from 'lodash-es'
import { inject } from 'vue'
import { useRoute } from 'vue-router'
import { useManageStore } from '../stores'

export interface IManageHook {
  config: IManage
  getRoutePath: (path?: string) => string
  getApiUrl: (path?: string, dataProviderName?: string) => string
  getPath: () => string
}

/**
 * Manage
 * get manage config
 * @param name Manage name
 * @returns Manage
 */
export function useManage(name?: string): IManageHook {
  const manageRef = inject<Ref<string>>('dux.manage')
  if (!name) {
    name = manageRef?.value
  }
  if (!name) {
    throw new Error('manage name is not defined')
  }

  const { config: manage } = useManageStore(name)

  const getRoutePath = (path?: string) => {
    return `${manage?.routePrefix}/${trimStart(path || '', '/')}`
  }

  const getApiUrl = (path?: string, dataProviderName?: string) => {
    const dataProvider = manage?.dataProvider?.[dataProviderName || 'default']
    return dataProvider?.apiUrl?.(path, manage?.apiBasePath) || ''
  }

  const route = useRoute()
  const getPath = () => {
    const fullPath = route.path
    const prefix = manage?.routePrefix || ''
    return trimStart(fullPath.replace(prefix, ''), '/')
  }

  return {
    config: manage as IManage,
    getRoutePath,
    getApiUrl,
    getPath,
  }
}



---
File: /packages/core/src/hooks/menu.ts
---

import type { IMenu } from '../types'
import { cloneDeep } from 'lodash-es'
import { storeToRefs } from 'pinia'
import { computed, ref, watch } from 'vue'
import { useRoute } from 'vue-router'
import { useRouteStore } from '../stores'
import { arrayToTree, searchTree } from '../utils'

export interface UseMenuProps {
  doubleMenu?: boolean
}

export function useMenu(props?: UseMenuProps) {
  const routeStore = useRouteStore()
  const { routes } = storeToRefs(routeStore)

  const getMenu = (hidden: boolean = true): IMenu[] => {
    return cloneDeep(routes.value)?.filter(item => !!item?.name).filter(item => !hidden || item.hidden === undefined || item.hidden === false)
  }

  const originalList = computed<Record<string, any>[]>(() => {
    const menus = getMenu(false)
    return arrayToTree(menus, {
      idKey: 'name',
      parentKey: 'parent',
      childrenKey: 'children',
      sortKey: 'sort',
    }, undefined)
  })

  const list = computed<Record<string, any>[]>(() => {
    const menus = getMenu()
    const data = arrayToTree(menus, {
      idKey: 'name',
      parentKey: 'parent',
      childrenKey: 'children',
      sortKey: 'sort',
    }, undefined)
    return data
  })

  const route = useRoute()

  const allKey = ref(route.name)
  const appKey = ref(route.name)
  const subKey = ref(route.name)

  const mainMenu = computed(() => {
    if (props?.doubleMenu) {
      return list.value
    }
    const appList = cloneDeep(list.value)
    return appList?.map((item) => {
      delete item.children
      return item
    })
  })

  const subMenu = computed(() => {
    if (props?.doubleMenu) {
      return []
    }
    const subList = list.value?.find(item => item.name === appKey.value)?.children
    return subList || []
  })

  const crumbs = computed(() => {
    const data = searchTree(originalList.value, (item) => {
      return item?.name === route.name
    })
    return data
  })

  watch(() => props?.doubleMenu, () => {
    if (!props?.doubleMenu) {
      const paths = searchTree(list.value, (item) => {
        return item?.name === subKey.value
      })
      appKey.value = paths?.[paths.length - 1]?.name
      subKey.value = paths?.[paths.length - 1]?.name
    }
    else {
      const paths = searchTree(list.value, (item) => {
        return item?.name === appKey.value
      })

      appKey.value = paths?.[0]?.name
      subKey.value = paths?.[paths.length - 1]?.name
    }
  }, { immediate: true })

  const isSubMenu = computed(() => {
    if (!props?.doubleMenu) {
      return true
    }
    return (props?.doubleMenu || subMenu.value.length > 0)
  })

  watch([route, originalList, () => props?.doubleMenu], () => {
    const paths = searchTree(originalList.value, (item) => {
      return item.name === route.name
    })

    const findIndex = (list) => {
      let index = -1
      for (let i = list.length - 1; i >= 0; i--) {
        if (list[i].hidden === false || list[i].hidden === undefined) {
          index = i
          break
        }
      }
      return index
    }

    const subIndex = findIndex(paths)

    allKey.value = paths?.[subIndex]?.name

    if (props?.doubleMenu) {
      appKey.value = paths?.[subIndex]?.name
      subKey.value = paths?.[subIndex]?.name
    }
    else {
      appKey.value = paths?.[0]?.name
      subKey.value = paths?.[subIndex]?.name
    }
  }, { immediate: true })

  return {
    data: list,
    originalData: originalList,
    getMenu,
    mainMenu,
    subMenu,
    isSubMenu,
    crumbs,
    active: allKey,
    appActive: appKey,
    subActive: subKey,
  }
}



---
File: /packages/core/src/hooks/overlay.ts
---

import { useOverlayInject } from '@overlastic/vue'
import { DuxOverlay } from '../components'

export interface UseOverlayProps {
  component?: () => any
  componentProps?: Record<string, any>
  mask?: boolean
  maskClosable?: boolean
  duration?: number
  zIndex?: number
}

export function useOverlay(): {
  show: (props: UseOverlayProps) => any
} {
  const create = useOverlayInject(DuxOverlay)

  const show = (props: UseOverlayProps) => {
    return create(props)
  }

  return {
    show,
  }
}



---
File: /packages/core/src/hooks/select.ts
---

import { debounce, isArray } from 'lodash-es'
import { computed, ref, watch } from 'vue'
import { useList, useMany } from './data'

type SelectValue = Array<string | number> | string | number | null | undefined

export interface IUseSelectProps {
  /** 默认选中值，可以是单个值或数组 */
  defaultValue?: SelectValue
  /** 数据请求路径 */
  path?: string
  /** 请求参数 */
  params?: Record<string, any>
  /** 分页配置，false表示不分页，true表示默认20条/页，数字表示指定每页条数 */
  pagination?: boolean | number
  /** 数据提供者名称 */
  providerName?: string
  /**
   * 选项显示标签配置
   * - 字符串：指定用作显示标签的字段名
   * - 函数：自定义标签生成逻辑
   * - 默认fallback顺序：label -> name -> title -> value/id的字符串形式
   */
  optionLabel?: string | ((item: Record<string, any>) => string)
  /**
   * 选项值配置
   * - 字符串：指定用作选项值的字段名
   * - 函数：自定义值获取逻辑
   * - 默认fallback顺序：value -> id
   * - 用途：生成最终选项的 value 属性，供外部使用
   */
  optionValue?: string | ((item: Record<string, any>) => string)
  /**
   * 选项唯一标识字段名
   * - 仅支持字符串类型，指定用于去重比较的字段名
   * - 默认fallback顺序：value -> id
   * - 用途：内部选项去重和比较，防止重复选项
   * - 与 optionValue 的区别：optionField 用于内部去重逻辑，optionValue 用于生成最终选项值
   */
  optionField?: string
  /** 搜索关键词字段名，默认为 'keyword' */
  keywordField?: string
  /** 搜索防抖延迟时间（毫秒），默认300ms */
  debounce?: number
}

export function useSelect(props: IUseSelectProps) {
  const keyword = ref<string>()
  const pagination = ref({
    page: 1,
    pageSize: typeof props.pagination === 'number'
      ? props.pagination
      : props.pagination ? 20 : 0,
  })
  const selectedOnce = ref(false)

  const debouncedSearch = debounce((value: string) => {
    keyword.value = value
  }, props.debounce || 300)

  const onSearch = (searchValue: string) => {
    debouncedSearch(searchValue)
  }

  const { data, isLoading, total, pageCount } = useList({
    get path() {
      return props.path || ''
    },
    get filters() {
      const filters: Record<string, any> = { ...props.params }
      if (keyword.value) {
        filters[props.keywordField || 'keyword'] = keyword.value
      }
      return filters
    },
    get pagination() {
      return props.pagination ? pagination.value : undefined
    },
    get providerName() {
      return props.providerName
    },
  })

  const selectedItems = ref<Record<string, any>[]>([])

  const getOptionFieldValue = (item: Record<string, any>) => {
    const fieldConfig = props.optionField || props.optionValue

    if (typeof fieldConfig === 'string') {
      return item[fieldConfig] || item.value || item.id
    }
    else if (typeof fieldConfig === 'function') {
      return fieldConfig(item)
    }
    return item.value || item.id
  }

  const formatOption = (item: Record<string, any>) => {
    const { optionLabel = 'label', optionValue = 'value' } = props

    let label: string
    if (typeof optionLabel === 'function') {
      label = optionLabel(item)
    }
    else if (typeof optionLabel === 'string') {
      label = item[optionLabel] || item.label || item.name || item.title || String(item.value || item.id || '')
    }
    else {
      label = item.label || item.name || item.title || String(item.value || item.id || '')
    }

    let value: string | number
    if (typeof optionValue === 'function') {
      value = optionValue(item)
    }
    else if (typeof optionValue === 'string') {
      value = item[optionValue] || item.value || item.id
    }
    else {
      value = item.value || item.id
    }

    return {
      label,
      value,
      raw: item,
    }
  }

  const options = computed(() => {
    const listData = data.value?.data || []

    const combined = [...selectedItems.value]
    listData.forEach((item) => {
      const exists = combined.some(selected =>
        getOptionFieldValue(selected) === getOptionFieldValue(item),
      )
      if (!exists) {
        combined.push(item)
      }
    })

    return combined.map(item => formatOption(item))
  })

  const meta = computed(() => data.value?.meta || {})

  const { refetch: fetchSelected } = useMany({
    get path() {
      return props.path || ''
    },
    get ids() {
      if (!props.defaultValue) {
        return []
      }
      return isArray(props.defaultValue) ? props.defaultValue as string[] : [props.defaultValue as string]
    },
    options: {
      enabled: false,
    },
    providerName: props.providerName,
  })

  watch(() => props.defaultValue, async (value) => {
    if (selectedOnce.value || !value) {
      return
    }
    selectedOnce.value = true

    const defaultValues = Array.isArray(value) ? value : [value]

    const allValuesExist = defaultValues.every(val =>
      options.value.some(option => option.value === val),
    )

    if (allValuesExist) {
      return
    }

    try {
      const res = await fetchSelected()
      selectedItems.value = res?.data?.data || []
    }
    catch (error) {
      console.warn('Failed to fetch selected items:', error)
    }
  }, { immediate: true })

  const loading = computed(() => isLoading.value)

  return {
    onSearch,
    options,
    meta,
    loading,
    pagination,
    total,
    pageCount,
  }
}



---
File: /packages/core/src/hooks/theme.ts
---

import type { ITheme } from '../types'
import { useColorMode, useCycleList } from '@vueuse/core'
import { hex2rgb } from 'colorizr'
import { storeToRefs } from 'pinia'
import { computed, readonly, watch, watchEffect } from 'vue'
import { themeColor } from '../config'
import { useThemeStore } from '../stores'
import { useManage } from './manage'

// 色彩类型定义
export type ThemeColorType = 'primary' | 'info' | 'success' | 'warning' | 'error' | 'gray'
export type ThemeColorName = string
export type ThemeColorShade = '50' | '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | '950'

// 场景类型定义 - 更精确的类型
export type ThemeSceneType = 'default' | 'hover' | 'pressed' | 'focus' | 'disabled'

// 色彩场景配置
export interface ThemeColorSceneConfig {
  default: string // 默认色阶，对应 --ui-primary 不带后缀的变量
  hover: string
  pressed: string
  focus: string
  disabled: string
}

// 色彩场景组配置
export interface ThemeColorSceneGroupConfig {
  default: ThemeColorSceneConfig
  overrides?: Partial<Record<ThemeColorType, Partial<ThemeColorSceneConfig>>>
}

// 语义变量配置
export interface ThemeColorSemanticConfig {
  text: {
    dimmed: string
    muted: string
    toned: string
    base: string
    highlighted: string
    inverted: string
  }
  bg: {
    base: string
    muted: string
    elevated: string
    accented: string
    inverted: string
  }
  border: {
    base: string
    muted: string
    accented: string
    inverted: string
  }
}

// 主题配置
export interface ThemeConfig {
  colors: Record<string, Record<string, string>>
  colorTypes: ThemeColorType[]
  colorShades: ThemeColorShade[]
  colorScenes: {
    light: ThemeColorSceneGroupConfig
    dark: ThemeColorSceneGroupConfig
  }
  colorSemantic: {
    light: ThemeColorSemanticConfig
    dark: ThemeColorSemanticConfig
  }
  colorBase?: {
    white: string
    black: string
  }
}

export function useTheme() {
  const themeStore = useThemeStore()

  const { mode } = storeToRefs(themeStore)
  const colorMode = useColorMode({
    storageRef: mode,
  })
  const manage = useManage()

  const { state, next, go } = useCycleList(['dark', 'light', 'auto'] as const, {
    initialValue: colorMode.store.value,
  })

  watchEffect(() => {
    colorMode.value = state.value
  })

  const setMode = (mode: 'dark' | 'light' | 'auto') => {
    switch (mode) {
      case 'auto':
        go(2)
        break
      case 'light':
        go(1)
        break
      case 'dark':
        go(0)
        break
    }
  }

  const isDark = computed(() => {
    const { system, store } = colorMode
    if (store.value === 'auto') {
      return system.value === 'dark'
    }
    return store.value === 'dark'
  })

  const resources = computed<ITheme>(() => {
    if (isDark.value) {
      return {
        logo: manage.config?.theme?.darkLogo,
        banner: manage.config?.theme?.darkBanner,
      }
    }
    return {
      logo: manage.config?.theme?.logo,
      banner: manage.config?.theme?.banner,
    }
  })

  const defaultConfig: ThemeConfig = {
    colors: themeColor,
    // 色彩类型
    colorTypes: ['primary', 'info', 'success', 'warning', 'error', 'gray'],
    // 色彩色阶
    colorShades: ['50', '100', '200', '300', '400', '500', '600', '700', '800', '900', '950'],
    // 色彩场景
    colorScenes: {
      light: {
        default: { default: '600', hover: '600', pressed: '700', focus: '500', disabled: '300' },
      },
      dark: {
        default: { default: '500', hover: '400', pressed: '300', focus: '500', disabled: '600' },
      },
    },
    // 语义颜色
    colorSemantic: {
      light: {
        text: { dimmed: '300', muted: '400', toned: '600', base: '800', highlighted: '900', inverted: 'white' },
        bg: { base: 'white', muted: '50', elevated: '100', accented: '200', inverted: '900' },
        border: { base: '100', muted: '200', accented: '300', inverted: '900' },
      },
      dark: {
        text: { dimmed: '600', muted: '500', toned: '300', base: '400', highlighted: '100', inverted: 'black' },
        bg: { base: '950', muted: '900', elevated: '800', accented: '700', inverted: '100' },
        border: { base: '900', muted: '800', accented: '700', inverted: '100' },
      },
    },
    colorBase: { white: '#ffffff', black: '#000000' },
  }

  // 合并配置
  const finalConfig = { ...defaultConfig, ...manage.config?.theme?.config }
  const { colorShades, colorTypes } = finalConfig

  // 使用store中的色彩映射
  const colorMapping = computed(() => themeStore.theme)

  // 获取所有可用的色彩名称
  const colors = computed(() => Object.keys(finalConfig.colors) as ThemeColorName[])

  // 色彩场景
  const colorScenes: ThemeSceneType[] = ['default', 'hover', 'pressed', 'focus', 'disabled']

  // 获取当前主题配置的辅助函数
  function getCurrentThemeConfig() {
    return isDark.value ? finalConfig.colorScenes.dark : finalConfig.colorScenes.light
  }

  // 专门获取色阶编号
  function getColorLevel(type: ThemeColorType, scene: ThemeSceneType): ThemeColorShade {
    const currentSceneGroup = getCurrentThemeConfig()
    const defaultScenes = currentSceneGroup.default

    // 如果指定了颜色类型，尝试获取特定配置
    if (currentSceneGroup.overrides?.[type]) {
      const typeSpecificScenes = currentSceneGroup.overrides[type]
      const sceneValue = typeSpecificScenes?.[scene]
      if (sceneValue) {
        return sceneValue as ThemeColorShade
      }
    }

    // 使用默认配置
    return (defaultScenes[scene] || '500') as ThemeColorShade
  }

  // 专门获取最终颜色值
  function getColorValue(type: ThemeColorType, level: ThemeColorShade): string {
    const mappedColor = colorMapping.value[type]
    return finalConfig.colors[mappedColor]?.[level] || ''
  }

  // 根据主题模式获取通用颜色值
  function getSemanticValue(category: keyof ThemeColorSemanticConfig, key: string, grayColor: string): string {
    const currentSemantic = isDark.value ? finalConfig.colorSemantic.dark : finalConfig.colorSemantic.light
    const value = currentSemantic[category][key as keyof typeof currentSemantic[typeof category]]

    if (value === 'white' || value === 'black') {
      return `var(--ui-color-${value})`
    }
    return `var(--base-color-${grayColor}-${value})`
  }

  const color2rgb = (color: string) => {
    const rgb = hex2rgb(color)
    return `${rgb.r} ${rgb.g} ${rgb.b}`
  }

  // 生成CSS变量字符串
  function generateCSSVariables(): string {
    const baseVars: string[] = []
    Object.entries(finalConfig.colors).forEach(([colorName, shades]) => {
      if (typeof shades === 'object') {
        Object.entries(shades).forEach(([shade, value]) => {
          try {
            baseVars.push(`--base-color-${colorName}-${shade}: ${color2rgb(value)};`)
          }
          catch {
            baseVars.push(`--base-color-${colorName}-${shade}: ${value};`)
          }
        })
      }
    })

    // 生成场景变量
    const uiVars: string[] = []
    colorTypes.forEach((type) => {
      const mappedColor = colorMapping.value[type]
      colorShades.forEach((shade) => {
        uiVars.push(`--ui-color-${type}-${shade}: var(--base-color-${mappedColor}-${shade});`)
      })

      colorScenes.forEach((scene) => {
        const sceneLevel = getColorLevel(type, scene)
        if (scene === 'default') {
          uiVars.push(`--ui-color-${type}: var(--base-color-${mappedColor}-${sceneLevel});`)
        }
        else {
          uiVars.push(`--ui-color-${type}-${scene}: var(--base-color-${mappedColor}-${sceneLevel});`)
        }
      })
    })

    // 生成公共变量
    const grayColor = colorMapping.value.gray
    const colorBase: string[] = [
      `--ui-color-white: ${color2rgb(finalConfig.colorBase?.white || '#ffffff')};`,
      `--ui-color-black: ${color2rgb(finalConfig.colorBase?.black || '#000000')};`,

      `--ui-text-dimmed: ${getSemanticValue('text', 'dimmed', grayColor)};`,
      `--ui-text-muted: ${getSemanticValue('text', 'muted', grayColor)};`,
      `--ui-text-toned: ${getSemanticValue('text', 'toned', grayColor)};`,
      `--ui-text: ${getSemanticValue('text', 'base', grayColor)};`,
      `--ui-text-highlighted: ${getSemanticValue('text', 'highlighted', grayColor)};`,
      `--ui-text-inverted: ${getSemanticValue('text', 'inverted', grayColor)};`,

      `--ui-bg: ${getSemanticValue('bg', 'base', grayColor)};`,
      `--ui-bg-muted: ${getSemanticValue('bg', 'muted', grayColor)};`,
      `--ui-bg-elevated: ${getSemanticValue('bg', 'elevated', grayColor)};`,
      `--ui-bg-accented: ${getSemanticValue('bg', 'accented', grayColor)};`,
      `--ui-bg-inverted: ${getSemanticValue('bg', 'inverted', grayColor)};`,

      `--ui-border: ${getSemanticValue('border', 'base', grayColor)};`,
      `--ui-border-muted: ${getSemanticValue('border', 'muted', grayColor)};`,
      `--ui-border-accented: ${getSemanticValue('border', 'accented', grayColor)};`,
      `--ui-border-inverted: ${getSemanticValue('border', 'inverted', grayColor)};`,
    ]

    return `:root {\n  ${baseVars.join('\n  ')}\n  ${uiVars.join('\n  ')}\n  ${colorBase.join('\n  ')}\n}`
  }

  // 手动维护样式节点
  let styleElement: HTMLStyleElement | null = null

  function createOrUpdateStyle() {
    const cssContent = generateCSSVariables()

    if (!styleElement) {
      styleElement = document.createElement('style')
      styleElement.id = 'dvha-variables'
      document.head.appendChild(styleElement)
    }

    styleElement.textContent = cssContent
  }

  // 初始化CSS变量引用
  function cssInit() {
    if (themeStore.cssInit) {
      return
    }
    themeStore.setCssInit()
    createOrUpdateStyle()
  }

  watch([colorMapping, isDark], () => {
    if (!themeStore.cssInit) {
      return
    }
    createOrUpdateStyle()
  }, { deep: true, immediate: false })

  // 设置单个颜色
  function setColor(type: ThemeColorType, colorName: ThemeColorName) {
    if (colors.value.includes(colorName)) {
      themeStore.setThemeColor(type, colorName)
    }
    else {
      console.warn(`Color "${colorName}" is not available`)
    }
  }

  // 设置多个颜色
  function setColors(mappings: Partial<Record<ThemeColorType, ThemeColorName>>) {
    themeStore.setThemeColors(mappings)
  }

  // 重置为默认色彩
  function cssReset() {
    themeStore.resetTheme()
  }

  // 获取阶梯颜色值
  function getShadeColor(type: ThemeColorType, shade: ThemeColorShade, asVariable = false): string {
    if (asVariable) {
      return `--ui-color-${type}-${shade}`
    }
    return getColorValue(type, shade)
  }

  // 获取场景颜色值
  function getSceneColor(type: ThemeColorType, scene?: ThemeSceneType, asVariable = false): string {
    if (!scene) {
      scene = 'default'
    }

    if (asVariable) {
      if (scene === 'default') {
        return `--ui-color-${type})`
      }
      return `--ui-color-${type}-${scene})`
    }

    // 返回具体颜色值
    const level = getColorLevel(type, scene)
    return getColorValue(type, level)
  }

  // 获取公共颜色值
  function getSemanticColor(category: keyof ThemeColorSemanticConfig, key: string, asVariable = false): string {
    if (asVariable) {
      // 构建语义变量名
      let varName: string

      switch (category) {
        case 'text':
          varName = key === 'base' ? '--ui-text' : `--ui-text-${key}`
          break
        case 'bg':
          varName = key === 'base' ? '--ui-bg' : `--ui-bg-${key}`
          break
        case 'border':
          varName = key === 'base' ? '--ui-border' : `--ui-border-${key}`
          break
        default:
          varName = `--ui-${category}-${key}`
      }

      return `${varName}`
    }

    // 返回具体颜色值
    const grayColor = colorMapping.value.gray
    const currentSemantic = isDark.value ? finalConfig.colorSemantic.dark : finalConfig.colorSemantic.light
    const value = currentSemantic[category][key as keyof typeof currentSemantic[typeof category]]

    if (value === 'white') {
      return finalConfig.colorBase?.white || '#ffffff'
    }
    if (value === 'black') {
      return finalConfig.colorBase?.black || '#000000'
    }

    return finalConfig.colors[grayColor]?.[value] || ''
  }

  const neutralColors = computed(() => {
    return colors.value?.filter(color => ['slate', 'gray', 'zinc', 'neutral', 'stone'].includes(color))
  })

  const primaryColors = computed(() => {
    return colors.value?.filter(color => !['slate', 'gray', 'zinc', 'neutral', 'stone'].includes(color))
  })

  return {
    toggle: next,
    mode: state,
    setMode,
    isDark,

    resources,
    config: readonly(finalConfig),
    colorMapping: readonly(colorMapping),

    colors,
    neutralColors,
    primaryColors,

    colorShades,
    colorTypes,
    colorScenes,

    cssInit,
    cssReset,

    setColor,
    setColors,

    getSceneColor,
    getShadeColor,
    getSemanticColor,

  }
}



---
File: /packages/core/src/hooks/tree.ts
---

import { computed, toRef } from 'vue'
import { arrayToTree, treeToArr } from '../utils'
import { useList } from './data'

export interface IUseTreeProps {
  path?: string
  params?: Record<string, any>
  treeOptions?: {
    valueKey?: string
    parentKey?: string
    sortKey?: string
    childrenKey?: string
  }
  converTree?: boolean
  providerName?: string
}

export function useTree(props: IUseTreeProps) {
  const path = toRef(props, 'path')
  const params = toRef(props, 'params')
  const providerName = toRef(props, 'providerName')

  const { data, isLoading } = useList({
    path: path.value || '',
    filters: params.value,
    providerName: providerName.value,
  })

  const options = computed(() => {
    if (!props.converTree) {
      return data.value?.data || []
    }
    return arrayToTree(data.value?.data || [], {
      idKey: props.treeOptions?.valueKey || 'id',
      parentKey: props.treeOptions?.parentKey || 'parent_id',
      sortKey: props.treeOptions?.sortKey || 'sort',
      childrenKey: props.treeOptions?.childrenKey || 'children',
    })
  })

  const expanded = computed(() => {
    return treeToArr(options.value, props.treeOptions?.valueKey || 'id', props.treeOptions?.childrenKey || 'children')
  })

  const loading = computed(() => isLoading.value)

  const optionsData = computed(() => {
    const processOptions = (items: any[]) => {
      return items.map((item) => {
        const newItem = { ...item }
        if (Array.isArray(newItem.children)) {
          if (newItem.children.length === 0) {
            delete newItem.children
          }
          else {
            newItem.children = processOptions(newItem.children)
          }
        }
        return newItem
      })
    }
    return processOptions(options.value || [])
  })

  return {
    options: optionsData,
    loading,
    expanded,
  }
}



---
File: /packages/core/src/hooks/upload.ts
---

import type { UseMutationOptions } from '@tanstack/vue-query'
import type { IDataProviderCustomOptions, IDataProviderError, IDataProviderResponse } from '../types'
import type { IUploadDriver } from './upload/types'
import { useFileDialog } from '@vueuse/core'
import { uniqueId } from 'lodash-es'
import { computed, ref, watch } from 'vue'
import { createLocalUploadDriver } from './upload/local'

export interface IUseUploadProps extends Omit<IDataProviderCustomOptions, 'onUploadProgress' | 'onDownloadProgress'> {
  method?: 'POST' | 'PUT'
  maxFileSize?: number
  maxFileCount?: number
  accept?: string
  multiple?: boolean
  autoUpload?: boolean
  params?: Record<string, string>

  // 驱动实例
  driver?: IUploadDriver

  options?: UseMutationOptions<IDataProviderResponse, IDataProviderError, IDataProviderCustomOptions>
  onSuccess?: (data: IDataProviderResponse) => void
  onError?: (error: IDataProviderError) => void

  onDataCallback?: (data: IDataProviderResponse, file: IUseUploadFile) => Partial<IUseUploadFileData>
  onProgress?: (progress: IOverallProgress) => void
  onCancel?: (id: string) => void
  onComplete?: (data: IUseUploadFile[]) => void

}

export type IUseUploadType = 'file' | 'blob' | 'base64' | 'arrayBuffer'
export type IUseUploadPayload = File | Blob | string | ArrayBuffer

export interface IUseUploadFileData {
  url?: string
  filename?: string
  filesize?: number
  filetype?: string
}

export interface IUseUploadFile extends IUseUploadFileData {
  id: string
  progress?: IUploadProgress
  file?: File
  filesizeText?: string
  status?: 'pending' | 'uploading' | 'success' | 'error' | 'cancelled'
  error?: string
  data?: IDataProviderResponse
}

export interface IUploadProgress {
  loaded: number
  total?: number
  percent?: number
  speed?: number
  speedText?: string
  uploadTime?: number
  remainingTime?: number
}

export interface IOverallProgress {
  index: number
  totalFiles: number
  currentFile?: IUseUploadFile
  totalPercent: number
  totalLoaded: number
  totalSize: number
}

export function useUpload(props?: IUseUploadProps) {
  props = props || {}
  const isUploading = ref<boolean>(false)
  const uploadFiles = ref<IUseUploadFile[]>([])
  const currentUploadingIndex = ref<number>(-1)
  const uploadControllers = ref<Map<string, AbortController>>(new Map())

  // 创建上传驱动 - 默认使用本地驱动
  const uploadDriver = props.driver || createLocalUploadDriver()

  const params = computed(() => {
    const { onProgress, onDataCallback, onCancel, onComplete, maxFileSize, maxFileCount, accept, multiple, autoUpload, options, onSuccess, onError, method, driver, params, ...rest } = props
    return rest
  })

  const method = computed(() => {
    return props.method || 'POST'
  })

  const overallProgress = computed<IOverallProgress>(() => {
    const totalFiles = uploadFiles.value.length
    const totalSize = uploadFiles.value.reduce((sum, file) => sum + (file.filesize || 0), 0)

    let totalLoaded = 0
    let overallPercent = 0

    uploadFiles.value.forEach((file, index) => {
      if (index < currentUploadingIndex.value) {
        totalLoaded += file.filesize || 0
      }
      else if (index === currentUploadingIndex.value) {
        totalLoaded += file.progress?.loaded || 0
      }
    })

    if (totalSize > 0) {
      overallPercent = Math.round((totalLoaded / totalSize) * 100)
    }

    // index 计算：没有上传时为 0，上传时从 1 开始计数
    const index = currentUploadingIndex.value >= 0 ? currentUploadingIndex.value + 1 : 0

    return {
      index,
      totalFiles,
      currentFile: uploadFiles.value[currentUploadingIndex.value],
      totalPercent: overallPercent,
      totalLoaded,
      totalSize,
    }
  })

  const formatFileSize = (bytes: number): string => {
    if (bytes === 0) {
      return '0 Bytes'
    }
    const k = 1024
    const sizes = ['Bytes', 'KB', 'MB', 'GB']
    const i = Math.floor(Math.log(bytes) / Math.log(k))
    return `${Number.parseFloat((bytes / k ** i).toFixed(2))} ${sizes[i]}`
  }

  // 格式化上传速度
  const formatSpeed = (bytesPerSecond: number): string => {
    if (bytesPerSecond === 0) {
      return '0 B/s'
    }
    const k = 1024
    const sizes = ['B/s', 'KB/s', 'MB/s', 'GB/s']
    const i = Math.floor(Math.log(bytesPerSecond) / Math.log(k))
    return `${Number.parseFloat((bytesPerSecond / k ** i).toFixed(2))} ${sizes[i]}`
  }

  const generateId = (): string => {
    return uniqueId('upload-')
  }

  const convertToFile = async (payload: IUseUploadPayload, type: IUseUploadType, filename?: string): Promise<File> => {
    switch (type) {
      case 'file': {
        if (!(payload instanceof File)) {
          throw new TypeError('Payload must be a File when type is "file"')
        }
        return payload
      }
      case 'blob': {
        if (!(payload instanceof Blob)) {
          throw new TypeError('Payload must be a Blob when type is "blob"')
        }
        return new File([payload], filename || 'blob-file', { type: payload.type })
      }
      case 'base64': {
        if (typeof payload !== 'string') {
          throw new TypeError('Payload must be a string when type is "base64"')
        }
        const base64Data = payload.includes(',') ? payload.split(',')[1] : payload
        const mimeType = payload.includes(',') ? payload.split(',')[0].split(':')[1].split(';')[0] : 'application/octet-stream'
        const byteCharacters = atob(base64Data)
        const byteArray = new Uint8Array(byteCharacters.length)
        for (let i = 0; i < byteCharacters.length; i++) {
          byteArray[i] = byteCharacters.charCodeAt(i)
        }
        const blob = new Blob([byteArray], { type: mimeType })
        return new File([blob], filename || 'base64-file', { type: mimeType })
      }
      case 'arrayBuffer': {
        if (!(payload instanceof ArrayBuffer)) {
          throw new TypeError('Payload must be ArrayBuffer when type is "arrayBuffer"')
        }
        const arrayBlob = new Blob([payload])
        return new File([arrayBlob], filename || 'array-buffer-file', { type: 'application/octet-stream' })
      }
      default: {
        throw new Error(`Unsupported upload type: ${type}`)
      }
    }
  }

  // process file upload
  const checkFile = (file: File) => {
    if (props.maxFileSize && file.size > props.maxFileSize) {
      throw new Error(`File size cannot exceed ${formatFileSize(props.maxFileSize)}`)
    }

    if (props.maxFileCount && uploadFiles.value.length >= props.maxFileCount) {
      throw new Error(`File count cannot exceed ${props.maxFileCount}`)
    }
  }

  // add file to upload list
  const addFile = async (payload: IUseUploadPayload, type: IUseUploadType, filename?: string): Promise<IUseUploadFile> => {
    const file = await convertToFile(payload, type, filename)

    checkFile(file)

    const uploadFile: IUseUploadFile = {
      id: generateId(),
      file,
      filename: file.name,
      filesize: file.size,
      filetype: file.type,
      filesizeText: formatFileSize(file.size),
      status: 'pending',
      progress: {
        loaded: 0,
        total: file.size,
        percent: 0,
        speed: 0,
        speedText: formatSpeed(0),
        remainingTime: 0,
        uploadTime: 0,
      },
    }

    uploadFiles.value.push(uploadFile)
    return uploadFile
  }

  // update file status
  const updateFileStatus = (id: string, updates: Partial<IUseUploadFile>) => {
    const index = uploadFiles.value.findIndex(f => f.id === id)
    if (index !== -1) {
      uploadFiles.value[index] = { ...uploadFiles.value[index], ...updates }
    }
  }

  // trigger complete callback
  const triggerComplete = () => {
    const allCompleted = uploadFiles.value.every(file => file.status !== 'uploading')
    if (!allCompleted) {
      return
    }
    props.onComplete?.(uploadFiles.value)
  }

  // cancel file upload
  const cancelFile = (id: string) => {
    const file = uploadFiles.value.find(f => f.id === id)

    if (!file || (file.status !== 'pending' && file.status !== 'uploading')) {
      return false
    }

    if (file.status === 'uploading') {
      const controller = uploadControllers.value.get(id)
      if (controller) {
        controller.abort()
        uploadControllers.value.delete(id)
      }
    }

    updateFileStatus(id, {
      status: 'cancelled',
    })

    props.onCancel?.(id)
    triggerComplete()

    return true
  }

  // cancel files upload
  const cancelFiles = (ids?: string[]) => {
    if (ids) {
      ids.forEach(id => cancelFile(id))
    }
    else {
      uploadFiles.value.forEach(file => cancelFile(file.id))
    }
  }

  // trigger file upload
  const upload = async (uploadFile: IUseUploadFile): Promise<IUseUploadFile> => {
    if (!uploadFile.file) {
      throw new Error('File not found')
    }

    checkFile(uploadFile.file)

    const abortController = new AbortController()
    uploadControllers.value.set(uploadFile.id, abortController)

    const fileStartTime = Date.now()

    updateFileStatus(uploadFile.id, { status: 'uploading' })

    return uploadDriver.upload(uploadFile.file, {
      ...params.value,
      method: method.value,
      signal: abortController.signal,
      params: props.params,
      onUploadProgress: (progressData) => {
        const currentTime = Date.now()
        const elapsedTimeMs = currentTime - fileStartTime
        const elapsedTimeSeconds = elapsedTimeMs / 1000

        const speed = elapsedTimeSeconds > 0 ? progressData.loaded / elapsedTimeSeconds : 0

        const remainingBytes = (progressData.total || 0) - progressData.loaded
        const remainingTime = speed > 0 ? remainingBytes / speed : 0

        const newProgress = {
          loaded: progressData.loaded,
          total: progressData.total,
          percent: progressData.percent || 0,
          speed: Math.round(speed),
          speedText: formatSpeed(speed),
          uploadTime: Math.round(elapsedTimeSeconds),
          remainingTime: Math.round(remainingTime),
        }

        updateFileStatus(uploadFile.id, {
          status: 'uploading',
          progress: newProgress,
        })

        props.onProgress?.(overallProgress.value)
      },
    }).then((response) => {
      if (uploadFile.status === 'cancelled') {
        throw new Error('Upload cancelled')
      }

      const callbackData = props.onDataCallback?.(response, uploadFile) || response.data

      const finalUploadTime = Math.round((Date.now() - fileStartTime) / 1000)

      const updatedFile = {
        ...uploadFile,
        status: 'success' as const,
        data: response,
        ...callbackData,
        progress: {
          ...uploadFile.progress,
          loaded: uploadFile.filesize || 0,
          percent: 100,
          speed: 0,
          speedText: formatSpeed(0),
          uploadTime: finalUploadTime,
          remainingTime: 0,
        },
      }

      updateFileStatus(uploadFile.id, updatedFile)
      uploadControllers.value.delete(uploadFile.id)
      props.onSuccess?.(response)

      return updatedFile
    }).catch((err) => {
      if (err.message === 'canceled' || uploadFile.status === 'cancelled') {
        throw new Error('Upload cancelled')
      }
      updateFileStatus(uploadFile.id, {
        status: 'error',
        error: err.message,
      })
      uploadControllers.value.delete(uploadFile.id)
      throw err
    }).finally(() => {
      triggerComplete()
    })
  }

  // trigger upload
  const trigger = async (): Promise<IUseUploadFile[]> => {
    const pendingFiles = uploadFiles.value.filter(file => file.status === 'pending')
    if (pendingFiles.length === 0) {
      return []
    }

    isUploading.value = true

    try {
      const uploadedFiles: IUseUploadFile[] = []

      for (let i = 0; i < pendingFiles.length; i++) {
        const fileData = pendingFiles[i]

        const fileIndex = uploadFiles.value.findIndex(f => f.id === fileData.id)
        currentUploadingIndex.value = fileIndex

        const uploadedFile = await upload(fileData)
        uploadedFiles.push(uploadedFile)
      }

      return uploadedFiles
    }
    catch (error: any) {
      props.onError?.({
        status: error?.status || 500,
        message: error?.message || 'upload failed',
      })
      throw error
    }
    finally {
      isUploading.value = false
      currentUploadingIndex.value = -1
    }
  }

  // clear all files from upload list
  const clearFiles = () => {
    uploadFiles.value.forEach((file) => {
      cancelFile(file.id)
    })

    uploadControllers.value.clear()

    uploadFiles.value = []
    currentUploadingIndex.value = -1
  }

  // add files to upload list
  const addFiles = async (files: IUseUploadPayload[], type: IUseUploadType = 'file') => {
    try {
      if (!props.multiple && files.length > 1) {
        throw new Error('Single file mode: only one file can be selected')
      }

      if (!props.multiple && uploadFiles.value.length > 0) {
        clearFiles()
      }

      if (props.maxFileCount && uploadFiles.value.length + files.length > props.maxFileCount) {
        throw new Error(`Adding ${files.length} files would exceed the maximum limit of ${props.maxFileCount}`)
      }

      for (const payload of files) {
        await addFile(payload, type)
      }
    }
    catch (error: any) {
      props.onError?.({
        status: error?.status || 400,
        message: error?.message || 'Failed to add files',
      })
      throw error
    }

    if (props.autoUpload) {
      trigger().catch((error) => {
        console.warn('Auto upload failed:', error)
      })
    }
  }

  // remove file from upload list
  const removeFile = (id: string) => {
    const file = uploadFiles.value.find(f => f.id === id)
    if (file && file.status === 'uploading') {
      updateFileStatus(id, {
        status: 'cancelled',
      })

      const controller = uploadControllers.value.get(id)
      if (!controller) {
        return
      }

      controller.abort()
      uploadControllers.value.delete(id)
    }

    const index = uploadFiles.value.findIndex(f => f.id === id)
    if (index !== -1) {
      uploadFiles.value.splice(index, 1)
    }
  }

  // remove files from upload list
  const removeFiles = (ids?: string[]) => {
    if (ids) {
      ids.forEach(id => removeFile(id))
    }
    else {
      uploadFiles.value.forEach(file => removeFile(file.id))
    }
  }

  // file dialog selector
  const { files: selectedFiles, open: openFileDialog, reset: resetFiles } = useFileDialog({
    accept: props.accept,
    multiple: props.multiple || false,
  })

  const createFileFromData = (fileData: IUseUploadFileData): IUseUploadFile => {
    return {
      id: generateId(),
      ...fileData,
      filesizeText: fileData.filesize ? formatFileSize(fileData.filesize) : undefined,
      status: fileData.url ? 'success' : 'pending',
      progress: {
        loaded: 0,
        total: fileData.filesize || 0,
        percent: fileData.url ? 100 : 0,
        speed: 0,
        speedText: formatSpeed(0),
        remainingTime: 0,
        uploadTime: 0,
      },
    }
  }

  watch(selectedFiles, async (newFiles) => {
    if (newFiles && newFiles.length > 0) {
      const fileArray = Array.from(newFiles)
      resetFiles()
      await addFiles(fileArray, 'file').catch((error) => {
        console.warn('Failed to add selected files:', error)
      })
    }
  })

  const dataFiles = computed((): IUseUploadFileData[] => {
    return uploadFiles.value
      .filter(file => file.status === 'success')
      .map((file) => {
        return {
          url: file.url,
          filename: file.filename,
          filesize: file.filesize,
          filetype: file.filetype,
        }
      })
  })

  // add data files to upload list
  const addDataFiles = (dataFiles: IUseUploadFileData[]) => {
    if (!props.multiple && uploadFiles.value.length > 0) {
      clearFiles()
    }

    const newUploadFiles = dataFiles.map(fileData => createFileFromData(fileData))
    uploadFiles.value.push(...newUploadFiles)
  }

  return {
    isUploading,
    uploadFiles,
    dataFiles,
    progress: overallProgress,

    open: openFileDialog,
    trigger,
    resetFiles,
    clearFiles,
    removeFiles,
    addFiles,
    addDataFiles,
    cancelFiles,
  }
}



---
File: /packages/core/src/preset/authProvider.ts
---

import type { IManageHook } from '../hooks'
import type { IUserState } from '../stores'
import type { IAuthActionResponse, IAuthCheckResponse, IAuthErrorResponse, IAuthLoginResponse, IAuthLogoutResponse, IAuthProvider, IDataProviderError } from '../types'
import axios from 'axios'

export interface ISimpleAuthProviderProps {
  apiPath?: {
    login?: string
    check?: string
    logout?: string
    register?: string
    forgotPassword?: string
    updatePassword?: string
  }
  routePath?: {
    login?: string
    index?: string
  }
  dataProviderName?: string
}

export function simpleAuthProvider(props?: ISimpleAuthProviderProps): IAuthProvider {
  return {
    login: async (params: any, manage: IManageHook): Promise<IAuthLoginResponse> => {
      return await axios.post(manage.getApiUrl(props?.apiPath?.login || '/login', props?.dataProviderName), params).then((res) => {
        return {
          success: true,
          message: res?.data?.message,
          redirectTo: props?.routePath?.index || '/',
          data: res?.data?.data as IUserState,
        }
      }).catch((error) => {
        return {
          success: false,
          message: error?.response?.data?.message || error?.message,
        }
      })
    },
    check: async (_params?: any, manage?: IManageHook, auth?: IUserState): Promise<IAuthCheckResponse> => {
      return await axios.get(manage?.getApiUrl(props?.apiPath?.check || '/check', props?.dataProviderName) || '', {
        headers: {
          Authorization: auth?.token || '',
        },
      }).then((res: any) => {
        return {
          success: true,
          logout: false,
          message: res?.data?.message,
          data: res?.data?.data as IUserState,
        }
      }).catch((error) => {
        return {
          success: false,
          logout: true,
          message: error?.response?.data?.message || error?.message,
        }
      })
    },
    onError: async (error?: IDataProviderError): Promise<IAuthErrorResponse> => {
      if (error?.status === 401) {
        return {
          logout: true,
          redirectTo: props?.routePath?.login || '/login',
          error,
        }
      }

      return {
        logout: false,
        error,
      }
    },
    logout: async (): Promise<IAuthLogoutResponse> => {
      return {
        success: true,
        redirectTo: props?.routePath?.login || '/login',
      }
    },
    register: async (params: any, manage?: IManageHook): Promise<IAuthLoginResponse> => {
      return await axios.post(manage?.getApiUrl(props?.apiPath?.register || '/register', props?.dataProviderName) || '', params).then((res: any) => {
        return {
          success: true,
          message: res?.data?.message,
          redirectTo: props?.routePath?.index || '/',
          data: res?.data?.data as IUserState,
        }
      }).catch((error) => {
        return {
          success: false,
          message: error?.response?.data?.message || error?.message,
        }
      })
    },
    forgotPassword: async (params: any, manage?: IManageHook): Promise<IAuthActionResponse> => {
      return await axios.post(manage?.getApiUrl(props?.apiPath?.forgotPassword || '/forgot-password', props?.dataProviderName) || '', params).then((res: any) => {
        return {
          success: true,
          message: res?.data?.message,
          redirectTo: props?.routePath?.login || '/login',
        }
      }).catch((error) => {
        return {
          success: false,
          message: error?.response?.data?.message || error?.message,
        }
      })
    },
    updatePassword: async (params: any, manage?: IManageHook): Promise<IAuthActionResponse> => {
      return await axios.post(manage?.getApiUrl(props?.apiPath?.updatePassword || '/update-password', props?.dataProviderName) || '', params).then((res: any) => {
        return {
          success: true,
          message: res?.data?.message,
          redirectTo: props?.routePath?.login || '/login',
        }
      }).catch((error) => {
        return {
          success: false,
          message: error?.response?.data?.message || error?.message,
        }
      })
    },
    can: (name: string, _params?: any, _manage?: IManageHook, auth?: IUserState): boolean => {
      if (!auth?.permission || (Array.isArray(auth?.permission) && auth?.permission?.length === 0) || (typeof auth?.permission === 'object' && Object.keys(auth?.permission).length === 0)) {
        return true
      }

      if (Array.isArray(auth?.permission) && !auth?.permission?.includes(name)) {
        return false
      }

      if (typeof auth?.permission === 'object' && auth?.permission[name] === false) {
        return false
      }

      return true
    },
  }
}



---
File: /packages/core/src/preset/dataProvider.ts
---

import type { IManageHook } from '../hooks'
import type { IUserState } from '../stores'
import type { IDataProvider, IDataProviderCreateManyOptions, IDataProviderCreateOptions, IDataProviderCustomOptions, IDataProviderDeleteManyOptions, IDataProviderDeleteOptions, IDataProviderError, IDataProviderGetManyOptions, IDataProviderGetOneOptions, IDataProviderListOptions, IDataProviderResponse, IDataProviderUpdateManyOptions, IDataProviderUpdateOptions } from '../types'
import axios from 'axios'
import { trim } from 'lodash-es'

export interface ISimpleDataProviderProps {
  apiUrl: string
  successCallback?: (res: any) => IDataProviderResponse
  errorCallback?: (err: any) => IDataProviderError
  getTotal?: (options: IDataProviderResponse) => number
}

// 检查对象是否包含File类型
function hasFileInObject(obj: any): boolean {
  return Object.values(obj).some((value) => {
    if (value instanceof File)
      return true
    if (Array.isArray(value))
      return value.some(item => item instanceof File)
    if (value && typeof value === 'object')
      return hasFileInObject(value)
    return false
  })
}

// 将包含File的对象转换为FormData
function convertToFormData(data: any): FormData {
  const formData = new FormData()

  const append = (obj: any, prefix = '') => {
    Object.entries(obj).forEach(([key, value]) => {
      const fieldName = prefix ? `${prefix}[${key}]` : key

      if (value instanceof File) {
        formData.append(fieldName, value)
      }
      else if (Array.isArray(value)) {
        value.forEach((item, index) => {
          if (item instanceof File) {
            formData.append(`${fieldName}[${index}]`, item)
          }
          else if (item != null) {
            formData.append(`${fieldName}[${index}]`, String(item))
          }
        })
      }
      else if (value && typeof value === 'object') {
        append(value, fieldName)
      }
      else if (value != null) {
        formData.append(fieldName, String(value))
      }
    })
  }

  append(data)
  return formData
}

export function simpleDataProvider(props: ISimpleDataProviderProps): IDataProvider {
  const apiUrl = (path?: string, basePath?: string): string => {
    const prefixUrl = `${trim(props.apiUrl, '/')}${basePath ? `/${trim(basePath, '/')}` : ''}`
    return path ? `${prefixUrl}/${trim(path || '', '/')}` : prefixUrl
  }

  return {
    apiUrl,
    getList: (options: IDataProviderListOptions, manage?: IManageHook, auth?: IUserState) => {
      const params: Record<string, any> = {}

      if (options.pagination && typeof options.pagination === 'object') {
        params.page = options.pagination.page
        params.pageSize = options.pagination.pageSize
      }

      return axios.get(apiUrl(options.path, manage?.config.apiBasePath) || '', {
        params: {
          ...params,
          ...options.filters,
          ...options.sorters,
        },
        headers: {
          Authorization: auth?.token,
        },
        ...options.meta,
      }).then((res) => {
        return props.successCallback ? props.successCallback(res) : handleResponse(res)
      }).catch((err) => {
        throw props.errorCallback ? props.errorCallback(err) : handleError(err)
      })
    },
    create: (options: IDataProviderCreateOptions, manage?: IManageHook, auth?: IUserState) => {
      // 检查并转换包含File的数据
      let requestData = options.data
      if (options.data && typeof options.data === 'object' && !Array.isArray(options.data) && !(options.data instanceof FormData)) {
        if (hasFileInObject(options.data)) {
          requestData = convertToFormData(options.data)
        }
      }

      return axios.post(apiUrl(options.path, manage?.config.apiBasePath) || '', requestData, {
        headers: {
          Authorization: auth?.token,
        },
        ...options.meta,
      }).then((res) => {
        return props.successCallback ? props.successCallback(res) : handleResponse(res)
      }).catch((err) => {
        throw props.errorCallback ? props.errorCallback(err) : handleError(err)
      })
    },
    update: (options: IDataProviderUpdateOptions, manage?: IManageHook, auth?: IUserState) => {
      let requestData = options.data
      if (options.data && typeof options.data === 'object' && !Array.isArray(options.data) && !(options.data instanceof FormData)) {
        if (hasFileInObject(options.data)) {
          requestData = convertToFormData(options.data)
        }
      }

      return axios.put(apiUrl(options.id ? `${options.path}/${options.id}` : options.path, manage?.config.apiBasePath) || '', requestData, {
        headers: {
          Authorization: auth?.token,
        },
        ...options.meta,
      }).then((res) => {
        return props.successCallback ? props.successCallback(res) : handleResponse(res)
      }).catch((err) => {
        throw props.errorCallback ? props.errorCallback(err) : handleError(err)
      })
    },
    deleteOne: (options: IDataProviderDeleteOptions, manage?: IManageHook, auth?: IUserState) => {
      return axios.delete(apiUrl(options.id ? `${options.path}/${options.id}` : options.path, manage?.config.apiBasePath) || '', {
        headers: {
          Authorization: auth?.token,
        },
        ...options.meta,
      }).then((res) => {
        return props.successCallback ? props.successCallback(res) : handleResponse(res)
      }).catch((err) => {
        throw props.errorCallback ? props.errorCallback(err) : handleError(err)
      })
    },
    getOne: (options: IDataProviderGetOneOptions, manage?: IManageHook, auth?: IUserState) => {
      return axios.get(apiUrl(options.id ? `${options.path}/${options.id}` : options.path, manage?.config.apiBasePath) || '', {
        headers: {
          Authorization: auth?.token,
        },
        ...options.meta,
      }).then((res) => {
        return props.successCallback ? props.successCallback(res) : handleResponse(res)
      }).catch((err) => {
        throw props.errorCallback ? props.errorCallback(err) : handleError(err)
      })
    },
    getMany: (options: IDataProviderGetManyOptions, manage?: IManageHook, auth?: IUserState) => {
      return axios.get(apiUrl(options.path, manage?.config.apiBasePath) || '', {
        params: {
          ids: options.ids,
        },
        headers: {
          Authorization: auth?.token,
        },
        ...options.meta,
      }).then((res) => {
        return props.successCallback ? props.successCallback(res) : handleResponse(res)
      }).catch((err) => {
        throw props.errorCallback ? props.errorCallback(err) : handleError(err)
      })
    },
    createMany: (options: IDataProviderCreateManyOptions, manage?: IManageHook, auth?: IUserState) => {
      return axios.post(apiUrl(options.path, manage?.config.apiBasePath) || '', options.data, {
        headers: {
          Authorization: auth?.token,
        },
        ...options.meta,
      }).then((res) => {
        return props.successCallback ? props.successCallback(res) : handleResponse(res)
      }).catch((err) => {
        throw props.errorCallback ? props.errorCallback(err) : handleError(err)
      })
    },
    updateMany: (options: IDataProviderUpdateManyOptions, manage?: IManageHook, auth?: IUserState) => {
      return axios.put(apiUrl(options.path, manage?.config.apiBasePath) || '', {
        ids: options.ids,
        data: options.data,
      }, {
        headers: {
          Authorization: auth?.token,
        },
        ...options.meta,
      }).then((res) => {
        return props.successCallback ? props.successCallback(res) : handleResponse(res)
      }).catch((err) => {
        throw props.errorCallback ? props.errorCallback(err) : handleError(err)
      })
    },
    deleteMany: (options: IDataProviderDeleteManyOptions, manage?: IManageHook, auth?: IUserState) => {
      return axios.delete(apiUrl(options.path, manage?.config.apiBasePath) || '', {
        params: {
          ids: options.ids,
        },
        headers: {
          Authorization: auth?.token,
        },
        ...options.meta,
      }).then((res) => {
        return props.successCallback ? props.successCallback(res) : handleResponse(res)
      }).catch((err) => {
        throw props.errorCallback ? props.errorCallback(err) : handleError(err)
      })
    },
    custom: (options: IDataProviderCustomOptions, manage?: IManageHook, auth?: IUserState) => {
      let params: Record<string, any> = {
        ...options.query,
      }

      if (options.sorters && typeof options.sorters === 'object') {
        params = {
          ...params,
          ...options.sorters,
        }
      }

      if (options.filters && typeof options.filters === 'object') {
        params = {
          ...params,
          ...options.filters,
        }
      }

      return axios.request({
        url: apiUrl(options.path, manage?.config.apiBasePath) || '',
        method: options.method || 'GET',
        data: options.payload,
        params,
        signal: options.signal,
        headers: {
          Authorization: auth?.token,
          ...options.headers,
        },
        onUploadProgress: (progressEvent) => {
          const percent = Math.round((progressEvent.loaded * 100) / (progressEvent.total || 1))
          options.onUploadProgress?.({
            loaded: progressEvent.loaded,
            total: progressEvent.total,
            percent,
          })
        },
        onDownloadProgress: (progressEvent) => {
          const percent = Math.round((progressEvent.loaded * 100) / (progressEvent.total || 1))
          options.onDownloadProgress?.({
            loaded: progressEvent.loaded,
            total: progressEvent.total,
            percent,
          })
        },
        ...options.meta,
      }).then((res) => {
        return props.successCallback ? props.successCallback(res) : handleResponse(res)
      }).catch((err) => {
        throw props.errorCallback ? props.errorCallback(err) : handleError(err)
      })
    },
    getTotal: (options: IDataProviderResponse) => {
      return props.getTotal ? props.getTotal(options) : options.meta?.total || 0
    },
  }
}

function handleResponse(res: any): IDataProviderResponse {
  return {
    message: res.data?.message,
    data: res.data?.data,
    meta: res.data?.meta,
    raw: res.data,
  }
}

function handleError(err: any): IDataProviderError {
  return {
    message: err.response?.data?.message || err?.message,
    data: err.response?.data?.data,
    meta: err.response?.data?.meta,
    status: err.response?.data?.code || err.response?.status || 500,
    raw: err.response?.data,
  }
}



---
File: /packages/core/src/preset/i18nProvider.ts
---

import type { I18nOptions } from 'vue-i18n'
import type { I18nProvider } from '../types'
import { createI18n } from 'vue-i18n'

export function i18nProvider(props?: I18nOptions): I18nProvider {
  const i18n = createI18n({
    legacy: false,
    locale: props?.locale,
    fallbackLocale: props?.fallbackLocale,
    messages: props?.messages,
    missingWarn: false,
    fallbackWarn: false,
  })

  return {
    t: (key: string, options?: any, defaultMessage?: string): string => {
      const result = i18n.global.t(key, options)
      if (result === key && defaultMessage) {
        return defaultMessage
      }
      return result
    },
    changeLocale: (lang: string, _options?: any): Promise<any> => {
      return new Promise((resolve) => {
        i18n.global.locale.value = lang
        resolve(lang)
      })
    },
    loadLocale: (lang: string, file: Record<string, unknown>) => {
      return new Promise((resolve) => {
        i18n.global.setLocaleMessage(lang, file)
        resolve(lang)
      })
    },
    mergeLocale: (lang: string, messages: Record<string, unknown>) => {
      i18n.global.mergeLocaleMessage(lang, messages)
    },
    getLocale: () => {
      return i18n.global.locale.value
    },
    getLocales: () => {
      return i18n.global.availableLocales.map(locale => locale)
    },
  }
}



---
File: /packages/core/src/preset/index.ts
---

export * from './authProvider'
export * from './dataProvider'
export * from './i18nProvider'



---
File: /packages/core/src/provider/app.tsx
---

import type { Ref } from 'vue'
import type { RouteRecordRaw } from 'vue-router'
import type { IDataProvider, IManage, IMenu } from '../types'
import { OverlaysProvider } from '@overlastic/vue'
import { defineComponent, inject } from 'vue'
import { useRouter } from 'vue-router'
import { DuxError, DuxNotAuthorized, DuxNotFound } from '../components'
import { initJsonSchemaComponents, useCan, useConfig, useManage } from '../hooks'
import { useAuthStore, useI18nStore, useRouteStore } from '../stores'
import { useManageStore } from '../stores/manage'

export const DuxAppProvider = defineComponent({
  name: 'DuxAppProvider',
  props: {
  },
  setup(_props, { slots }) {
    const manageRef = inject<Ref<string>>('dux.manage')

    const config = useConfig()
    const router = useRouter()

    router.beforeEach(async (to, _from, next) => {
      const manageName = to.meta.manageName as string
      const noAuth = to.meta.authorization === false

      if (!manageName) {
        const defaultManage = config.defaultManage || config.manages?.[0]?.name || ''
        return next({
          path: `/${defaultManage}`,
          replace: true,
        })
      }

      if (manageRef) {
        manageRef.value = manageName
      }

      const manageStore = useManageStore(manageName)
      if (!manageStore.isInit()) {
        manageStore.setConfig(config.manages?.find(manage => manage.name === manageName) as IManage, config)
      }

      const routeStore = useRouteStore(manageName)
      const manage = useManage(manageName)
      const authStore = useAuthStore(manageName)
      const i18nStore = useI18nStore(manageName)

      // init i18n
      if (manage.config?.i18nProvider && !i18nStore.isInit()) {
        const locale = i18nStore.getLocale()
        if (locale) {
          manage.config?.i18nProvider.changeLocale(locale)
        }
      }

      // init json schema components
      initJsonSchemaComponents(config, manageName)

      // unlogin handle
      if (!authStore.isLogin()) {
        if (noAuth) {
          return next()
        }

        return next({
          path: manage.getRoutePath(`login`),
          replace: true,
        })
      }

      const formatMenus = (menus: IMenu[]) => {
        return menus?.map((item: IMenu) => {
          return {
            ...item,
            path: item.path ? manage.getRoutePath(item.path) : undefined,
          }
        })
      }

      // loading route
      if (!routeStore.getRouteInit()) {
        // components
        const components = manage.config?.components || {}
        const commonRoutes: IMenu[] = []

        commonRoutes.push({
          name: `${manageName}.notFound`,
          label: '404',
          path: ':pathMatch(.*)*',
          component: components.notFound || DuxNotFound,
          hidden: true,
          meta: {
            can: false,
          },
        })

        commonRoutes.push({
          name: `${manageName}.notAuthorized`,
          label: '403',
          path: 'notAuthorized',
          component: components.notAuthorized || DuxNotAuthorized,
          hidden: true,
          meta: {
            can: false,
          },
        })

        commonRoutes.push({
          name: `${manageName}.error`,
          label: '500',
          path: 'error',
          component: components.error || DuxError,
          hidden: true,
          meta: {
            can: false,
          },
        })

        // loading local route
        routeStore.setRoutes(formatMenus(manage.config?.menus || []))

        // loading remote route
        if (manage.config?.apiRoutePath) {
          await (manage.config?.dataProvider as Record<string, IDataProvider>)?.default?.custom({
            path: manage.config.apiRoutePath,
            meta: {
              timeout: 5000,
            },
          }, manage, authStore.getUser()).then((res) => {
            routeStore.appendRoutes(formatMenus(res.data || []))
          }).catch((error) => {
            manage.config?.authProvider?.onError?.(error).then((err) => {
              if (err?.logout) {
                authStore.logout()
                router.push(manage.getRoutePath(err.redirectTo || '/login'))
              }
            })
            throw error
          })
        }

        // init common routes
        routeStore.appendRoutes(commonRoutes)

        // register route
        routeStore.getRoutes().forEach((item: IMenu) => {
          if (!item.path) {
            return
          }

          const route: Partial<RouteRecordRaw> = {
            name: item.name,
            path: item.path,
            meta: item.meta,
          }

          switch (item.loader) {
            case 'iframe':
              route.component = manage.config?.components?.iframe || (() => import('../components/loader/iframe'))
              break
            case 'remote':
              route.component = manage.config?.components?.remote || (() => import('../components/loader/loader'))
              break
            case 'link':
              route.beforeEnter = () => {
                const url = item.meta?.url || item.path
                if (url) {
                  window.open(url, '_blank')
                }
                return false
              }
              route.component = () => Promise.resolve({ template: '<div></div>' })
              break
            default:
              if (item.component) {
                route.component = item.component
              }
              break
          }

          router.addRoute(`${manageName}.auth`, route as RouteRecordRaw)
        })

        // reload route
        return next({
          path: to.redirectedFrom?.path || to.path,
          replace: true,
        })
      }

      const pathMatch = [
        '',
        '/',
        `/${manageName}`,
        `/${manageName}/`,
      ]

      // index route redirect
      if (pathMatch.includes(to.path)) {
        const indexRoute = routeStore.getIndexRoute()

        // if index route is not found
        if (!indexRoute?.path || pathMatch.includes(indexRoute?.path)) {
          console.warn(`[Dux] index route not found, skip redirect`)
          return next()
        }

        return next({
          path: indexRoute?.path || '/',
          replace: true,
        })
      }

      const can = useCan(manageName)

      if ((to.meta?.can === undefined || to.meta?.can === true) && !can(to.name as string)) {
        return next({
          name: `${manageName}.notAuthorized`,
        })
      }

      return next()
    })

    return () => (
      <OverlaysProvider>
        {slots.default?.()}
      </OverlaysProvider>
    )
  },
})



---
File: /packages/core/src/provider/index.ts
---

export * from './app'
export * from './tab'



---
File: /packages/core/src/provider/tab.tsx
---

import { defineComponent, KeepAlive, Transition, watch } from 'vue'
import { RouterView, useRoute } from 'vue-router'
import { useRouteStore, useTabStore } from '../stores'

export const DuxTabRouterView = defineComponent({
  name: 'DuxTabRouterView',
  props: {},
  setup() {
    const route = useRoute()
    const tabStore = useTabStore()
    const routeStore = useRouteStore()

    // route cache
    const cacheMap = new Map()

    const wrap = (name: string, component: any) => {
      let cache
      const cacheName = name

      if (cacheMap.has(cacheName)) {
        cache = cacheMap.get(cacheName)
      }
      else {
        cache = {
          name: cacheName,
          render() {
            return component
          },
        }
        cacheMap.set(cacheName, cache)
      }
      return cache
    }

    tabStore.$subscribe((_mutation, state) => {
      cacheMap.forEach((cache) => {
        if (!state.tabs.some(t => t.path === cache.name)) {
          cacheMap.delete(cache.name)
        }
      })
    })

    // add index route
    const indexRoute = routeStore.getIndexRoute()
    if (indexRoute) {
      tabStore.addTab({ ...indexRoute, meta: { ...indexRoute.meta, lock: true } })
    }

    // watch route and routeStore.routes
    watch([route, () => routeStore.routes], () => {
      const info = routeStore.searchRouteName(route.name as string)
      if (!info) {
        return
      }
      const item = { label: info.label as string, path: route.path, name: info.name }
      tabStore.addTab(item)
    }, { immediate: true })

    return () => (
      <RouterView>
        {{
          default: ({ Component }) => {
            const WrappedComponent = wrap(route.path, Component)
            return (
              <Transition name="tab-fade" mode="out-in" appear>
                <KeepAlive include={tabStore.tabs.map(t => t.path || '')}>
                  <WrappedComponent key={route.path} />
                </KeepAlive>
              </Transition>
            )
          },
        }}
      </RouterView>
    )
  },
})



---
File: /packages/core/src/router/index.ts
---

export * from './route'



---
File: /packages/core/src/router/route.ts
---

import type { RouteRecordRaw } from 'vue-router'
import type { IConfig } from '../types'
import { createRouter, createWebHashHistory } from 'vue-router'

export function initRouter(config: IConfig) {
  const routes: RouteRecordRaw[] = [
    ...config.routes || [],
    {
      name: 'default',
      path: '/:catchAll(.*)',
      redirect: `/${config.defaultManage || config.manages?.[0]?.name || ''}`,
    },
  ]

  config.manages?.forEach((manage) => {
    const authRoutes = manage.routes?.filter(route => route.meta?.authorization === true || route.meta?.authorization === undefined) || []
    const noAuthRoutes = manage.routes?.filter(route => route.meta?.authorization === false) || []

    routes.push({
      name: manage.name,
      path: manage.routePrefix || '',
      children: [
        {
          path: '',
          name: `${manage.name}.auth`,
          component: manage.components?.authLayout,
          children: authRoutes,
        },
        {
          path: '',
          name: `${manage.name}.noAuth`,
          component: manage.components?.noAuthLayout,
          children: noAuthRoutes,
        },
      ],
      meta: {
        manageName: manage.name,
      },
    })
  })

  return createRouter({
    history: createWebHashHistory(),
    routes,
  })
}



---
File: /packages/core/src/stores/auth.ts
---

import type { Ref } from 'vue'
import { defineStore } from 'pinia'
import { inject, ref } from 'vue'

export interface IUserState {
  token?: string
  id?: number
  info?: Record<string, any>
  permission?: any
}

export interface AuthStoreState {
  data: Ref<IUserState | undefined>
  getUser: () => IUserState
  login: (params: IUserState) => void
  isLogin: () => boolean
  logout: () => void
  update: (params: IUserState) => void
  updateKey: (key: string, value: any) => void
}

/**
 * use auth store
 * @param manageName manage name
 * @returns auth store
 */
export function useAuthStore(manageName?: string) {
  const manage = inject<Ref<string>>('dux.manage')
  if (!manageName) {
    manageName = manage?.value || ''
  }

  if (!manageName) {
    throw new Error('manage not found')
  }

  const authStore = createAuthStore(manageName)
  return authStore()
}

/**
 * create auth store
 * @param manageName manage name
 * @returns auth store
 */
function createAuthStore(manageName: string) {
  return defineStore<string, AuthStoreState>(`auths-${manageName}`, () => {
    const data = ref<IUserState>()

    const isLogin = (): boolean => {
      return !!data.value?.token
    }

    const getUser = (): IUserState => {
      return data.value || {}
    }

    const login = (params: IUserState) => {
      data.value = {
        token: params?.token,
        id: params?.id,
        info: params?.info,
        permission: params?.permission,
      }
    }

    const update = (params: IUserState) => {
      data.value = {
        token: params?.token,
        id: params?.id,
        info: params?.info,
        permission: params?.permission,
      }
    }

    const updateKey = (key: string, value: any) => {
      data.value = {
        ...data.value,
        [key]: value,
      }
    }

    const logout = () => {
      data.value = undefined
    }

    return {
      data,
      getUser,
      login,
      isLogin,
      logout,
      update,
      updateKey,
    }
  }, {
    persist: true,
  })
}



---
File: /packages/core/src/stores/i18n.ts
---

import type { Ref } from 'vue'
import { defineStore } from 'pinia'
import { inject, ref } from 'vue'

export interface I18nStoreState {
  lang: Ref<string>
  isInit: () => boolean
  setLocale: (value: string) => void
  getLocale: () => string
}

/**
 * use i18n store
 * @param manageName manage name
 * @returns i18n store
 */
export function useI18nStore(manageName?: string) {
  const manage = inject<Ref<string>>('dux.manage')
  if (!manageName) {
    manageName = manage?.value || ''
  }

  if (!manageName) {
    throw new Error('manage not found')
  }

  const i18nStore = createI18nStore(manageName)
  return i18nStore()
}

/**
 * create manage store
 * @param manageName manage name
 * @returns manage store
 */
function createI18nStore(manageName: string) {
  return defineStore<string, I18nStoreState>(`i18n-${manageName}`, () => {
    const lang = ref<string>('')

    const init = ref<boolean>(false)

    const isInit = () => {
      const value = init.value
      init.value = true
      return value
    }

    const setLocale = (value: string) => {
      lang.value = value
    }

    const getLocale = () => {
      return lang.value
    }

    return {
      lang,
      isInit,
      setLocale,
      getLocale,
    }
  }, {
    persist: {
      pick: ['lang'],
    },
  })
}



---
File: /packages/core/src/stores/index.ts
---

export * from './auth'
export * from './i18n'
export * from './jsonSchema'
export * from './manage'
export * from './route'
export * from './tab'
export * from './theme'



---
File: /packages/core/src/stores/jsonSchema.ts
---

import type { Component, Ref } from 'vue'
import { defineStore } from 'pinia'
import { inject, ref } from 'vue'

/**
 * 组件缓存项
 */
interface ComponentCacheItem {
  component: Component
  name: string
  originalName: string
  cacheKey: string
}

export interface JsonSchemaStoreState {
  componentCache: Ref<Map<string, ComponentCacheItem>>
  componentsByName: Ref<Map<string, Component>>
  addComponent: (component: Component, name: string, originalName?: string) => string
  getComponent: (key: string) => Component | undefined
  getComponentByName: (name: string) => Component | undefined
  hasComponent: (key: string) => boolean
  clearCache: () => void
  getCacheSize: () => number
}

/**
 * 生成组件缓存键
 */
function generateCacheKey(name: string): string {
  // 组件名本身就是唯一的，直接使用
  return name
}

/**
 * use json schema store
 * @param manageName manage name
 * @returns json schema store
 */
export function useJsonSchemaStore(manageName?: string) {
  const manage = inject<Ref<string>>('dux.manage')
  if (!manageName) {
    manageName = manage?.value || ''
  }

  if (!manageName) {
    throw new Error('manage not found')
  }

  const jsonSchemaStore = createJsonSchemaStore(manageName)
  return jsonSchemaStore()
}

/**
 * create json schema store
 * @param manageName manage name
 * @returns json schema store
 */
function createJsonSchemaStore(manageName: string) {
  return defineStore<string, JsonSchemaStoreState>(`jsonSchema-${manageName}`, () => {
    const componentCache = ref<Map<string, ComponentCacheItem>>(new Map())
    const componentsByName = ref<Map<string, Component>>(new Map())

    /**
     * 添加组件到缓存
     */
    const addComponent = (component: Component, name: string, originalName?: string): string => {
      const cacheKey = generateCacheKey(name)

      if (!componentCache.value.has(cacheKey)) {
        componentCache.value.set(cacheKey, {
          component,
          name,
          originalName: originalName || name,
          cacheKey,
        })

        // 同时添加到按名称索引的映射中
        componentsByName.value.set(name, component)
      }

      return cacheKey
    }

    /**
     * 从缓存获取组件
     */
    const getComponent = (key: string): Component | undefined => {
      return componentCache.value.get(key)?.component
    }

    /**
     * 根据名称获取组件
     */
    const getComponentByName = (name: string): Component | undefined => {
      return componentsByName.value.get(name)
    }

    /**
     * 检查缓存中是否存在组件
     */
    const hasComponent = (key: string): boolean => {
      return componentCache.value.has(key)
    }

    /**
     * 清空缓存
     */
    const clearCache = () => {
      componentCache.value.clear()
      componentsByName.value.clear()
    }

    /**
     * 获取缓存大小
     */
    const getCacheSize = () => {
      return componentCache.value.size
    }

    return {
      componentCache,
      componentsByName,
      addComponent,
      getComponent,
      getComponentByName,
      hasComponent,
      clearCache,
      getCacheSize,
    }
  })
}



---
File: /packages/core/src/stores/manage.ts
---

import type { Ref } from 'vue'
import type { IConfig, IDataProvider, IManage } from '../types'
import { cloneDeep } from 'lodash-es'
import { defineStore } from 'pinia'
import { inject, markRaw, ref } from 'vue'

export interface ManageStoreState {
  config: Ref<IManage | undefined>
  isInit: () => boolean
  setConfig: (manageConfig: IManage, globalConfig: IConfig) => void
  getConfig: () => IManage | undefined
}

/**
 * 判断是否为 Record<string, IDataProvider> 类型
 * @param value 要判断的值
 * @returns 是否为记录类型
 */
function isDataProviderRecord(value: IDataProvider | Record<string, IDataProvider> | undefined): value is Record<string, IDataProvider> {
  return value !== null
    && value !== undefined
    && typeof value === 'object'
    && !Array.isArray(value)
    && typeof (value as any).getList !== 'function'
}

/**
 * use manage store
 * @param manageName manage name
 * @returns manage store
 */
export function useManageStore(manageName?: string) {
  const manage = inject<Ref<string>>('dux.manage')
  if (!manageName) {
    manageName = manage?.value || ''
  }

  if (!manageName) {
    throw new Error('manage not found')
  }

  const manageStore = createManageStore(manageName)
  return manageStore()
}

/**
 * create manage store
 * @param manageName manage name
 * @returns manage store
 */
function createManageStore(manageName: string) {
  return defineStore<string, ManageStoreState>(`manages-${manageName}`, () => {
    const config = ref<IManage>()
    const isInitConfig = ref<boolean>(false)

    const isInit = () => {
      const init = isInitConfig.value
      isInitConfig.value = true
      return init
    }

    const setConfig = (manageConfig: IManage, globalConfig: IConfig) => {
      const manage = cloneDeep(manageConfig)

      const title: string[] = []
      if (manage.title) {
        title.push(manage.title)
      }
      if (globalConfig.title) {
        title.push(globalConfig.title)
      }
      manage.title = title.join(' - ')

      manage.copyright = manage.copyright || globalConfig.copyright
      manage.description = manage.description || globalConfig.description

      manage.theme = { ...globalConfig?.theme, ...manage?.theme }

      const dataProvider: Record<string, IDataProvider> = {}

      if (globalConfig?.dataProvider) {
        if (isDataProviderRecord(globalConfig.dataProvider)) {
          Object.keys(globalConfig.dataProvider).forEach((key) => {
            dataProvider[key] = globalConfig.dataProvider![key]
          })
        }
        else {
          dataProvider.default = globalConfig.dataProvider
        }
      }

      if (manage?.dataProvider) {
        if (isDataProviderRecord(manage.dataProvider)) {
          Object.keys(manage.dataProvider).forEach((key) => {
            dataProvider[key] = manage.dataProvider![key]
          })
        }
        else {
          dataProvider.default = manage.dataProvider
        }
      }

      manage.authProvider = globalConfig?.authProvider || manage?.authProvider
      manage.dataProvider = dataProvider
      manage.i18nProvider = globalConfig?.i18nProvider || manage?.i18nProvider

      manage.layoutComponent = {
        ...globalConfig.layoutComponent,
        ...manage.layoutComponent,
      }

      const components = {
        ...globalConfig.components,
        ...manage.components,
      }

      if (components) {
        Object.keys(components).forEach((key) => {
          if (components[key]) {
            components[key] = markRaw(components[key])
          }
        })
      }

      manage.components = components

      manage.remote = {
        ...globalConfig.remote,
        ...manage.remote,
      }

      config.value = manage
    }

    const getConfig = () => {
      return config.value
    }

    return {
      config,
      isInit,
      setConfig,
      getConfig,
    }
  })
}



---
File: /packages/core/src/stores/route.ts
---

import type { Ref } from 'vue'
import type { IMenu } from '../types'
import { defineStore } from 'pinia'
import { inject, ref } from 'vue'

export interface RouteStoreState {
  routes: Ref<IMenu[]>
  searchRoute: (path: string) => IMenu | undefined
  searchRouteName: (name: string) => IMenu | undefined
  appendRoute: (data: IMenu) => void
  appendRoutes: (data: IMenu[]) => void
  setRoutes: (data: IMenu[]) => void
  getRoutes: () => IMenu[]
  clearRoutes: () => void
  getIndexRoute: () => IMenu | undefined
  getRouteInit: () => boolean
}

/**
 * use route store
 * @param manageName manage name
 * @returns route store
 */
export function useRouteStore(manageName?: string) {
  const manage = inject<Ref<string>>('dux.manage')
  if (!manageName) {
    manageName = manage?.value || ''
  }

  if (!manageName) {
    throw new Error('manage not found')
  }

  const routeStore = createRouteStore(manageName)
  return routeStore()
}

/**
 * create route store
 * @param manageName manage name
 * @returns route store
 */
function createRouteStore(manageName: string) {
  return defineStore<string, RouteStoreState>(`routes-${manageName}`, () => {
    const routes = ref<IMenu[]>([])

    /**
     * search route by path
     * @param path route path
     * @returns route object
     */
    const searchRoute = (path: string) => {
      return routes.value?.find((item) => {
        return item.path === path
      })
    }

    /**
     * search route by name
     * @param name route name
     * @returns route object
     */
    const searchRouteName = (name: string) => {
      return routes.value?.find((item) => {
        return item.name === name
      })
    }

    /**
     * append route
     * @param data route object
     */
    const appendRoute = (data: IMenu) => {
      routes.value?.push(data)
    }

    /**
     * append routes
     * @param data route objects
     */
    const appendRoutes = (data: IMenu[]) => {
      routes.value = [...routes.value, ...data]
    }

    /**
     * set routes
     * @param data route objects
     */
    const setRoutes = (data: IMenu[]) => {
      routes.value = data
    }

    /**
     * get routes
     * @returns route objects
     */
    const getRoutes = () => {
      return routes.value
    }

    /**
     * clear routes
     */
    const clearRoutes = () => {
      routes.value = []
    }

    /**
     * get index route
     * @returns route object
     */
    const getIndexRoute = () => {
      const topRoutes = routes.value
        ?.filter(item => !item.parent && !item.name?.includes('404') && !item.name?.includes('403'))
        ?.sort((a, b) => (a.sort || 0) - (b.sort || 0))

      const findFirstValidRoute = (route: IMenu): IMenu | undefined => {
        if (route.path) {
          return route
        }

        const children = routes.value
          ?.filter(item => item.parent === route.name)
          ?.sort((a, b) => (a.sort || 0) - (b.sort || 0))

        for (const child of children || []) {
          const validRoute = findFirstValidRoute(child)
          if (validRoute) {
            return validRoute
          }
        }

        return undefined
      }

      for (const route of topRoutes || []) {
        const validRoute = findFirstValidRoute(route)
        if (validRoute) {
          return validRoute
        }
      }

      return undefined
    }

    const routeInit = ref<boolean>(false)

    const getRouteInit = () => {
      const init = routeInit.value
      routeInit.value = true
      return init
    }

    return {
      routes,
      searchRoute,
      searchRouteName,
      appendRoute,
      appendRoutes,
      setRoutes,
      getRoutes,
      clearRoutes,
      getIndexRoute,
      getRouteInit,
    }
  })
}



---
File: /packages/core/src/stores/tab.ts
---

import type { Ref } from 'vue'
import type { IMenu } from '../types'
import { defineStore } from 'pinia'
import { inject, nextTick, ref } from 'vue'

export interface TabStoreState {
  current: Ref<string | undefined>
  tabs: Ref<IMenu[]>
  isTab: (path: string) => boolean
  addTab: (item: IMenu, cb?: (item: IMenu) => void) => void
  delTab: (path: string, cb?: (item: IMenu) => void) => void
  changeTab: (path: string, cb?: (item: IMenu) => void) => void
  delOther: (path: string, cb?: () => void) => void
  delLeft: (path: string, cb?: () => void) => void
  delRight: (path: string, cb?: () => void) => void
  lockTab: (path: string) => void
  clearTab: () => void
}

export function useTabStore(manageName?: string) {
  const manage = inject<Ref<string>>('dux.manage')
  if (!manageName) {
    manageName = manage?.value || ''
  }

  if (!manageName) {
    throw new Error('manage not found')
  }

  const tabStore = createTabStore(manageName)
  return tabStore()
}

export function createTabStore(manageName: string) {
  return defineStore<string, TabStoreState>(`tab-${manageName}`, () => {
    const current = ref<string>()
    const previousTab = ref<IMenu>()
    const tabs = ref<IMenu[]>([])

    const isTab = (path: string) => {
      return tabs.value.some(tag => tag.path === path)
    }

    const addTab = (item: IMenu, cb?: (item: IMenu) => void) => {
      if (!item.path) {
        return
      }
      if (!tabs.value.some(tag => tag.path === item.path)) {
        if (current.value) {
          previousTab.value = tabs.value.find(t => t.path === current.value)
        }
        tabs.value.push(item)
        cb?.(item)
        current.value = item.path as string
      }
      else {
        if (current.value && current.value !== item.path) {
          previousTab.value = tabs.value.find(t => t.path === current.value)
        }
        current.value = item.path as string
      }
    }

    const delTab = (path: string, cb?: (item: IMenu) => void) => {
      const index = tabs.value.findIndex(t => t.path === path)
      if (index === -1 || tabs.value.length <= 1) {
        return
      }

      const tab = tabs.value[index]
      if (tab?.meta?.lock) {
        return
      }

      let targetTab: IMenu | undefined
      if (path === current.value && previousTab.value) {
        targetTab = tabs.value.find(t => t.path === previousTab.value?.path && t.path !== path)
      }

      if (!targetTab) {
        const prev = tabs.value[index - 1]
        const next = tabs.value[index + 1]
        targetTab = prev || next
      }

      tabs.value.splice(index, 1)
      cb?.(targetTab)
    }

    const delOther = (path: string, cb?: () => void) => {
      tabs.value = tabs.value.filter(t => t.path === path || t.meta?.lock)
      cb?.()
    }

    const delLeft = (path: string, cb?: () => void) => {
      const index = tabs.value.findIndex(t => t.path === path)
      if (index <= 0) {
        return
      }

      nextTick(() => {
        tabs.value = [...tabs.value.slice(0, index).filter(t => t.meta?.lock), ...tabs.value.slice(index)]
        cb?.()
      })
    }

    const delRight = (path: string, cb?: () => void) => {
      const index = tabs.value.findIndex(t => t.path === path)
      if (index === -1 || index === tabs.value.length - 1) {
        return
      }
      nextTick(() => {
        tabs.value = [...tabs.value.slice(0, index + 1), ...tabs.value.slice(index + 1).filter(t => t.meta?.lock)]
        cb?.()
      })
    }

    const lockTab = (path: string) => {
      const index = tabs.value.findIndex(t => t.path === path)
      if (index !== -1 && tabs.value[index]) {
        if (!tabs.value[index].meta) {
          tabs.value[index].meta = {}
        }
        tabs.value[index].meta.lock = !tabs.value[index].meta.lock
      }
    }

    const changeTab = (path: string, cb?: (item: IMenu) => void) => {
      const info = tabs.value.find(t => t.path === path)
      if (info) {
        if (current.value && current.value !== path) {
          previousTab.value = tabs.value.find(t => t.path === current.value)
        }
        current.value = path
        cb?.(info)
      }
    }

    const clearTab = () => {
      current.value = undefined
      previousTab.value = undefined
      tabs.value = []
    }

    return {
      current,
      tabs,
      isTab,
      addTab,
      delTab,
      changeTab,
      delOther,
      delLeft,
      delRight,
      lockTab,
      clearTab,
    }
  })
}



---
File: /packages/core/src/stores/theme.ts
---

import type { Ref } from 'vue'
import type { ThemeColorName, ThemeColorType } from '../hooks'
import { defineStore } from 'pinia'
import { inject, ref } from 'vue'
import { useManageStore } from './manage'

export interface ThemeStoreState {
  mode: Ref<'light' | 'dark' | 'auto'>
  theme: Ref<ThemeState>
  cssInit: Ref<boolean>
  setMode: (newMode: 'light' | 'dark' | 'auto') => void
  setCssInit: () => void
  setThemeColor: (type: ThemeColorType, colorName: ThemeColorName) => void
  setThemeColors: (colors: Partial<ThemeState>) => void
  resetTheme: () => void
  getTheme: () => ThemeState
}

export interface ThemeState {
  primary: ThemeColorName
  info: ThemeColorName
  success: ThemeColorName
  warning: ThemeColorName
  error: ThemeColorName
  gray: ThemeColorName
}

const defaultTheme: ThemeState = {
  primary: 'emerald',
  info: 'cyan',
  success: 'green',
  warning: 'amber',
  error: 'red',
  gray: 'zinc',
}

export function useThemeStore(manageName?: string) {
  const manage = inject<Ref<string>>('dux.manage')
  if (!manageName) {
    manageName = manage?.value || ''
  }

  if (!manageName) {
    throw new Error('manage not found')
  }

  const themeStore = createThemeStore(manageName)
  return themeStore()
}

function createThemeStore(manageName: string) {
  return defineStore<string, ThemeStoreState>(`theme-${manageName}`, () => {
    const manage = useManageStore(manageName)

    const theme = ref<ThemeState>(manage.config?.theme?.defaultTheme || defaultTheme)

    // 主题模式存储
    const mode = ref<'light' | 'dark' | 'auto'>('auto')

    // CSS初始化状态标志
    const cssInit = ref(false)

    // 标记CSS已初始化
    function setCssInit() {
      cssInit.value = true
    }

    // 设置主题模式
    function setMode(newMode: 'light' | 'dark' | 'auto') {
      mode.value = newMode
    }

    // 设置单个颜色类型
    function setThemeColor(type: ThemeColorType, colorName: ThemeColorName) {
      theme.value[type] = colorName
    }

    // 批量设置颜色
    function setThemeColors(colors: Partial<ThemeState>) {
      Object.assign(theme.value, colors)
    }

    // 重置为默认主题
    function resetTheme() {
      theme.value = { ...defaultTheme }
    }

    // 获取当前主题
    function getTheme() {
      return theme.value
    }

    return {
      mode,
      setMode,
      theme,
      cssInit,
      setCssInit,
      setThemeColor,
      setThemeColors,
      resetTheme,
      getTheme,
    }
  }, {
    persist: {
      pick: ['theme', 'mode'],
    },
  })
}



---
File: /packages/core/src/types/auth.ts
---

import type { IManageHook } from '../hooks'
import type { IUserState } from '../stores/auth'
import type { IDataProviderError } from './data'

/**
 * 认证提供者
 * 为全局或管理端提供自定义认证服务
 */
export interface IAuthProvider {

  login: (params: any, manage: IManageHook) => Promise<IAuthLoginResponse>
  logout: (params?: any, manage?: IManageHook) => Promise<IAuthLogoutResponse>

  register?: (params: any, manage?: IManageHook) => Promise<IAuthLoginResponse>
  forgotPassword?: (params: any, manage?: IManageHook) => Promise<IAuthActionResponse>
  updatePassword?: (params: any, manage?: IManageHook) => Promise<IAuthActionResponse>

  check?: (params?: any, manage?: IManageHook, auth?: IUserState) => Promise<IAuthCheckResponse>
  can?: (name: string, params?: any, manage?: IManageHook, auth?: IUserState) => boolean

  onError: (error?: IDataProviderError) => Promise<IAuthErrorResponse>
}

export interface IAuthActionResponse {
  success: boolean
  message?: string
  redirectTo?: string
  [key: string]: unknown
}

export interface IAuthLoginResponse extends IAuthActionResponse {
  data?: IUserState
}

export interface IAuthCheckResponse extends IAuthActionResponse {
  data?: IUserState
  logout?: boolean
}

export interface IAuthLogoutResponse extends IAuthActionResponse {
  logout?: boolean
}

export interface IAuthErrorResponse {
  logout?: boolean
  redirectTo?: string
  error?: IDataProviderError
}



---
File: /packages/core/src/types/config.ts
---

import type { Component } from 'vue'
import type { Options } from 'vue3-sfc-loader'
import type { RouteComponent, RouteRecordRaw } from 'vue-router'
import type { IJsonAdaptor } from '../hooks'
import type { IAuthProvider } from './auth'
import type { IDataProvider } from './data'
import type { I18nProvider } from './i18n'
import type { IManage } from './manage'
import type { IConfigTheme } from './theme'

/**
 * 全局配置
 */
export interface IConfig {
  // 标题
  title?: string
  // 版权
  copyright?: string
  // 描述
  description?: string
  // 默认语言
  lang?: string
  // 扩展配置
  extends?: Record<string, any>
  // 默认管理端
  defaultManage?: string
  // 管理端提供者
  manages: IManage[]
  // 全局认证提供者
  authProvider?: IAuthProvider
  // 全局数据提供者
  dataProvider?: IDataProvider | Record<string, IDataProvider>
  // 全局国际化提供者
  i18nProvider?: I18nProvider
  // 全局布局配置
  components?: IConfigComponent
  // 全局路由配置
  routes?: RouteRecordRaw[]
  // 全局主题
  theme?: IConfigTheme

  // 全局包配置
  remote?: {
    packages?: Options
    apiMethod?: string
    apiRoutePath?: string | ((path: string) => string)
  }

  // 全局 JSON Schema 配置
  jsonSchema?: {
    adaptors?: IJsonAdaptor[]
    components?: Record<string, Component> | Component[]
  }

  [key: string]: any
}

export interface IConfigComponent {
  authLayout?: RouteComponent // 认证布局
  noAuthLayout?: RouteComponent // 未认证布局

  notFound?: RouteComponent // 未找到布局
  notAuthorized?: RouteComponent // 未授权布局
  error?: RouteComponent // 错误布局
  exception?: RouteComponent // 异常布局

  iframe?: RouteComponent // iframe 组件
  remote?: RouteComponent // remote 组件
}



---
File: /packages/core/src/types/data.ts
---

import type { IManageHook } from '../hooks'
import type { IUserState } from '../stores'

/**
 * 数据提供者
 * 为全局或管理端提供自定义数据源处理服务
 */
export interface IDataProvider {

  // 获取接口地址
  apiUrl?: (path?: string, basePath?: string) => string

  // 获取列表
  getList: (options: IDataProviderListOptions, manage?: IManageHook, auth?: IUserState) => Promise<IDataProviderResponse>
  // 创建数据
  create: (options: IDataProviderCreateOptions, manage?: IManageHook, auth?: IUserState) => Promise<IDataProviderResponse>
  // 更新数据
  update: (options: IDataProviderUpdateOptions, manage?: IManageHook, auth?: IUserState) => Promise<IDataProviderResponse>
  // 删除单个数据
  deleteOne: (options: IDataProviderDeleteOptions, manage?: IManageHook, auth?: IUserState) => Promise<IDataProviderResponse>
  // 获取单个数据
  getOne: (options: IDataProviderGetOneOptions, manage?: IManageHook, auth?: IUserState) => Promise<IDataProviderResponse>
  // 获取多个数据
  getMany: (options: IDataProviderGetManyOptions, manage?: IManageHook, auth?: IUserState) => Promise<IDataProviderResponse>
  // 创建多个数据
  createMany: (options: IDataProviderCreateManyOptions, manage?: IManageHook, auth?: IUserState) => Promise<IDataProviderResponse>
  // 更新多个数据
  updateMany: (options: IDataProviderUpdateManyOptions, manage?: IManageHook, auth?: IUserState) => Promise<IDataProviderResponse>
  // 删除多个数据
  deleteMany: (options: IDataProviderDeleteManyOptions, manage?: IManageHook, auth?: IUserState) => Promise<IDataProviderResponse>
  // 自定义请求
  custom: (options: IDataProviderCustomOptions, manage?: IManageHook, auth?: IUserState) => Promise<IDataProviderResponse>
  // 获取数据总数
  getTotal: (options: IDataProviderResponse) => number
}

export interface IDataProviderResponse {
  message?: string
  data?: any
  meta?: Record<string, any>
  raw?: any
  [key: string]: any
}

export interface IDataProviderError {
  status?: number
  message?: string
  data?: any
  meta?: Record<string, any>
  raw?: any
  [key: string]: any
}

export interface IDataProviderPagination {
  page?: number
  pageSize?: number
  pageCount?: number
  total?: number
}

export interface IDataProviderListOptions {
  path: string
  pagination?: IDataProviderPagination | boolean
  sorters?: Record<string, 'asc' | 'desc'>
  filters?: Record<string, any>
  meta?: Record<string, any>
}

export interface IDataProviderCreateOptions {
  path?: string
  data?: any
  meta?: Record<string, any>
}

export interface IDataProviderUpdateOptions extends IDataProviderCreateOptions {
  id?: string | number
}

export interface IDataProviderGetOneOptions {
  path: string
  id?: string | number
  meta?: Record<string, any>
}

export interface IDataProviderGetManyOptions {
  path: string
  ids: string[] | number[]
  meta?: Record<string, any>
}

export interface IDataProviderCreateManyOptions {
  path?: string
  data?: any[]
  meta?: Record<string, any>
}

export interface IDataProviderUpdateManyOptions {
  path?: string
  data?: any
  meta?: Record<string, any>
  ids: string[] | number[]
}

export interface IDataProviderDeleteManyOptions {
  path?: string
  meta?: Record<string, any>
  ids: string[] | number[]
}

export interface IDataProviderDeleteOptions {
  path?: string
  meta?: Record<string, any>
  id?: string | number
}

export interface IDataProviderProgress {
  loaded: number
  total?: number
  percent?: number
}

export interface IDataProviderCustomOptions {
  path?: string
  method?: string
  sorters?: Record<string, 'asc' | 'desc'>
  filters?: Record<string, any>
  query?: Record<string, any>
  headers?: Record<string, string>
  meta?: Record<string, any>
  payload?: any
  signal?: AbortSignal
  onUploadProgress?: (progress: IDataProviderProgress) => void
  onDownloadProgress?: (progress: IDataProviderProgress) => void
}



---
File: /packages/core/src/types/i18n.ts
---

/**
 * 国际化提供者
 * 为全局或管理端提供自定义国际化服务
 */
export interface I18nProvider {
  t: (key: string, options?: any, defaultMessage?: string) => string
  changeLocale: (lang: string, options?: any) => Promise<any>
  loadLocale: (lang: string, files: Record<string, unknown>) => Promise<any>
  mergeLocale: (lang: string, messages: Record<string, unknown>) => void
  getLocale: () => string
  getLocales: () => string[]
}



---
File: /packages/core/src/types/index.ts
---

export * from './config'
export * from './manage'
export * from './theme'
export * from './auth'
export * from './data'
export * from './menu'
export * from './i18n'



---
File: /packages/core/src/types/manage.ts
---

import type { Component } from 'vue'
import type { Options } from 'vue3-sfc-loader'
import type { RouteRecordRaw } from 'vue-router'
import type { IJsonAdaptor } from '../hooks'
import type { IAuthProvider } from './auth'
import type { IConfigComponent } from './config'
import type { IDataProvider } from './data'
import type { I18nProvider } from './i18n'
import type { IMenu } from './menu'
import type { IConfigTheme } from './theme'

/**
 * 管理配置
 * 为管理端提供自定义管理服务
 */
export interface IManage {
  name: string // 名称、唯一标识

  title: string // 标题
  copyright?: string // 版权
  description?: string // 描述

  register?: boolean // 注册
  forgotPassword?: boolean // 忘记密码
  updatePassword?: boolean // 更新密码

  apiRoutePath?: string // 接口路由地址

  authProvider?: IAuthProvider // 认证提供者
  dataProvider?: IDataProvider | Record<string, IDataProvider> // 数据提供者
  i18nProvider?: I18nProvider // 国际化提供者

  routePrefix?: string // 路由前缀
  routes?: RouteRecordRaw[] // 路由配置
  menus?: IMenu[] // 菜单配置

  components?: IConfigComponent // 组件配置

  theme?: IConfigTheme // 主题覆盖

  apiBasePath?: string // 接口基础路径

  // 全局包配置
  remote?: {
    packages?: Options
    apiMethod?: string
    apiRoutePath?: string | ((path: string) => string)
  }

  // 全局 JSON Schema 配置
  jsonSchema?: {
    adaptors?: IJsonAdaptor[]
    components?: Record<string, Component> | Component[]
  }

  [key: string]: any
}



---
File: /packages/core/src/types/menu.ts
---

import type { RouteComponent } from 'vue-router'

export interface IMenu {
  // 菜单名称
  label?: string
  // 菜单唯一标识
  name: string
  // 菜单路径
  path?: string
  // 菜单图标
  icon?: string
  // 菜单排序
  sort?: number
  // 父级菜单
  parent?: string
  // 是否隐藏
  hidden?: boolean
  // 菜单加载器 ('iframe' | 'link' | 'component')
  loader?: string
  // 菜单组件
  component?: RouteComponent
  // 菜单元数据 (当 loader 为 'link' 时，可在 meta.url 中设置外部链接地址)
  meta?: Record<string, any>
}



---
File: /packages/core/src/types/theme.ts
---

import type { ThemeConfig } from '../hooks'
import type { ThemeState } from '../stores'

// 主题配置
export interface IConfigTheme {
  logo?: string
  darkLogo?: string
  banner?: string
  darkBanner?: string
  config?: ThemeConfig
  defaultTheme?: ThemeState
}

export interface ITheme {
  logo?: string
  banner?: string
}



---
File: /packages/core/src/utils/bus.ts
---

import mitt from 'mitt'

export const emitter = mitt()



---
File: /packages/core/src/utils/index.ts
---

export * from './bus'
export * from './theme'
export * from './tree'



---
File: /packages/core/src/utils/theme.ts
---

function withRgb(variableName: string) {
  return `rgb(var(${variableName}))`
}

function withOpacity(variableName: string, opacityVar: string) {
  return `color-mix(in oklab, rgb(var(${variableName})) var(${opacityVar}, 100%), transparent)`
}

export function themePreset(themeColor: Record<string, any>) {
  // 常量定义
  const SHADES = ['50', '100', '200', '300', '400', '500', '600', '700', '800', '900', '950']
  const COLOR_TYPES = ['primary', 'info', 'success', 'warning', 'error', 'gray']
  const SCENES = ['hover', 'pressed', 'focus', 'disabled']

  // 构建颜色变量映射
  const colorsVar: Record<string, Record<string, any>> = {
    white: { DEFAULT: withRgb('--ui-color-white') },
    black: { DEFAULT: withRgb('--ui-color-black') },
  }

  // 生成基础色彩变量
  Object.keys(themeColor).forEach((colorName) => {
    colorsVar[colorName] = {}
    SHADES.forEach((shade) => {
      colorsVar[colorName][shade] = withRgb(`--base-color-${colorName}-${shade}`)
    })
  })

  // 生成 UI 色彩变量
  COLOR_TYPES.forEach((type) => {
    colorsVar[type] = {
      DEFAULT: withOpacity(`--ui-color-${type}`, '--un-text-opacity'),
    }

    SHADES.forEach((shade) => {
      colorsVar[type][shade] = withOpacity(`--ui-color-${type}-${shade}`, '--un-text-opacity')
    })

    SCENES.forEach((scene) => {
      colorsVar[type][scene] = withOpacity(`--ui-color-${type}-${scene}`, '--un-text-opacity')
    })
  })

  // 语义化颜色定义
  const semanticColors = {
    text: ['default', 'dimmed', 'muted', 'toned', 'highlighted', 'inverted'],
    bg: ['default', 'muted', 'elevated', 'accented', 'inverted'],
    border: ['default', 'muted', 'accented', 'inverted'],
  }

  function createSemanticColorRules(prefix: string, property: string, variants: string[], opacityVar: string, sourcePrefix?: string) {
    const rules: any[] = []

    variants.forEach((variant) => {
      const cssVarPrefix = sourcePrefix || prefix
      const cssVar = `--ui-${cssVarPrefix}${variant === 'default' ? '' : `-${variant}`}`

      rules.push([
        `${prefix}-${variant}`,
        {
          [property]: `color-mix(in oklab, rgb(var(${cssVar})) var(${opacityVar}, 100%), transparent)`,
          [opacityVar]: '100%',
        },
      ])

      rules.push([
        new RegExp(`^${prefix}-${variant}\\/(\\d*\\.?\\d+)(%?)$`),
        ([, opacity, isPercent]: string[]) => {
          const opacityValue = Number(opacity)
          let opacityStr: string
          if (isPercent || opacityValue > 1) {
            opacityStr = `${opacityValue}%`
          }
          else {
            // 小数转百分比
            opacityStr = `${opacityValue * 100}%`
          }
          return {
            [property]: `color-mix(in oklab, rgb(var(${cssVar})) var(${opacityVar}, 100%), transparent)`,
            [opacityVar]: opacityStr,
          }
        },
      ])

      rules.push([
        new RegExp(`^${prefix}-${variant}\\[(.+)\\]$`),
        ([, value]: string[]) => ({
          [property]: value.replace(/_/g, ' '),
        }),
      ])
    })

    return rules
  }

  // 生成所有语义化颜色规则
  const textRules = createSemanticColorRules('text', 'color', semanticColors.text, '--un-text-opacity')
  const bgRules = createSemanticColorRules('bg', 'background-color', semanticColors.bg, '--un-bg-opacity')
  const borderRules = createSemanticColorRules('border', 'border-color', semanticColors.border, '--un-border-opacity')
  const ringRules = createSemanticColorRules('ring', '--un-ring-color', semanticColors.border, '--un-ring-opacity', 'border')

  const divideRules: any[] = []
  semanticColors.border.forEach((variant) => {
    const cssVar = `--ui-border${variant === 'default' ? '' : `-${variant}`}`

    divideRules.push([
      new RegExp(`^divide-${variant}$`),
      (_: any, { rawSelector }: any) => {
        const selector = rawSelector.replace(/[.*+?^${}()|[\]\\]/g, '\\$&')
        return `
          .${selector} > :not(:last-child) {
            border-color: color-mix(in oklab, rgb(var(${cssVar})) var(--un-border-opacity, 100%), transparent);
            --un-border-opacity: 100%;
          }`
      },
    ])

    divideRules.push([
      new RegExp(`^divide-${variant}\\/(\\d*\\.?\\d+)(%?)$`),
      ([, opacity, isPercent]: string[], { rawSelector }: any) => {
        const opacityValue = Number(opacity)
        let opacityStr: string
        if (isPercent || opacityValue > 1) {
          opacityStr = `${opacityValue}%`
        }
        else {
          opacityStr = `${opacityValue * 100}%`
        }
        const selector = rawSelector.replace(/[.*+?^${}()|[\]\\]/g, '\\$&')
        return `
          .${selector} > :not(:last-child) {
            border-color: color-mix(in oklab, rgb(var(${cssVar})) var(--un-border-opacity, 100%), transparent);
            --un-border-opacity: ${opacityStr};
          }`
      },
    ])
  })

  const rules = [
    ...textRules,
    ...bgRules,
    ...borderRules,
    ...ringRules,
    ...divideRules,
  ]

  return {
    name: 'preset-theme',
    theme: {
      colors: colorsVar,
    },
    rules,
  }
}



---
File: /packages/core/src/utils/tree.ts
---

interface TreeNode {
  [key: string]: any
}

interface TreeOptions {
  idKey: string
  parentKey: string
  sortKey: string
  childrenKey: string
}

export function arrayToTree(data: Record<string, any>[], options: TreeOptions, key?: any): TreeNode[] {
  let itemArr: TreeNode[] = []
  data.forEach((item) => {
    if (item[options.parentKey] === key) {
      const children = arrayToTree(data, options, item[options.idKey])

      if (children.length > 0) {
        item[options.childrenKey] = children
      }
      itemArr.push(item)
    }
  })
  itemArr = itemArr.sort((a, b) => {
    return a[options.sortKey] - b[options.sortKey]
  })
  return itemArr
}

export function searchTree(tree: TreeNode[], func: (item: TreeNode) => boolean, findArr: TreeNode[] = []) {
  if (!tree || !tree.length) {
    return []
  }
  for (const data of tree) {
    findArr.push(data)
    if (func(data)) {
      return findArr
    }
    if (data?.children && data?.children?.length) {
      const findChildren = searchTree(data.children, func, findArr)
      if (findChildren.length)
        return findChildren
    }
    findArr.pop()
  }
  return []
}

export function treeToArr<T>(tree: TreeNode[], idKey: string | number, childrenKey: string): T[] {
  let arr: any[] = []
  if (!tree || !tree.length) {
    return arr
  }
  for (const data of tree) {
    arr.push(data[idKey])
    if (data[childrenKey] && data[childrenKey].length) {
      const findChildren = treeToArr(data[childrenKey], idKey, childrenKey)
      if (findChildren.length)
        arr = arr.concat(findChildren)
    }
  }
  return arr
}



---
File: /packages/core/src/index.ts
---

export * from './components'
export * from './config'
export * from './hooks'
export * from './main'
export * from './preset'
export * from './provider'
export * from './router'
export * from './stores'
export * from './types'
export * from './utils'



---
File: /packages/core/src/main.ts
---

import type { App } from 'vue'
import type { IConfig } from './types'
import { VueQueryPlugin } from '@tanstack/vue-query'
import { createPinia } from 'pinia'
import piniaPluginPersistedstate from 'pinia-plugin-persistedstate'
import { ref } from 'vue'
import { permissionDirective } from './directive'
import { initFormValidate } from './hooks'
import { initRouter } from './router/route'

export function createDux(config: IConfig) {
  const pinia = createPinia()
  pinia.use(piniaPluginPersistedstate)

  return {
    install(app: App) {
      // eslint-disable-next-line no-console
      console.log(
        `%c dux-vue %c dux.cn %c`,
        'background:#35495e ; padding: 1px; border-radius: 3px 0 0 3px;  color: #fff',
        'background:#41b883 ; padding: 1px; border-radius: 0 3px 3px 0;  color: #fff',
        'background:transparent',
      )

      initFormValidate()

      const manageRef = ref<string>()
      app.provide('dux.config', config)
      app.provide('dux.manage', manageRef)
      app.directive('can', permissionDirective)
      app.use(pinia)
      app.use(VueQueryPlugin)
      app.use(initRouter(config))
    },
  }
}



---
File: /packages/core/.gitignore
---

# See https://help.github.com/articles/ignoring-files/ for more about ignoring files.

# Dependencies
node_modules
.pnp
.pnp.js

# Local env files
.env
.env.local
.env.development.local
.env.test.local
.env.production.local

# Testing
coverage

# Turbo
.turbo

# Vercel
.vercel

# Build Outputs
.next/
out/
build
dist


# Debug
npm-debug.log*
yarn-debug.log*
yarn-error.log*

# Misc
.DS_Store
*.pem



---
File: /packages/core/CHANGELOG.md
---

# @duxweb/dvha-core

## 1.0.34

## 1.0.33

### Patch Changes

- feat: 增加代码高亮组件

## 1.0.32

### Patch Changes

- fix: 修正部分显示问题

## 1.0.31

### Patch Changes

- feat: 增加文件选择器

## 1.0.30

## 1.0.29

## 1.0.28

### Patch Changes

- feat(pro): 增加表格 header 插槽

## 1.0.27

### Patch Changes

- feat: 修正部分设计器问题

## 1.0.26

### Patch Changes

- feat: 增加表单设计器组件

## 1.0.25

### Patch Changes

- feat(pro): 增加图像编辑器

## 1.0.24

## 1.0.23

## 1.0.22

## 1.0.21

### Patch Changes

- chore(pro): 修正设置面板样式配置
  feat(pro): 增加手册检测登录和定时检测
  feat(core): 增加上传请求附加参数
  feat(pro): 增加文件管理器上传参数

## 1.0.20

### Patch Changes

- fix: 数据导入修正数据
  fix(pro): 修正用户头像昵称
  chore(core): 默认不限制导出页面数
  chore(core): 默认关闭数据导入

## 1.0.19

### Patch Changes

- feat(pro): 增加上传驱动全局配置
  feat(pro): 修改表单页面组件为居中布局
  feat(pro): 增加图标选择器
  feat(pro): 增加空列表状态页
  feat(pro): 增加空页面状态
  feat(pro): 增加列表筛选组件布局
  deat(pro): 增加侧栏面板的页面样式
  fix(pro): 修正dvha pro popover 背景透明度
  fix(pro): 修改筛选器为 modal 弹窗
  fix(core): 修正无限列表与普通列表的 key

## 1.0.18

### Patch Changes

- feat: 增加树形筛选,增加图标组件

## 1.0.17

### Patch Changes

- chore: 修正部分参数问题

## 1.0.16

### Patch Changes

- feat: 增加 data 的 apiBasePath 参数

## 1.0.15

### Patch Changes

- feat: 增加 Json 渲染器组件全局配置
  chore: 优化部分组件加载模式
  chore: 统一部分组件接口命名

## 1.0.14

### Patch Changes

- feat: 更换组件的内容为语言包
  fix: 修正部分适配 pro 版的问题

## 0.1.23

### Patch Changes

- fix: 修正树形与选择器请求问题
  feat: 增加数据提供者获取总量接口方法

## 0.1.22

### Patch Changes

- feat: 增加pro版本示例
  fix: 修正部分细节问题
  chore: 更换工具链为 PNPM

## 0.1.21

### Patch Changes

- fix: 修正部分功能错误
  feat: 增加增强表单功能

## 0.1.20

### Patch Changes

- - fix: 修正useData 提交重置数据
    chore: 优化弹出层的无障碍访问,优化 i18n 的异常隐藏

## 0.1.19

### Patch Changes

- feat: 增加 JSON 渲染器 hook

## 0.1.18

### Patch Changes

- feat(theme): 增加手动主题切换
  chore(data): 优化数据获取抖动
  feat(export): 增加导出进度监听,增加 maxPage 回调配置
  feat(naiveui): 增加表格增强 hook

## 0.1.17

### Patch Changes

- fix: 修正主题变量针对 tailwind 的透明度处理

## 0.1.16

### Patch Changes

- feat: 增加主题管理器的全局色彩管理

## 0.1.15

### Patch Changes

- feat: 增加 useTree 异步树形 hook

## 0.1.14

### Patch Changes

- fix: useUpload 单文件上传限制

## 0.1.13

### Patch Changes

- feat: 增加上传功能

## 0.1.12

### Patch Changes

- feat: 增加 csv 导入导出 cook

## 0.1.11

### Patch Changes

- feat: 增加导入 hook

## 0.1.10

### Patch Changes

- feat: 增加导出 hook,修正无限滚动分页 bug

## 0.1.9

### Patch Changes

- change: 更换许可协议为 MIT

## 0.1.8

### Patch Changes

- feet: 增加 useForm 功能,优化 useSelect

## 0.1.7

### Patch Changes

- chore: 优化异步选择器的防抖等功能

## 0.1.6

### Patch Changes

- fix: 修正路由刷新重定向,修正 query-vue 引入

## 0.1.5

### Patch Changes

- fix: 修正空权限验证

## 0.1.4

### Patch Changes

- 增加默认状态页面放置告警

## 0.1.3

### Patch Changes

- chore: 增加认证提供者的权限配置与相关 hook

## 0.1.2

### Patch Changes

- feat: 增加国家化相关接口

## 0.1.1

### Patch Changes

- fix: 修正简单授权的方法获取

## 0.1.0

### Minor Changes

- 增加默认授权 API 路径

## 0.0.9

### Patch Changes

- 增加多数据源配置,移除全局 ApiUrl 等参数

## 0.0.8

### Patch Changes

- fix: 修正编译脚本

## 0.0.7

### Patch Changes

- chore: 更新依赖和编译

## 0.0.6

### Patch Changes

- fix: dependencie @tanstack/vue-query

## 0.0.5

### Patch Changes

- 增加 loader 加载器类型

## 0.0.4

### Patch Changes

- update base releases

## 0.0.3

### Patch Changes

- fix: 更新内部依赖

## 0.0.2

### Patch Changes

- init



---
File: /packages/core/LICENSE
---

                   GNU LESSER GENERAL PUBLIC LICENSE
                       Version 3, 29 June 2007

 Copyright (C) 2007 Free Software Foundation, Inc. <http://fsf.org/>
 Everyone is permitted to copy and distribute verbatim copies
 of this license document, but changing it is not allowed.


  This version of the GNU Lesser General Public License incorporates
the terms and conditions of version 3 of the GNU General Public
License, supplemented by the additional permissions listed below.

  0. Additional Definitions.

  As used herein, "this License" refers to version 3 of the GNU Lesser
General Public License, and the "GNU GPL" refers to version 3 of the GNU
General Public License.

  "The Library" refers to a covered work governed by this License,
other than an Application or a Combined Work as defined below.

  An "Application" is any work that makes use of an interface provided
by the Library, but which is not otherwise based on the Library.
Defining a subclass of a class defined by the Library is deemed a mode
of using an interface provided by the Library.

  A "Combined Work" is a work produced by combining or linking an
Application with the Library.  The particular version of the Library
with which the Combined Work was made is also called the "Linked
Version".

  The "Minimal Corresponding Source" for a Combined Work means the
Corresponding Source for the Combined Work, excluding any source code
for portions of the Combined Work that, considered in isolation, are
based on the Application, and not on the Linked Version.

  The "Corresponding Application Code" for a Combined Work means the
object code and/or source code for the Application, including any data
and utility programs needed for reproducing the Combined Work from the
Application, but excluding the System Libraries of the Combined Work.

  1. Exception to Section 3 of the GNU GPL.

  You may convey a covered work under sections 3 and 4 of this License
without being bound by section 3 of the GNU GPL.

  2. Conveying Modified Versions.

  If you modify a copy of the Library, and, in your modifications, a
facility refers to a function or data to be supplied by an Application
that uses the facility (other than as an argument passed when the
facility is invoked), then you may convey a copy of the modified
version:

   a) under this License, provided that you make a good faith effort to
   ensure that, in the event an Application does not supply the
   function or data, the facility still operates, and performs
   whatever part of its purpose remains meaningful, or

   b) under the GNU GPL, with none of the additional permissions of
   this License applicable to that copy.

  3. Object Code Incorporating Material from Library Header Files.

  The object code form of an Application may incorporate material from
a header file that is part of the Library.  You may convey such object
code under terms of your choice, provided that, if the incorporated
material is not limited to numerical parameters, data structure
layouts and accessors, or small macros, inline functions and templates
(ten or fewer lines in length), you do both of the following:

   a) Give prominent notice with each copy of the object code that the
   Library is used in it and that the Library and its use are
   covered by this License.

   b) Accompany the object code with a copy of the GNU GPL and this license
   document.

  4. Combined Works.

  You may convey a Combined Work under terms of your choice that,
taken together, effectively do not restrict modification of the
portions of the Library contained in the Combined Work and reverse
engineering for debugging such modifications, if you also do each of
the following:

   a) Give prominent notice with each copy of the Combined Work that
   the Library is used in it and that the Library and its use are
   covered by this License.

   b) Accompany the Combined Work with a copy of the GNU GPL and this license
   document.

   c) For a Combined Work that displays copyright notices during
   execution, include the copyright notice for the Library among
   these notices, as well as a reference directing the user to the
   copies of the GNU GPL and this license document.

   d) Do one of the following:

       0) Convey the Minimal Corresponding Source under the terms of this
       License, and the Corresponding Application Code in a form
       suitable for, and under terms that permit, the user to
       recombine or relink the Application with a modified version of
       the Linked Version to produce a modified Combined Work, in the
       manner specified by section 6 of the GNU GPL for conveying
       Corresponding Source.

       1) Use a suitable shared library mechanism for linking with the
       Library.  A suitable mechanism is one that (a) uses at run time
       a copy of the Library already present on the user's computer
       system, and (b) will operate properly with a modified version
       of the Library that is interface-compatible with the Linked
       Version.

   e) Provide Installation Information, but only if you would otherwise
   be required to provide such information under section 6 of the
   GNU GPL, and only to the extent that such information is
   necessary to install and execute a modified version of the
   Combined Work produced by recombining or relinking the
   Application with a modified version of the Linked Version. (If
   you use option 4d0, the Installation Information must accompany
   the Minimal Corresponding Source and Corresponding Application
   Code. If you use option 4d1, you must provide the Installation
   Information in the manner specified by section 6 of the GNU GPL
   for conveying Corresponding Source.)

  5. Combined Libraries.

  You may place library facilities that are a work based on the
Library side by side in a single library together with other library
facilities that are not Applications and are not covered by this
License, and convey such a combined library under terms of your
choice, if you do both of the following:

   a) Accompany the combined library with a copy of the same work based
   on the Library, uncombined with any other library facilities,
   conveyed under the terms of this License.

   b) Give prominent notice with the combined library that part of it
   is a work based on the Library, and explaining where to find the
   accompanying uncombined form of the same work.

  6. Revised Versions of the GNU Lesser General Public License.

  The Free Software Foundation may publish revised and/or new versions
of the GNU Lesser General Public License from time to time. Such new
versions will be similar in spirit to the present version, but may
differ in detail to address new problems or concerns.

  Each version is given a distinguishing version number. If the
Library as you received it specifies that a certain numbered version
of the GNU Lesser General Public License "or any later version"
applies to it, you have the option of following the terms and
conditions either of that published version or of any later version
published by the Free Software Foundation. If the Library as you
received it does not specify a version number of the GNU Lesser
General Public License, you may choose any version of the GNU Lesser
General Public License ever published by the Free Software Foundation.

  If the Library as you received it specifies that a proxy can decide
whether future versions of the GNU Lesser General Public License shall
apply, that proxy's public statement of acceptance of any version is
permanent authorization for you to choose that version for the
Library.


---
File: /packages/core/package.json
---

{
  "name": "@duxweb/dvha-core",
  "type": "module",
  "version": "1.0.34",
  "author": "DuxWeb",
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "https://github.com/duxweb/dvha.git"
  },
  "exports": {
    ".": {
      "dvha:development": {
        "types": "./src/index.ts",
        "import": "./src/index.ts"
      },
      "types": "./dist/types/index.d.ts",
      "import": "./dist/esm/index.js",
      "require": "./dist/cjs/index.cjs"
    }
  },
  "main": "dist/cjs/index.cjs",
  "module": "dist/esm/index.js",
  "types": "dist/types/index.d.ts",
  "files": [
    "LICENSE",
    "README.md",
    "dist"
  ],
  "scripts": {
    "clean": "rimraf dist",
    "build": "pnpm run clean && vue-tsc --noEmit && vite build && pnpm run build:types",
    "build:types": "vue-tsc --declaration --emitDeclarationOnly --outDir dist/types",
    "lint": "eslint .",
    "lint:fix": "eslint . --fix"
  },
  "dependencies": {
    "@overlastic/vue": "^0.8.1",
    "@tanstack/vue-query": "^5.80.7",
    "@vee-validate/rules": "^4.15.1",
    "@vueuse/core": "^13.3.0",
    "@vueuse/integrations": "^13.3.0",
    "axios": "^1.9.0",
    "clsx": "^2.1.1",
    "colorizr": "^3.0.8",
    "crypto-js": "^4.2.0",
    "dayjs": "^1.11.13",
    "jsep": "^1.4.0",
    "json-2-csv": "^5.5.9",
    "lodash-es": "^4.17.21",
    "mathjs": "^14.5.2",
    "mime": "^4.0.7",
    "mitt": "^3.0.1",
    "pinia": "^3.0.3",
    "pinia-plugin-persistedstate": "^4.3.0",
    "tslib": "^2.8.1",
    "vee-validate": "^4.15.1",
    "vue": "^3.5.0",
    "vue-i18n": "^11.1.6",
    "vue-router": "^4.5.1",
    "vue3-sfc-loader": "^0.9.5"
  },
  "devDependencies": {
    "rimraf": "^6.0.1",
    "vue-tsc": "^2.2.10"
  }
}



---
File: /packages/core/README.md
---




---
File: /packages/core/tsconfig.json
---

{
  "compilerOptions": {
    "target": "ESNext",
    "jsx": "preserve",
    "jsxImportSource": "vue",
    "lib": [
      "ESNext",
      "DOM"
    ],
    "moduleDetection": "force",
    "useDefineForClassFields": true,
    "baseUrl": ".",
    "rootDir": "src",
    "module": "ESNext",
    "moduleResolution": "bundler",
    "resolveJsonModule": true,
    "allowJs": true,
    "strict": true,
    "noFallthroughCasesInSwitch": true,
    "noImplicitAny": false,
    "noUnusedLocals": true,
    "noUnusedParameters": true,
    "declaration": true,
    "importHelpers": true,
    "noEmit": false,
    "outDir": "dist",
    "allowSyntheticDefaultImports": true,
    "esModuleInterop": true,
    "isolatedModules": true,
    "skipLibCheck": true
  },
  "include": [
    "src/**/*.*",
    "src/**/*.vue",
    "typings.d.ts",
    "uno.config.ts"
  ],
  "exclude": [
    "node_modules",
    "dist"
  ]
}



---
File: /packages/core/typings.d.ts
---

// typings.d.ts
declare module '*.css' {
  const content: string
  export default content
}

declare module '*?raw' {
  const content: string
  export default content
}



---
File: /packages/core/vite.config.ts
---

import { definePackageConfig } from '../../config/vite.config.build'

export default definePackageConfig(__dirname)



---
File: /packages/elementui/src/components/menu/index.ts
---

export { default as TreeMenu } from './TreeMenu.vue'



---
File: /packages/elementui/src/components/menu/TreeMenu.vue
---

<script setup lang="ts">
import type { IMenu } from '@duxweb/dvha-core'

defineOptions({
  name: 'TreeMenu',
})

defineProps({
  menuItems: {
    type: Array,
    required: true,
  },
  onMenuClick: {
    type: Function as unknown as () => (item: MenuOption) => void,
    default: () => {},
  },
})

export interface MenuOption extends IMenu {
  children?: MenuOption[]
}
</script>

<template>
  <template v-for="item in menuItems as MenuOption[]" :key="item.name">
    <el-sub-menu v-if="item.children && item.children.length" :index="item.name">
      <el-icon v-if="item.icon">
        <div :class="item.icon" />
      </el-icon>
      <template #title>
        {{ item.label }}
      </template>

      <TreeMenu
        :menu-items="item.children"
        :on-menu-click="onMenuClick"
      />
    </el-sub-menu>

    <el-menu-item
      v-else
      :index="item.name"
      @click="onMenuClick(item)"
    >
      <el-icon v-if="item.icon">
        <div :class="item.icon" />
      </el-icon>
      <template #title>
        {{ item.label }}
      </template>
    </el-menu-item>
  </template>
</template>



---
File: /packages/elementui/src/components/index.ts
---

export * from './menu'



---
File: /packages/elementui/src/hooks/index.ts
---

export * from './tab'



---
File: /packages/elementui/src/hooks/tab.ts
---

import { useTabStore } from '@duxweb/dvha-core'
import { computed } from 'vue'
import { useRouter } from 'vue-router'

export function useElmTab(): ReturnType<typeof useTabStore> & { props: any } {
  const tab = useTabStore()
  const router = useRouter()

  const props = computed(() => {
    return {
      modelValue: tab.current,
      onTabRemove: (value: string) => {
        tab.delTab(value, (item) => {
          router.push(item.path || '')
        })
      },
      onTabChange: (value: string) => {
        tab.changeTab(value, (item) => {
          router.push(item.path || '')
        })
      },
    }
  })

  return {
    ...tab,
    props,
  }
}



---
File: /packages/elementui/src/index.ts
---

export * from './components'
export * from './hooks'



---
File: /packages/elementui/.gitignore
---

# See https://help.github.com/articles/ignoring-files/ for more about ignoring files.

# Dependencies
node_modules
.pnp
.pnp.js

# Local env files
.env
.env.local
.env.development.local
.env.test.local
.env.production.local

# Testing
coverage

# Turbo
.turbo

# Vercel
.vercel

# Build Outputs
.next/
out/
build
dist


# Debug
npm-debug.log*
yarn-debug.log*
yarn-error.log*

# Misc
.DS_Store
*.pem



---
File: /packages/elementui/CHANGELOG.md
---

# @duxweb/dvha-elementui

## 1.0.34

### Patch Changes

- @duxweb/dvha-core@1.0.34

## 1.0.33

### Patch Changes

- Updated dependencies
  - @duxweb/dvha-core@1.0.33

## 1.0.32

### Patch Changes

- Updated dependencies
  - @duxweb/dvha-core@1.0.32

## 1.0.31

### Patch Changes

- Updated dependencies
  - @duxweb/dvha-core@1.0.31

## 1.0.30

### Patch Changes

- @duxweb/dvha-core@1.0.30

## 1.0.29

### Patch Changes

- @duxweb/dvha-core@1.0.29

## 1.0.28

### Patch Changes

- Updated dependencies
  - @duxweb/dvha-core@1.0.28

## 1.0.27

### Patch Changes

- Updated dependencies
  - @duxweb/dvha-core@1.0.27

## 1.0.26

### Patch Changes

- Updated dependencies
  - @duxweb/dvha-core@1.0.26

## 1.0.25

### Patch Changes

- Updated dependencies
  - @duxweb/dvha-core@1.0.25

## 1.0.24

### Patch Changes

- @duxweb/dvha-core@1.0.24

## 1.0.23

### Patch Changes

- @duxweb/dvha-core@1.0.23

## 1.0.22

### Patch Changes

- @duxweb/dvha-core@1.0.22

## 1.0.21

### Patch Changes

- Updated dependencies
  - @duxweb/dvha-core@1.0.21

## 1.0.20

### Patch Changes

- Updated dependencies
  - @duxweb/dvha-core@1.0.20

## 1.0.19

### Patch Changes

- feat(pro): 增加上传驱动全局配置
  feat(pro): 修改表单页面组件为居中布局
  feat(pro): 增加图标选择器
  feat(pro): 增加空列表状态页
  feat(pro): 增加空页面状态
  feat(pro): 增加列表筛选组件布局
  deat(pro): 增加侧栏面板的页面样式
  fix(pro): 修正dvha pro popover 背景透明度
  fix(pro): 修改筛选器为 modal 弹窗
  fix(core): 修正无限列表与普通列表的 key
- Updated dependencies
  - @duxweb/dvha-core@1.0.19

## 1.0.18

### Patch Changes

- Updated dependencies
  - @duxweb/dvha-core@1.0.18

## 1.0.17

### Patch Changes

- Updated dependencies
  - @duxweb/dvha-core@1.0.17

## 1.0.16

### Patch Changes

- feat: 增加 data 的 apiBasePath 参数
- Updated dependencies
  - @duxweb/dvha-core@1.0.16

## 1.0.15

### Patch Changes

- Updated dependencies
  - @duxweb/dvha-core@1.0.15

## 1.0.14

### Patch Changes

- Updated dependencies
  - @duxweb/dvha-core@1.0.14

## 1.0.5

### Patch Changes

- Updated dependencies
  - @duxweb/dvha-core@0.1.23

## 1.0.4

### Patch Changes

- feat: 增加pro版本示例
  fix: 修正部分细节问题
  chore: 更换工具链为 PNPM
- Updated dependencies
  - @duxweb/dvha-core@0.1.22

## 1.0.3

### Patch Changes

- change: 更换许可协议为 MIT

## 1.0.2

### Patch Changes

- 优化版本依赖为最新版核心,修正 pnpm 下的依赖关系

## 1.0.1

### Patch Changes

- fix: 修正简单授权的方法获取
- Updated dependencies
  - @duxweb/dvha-core@0.1.1

## 1.0.0

### Patch Changes

- Updated dependencies
  - @duxweb/dvha-core@0.1.0

## 0.0.6

### Patch Changes

- fix: 修正编译脚本

## 0.0.5

### Patch Changes

- chore: 更新依赖和编译

## 0.0.4

### Patch Changes

- update base releases

## 0.0.3

### Patch Changes

- fix: 更新内部依赖
- Updated dependencies
  - @duxweb/dvha-core@0.0.3

## 0.0.2

### Patch Changes

- init
- Updated dependencies
  - @duxweb/dvha-core@0.0.2



---
File: /packages/elementui/LICENSE
---

                   GNU LESSER GENERAL PUBLIC LICENSE
                       Version 3, 29 June 2007

 Copyright (C) 2007 Free Software Foundation, Inc. <http://fsf.org/>
 Everyone is permitted to copy and distribute verbatim copies
 of this license document, but changing it is not allowed.


  This version of the GNU Lesser General Public License incorporates
the terms and conditions of version 3 of the GNU General Public
License, supplemented by the additional permissions listed below.

  0. Additional Definitions.

  As used herein, "this License" refers to version 3 of the GNU Lesser
General Public License, and the "GNU GPL" refers to version 3 of the GNU
General Public License.

  "The Library" refers to a covered work governed by this License,
other than an Application or a Combined Work as defined below.

  An "Application" is any work that makes use of an interface provided
by the Library, but which is not otherwise based on the Library.
Defining a subclass of a class defined by the Library is deemed a mode
of using an interface provided by the Library.

  A "Combined Work" is a work produced by combining or linking an
Application with the Library.  The particular version of the Library
with which the Combined Work was made is also called the "Linked
Version".

  The "Minimal Corresponding Source" for a Combined Work means the
Corresponding Source for the Combined Work, excluding any source code
for portions of the Combined Work that, considered in isolation, are
based on the Application, and not on the Linked Version.

  The "Corresponding Application Code" for a Combined Work means the
object code and/or source code for the Application, including any data
and utility programs needed for reproducing the Combined Work from the
Application, but excluding the System Libraries of the Combined Work.

  1. Exception to Section 3 of the GNU GPL.

  You may convey a covered work under sections 3 and 4 of this License
without being bound by section 3 of the GNU GPL.

  2. Conveying Modified Versions.

  If you modify a copy of the Library, and, in your modifications, a
facility refers to a function or data to be supplied by an Application
that uses the facility (other than as an argument passed when the
facility is invoked), then you may convey a copy of the modified
version:

   a) under this License, provided that you make a good faith effort to
   ensure that, in the event an Application does not supply the
   function or data, the facility still operates, and performs
   whatever part of its purpose remains meaningful, or

   b) under the GNU GPL, with none of the additional permissions of
   this License applicable to that copy.

  3. Object Code Incorporating Material from Library Header Files.

  The object code form of an Application may incorporate material from
a header file that is part of the Library.  You may convey such object
code under terms of your choice, provided that, if the incorporated
material is not limited to numerical parameters, data structure
layouts and accessors, or small macros, inline functions and templates
(ten or fewer lines in length), you do both of the following:

   a) Give prominent notice with each copy of the object code that the
   Library is used in it and that the Library and its use are
   covered by this License.

   b) Accompany the object code with a copy of the GNU GPL and this license
   document.

  4. Combined Works.

  You may convey a Combined Work under terms of your choice that,
taken together, effectively do not restrict modification of the
portions of the Library contained in the Combined Work and reverse
engineering for debugging such modifications, if you also do each of
the following:

   a) Give prominent notice with each copy of the Combined Work that
   the Library is used in it and that the Library and its use are
   covered by this License.

   b) Accompany the Combined Work with a copy of the GNU GPL and this license
   document.

   c) For a Combined Work that displays copyright notices during
   execution, include the copyright notice for the Library among
   these notices, as well as a reference directing the user to the
   copies of the GNU GPL and this license document.

   d) Do one of the following:

       0) Convey the Minimal Corresponding Source under the terms of this
       License, and the Corresponding Application Code in a form
       suitable for, and under terms that permit, the user to
       recombine or relink the Application with a modified version of
       the Linked Version to produce a modified Combined Work, in the
       manner specified by section 6 of the GNU GPL for conveying
       Corresponding Source.

       1) Use a suitable shared library mechanism for linking with the
       Library.  A suitable mechanism is one that (a) uses at run time
       a copy of the Library already present on the user's computer
       system, and (b) will operate properly with a modified version
       of the Library that is interface-compatible with the Linked
       Version.

   e) Provide Installation Information, but only if you would otherwise
   be required to provide such information under section 6 of the
   GNU GPL, and only to the extent that such information is
   necessary to install and execute a modified version of the
   Combined Work produced by recombining or relinking the
   Application with a modified version of the Linked Version. (If
   you use option 4d0, the Installation Information must accompany
   the Minimal Corresponding Source and Corresponding Application
   Code. If you use option 4d1, you must provide the Installation
   Information in the manner specified by section 6 of the GNU GPL
   for conveying Corresponding Source.)

  5. Combined Libraries.

  You may place library facilities that are a work based on the
Library side by side in a single library together with other library
facilities that are not Applications and are not covered by this
License, and convey such a combined library under terms of your
choice, if you do both of the following:

   a) Accompany the combined library with a copy of the same work based
   on the Library, uncombined with any other library facilities,
   conveyed under the terms of this License.

   b) Give prominent notice with the combined library that part of it
   is a work based on the Library, and explaining where to find the
   accompanying uncombined form of the same work.

  6. Revised Versions of the GNU Lesser General Public License.

  The Free Software Foundation may publish revised and/or new versions
of the GNU Lesser General Public License from time to time. Such new
versions will be similar in spirit to the present version, but may
differ in detail to address new problems or concerns.

  Each version is given a distinguishing version number. If the
Library as you received it specifies that a certain numbered version
of the GNU Lesser General Public License "or any later version"
applies to it, you have the option of following the terms and
conditions either of that published version or of any later version
published by the Free Software Foundation. If the Library as you
received it does not specify a version number of the GNU Lesser
General Public License, you may choose any version of the GNU Lesser
General Public License ever published by the Free Software Foundation.

  If the Library as you received it specifies that a proxy can decide
whether future versions of the GNU Lesser General Public License shall
apply, that proxy's public statement of acceptance of any version is
permanent authorization for you to choose that version for the
Library.


---
File: /packages/elementui/package.json
---

{
  "name": "@duxweb/dvha-elementui",
  "type": "module",
  "version": "1.0.34",
  "author": "DuxWeb",
  "license": "MIT",
  "exports": {
    ".": {
      "dvha:development": {
        "types": "./src/index.ts",
        "import": "./src/index.ts"
      },
      "types": "./dist/types/index.d.ts",
      "import": "./dist/esm/index.js",
      "require": "./dist/cjs/index.cjs"
    }
  },
  "main": "dist/cjs/index.cjs",
  "module": "dist/esm/index.js",
  "types": "dist/types/index.d.ts",
  "files": [
    "LICENSE",
    "README.md",
    "dist"
  ],
  "scripts": {
    "clean": "rimraf dist",
    "build": "pnpm run clean && vue-tsc --noEmit && vite build && pnpm run build:types",
    "build:types": "vue-tsc --declaration --emitDeclarationOnly --outDir dist/types",
    "lint": "eslint .",
    "lint:fix": "eslint . --fix"
  },
  "peerDependencies": {
    "@duxweb/dvha-core": "workspace:*",
    "element-plus": "^2.9.10",
    "vue": "3.5.17",
    "vue-router": "4.5.1"
  },
  "devDependencies": {
    "@duxweb/dvha-core": "*",
    "element-plus": "^2.9.10",
    "vue": "^3.5.0",
    "vue-router": "^4.5.1"
  }
}



---
File: /packages/elementui/README.md
---




---
File: /packages/elementui/tsconfig.json
---

{
  "compilerOptions": {
    "target": "ESNext",
    "jsx": "preserve",
    "jsxImportSource": "vue",
    "lib": [
      "ESNext",
      "DOM"
    ],
    "moduleDetection": "force",
    "useDefineForClassFields": true,
    "baseUrl": ".",
    "rootDir": "src",
    "module": "ESNext",
    "moduleResolution": "bundler",
    "resolveJsonModule": true,
    "allowJs": true,
    "strict": true,
    "noFallthroughCasesInSwitch": true,
    "noImplicitAny": false,
    "noUnusedLocals": true,
    "noUnusedParameters": true,
    "declaration": true,
    "noEmit": false,
    "outDir": "dist",
    "allowSyntheticDefaultImports": true,
    "esModuleInterop": true,
    "isolatedModules": true,
    "skipLibCheck": true
  },
  "include": [
    "src/**/*.ts",
    "src/**/*.tsx",
    "src/**/*.vue"
  ],
  "exclude": [
    "node_modules",
    "dist"
  ]
}



---
File: /packages/elementui/vite.config.ts
---

import { definePackageConfig } from '../../config/vite.config.build'

export default definePackageConfig(__dirname)



---
File: /packages/naiveui/src/components/autoComplete/autoComplete.tsx
---

import type { AutoCompleteProps } from 'naive-ui'
import type { PropType } from 'vue'
import { useSelect } from '@duxweb/dvha-core'
import { useVModel } from '@vueuse/core'
import { NAutoComplete } from 'naive-ui'
import { defineComponent, toRef, watch } from 'vue'

interface DuxAutoCompleteProps extends AutoCompleteProps {
  path?: string
  params?: Record<string, any>
  pagination?: boolean
  valueField?: string
  labelField?: string
}

export const DuxAutoComplete = defineComponent<DuxAutoCompleteProps>({
  name: 'DuxAutoComplete',
  props: {
    path: String,
    params: Object as PropType<Record<string, any>>,
    pagination: {
      type: Boolean,
      default: true,
    },
    valueField: {
      type: String,
      default: 'id',
    },
    labelField: {
      type: String,
      default: 'name',
    },
    multiple: Boolean,
  },
  extends: NAutoComplete,
  setup(props, { emit, slots }) {
    const model = useVModel(props, 'value', emit, {
      passive: true,
      defaultValue: props.defaultValue || undefined,
    })

    const path = toRef(props, 'path')
    const params = toRef(props, 'params', {})

    const { onSearch, loading, options } = useSelect({
      path: path.value || '',
      params: params.value,
      pagination: props.pagination,
      optionValue: props.valueField || 'id',
    })

    watch(model, () => {
      onSearch(model.value || '')
    }, { immediate: true })

    return () => (
      <NAutoComplete
        {...props}
        loading={loading.value}
        clearable
        options={options.value?.map(item => ({
          label: item[props.labelField || 'name'],
          value: item[props.valueField || 'id'],
        }))}
        showEmpty={true}
        v-model:value={model.value}
      >
        {{
          ...slots,
        }}
      </NAutoComplete>
    )
  },
})



---
File: /packages/naiveui/src/components/autoComplete/index.ts
---

export * from './autoComplete'



---
File: /packages/naiveui/src/components/cascader/cascader.tsx
---

import type { CascaderProps } from 'naive-ui'
import type { PropType } from 'vue'
import { useTree } from '@duxweb/dvha-core'
import { useVModel } from '@vueuse/core'
import { NCascader, NSpin } from 'naive-ui'
import { computed, defineComponent, toRef } from 'vue'

interface DuxCascaderProps extends CascaderProps {
  path?: string
  params?: Record<string, any>
}

export const DuxCascader = defineComponent<DuxCascaderProps>({
  name: 'DuxCascader',
  props: {
    path: String,
    params: Object as PropType<Record<string, any>>,
  },
  extends: NCascader,
  setup(props, { emit, slots }) {
    const path = toRef(props, 'path', '')
    const params = toRef(props, 'params', {})

    const model = useVModel(props, 'value', emit, {
      passive: true,
      defaultValue: props.defaultValue,
    })

    const { options, loading } = useTree({
      path: path.value,
      params: params.value,
    })

    const cascaderProps = computed(() => {
      const { path, params, ...rest } = props
      return rest
    })

    return () => (
      <NSpin show={loading.value} class="w-full" size={16}>
        <NCascader
          {...cascaderProps.value}
          clearable
          options={options.value}
          v-model:value={model.value}
        >
          {{
            ...slots,
          }}
        </NCascader>
      </NSpin>
    )
  },
})



---
File: /packages/naiveui/src/components/cascader/index.ts
---

export * from './cascader'



---
File: /packages/naiveui/src/components/mention/index.ts
---

export * from './mention'



---
File: /packages/naiveui/src/components/mention/mention.tsx
---

import type { MentionOption, MentionProps } from 'naive-ui'
import type { PropType } from 'vue'
import { useCustomMutation } from '@duxweb/dvha-core'
import { useVModel } from '@vueuse/core'
import { NMention } from 'naive-ui'
import { defineComponent, ref, toRef } from 'vue'

interface DuxMentionProps extends MentionProps {
  path?: string
  params?: Record<string, any>
  labelField?: string
  valueField?: string
}

export const DuxMention = defineComponent<DuxMentionProps>({
  name: 'DuxMention',
  props: {
    path: String,
    params: Object as PropType<Record<string, any>>,
    labelField: {
      type: String,
      default: 'name',
    },
    valueField: {
      type: String,
      default: 'name',
    },
  },
  extends: NMention,
  setup(props, { emit, slots }) {
    const model = useVModel(props, 'value', emit, {
      passive: true,
      defaultValue: props.defaultValue,
    })

    const options = ref<MentionOption[]>([])
    const loading = ref(false)

    const path = toRef(props, 'path')
    const params = toRef(props, 'params', {})

    const { mutateAsync } = useCustomMutation({
      path: path.value,
      query: params.value,
      method: 'GET',
    })

    const handleSearch = (pattern: string) => {
      if (!path.value || !pattern) {
        options.value = []
        return
      }

      loading.value = true
      mutateAsync({
        query: {
          keyword: pattern,
          limit: 10,
        },
      }).then((res) => {
        options.value = res?.data?.map(row => ({
          label: row[props.labelField || 'name'],
          value: row[props.valueField || 'name'],
        })) || []
      }).catch(() => {
        options.value = []
      }).finally(() => {
        loading.value = false
      })
    }

    return () => (
      <NMention {...props} v-model:value={model.value} options={options.value} onSearch={handleSearch} loading={loading.value}>
        {{
          ...slots,
        }}
      </NMention>
    )
  },
})



---
File: /packages/naiveui/src/components/select/index.ts
---

export * from './select'



---
File: /packages/naiveui/src/components/select/select.tsx
---

import type { SelectProps } from 'naive-ui'
import type { VNodeChild } from 'vue'
import { useSelect } from '@duxweb/dvha-core'
import { useVModel } from '@vueuse/core'
import { NAvatar, NImage, NPagination, NSelect, NSpace, NTag } from 'naive-ui'
import { computed, defineComponent, toRef } from 'vue'

interface DuxSelectProps extends SelectProps {
  path?: string
  params?: Record<string, any>
  pagination?: boolean
  avatarField?: string
  imageField?: string
  descField?: string
  multiple?: boolean
}

export const DuxSelect = defineComponent<DuxSelectProps>({
  name: 'DuxSelect',
  props: {
    path: String,
    params: Object,
    pagination: {
      type: Boolean,
      default: true,
    },
    avatarField: {
      type: String,
    },
    imageField: {
      type: String,
    },
    descField: {
      type: String,
    },
    multiple: Boolean,
  },
  extends: NSelect,
  setup(props, { emit, slots }) {
    const params = toRef(props, 'params', {})
    const path = toRef(props, 'path')

    const model = useVModel(props, 'value', emit, {
      passive: true,
      defaultValue: props.defaultValue,
    })

    const labelField = toRef(props, 'labelField', 'name')
    const valueField = toRef(props, 'valueField', 'id')
    const avatarField = toRef(props, 'avatarField', '')
    const imageField = toRef(props, 'imageField', '')
    const descField = toRef(props, 'descField', '')

    const { onSearch, loading, pagination, options, pageCount } = useSelect({
      path: path.value || '',
      params: params.value,
      defaultValue: model.value,
      pagination: props.pagination,
      optionLabel: labelField.value,
      optionValue: valueField.value,
    })

    const selectProps = computed(() => {
      const { labelField, valueField, avatarField, imageField, descField, ...rest } = props
      return rest
    })

    return () => (
      <NSelect
        {...selectProps.value}
        onSearch={onSearch}
        loading={loading.value}
        filterable={!!props.pagination}
        clearable
        remote
        options={options.value}
        v-model:value={model.value}
        multiple={props.multiple}
        onClear={() => {
          onSearch('')
        }}
        renderLabel={(item: Record<string, any>) => {
          if (imageField.value || descField.value) {
            return (
              <NSpace
                align="center"
                size="small"
                wrapItem={false}
                style={{
                  padding: '6px 0',
                }}
              >
                {imageField.value && (
                  <NImage src={item?.raw?.[imageField.value]} objectFit="cover" width={32} height={32} />
                )}
                {avatarField.value && (
                  <NAvatar
                    round
                    src={item?.raw?.[avatarField.value]}
                    size={32}
                  >
                    {item?.raw?.[labelField.value]?.charAt?.(0)}
                  </NAvatar>
                )}
                <NSpace vertical size={0} wrapItem={false}>
                  <div>{item?.raw?.[labelField.value]}</div>
                  {descField.value && (
                    <div style={{
                      opacity: 0.6,
                    }}
                    >
                      {item?.raw?.[descField.value]}
                    </div>
                  )}
                </NSpace>
              </NSpace>
            )
          }
          else {
            return item?.raw?.[labelField.value]
          }
        }}
        renderTag={({ option, handleClose }): VNodeChild => {
          return props.multiple
            ? (
                <NTag
                  type="primary"
                  size={props.size}
                  closable
                  round
                  onClose={() => {
                    handleClose()
                  }}
                  style={{
                    '--n-padding': '0',
                  }}
                >
                  {renderTag(option, labelField.value, imageField.value, avatarField.value, descField.value)}
                </NTag>
              )
            : renderTag(option, labelField.value, imageField.value, avatarField.value, descField.value)
        }}
      >
        {{
          action: () => {
            if (props.pagination) {
              return (
                <NPagination
                  size="small"
                  v-model:page={pagination.value.page}
                  pageSlot={3}
                  pageCount={pageCount.value}
                  pageSize={pagination.value.pageSize}
                />
              )
            }
            return null
          },
          ...slots,
        }}
      </NSelect>
    )
  },
})

function renderTag(option: Record<string, any>, labelField: string, imageField?: string, avatarField?: string, descField?: string) {
  return (imageField || descField || avatarField)
    ? (
        <NSpace
          align="center"
          size="small"
          style={{
            padding: '6px 0',
          }}
          wrapItem={false}
        >
          {imageField && (
            <NImage src={option?.raw?.[imageField]} objectFit="cover" width={22} height={22} />
          )}
          {avatarField && (
            <NAvatar
              round
              src={option?.raw?.[avatarField] as string || ''}
              size={22}
            >
              {option?.raw?.[labelField]?.charAt?.(0)}
            </NAvatar>
          )}
          <div>
            {option?.raw?.[labelField]}
          </div>
        </NSpace>
      )
    : option?.raw?.[labelField] || ''
}



---
File: /packages/naiveui/src/components/transfer/index.ts
---

export * from './transfer'



---
File: /packages/naiveui/src/components/transfer/transfer.tsx
---

import type { TransferOption, TransferProps } from 'naive-ui'
import { useList } from '@duxweb/dvha-core'
import { useVModel } from '@vueuse/core'
import { NAvatar, NSpin, NTransfer } from 'naive-ui'
import { defineComponent, ref, toRef, watch } from 'vue'

export interface DuxTransferProps extends TransferProps {
  path: string
  params?: Record<string, any>
  value?: Array<string | number>
  labelField?: string
  valueField?: string
  imageField?: string
  descField?: string
}

export const DuxTransfer = defineComponent<DuxTransferProps>({
  name: 'DuxTransfer',
  props: {
    path: String,
    params: {
      type: Object,
    },
    labelField: {
      type: String,
      default: 'name',
    },
    valueField: {
      type: String,
      default: 'id',
    },
    imageField: {
      type: String,
    },
    descField: {
      type: String,
    },
  },
  extends: NTransfer,
  setup(props, { emit }) {
    const model = useVModel(props, 'value', emit, {
      passive: true,
      defaultValue: props.defaultValue || [],
    })

    const path = toRef(props, 'path', '')
    const params = toRef(props, 'params', {})

    const options = ref<TransferOption[]>([])

    const { data, isLoading } = useList({
      path: path.value,
      filters: params.value,
    })

    watch(data, (res) => {
      options.value = res?.value?.data?.map((row) => {
        const item: Record<string, any> = {
          label: row[props.labelField || 'name'],
          value: row[props.valueField || 'id'],
          raw: row,
        }
        return item
      }) || []
    }, {
      immediate: true,
    })

    return () => (
      <div class="w-full">
        <NSpin show={isLoading.value}>
          <NTransfer
            {...props}
            v-model:value={model.value}
            options={options.value}
            renderTargetLabel={({ option }: { option: Record<string, any> }) => {
              if (props.imageField || props.descField) {
                return (
                  <div style={{
                    padding: '0 6px',
                    display: 'flex',
                    alignItems: 'center',
                    gap: '4px',
                  }}
                  >
                    {props.imageField && (
                      <NAvatar round src={option?.raw[props.imageField]} size={32} />
                    )}
                    <div style={{
                      flex: 1,
                      display: 'flex',
                      flexDirection: 'column',
                      justifyContent: 'center',
                    }}
                    >
                      <div>{option?.raw[props.labelField || 'name']}</div>
                      {props.descField && <div style={{ opacity: 0.6 }}>{option?.raw[props.descField || 'desc']}</div>}
                    </div>
                  </div>
                )
              }
              else {
                return option?.raw[props.labelField || 'name']
              }
            }}
          />
        </NSpin>
      </div>
    )
  },
})



---
File: /packages/naiveui/src/components/tree/index.ts
---

export * from './tree'



---
File: /packages/naiveui/src/components/tree/tree.tsx
---

import type { IUseTreeProps } from '@duxweb/dvha-core'
import type { TreeProps } from 'naive-ui'
import type { PropType } from 'vue'
import { useTree } from '@duxweb/dvha-core'
import { useVModel } from '@vueuse/core'
import { NScrollbar, NSpin, NTree } from 'naive-ui'
import { computed, defineComponent, ref, toRef, watch } from 'vue'

export interface DuxTreeProps extends TreeProps {
  path?: string
  params?: Record<string, any>
  height?: string
  value?: Array<string | number> | null
  defaultValue?: Array<string | number> | null
  hookProps?: IUseTreeProps
  onUpdateValue?: (value: valueKey[]) => void
}

type valueKey = string | number

export const DuxTree = defineComponent<DuxTreeProps>({
  name: 'DuxTree',
  props: {
    path: String,
    params: Object as PropType<Record<string, any>>,
    height: String,
    value: Array as PropType<valueKey[]>,
    defaultValue: Array as PropType<valueKey[]>,
    hookProps: Object as PropType<IUseTreeProps>,
  },
  extends: NTree,
  setup(props, { emit }) {
    const params = toRef(props, 'params', {})
    const path = toRef(props, 'path', '')

    const model = useVModel(props, 'value', emit, {
      passive: true,
      deep: true,
      defaultValue: props.defaultValue || [],
    })

    const expanded = ref<valueKey[]>([])

    const { options, loading, expanded: expandedKeys } = useTree({
      path: path.value,
      params: params.value,
      ...props.hookProps,
    })

    watch(expandedKeys, (v) => {
      expanded.value = v as valueKey[]
    })

    const treeProps = computed(() => {
      const { hookProps, height, ...rest } = props
      return rest
    })

    return () => (
      <NSpin
        show={loading.value}
      >
        <NScrollbar style={{
          height: props.height || '300px',
        }}
        >
          <NTree
            {...treeProps.value}
            cascade
            checkable
            defaultExpandAll
            selectable={false}
            expandedKeys={expanded.value}
            onUpdateExpandedKeys={(v) => {
              expanded.value = v
            }}
            data={options.value || []}
            checkedKeys={model.value || []}
            onUpdateCheckedKeys={(v) => {
              model.value = v
              props.onUpdateValue?.(v)
            }}
          >
          </NTree>
        </NScrollbar>
      </NSpin>
    )
  },
})



---
File: /packages/naiveui/src/components/treeSelect/index.ts
---

export * from './treeSelect'



---
File: /packages/naiveui/src/components/treeSelect/treeSelect.tsx
---

import type { IUseTreeProps } from '@duxweb/dvha-core'
import type { TreeSelectProps } from 'naive-ui'
import type { PropType } from 'vue'
import { useTree } from '@duxweb/dvha-core'
import { useVModel } from '@vueuse/core'
import { NTreeSelect } from 'naive-ui'
import { defineComponent, toRef } from 'vue'

interface DuxTreeSelectProps extends TreeSelectProps {
  path?: string
  params?: Record<string, any>
  hookProps?: IUseTreeProps
}

export const DuxTreeSelect = defineComponent<DuxTreeSelectProps>({
  name: 'DuxTreeSelect',
  props: {
    path: String,
    params: Object as PropType<Record<string, any>>,
    hookProps: Object as PropType<IUseTreeProps>,
  },
  extends: NTreeSelect,
  setup(props, { emit }) {
    const params = toRef(props, 'params', {})
    const path = toRef(props, 'path', '')

    const model = useVModel(props, 'value', emit, {
      passive: true,
      deep: true,
      defaultValue: props.defaultValue || [],
    })

    const { options, loading } = useTree({
      path: path.value,
      params: params.value,
      ...props.hookProps,
    })

    return () => (
      <NTreeSelect
        {...props}
        loading={loading.value}
        options={options.value}
        v-model:value={model.value}
      >
      </NTreeSelect>
    )
  },
})



---
File: /packages/naiveui/src/components/index.ts
---

export * from './autoComplete'
export * from './cascader'
export * from './mention'
export * from './select'
export * from './transfer'
export * from './tree'
export * from './treeSelect'



---
File: /packages/naiveui/src/hooks/index.ts
---

export * from './menu'
export * from './tab'
export * from './table'
export * from './upload'



---
File: /packages/naiveui/src/hooks/menu.ts
---

import type { UseMenuProps } from '@duxweb/dvha-core'
import type { MenuOption } from 'naive-ui'
import { arrayToTree, useMenu } from '@duxweb/dvha-core'
import { computed, h } from 'vue'
import { RouterLink } from 'vue-router'

export function useNaiveMenu(props?: UseMenuProps) {
  const menu = useMenu(props)

  const options = computed((): MenuOption[] => {
    const data = menu.getMenu(true).map((item) => {
      return {
        ...item,
        key: item.name,
        icon: item?.icon
          ? () => {
              return h('div', {
                class: `${item.icon} size-5`,
              })
            }
          : undefined,
        labelName: item.label,
        label: () => {
          return item.path
            ? h(
                RouterLink,
                {
                  to: {
                    path: item.path,
                  },
                },
                { default: () => item.label },
              )
            : item.label
        },
      }
    })

    return arrayToTree(data, {
      idKey: 'key',
      parentKey: 'parent',
      childrenKey: 'children',
      sortKey: 'sort',
    }, undefined)
  })

  return {
    options,
    ...menu,
  }
}



---
File: /packages/naiveui/src/hooks/tab.ts
---

import { useTabStore } from '@duxweb/dvha-core'
import { storeToRefs } from 'pinia'
import { computed } from 'vue'
import { useRouter } from 'vue-router'

export function useNaiveTab() {
  const tab = useTabStore()
  const { tabs, current } = storeToRefs(tab)

  const router = useRouter()

  const props = computed(() => {
    return {
      value: current.value,
      defaultValue: current.value || '',
      onClose: (value) => {
        tab.delTab(value, (item) => {
          router.push(item.path || '')
        })
      },
      onUpdateValue: (value) => {
        tab.changeTab(value, (item) => {
          router.push(item.path || '')
        })
      },
    }
  })

  return {
    ...tab,
    tabs,
    current,
    tabsProps: props,
  }
}



---
File: /packages/naiveui/src/hooks/table.tsx
---

import type { UseExtendListProps } from '@duxweb/dvha-core'
import type { DataTableBaseColumn, DataTableExpandColumn, DataTableFilterState, DataTableProps, DataTableRowKey, DataTableSelectionColumn, DataTableSortState, PaginationProps } from 'naive-ui'
import type { ComputedRef, MaybeRef, Ref } from 'vue'
import { treeToArr, useExtendList } from '@duxweb/dvha-core'
import { watchDebounced } from '@vueuse/core'
import { cloneDeep } from 'lodash-es'
import { computed, ref, toRef, watch } from 'vue'

export interface TableColumnExtend {
  show?: boolean
  key?: TableColumnKey
}

export interface TablePagination {
  page: number
  pageSize: number
}

export type TableColumnKey = string | number

export type DataTableColumn = DataTableBaseColumn | DataTableExpandColumn | DataTableSelectionColumn
export type TableColumn = DataTableColumn & TableColumnExtend

export interface UseTableProps extends Omit<UseExtendListProps, 'key'> {
  key?: TableColumnKey
  columns: MaybeRef<TableColumn[]>
  expanded?: boolean
}

export interface UseNaiveTableReturn extends ReturnType<typeof useExtendList> {
  // 表格特有的属性
  tablePagination: ComputedRef<PaginationProps>
  table: ComputedRef<DataTableProps>
  columns: Ref<TableColumn[]>
  columnSelected: ComputedRef<string[]>
  onUpdateColumnSelected: (v: string[]) => void

}

export function useNaiveTable(props: UseTableProps): UseNaiveTableReturn {
  const filters = toRef(props, 'filters', {})
  const sorters = toRef(props, 'sorters', {})
  const tableColumns = toRef(props, 'columns', [])

  const tableFilters = ref<Record<string, any>>({})
  const tableExpanded = ref<DataTableRowKey[]>([])

  const dataFilters = ref<Record<string, any>>({
    ...filters.value,
    ...tableFilters.value,
  })

  watchDebounced([filters, tableFilters], ([filtersValue, tableFiltersValue]) => {
    Object.keys(dataFilters.value).forEach((key) => {
      delete dataFilters.value[key]
    })
    Object.assign(dataFilters.value, filtersValue, tableFiltersValue)
  }, {
    debounce: 300,
    deep: true,
  })

  // 使用 useExtendList
  const extendListResult = useExtendList({
    ...props,
    filters: dataFilters.value,
    sorters: sorters.value,
  })

  // 列处理
  const columns = ref<TableColumn[]>([])

  watch(tableColumns, (v) => {
    columns.value = v as TableColumn[]
  }, {
    immediate: true,
  })

  const columnSelected = computed(() => {
    return columns.value.filter(item => item.show !== false && 'key' in item).map(item => (item as any).key as string)
  })

  const onUpdateColumnSelected = (v: string[]) => {
    const newColumns = cloneDeep(tableColumns.value)?.map((item) => {
      if (!('key' in item) || !item?.key || !('title' in item) || !item?.title) {
        return item
      }
      if (!v.includes((item as any).key as string)) {
        item.show = false
      }
      return item
    })

    columns.value = [...newColumns]
  }

  // 选中处理
  const onUpdateChecked = (keys: DataTableRowKey[]) => {
    extendListResult.checkeds.value = keys as any
  }

  // 排序处理
  const onUpdateSorter = (v: DataTableSortState | DataTableSortState[] | null) => {
    const list = Array.isArray(v) ? v : [v]

    const newSorter: Record<string, 'asc' | 'desc'> = {}
    list?.forEach((item) => {
      if (!item?.columnKey) {
        return
      }
      if (item.order) {
        newSorter[item.columnKey] = item.order === 'ascend' ? 'asc' : 'desc'
      }
    })

    extendListResult.onUpdateSorters(newSorter)
  }

  // 筛选处理
  const onUpdateFilter = (v: DataTableFilterState) => {
    const newTablefilter = { ...tableFilters.value }

    Object.entries(v).forEach(([key, value]) => {
      newTablefilter[key] = value
    })

    tableFilters.value = newTablefilter
  }

  // 展开处理
  const onUpdateExpanded = (v: DataTableRowKey[]) => {
    tableExpanded.value = v
  }

  watch([() => props?.expanded, extendListResult.list], ([expanded, list]) => {
    if (!expanded) {
      return
    }
    tableExpanded.value = treeToArr(list, props.key || 'id', 'children')
  })

  // 分页计算
  const tablePagination = computed(() => {
    return {
      page: extendListResult.page.value,
      pageSize: extendListResult.pageSize.value,
      pageCount: extendListResult.pageCount.value,
      pageSizes: extendListResult.pageSizes,
      pageSlot: 5,
      onUpdatePage: extendListResult.onUpdatePage,
      onUpdatePageSize: extendListResult.onUpdatePageSize,
      showSizePicker: true,
      showQuickJumper: true,
    }
  })

  // 表格属性
  const table = computed<DataTableProps>(() => {
    return {
      remote: true,
      checkedRowKeys: extendListResult.checkeds.value as DataTableRowKey[],
      expandedRowKeys: tableExpanded.value,
      onUpdateCheckedRowKeys: onUpdateChecked,
      onUpdateExpandedRowKeys: onUpdateExpanded,
      onUpdateSorter,
      onUpdateFilters: onUpdateFilter,
      loading: extendListResult.isLoading.value,
      data: extendListResult.list.value,
      columns: columns.value.filter(item => item.show !== false),
    } as DataTableProps
  })

  return {
    ...extendListResult,

    tablePagination,
    table,
    columns,
    columnSelected,
    onUpdateColumnSelected,
  }
}



---
File: /packages/naiveui/src/hooks/upload.ts
---

import type { IUseUploadProps } from '@duxweb/dvha-core'
import type { UploadCustomRequestOptions } from 'naive-ui'
import { useUpload } from '@duxweb/dvha-core'
import { watch } from 'vue'

export function useNaiveUpload(props?: IUseUploadProps) {
  const upload = useUpload(props)

  const activeRequests = new Map<string, {
    onFinish?: () => void
    onError?: () => void
    onProgress?: (event: { percent: number }) => void
  }>()

  watch(
    () => upload.uploadFiles.value,
    (files) => {
      files.forEach((file) => {
        const callbacks = activeRequests.get(file.id)
        if (!callbacks)
          return

        if (file.status === 'uploading' && file.progress && callbacks.onProgress) {
          callbacks.onProgress({
            percent: file.progress.percent || 0,
          })
        }
        else if (file.status === 'success') {
          callbacks.onFinish?.()
          activeRequests.delete(file.id)
        }
        else if (file.status === 'error') {
          callbacks.onError?.()
          activeRequests.delete(file.id)
        }
      })
    },
    { deep: true },
  )

  const request = (options: UploadCustomRequestOptions) => {
    const { file, onFinish, onError, onProgress } = options

    const nativeFile = file.file
    if (!nativeFile) {
      onError?.()
      return
    }

    upload.addFiles([nativeFile], 'file').then(() => {
      const uploadFile = upload.uploadFiles.value.find(f => f.file === nativeFile)
      if (!uploadFile) {
        onError?.()
        return
      }

      activeRequests.set(uploadFile.id, {
        onFinish,
        onError,
        onProgress,
      })

      upload.trigger().catch(() => {
        activeRequests.delete(uploadFile.id)
        onError?.()
      })
    }).catch(() => {
      onError?.()
    })
  }

  return {
    ...upload,
    request,
  }
}



---
File: /packages/naiveui/src/index.ts
---

export * from './components'
export * from './hooks'



---
File: /packages/naiveui/.gitignore
---

# See https://help.github.com/articles/ignoring-files/ for more about ignoring files.

# Dependencies
node_modules
.pnp
.pnp.js

# Local env files
.env
.env.local
.env.development.local
.env.test.local
.env.production.local

# Testing
coverage

# Turbo
.turbo

# Vercel
.vercel

# Build Outputs
.next/
out/
build
dist


# Debug
npm-debug.log*
yarn-debug.log*
yarn-error.log*

# Misc
.DS_Store
*.pem



---
File: /packages/naiveui/CHANGELOG.md
---

# @duxweb/dvha-naiveui

## 1.0.34

## 1.0.33

## 1.0.32

### Patch Changes

- fix: 修正部分显示问题

## 1.0.31

## 1.0.30

## 1.0.29

## 1.0.28

## 1.0.27

## 1.0.26

## 1.0.25

## 1.0.24

## 1.0.23

## 1.0.22

## 1.0.21

## 1.0.20

## 1.0.19

### Patch Changes

- feat(pro): 增加上传驱动全局配置
  feat(pro): 修改表单页面组件为居中布局
  feat(pro): 增加图标选择器
  feat(pro): 增加空列表状态页
  feat(pro): 增加空页面状态
  feat(pro): 增加列表筛选组件布局
  deat(pro): 增加侧栏面板的页面样式
  fix(pro): 修正dvha pro popover 背景透明度
  fix(pro): 修改筛选器为 modal 弹窗
  fix(core): 修正无限列表与普通列表的 key

## 1.0.18

## 1.0.17

## 1.0.16

### Patch Changes

- feat: 增加 data 的 apiBasePath 参数

## 1.0.15

## 1.0.14

## 1.0.13

### Patch Changes

- feat: 封装常用异步组件

## 1.0.12

### Patch Changes

- Updated dependencies
  - @duxweb/dvha-core@0.1.23

## 1.0.11

### Patch Changes

- feat: 增加pro版本示例
  fix: 修正部分细节问题
  chore: 更换工具链为 PNPM
- Updated dependencies
  - @duxweb/dvha-core@0.1.22

## 1.0.10

### Patch Changes

- test: 测试版本号

## 1.0.9

### Patch Changes

- test: 测试版本号更正

## 1.0.8

### Patch Changes

- chore: 修改版本依赖

## 1.0.7

### Patch Changes

- chore: 优化tabhook

## 1.0.6

### Patch Changes

- Updated dependencies
  - @duxweb/dvha-core@0.1.21

## 1.0.5

### Patch Changes

- fix: 修正useData 提交重置数据
  chore: 优化弹出层的无障碍访问,优化 i18n 的异常隐藏

## 1.0.4

### Patch Changes

- feat(theme): 增加手动主题切换
  chore(data): 优化数据获取抖动
  feat(export): 增加导出进度监听,增加 maxPage 回调配置
  feat(naiveui): 增加表格增强 hook

## 1.0.3

### Patch Changes

- change: 更换许可协议为 MIT

## 1.0.2

### Patch Changes

- 优化版本依赖为最新版核心,修正 pnpm 下的依赖关系

## 1.0.1

### Patch Changes

- fix: 修正简单授权的方法获取
- Updated dependencies
  - @duxweb/dvha-core@0.1.1

## 1.0.0

### Patch Changes

- Updated dependencies
  - @duxweb/dvha-core@0.1.0

## 0.0.6

### Patch Changes

- fix: 修正编译脚本

## 0.0.5

### Patch Changes

- chore: 更新依赖和编译

## 0.0.4

### Patch Changes

- update base releases

## 0.0.3

### Patch Changes

- fix: 更新内部依赖
- Updated dependencies
  - @duxweb/dvha-core@0.0.3

## 0.0.2

### Patch Changes

- init
- Updated dependencies
  - @duxweb/dvha-core@0.0.2



---
File: /packages/naiveui/LICENSE
---

                   GNU LESSER GENERAL PUBLIC LICENSE
                       Version 3, 29 June 2007

 Copyright (C) 2007 Free Software Foundation, Inc. <http://fsf.org/>
 Everyone is permitted to copy and distribute verbatim copies
 of this license document, but changing it is not allowed.


  This version of the GNU Lesser General Public License incorporates
the terms and conditions of version 3 of the GNU General Public
License, supplemented by the additional permissions listed below.

  0. Additional Definitions.

  As used herein, "this License" refers to version 3 of the GNU Lesser
General Public License, and the "GNU GPL" refers to version 3 of the GNU
General Public License.

  "The Library" refers to a covered work governed by this License,
other than an Application or a Combined Work as defined below.

  An "Application" is any work that makes use of an interface provided
by the Library, but which is not otherwise based on the Library.
Defining a subclass of a class defined by the Library is deemed a mode
of using an interface provided by the Library.

  A "Combined Work" is a work produced by combining or linking an
Application with the Library.  The particular version of the Library
with which the Combined Work was made is also called the "Linked
Version".

  The "Minimal Corresponding Source" for a Combined Work means the
Corresponding Source for the Combined Work, excluding any source code
for portions of the Combined Work that, considered in isolation, are
based on the Application, and not on the Linked Version.

  The "Corresponding Application Code" for a Combined Work means the
object code and/or source code for the Application, including any data
and utility programs needed for reproducing the Combined Work from the
Application, but excluding the System Libraries of the Combined Work.

  1. Exception to Section 3 of the GNU GPL.

  You may convey a covered work under sections 3 and 4 of this License
without being bound by section 3 of the GNU GPL.

  2. Conveying Modified Versions.

  If you modify a copy of the Library, and, in your modifications, a
facility refers to a function or data to be supplied by an Application
that uses the facility (other than as an argument passed when the
facility is invoked), then you may convey a copy of the modified
version:

   a) under this License, provided that you make a good faith effort to
   ensure that, in the event an Application does not supply the
   function or data, the facility still operates, and performs
   whatever part of its purpose remains meaningful, or

   b) under the GNU GPL, with none of the additional permissions of
   this License applicable to that copy.

  3. Object Code Incorporating Material from Library Header Files.

  The object code form of an Application may incorporate material from
a header file that is part of the Library.  You may convey such object
code under terms of your choice, provided that, if the incorporated
material is not limited to numerical parameters, data structure
layouts and accessors, or small macros, inline functions and templates
(ten or fewer lines in length), you do both of the following:

   a) Give prominent notice with each copy of the object code that the
   Library is used in it and that the Library and its use are
   covered by this License.

   b) Accompany the object code with a copy of the GNU GPL and this license
   document.

  4. Combined Works.

  You may convey a Combined Work under terms of your choice that,
taken together, effectively do not restrict modification of the
portions of the Library contained in the Combined Work and reverse
engineering for debugging such modifications, if you also do each of
the following:

   a) Give prominent notice with each copy of the Combined Work that
   the Library is used in it and that the Library and its use are
   covered by this License.

   b) Accompany the Combined Work with a copy of the GNU GPL and this license
   document.

   c) For a Combined Work that displays copyright notices during
   execution, include the copyright notice for the Library among
   these notices, as well as a reference directing the user to the
   copies of the GNU GPL and this license document.

   d) Do one of the following:

       0) Convey the Minimal Corresponding Source under the terms of this
       License, and the Corresponding Application Code in a form
       suitable for, and under terms that permit, the user to
       recombine or relink the Application with a modified version of
       the Linked Version to produce a modified Combined Work, in the
       manner specified by section 6 of the GNU GPL for conveying
       Corresponding Source.

       1) Use a suitable shared library mechanism for linking with the
       Library.  A suitable mechanism is one that (a) uses at run time
       a copy of the Library already present on the user's computer
       system, and (b) will operate properly with a modified version
       of the Library that is interface-compatible with the Linked
       Version.

   e) Provide Installation Information, but only if you would otherwise
   be required to provide such information under section 6 of the
   GNU GPL, and only to the extent that such information is
   necessary to install and execute a modified version of the
   Combined Work produced by recombining or relinking the
   Application with a modified version of the Linked Version. (If
   you use option 4d0, the Installation Information must accompany
   the Minimal Corresponding Source and Corresponding Application
   Code. If you use option 4d1, you must provide the Installation
   Information in the manner specified by section 6 of the GNU GPL
   for conveying Corresponding Source.)

  5. Combined Libraries.

  You may place library facilities that are a work based on the
Library side by side in a single library together with other library
facilities that are not Applications and are not covered by this
License, and convey such a combined library under terms of your
choice, if you do both of the following:

   a) Accompany the combined library with a copy of the same work based
   on the Library, uncombined with any other library facilities,
   conveyed under the terms of this License.

   b) Give prominent notice with the combined library that part of it
   is a work based on the Library, and explaining where to find the
   accompanying uncombined form of the same work.

  6. Revised Versions of the GNU Lesser General Public License.

  The Free Software Foundation may publish revised and/or new versions
of the GNU Lesser General Public License from time to time. Such new
versions will be similar in spirit to the present version, but may
differ in detail to address new problems or concerns.

  Each version is given a distinguishing version number. If the
Library as you received it specifies that a certain numbered version
of the GNU Lesser General Public License "or any later version"
applies to it, you have the option of following the terms and
conditions either of that published version or of any later version
published by the Free Software Foundation. If the Library as you
received it does not specify a version number of the GNU Lesser
General Public License, you may choose any version of the GNU Lesser
General Public License ever published by the Free Software Foundation.

  If the Library as you received it specifies that a proxy can decide
whether future versions of the GNU Lesser General Public License shall
apply, that proxy's public statement of acceptance of any version is
permanent authorization for you to choose that version for the
Library.


---
File: /packages/naiveui/package.json
---

{
  "name": "@duxweb/dvha-naiveui",
  "type": "module",
  "version": "1.0.34",
  "author": "DuxWeb",
  "license": "MIT",
  "exports": {
    ".": {
      "dvha:development": {
        "types": "./src/index.ts",
        "import": "./src/index.ts"
      },
      "types": "./dist/types/index.d.ts",
      "import": "./dist/esm/index.js",
      "require": "./dist/cjs/index.cjs"
    }
  },
  "main": "dist/cjs/index.cjs",
  "module": "dist/esm/index.js",
  "types": "dist/types/index.d.ts",
  "files": [
    "LICENSE",
    "README.md",
    "dist"
  ],
  "scripts": {
    "clean": "rimraf dist",
    "build": "pnpm run clean && vue-tsc --noEmit && vite build && pnpm run build:types",
    "build:types": "vue-tsc --declaration --emitDeclarationOnly --outDir dist/types",
    "lint": "eslint .",
    "lint:fix": "eslint . --fix"
  },
  "dependencies": {
    "tslib": "^2.8.1"
  },
  "devDependencies": {
    "@duxweb/dvha-core": "workspace:*",
    "@vueuse/core": "^13.3.0",
    "lodash-es": "^4.17.21",
    "naive-ui": "^2.42.0",
    "pinia": "^3.0.3",
    "vue": "^3.5.0",
    "vue-router": "^4.5.1"
  }
}



---
File: /packages/naiveui/README.md
---




---
File: /packages/naiveui/tsconfig.json
---

{
  "compilerOptions": {
    "target": "ESNext",
    "jsx": "preserve",
    "jsxImportSource": "vue",
    "lib": [
      "ESNext",
      "DOM"
    ],
    "moduleDetection": "force",
    "useDefineForClassFields": true,
    "baseUrl": ".",
    "rootDir": "src",
    "module": "ESNext",
    "moduleResolution": "bundler",
    "resolveJsonModule": true,
    "allowJs": true,
    "strict": true,
    "noFallthroughCasesInSwitch": true,
    "noImplicitAny": false,
    "noUnusedLocals": true,
    "noUnusedParameters": true,
    "declaration": true,
    "importHelpers": true,
    "noEmit": false,
    "outDir": "dist",
    "allowSyntheticDefaultImports": true,
    "esModuleInterop": true,
    "isolatedModules": true,
    "skipLibCheck": true
  },
  "include": [
    "src/**/*.ts",
    "src/**/*.tsx",
    "src/**/*.vue"
  ],
  "exclude": [
    "node_modules",
    "dist"
  ]
}



---
File: /packages/naiveui/vite.config.ts
---

import { definePackageConfig } from '../../config/vite.config.build'

export default definePackageConfig(__dirname)



---
File: /packages/pro/src/components/card/card.tsx
---

import type { PropType } from 'vue'
import { computed, defineComponent } from 'vue'

export const DuxCard = defineComponent({
  name: 'DuxCard',
  props: {
    size: {
      type: String as PropType<'none' | 'small' | 'medium' | 'large'>,
      default: 'none',
    },
    headerSize: {
      type: String as PropType<'none' | 'small' | 'medium' | 'large'>,
      default: 'medium',
    },
    footerSize: {
      type: String as PropType<'none' | 'small' | 'medium' | 'large'>,
      default: 'medium',
    },
    contentSize: {
      type: String as PropType<'none' | 'small' | 'medium' | 'large'>,
      default: 'medium',
    },
    divide: {
      type: Boolean,
      default: false,
    },
    headerClass: {
      type: String,
      default: '',
    },
    footerClass: {
      type: String,
      default: '',
    },
    contentClass: {
      type: String,
      default: '',
    },
    title: {
      type: String,
      default: '',
    },
    description: {
      type: String,
      default: '',
    },
    bordered: {
      type: Boolean,
      default: false,
    },
    shadow: {
      type: Boolean,
      default: true,
    },
    headerBordered: {
      type: Boolean,
      default: false,
    },
    footerBordered: {
      type: Boolean,
      default: false,
    },
    type: {
      type: String as PropType<'default' | 'elevated' | 'inverted'>,
      default: 'default',
    },
  },
  setup(props, { slots }) {
    const computedSize = (size: string) => {
      switch (size) {
        case 'small':
          return 'px-3 py-2'
        case 'large':
          return 'px-6 py-5'
        case 'medium':
          return 'px-4 py-3'
        case 'none':
        default:
          return ''
      }
    }

    const sizeClass = computed(() => {
      return computedSize(props.size)
    })
    const headerSizeClass = computed(() => {
      return computedSize(props.headerSize)
    })
    const footerSizeClass = computed(() => {
      return computedSize(props.footerSize)
    })
    const contentSizeClass = computed(() => {
      return computedSize(props.contentSize)
    })

    const typeClass = computed(() => {
      switch (props.type) {
        case 'elevated':
          return 'bg-elevated'
        case 'inverted':
          return 'bg-inverted'
        default:
          return 'bg-default dark:bg-muted'
      }
    })

    return () => (
      <div class={[
        'rounded  flex flex-col dark:border dark:border-muted',
        props.divide && 'divide-y divide-muted',
        props.shadow && 'shadow-xs',
        props.bordered && 'border border-muted',
        typeClass.value,
        sizeClass.value,
      ]}
      >
        {slots.header
          && (
            <div class={[
              headerSizeClass.value,
              props.headerClass,
              props.headerBordered || props.divide ? 'border-b border-muted' : 'pb-0',
            ]}
            >
              {slots.header?.()}
            </div>
          )}

        {props.title && (
          <div class={[
            'flex justify-between items-center',
            headerSizeClass.value,
            props.headerBordered || props.divide ? 'border-b border-muted' : 'pb-0',
            props.headerClass,
          ]}
          >
            <div class="flex flex-col">
              <div class="text-base">
                {props.title}
              </div>
              {props.description && (
                <div class="text-sm text-muted">
                  {props.description}
                </div>
              )}
            </div>
            {slots.headerExtra?.()}
          </div>
        )}
        <div class={['flex-1 min-h-0', (props.title || slots.header || slots.footer) && contentSizeClass.value, props.contentClass]}>
          {slots.default?.()}
        </div>
        {slots.footer && (
          <div class={[footerSizeClass.value, props.footerClass, props.footerBordered && 'border-t border-muted']}>
            {slots.footer?.()}
          </div>
        )}
      </div>
    )
  },
})



---
File: /packages/pro/src/components/card/index.ts
---

export * from './card'
export * from './store'



---
File: /packages/pro/src/components/card/store.tsx
---

import { defineComponent } from 'vue'
import { DuxMedia } from '../media'
import { DuxCard } from './card'

export const DuxStatsStore = defineComponent({
  name: 'DuxStatsStore',
  props: {
    title: String,
    avatar: String,
    desc: String,
  },
  setup(props, { slots }) {
    return () => (
      <DuxCard divide footerSize="small">
        {{
          header: () => (
            <div class="flex gap-2 items-center">
              <DuxMedia class="flex-1" avatar imageHeight={46} imageWidth={46} image={props.avatar} title={props.title} desc={props.desc} />
              <div>
                {slots.extra?.()}
              </div>
            </div>
          ),
          default: () => (
            <div class="flex flex-col">

              {slots.header
                ? (
                    <div class="flex flex-col bg-muted rounded p-4 text-muted">
                      {slots.header?.()}
                    </div>
                  )
                : null}

              <div class="grid grid-cols-[repeat(auto-fit,minmax(100px,1fr))] gap-2 pt-2">
                {slots.default?.()}
              </div>
            </div>
          ),
          footer: slots.footer,
        }}
      </DuxCard>
    )
  },
})

export const DuxStatsStoreItem = defineComponent({
  name: 'DuxStatsStoreItem',
  props: {
    label: String,
    value: String,
  },
  setup(props) {
    return () => (
      <div class="flex flex-col items-center justify-center">
        <div class="text-lg font-bold">{props.value}</div>
        <div class="text-sm text-muted">{props.label}</div>
      </div>
    )
  },
})



---
File: /packages/pro/src/components/carousel/carousel.tsx
---

import type { PropType } from 'vue'
import { NCarousel } from 'naive-ui'
import { defineComponent } from 'vue'

export interface DuxCarouselData {
  src: string
  onClick: () => void
}

export const DuxCarousel = defineComponent({
  name: 'DuxCarousel',
  props: {
    height: {
      type: Number,
      default: 200,
    },
    data: Array as PropType<Array<DuxCarouselData | string>>,
  },
  setup(props) {
    return () => (
      <NCarousel
        draggable
        class="rounded-sm shadow-sm"
        style={{ height: `${props.height}px` }}
      >
        {props?.data?.map((item, key) => (
          <img
            key={key}
            class="w-full object-cover"
            style={{ height: `${props.height}px` }}
            src={typeof item === 'string' ? item : item.src}
            onClick={typeof item === 'string' ? undefined : item?.onClick}
          />
        ))}
      </NCarousel>
    )
  },
})



---
File: /packages/pro/src/components/carousel/index.ts
---

export * from './carousel'



---
File: /packages/pro/src/components/chart/echart.tsx
---

import { computed, defineComponent } from 'vue'
import VChart from 'vue-echarts'
import { useEchartType } from '../../hooks'

export const DuxChart = defineComponent({
  name: 'DuxChart',
  props: {
    height: {
      type: String,
      default: '50px',
    },
    min: {
      type: Boolean,
      default: false,
    },
    type: {
      type: String,
      default: 'bar',
    },
    option: {
      type: Object,
      default: {},
    },
    class: {
      type: String,
      default: '',
    },
  },
  extends: VChart,
  setup(props) {
    const chartProps = computed(() => {
      const { min, height, option, ...rest } = props
      return rest
    })

    const { option: chartOption } = useEchartType(props.type, {
      min: props.min,
      ...props.option,
    })

    return () => (
      <VChart
        style={{
          minHeight: props.height,
        }}
        {...chartProps.value}
        option={chartOption.value}
        autoresize
        theme="default"
        initOptions={{ renderer: 'svg' }}
      />
    )
  },
})



---
File: /packages/pro/src/components/chart/index.ts
---

export * from './echart'



---
File: /packages/pro/src/components/code/code.tsx
---

import { useTheme } from '@duxweb/dvha-core'
import { useVModel } from '@vueuse/core'
import { defineComponent } from 'vue'
import { VAceEditor } from 'vue3-ace-editor'
import 'ace-builds/src-noconflict/mode-vue'
import 'ace-builds/src-noconflict/mode-javascript'
import 'ace-builds/src-noconflict/mode-html'
import 'ace-builds/src-noconflict/mode-json'
import 'ace-builds/src-noconflict/mode-json5'
import 'ace-builds/src-noconflict/theme-tomorrow_night'
import 'ace-builds/src-noconflict/theme-tomorrow'
import 'ace-builds/src-noconflict/ext-searchbox'
import 'ace-builds/src-noconflict/ext-language_tools'
import 'ace-builds/src-noconflict/mode-snippets'

export const DuxCodeEditor = defineComponent({
  name: 'DuxCodeEditor',
  props: {
    defaultValue: {
      type: String,
      default: '',
    },
    value: {
      type: String,
      default: '',
    },
    lang: {
      type: String,
      default: 'json',
    },
    readonly: Boolean,
  },
  setup(props, { emit }) {
    const data = useVModel(props, 'value', emit, {
      passive: true,
      defaultValue: props.defaultValue || '',
    })
    const theme = useTheme()
    return () => (
      <div class="border border-muted">
        <VAceEditor readonly={props.readonly} theme={theme.isDark.value ? 'tomorrow_night' : 'tomorrow'} v-model:value={data.value} value={data.value} lang={props.lang || 'json'} class="h-60" />
      </div>
    )
  },
})



---
File: /packages/pro/src/components/code/index.ts
---

export * from './code'



---
File: /packages/pro/src/components/crop/imageCrop.tsx
---

import { useManage, useUpload } from '@duxweb/dvha-core'
import { useI18n } from '@duxweb/dvha-core'
import { useVModel } from '@vueuse/core'
import { useMessage } from 'naive-ui'
import { defineComponent } from 'vue'
import { useModal } from '../../hooks'
import { DuxAvatar } from '../widget'

export const DuxImageCrop = defineComponent({
  name: 'DuxImageCrop',
  props: {
    defaultValue: {
      type: String,
      default: '',
    },
    value: {
      type: String,
      default: '',
    },
    path: {
      type: String,
      default: '',
    },
    circle: {
      type: Boolean,
      default: true,
    },
  },
  setup(props, { emit }) {
    const { t } = useI18n()
    const data = useVModel(props, 'value', emit, {
      passive: true,
      defaultValue: props.defaultValue || '',
    })
    const { config } = useManage()
    const modal = useModal()
    const message = useMessage()
    const upload = useUpload({
      path: props.path || config.apiPath?.upload || 'upload',
      params: {
        mime: 'image/png',
      },
      autoUpload: true,
      onSuccess: (res) => {
        data.value = res.data?.url
        message.success(t('components.upload.success') as string)
      },
      onError: (error) => {
        message.error(error.message || (t('components.upload.failed') as string))
      },
    })
    return () => (
      <div
        class={[
          'relative size-80px overflow-hidden group',
          props.circle && 'rounded-full',
        ]}
        onClick={() => {
          modal.show({
            component: () => import('./imageCropModal').then(m => m.DuxImageCropModal),
            componentProps: {
              value: data.value,
              onConfirm: (value: string) => {
                data.value = value
              },
            },
          })?.then?.((file) => {
            if (!file) {
              return
            }
            file.name = 'image.png'
            file.mime = 'image/png'
            upload.addFiles([file], 'blob')
          }).catch(() => {
          })
        }}
      >
        <DuxAvatar src={data.value} circle={props.circle} size={80} />
        <div class="absolute size-full bg-gray-900/30 items-center justify-center inset-0 cursor-pointer hidden z-1 group-hover:flex">
          <div class="i-tabler:pencil size-4 text-white/90"></div>
        </div>
      </div>
    )
  },
})



---
File: /packages/pro/src/components/crop/imageCropModal.tsx
---

import { useI18n } from '@duxweb/dvha-core'
import { useFileDialog } from '@vueuse/core'
import { NButton } from 'naive-ui'
import { defineComponent, ref, watch } from 'vue'
import { VueCropper } from 'vue-cropper'
import { DuxModalPage } from '../modal'

export const DuxImageCropModal = defineComponent({
  props: {
    value: String,
    onConfirm: Function,
  },
  setup(props) {
    const { t } = useI18n()
    const cropper = ref<any>()

    const value = ref(props.value || '')

    const { open, files } = useFileDialog({
      accept: 'image/*',
    })

    watch(files, (files) => {
      if (files && files.length > 0) {
        const file = files[0]
        const blob = new Blob([file], { type: file.type })
        value.value = URL.createObjectURL(blob)
      }
    })

    const onSelect = () => {
      open()
    }

    return () => (
      <DuxModalPage title={t('components.crop.title')}>
        {{
          default: () => (
            <div class="h-100">
              <VueCropper
                ref={cropper}
                img={value.value}
                autoCrop={true}
                centerBox={true}
                canMove={false}
                fixed={true}
                outputType="png"
                mode="contain"
              >
              </VueCropper>
            </div>
          ),
          footer: () => (
            <div class="flex-1 flex justify-between items-center">
              <div class="flex items-center gap-2">
                <NButton
                  type="primary"
                  secondary
                  onClick={() => {
                    onSelect()
                  }}
                >
                  {t('components.crop.select')}
                </NButton>

                <NButton
                  secondary
                  onClick={() => {
                    cropper.value.changeScale(1)
                  }}
                >
                  <div class="i-tabler:zoom-in"></div>
                </NButton>

                <NButton
                  secondary
                  onClick={() => {
                    cropper.value.changeScale(-1)
                  }}
                >
                  <div class="i-tabler:zoom-out"></div>
                </NButton>

                <NButton
                  secondary
                  onClick={() => {
                    cropper.value.rotateLeft()
                  }}
                >
                  <div class="i-tabler:rotate"></div>
                </NButton>

                <NButton
                  secondary
                  onClick={() => {
                    cropper.value.rotateRight()
                  }}
                >
                  <div class="i-tabler:rotate-clockwise"></div>
                </NButton>
              </div>

              <NButton
                type="primary"
                onClick={() => {
                  cropper.value.getCropBlob((data) => {
                    props.onConfirm?.(data)
                  })
                }}
              >
                {t('components.crop.confirm')}
              </NButton>
            </div>
          ),
        }}
      </DuxModalPage>
    )
  },
})



---
File: /packages/pro/src/components/crop/index.ts
---

export * from './imageCrop'
export * from './imageCropModal'



---
File: /packages/pro/src/components/dashboard/hello.tsx
---

import type { PropType } from 'vue'
import { defineComponent } from 'vue'

interface DuxDashboardHelloData {
  label: string
  value?: string
  onClick?: () => void
}

export const DuxDashboardHello = defineComponent({
  name: 'DuxDashboardHello',
  props: {
    title: String,
    desc: String,
    data: Array as PropType<Array<DuxDashboardHelloData>>,
  },
  setup(props) {
    return () => (
      <div class="rounded p-6 py-5 flex flex-col md:flex-row gap-4 items-center justify-between bg-primary text-sm text-white overflow-hidden relative border border-primary-6">
        <div class="flex flex-1 flex-col gap-1 text-center md:text-left">
          <div class="text-lg">
            {props.title}
          </div>
          <div class="opacity-70">
            {props.desc}
          </div>
        </div>
        <div class="flex justify-end divide-x divide-white/20">
          {props.data?.map((item, key) => (
            <div key={key} class="flex flex-col justify-center items-center px-4">
              <div>{item.label}</div>
              <div class="text-lg font-bold" onClick={item?.onClick}>
                {item.value || 0}
              </div>
            </div>
          ))}
        </div>

        <div class="absolute top-7 -right-20 rounded-full size-40 bg-white/8"></div>
        <div class="absolute top-0 -right-20 rounded-full size-50 bg-white/8"></div>
        <div class="absolute -top-7 -right-18 rounded-full size-60 bg-white/8"></div>
      </div>
    )
  },
})



---
File: /packages/pro/src/components/dashboard/helloBig.tsx
---

import type { ButtonProps } from 'naive-ui'
import type { PropType } from 'vue'
import clsx from 'clsx'
import { load } from 'jinrishici'
import { defineComponent, onMounted, ref } from 'vue'
import { DuxCard } from '../card'

interface DuxDashboardHelloBigData {
  label: string
  value?: string
  icon?: string
  color?: ButtonProps['type']
  onClick?: () => void
}

export const DuxDashboardHelloBig = defineComponent({
  name: 'DuxDashboardHelloBig',
  props: {
    title: String,
    desc: String,
    data: Array as PropType<Array<DuxDashboardHelloBigData>>,
  },
  setup(props) {
    const desc = ref(props.desc)

    onMounted(() => {
      if (props.desc)
        return
      load((result) => {
        desc.value = result.data.content
      })
    })

    return () => (
      <DuxCard>
        <div class="transition-all flex justify-between items-center overflow-hidden">
          <div class="flex flex-col gap-2 md:gap-4 p-6 md:p-10">
            <div class="text-xl font-bold">
              {props.title}
            </div>
            <div class="text-muted text-sm">
              {desc.value}
            </div>
            <div class="flex gap-4 text-sm text-muted flex-warp whitespace-nowrap">
              {props.data?.map((item, key) => (
                <div class="flex gap-1 items-center" key={key}>
                  <div class={clsx([
                    'text-primary',
                    item.color ? `text-${item.color}` : 'text-primary',
                    item.icon,
                  ])}
                  />
                  <div>{item.label}</div>
                  <div>
                    (
                    {item.value || '0'}
                    )
                  </div>
                </div>
              ))}
            </div>
          </div>
          <div class="pt-6 items-end hidden md:flex">
            <svg class="w-70 h-40" xmlns="http://www.w3.org/2000/svg" data-name="Layer 1" width="751.15479" height="558.14695" viewBox="0 0 751.15479 558.14695">
              <path d="M865.65741,724.88374c7.97-18.67,13.59-38.99,10.93-59.1a65.244,65.244,0,0,0-5.88-19.65,59.55844,59.55844,0,0,0-9.22-13.93,8.35,8.35,0,0,0-10.57-1.7c-.26.15-.52.31-.76.48a8.751,8.751,0,0,0-2.97,3.63,6.28289,6.28289,0,0,0-.31.86005,8.93814,8.93814,0,0,0-.29,3.79,95.57036,95.57036,0,0,1-.9,31.11q-.765,3.915-1.87,7.76a77.51261,77.51261,0,0,0-5.27-5.93,65.32224,65.32224,0,0,0-16.45-12.12h-.01c-.03-.02-.05-.03-.08-.05-7.38-3.76-17.22-2.2-22.97.36-.38.16-.74.34-1.09.51-3,1.54-4.49,3.31-3.21,4.47.29.25.58.51.85.77a95.69757,95.69757,0,0,1,21.06,28.34v.01a93.30453,93.30453,0,0,1,5.21,13.16c1.93,6.23,3.53,13.14,7.3,18.22a16.379,16.379,0,0,0,1.25,1.53l33.68-.27c.08-.04.15-.07.23-.11l1.34.05c-.05-.24-.11005-.48-.17-.72v-.02c-.03-.13-.07-.27-.1-.39-.03-.1-.05-.19-.07-.27.06-.15.12-.29.19-.44C865.55737,725.11372,865.60742,725.00374,865.65741,724.88374Z" transform="translate(-224.42261 -170.92653)" fill="rgba(var(--ui-color-gray-300))" />
              <path d="M865.48737,726.33375a.44053.44053,0,0,1-.69.3,18.26524,18.26524,0,0,0-4.51-2.39c-.01-.01-.01,0-.01,0a37.984,37.984,0,0,0-6.24-1.66c-.02,0-.03-.01-.05-.01-.86-.17-1.72-.32-2.58-.48-4.18-.77-8.43-1.7-12.05-4.08a12.2766,12.2766,0,0,1-5.63-8.33c-.53-3.35.13995-6.72.42-10.06.02-.24.04-.49.05-.73.02-.31.03-.61.03-.91a19.40059,19.40059,0,0,0-1.78-8.8,34.90484,34.90484,0,0,0-6.36-8.94q-1.995-2.145-4.16-4.13h-.01c-.06-.06-.11005-.11-.17-.16,0-.01-.01-.02-.02-.03a81.07415,81.07415,0,0,0-20.75-13.7c-.27-.12006-.55005-.25-.83-.37006-.73-.32995-1.46-.63995-2.2-.94995.35-.17.71-.35,1.09-.51a82.98906,82.98906,0,0,1,23.09,14.66c.23.2.46.41.68.62q2.59506,2.40006,4.94,5.03a32.50591,32.50591,0,0,1,5.99,9.16,20.41207,20.41207,0,0,1,1.39,8.58c-.02.56-.06,1.12-.11,1.69-.31,3.37-1,6.85-.23,10.22.88,3.84,3.86,6.52,7.32,8.16a31.63562,31.63562,0,0,0,7.16,2.22c5.1,1.07,10.37,1.59,14.83,4.33h.01c.06995.05.14.09.19995.13.01,0,.01,0,.01.01a9.48583,9.48583,0,0,1,.93.63c.02.01.04.03.06.04a.57133.57133,0,0,1,.08.07A.44417.44417,0,0,1,865.48737,726.33375Z" transform="translate(-224.42261 -170.92653)" fill="rgba(var(--ui-color-gray-100))" />
              <path d="M822.54456,676.01669a12.20505,12.20505,0,0,0-.4048-15.79909c-.39207-.43523-1.08681.15359-.69422.58939a11.30162,11.30162,0,0,1,.34651,14.69723c-.3699.45429.38472.96417.75251.51247Z" transform="translate(-224.42261 -170.92653)" fill="rgba(var(--ui-color-gray-100))" />
              <path d="M834.51715,697.953a23.52427,23.52427,0,0,1-16.57968-4.36164c-.47343-.34593-.98534.407-.51248.75251a24.46876,24.46876,0,0,0,17.26189,4.50361c.58286-.06946.41-.96357-.16973-.89448Z" transform="translate(-224.42261 -170.92653)" fill="rgba(var(--ui-color-gray-100))" />
              <path d="M801.03741,662.11372c-.02.04-.04.07-.06.11005a7.76357,7.76357,0,0,1-5.39,3.92c-.27-.26-.56-.52-.85-.77a.33369.33369,0,0,1,.15-.05,6.90857,6.90857,0,0,0,5.26-3.47c.05-.07995.1-.17.14-.25a.45106.45106,0,0,1,.63-.12A.46977.46977,0,0,1,801.03741,662.11372Z" transform="translate(-224.42261 -170.92653)" fill="rgba(var(--ui-color-gray-100))" />
              <path d="M297.68366,176.36968a67.89449,67.89449,0,0,0-67.8179,67.8179V504.08739a67.8945,67.8945,0,0,0,67.8179,67.8179H902.31634a67.8945,67.8945,0,0,0,67.8179-67.8179V244.18758a67.89449,67.89449,0,0,0-67.8179-67.8179Z" transform="translate(-224.42261 -170.92653)" fill="rgba(var(--ui-color-gray-100))" style="isolation:isolate" />
              <path d="M902.31634,577.34844H297.68366a73.3436,73.3436,0,0,1-73.261-73.261V244.18758a73.3436,73.3436,0,0,1,73.261-73.261H902.31634a73.3436,73.3436,0,0,1,73.26105,73.261V504.08739A73.3436,73.3436,0,0,1,902.31634,577.34844ZM297.68366,181.81283a62.44539,62.44539,0,0,0-62.37475,62.37475V504.08739a62.44539,62.44539,0,0,0,62.37475,62.37475H902.31634a62.44539,62.44539,0,0,0,62.37475-62.37475V244.18758a62.44539,62.44539,0,0,0-62.37475-62.37475Z" transform="translate(-224.42261 -170.92653)" fill="rgba(var(--ui-color-gray-300))" style="isolation:isolate" />
              <path d="M601.62347,230.17926H314.08a23.19146,23.19146,0,0,0-23.15155,23.15155v129.6921a21.81835,21.81835,0,0,0,.38106,4.10053c.09069.61682.23588,1.2156.38095,1.81438A23.22593,23.22593,0,0,0,314.08,406.17446H601.62347c.47175,0,.94351-.01816,1.39711-.05448h.32657v-.01816a1.38119,1.38119,0,0,0,.2722-.018c.0907,0,.19956-.01816.29026-.01816a.16309.16309,0,0,0,.09069-.01817c.19956-.01816.39923-.03632.58062-.05448.32658-.05438.65315-.0907.96168-.14507a.308.308,0,0,1,.12691-.01816.35874.35874,0,0,1,.1815-.03633.0666.0666,0,0,1,.05437-.01816c.19967-.03621.39923-.07253.59878-.127a2.0948,2.0948,0,0,0,.32658-.07253c.39922-.0907.79833-.1814,1.17939-.30842.1814-.05448.34474-.0907.52613-.14518.23588-.07254.48992-.16334.7258-.254a2.86042,2.86042,0,0,0,.3629-.127.09422.09422,0,0,0,.07253-.03621,16.2231,16.2231,0,0,0,1.54219-.6351c.43554-.19956.85281-.41728,1.27009-.635.16334-.07254.30841-.16335.47175-.254a.38141.38141,0,0,0,.10886-.07254c.41728-.254.83466-.50808,1.23377-.744.01816-.01805.01816-.03621.03632-.03621a.01779.01779,0,0,0,.01817-.01816,13.87442,13.87442,0,0,0,1.23376-.87087h.01816c.10886-.09081.19956-.16334.29026-.23588.127-.09081.254-.19967.3629-.29036.21771-.1814.43543-.3629.635-.5443a2.78525,2.78525,0,0,0,.34473-.30841c.30853-.2722.59878-.56245.889-.85282a5.1333,5.1333,0,0,0,.43555-.47176,7.52669,7.52669,0,0,0,.635-.68947c.18139-.23577.38106-.47165.56245-.70753a8.12348,8.12348,0,0,0,.59878-.78017c.32658-.43554.61683-.871.90719-1.34273.23588-.381.47176-.78018.68948-1.17929.10886-.19955.21771-.41738.32657-.6351.01816,0,.01816-.01805.01816-.03621.19956-.38106.38095-.76212.5443-1.16123.07253-.16335.14518-.30842.19955-.47176.14518-.30841.254-.635.38106-.96156.19956-.59878.39911-1.21572.56246-1.83255.14507-.59878.29025-1.19756.38095-1.81438a21.81835,21.81835,0,0,0,.38106-4.10053V253.33081A23.19146,23.19146,0,0,0,601.62347,230.17926Z" transform="translate(-224.42261 -170.92653)" fill="rgba(var(--ui-color-primary))" />
              <rect x="66.50584" y="96.4476" width="333.84657" height="1.81438" fill="rgba(var(--ui-color-gray-100))" opacity="0.3" />
              <rect x="66.50584" y="116.40582" width="333.84657" height="1.81438" fill="rgba(var(--ui-color-gray-100))" opacity="0.3" />
              <rect x="66.50584" y="136.36403" width="333.84657" height="1.81438" fill="rgba(var(--ui-color-gray-100))" opacity="0.3" />
              <rect x="66.50584" y="156.32225" width="333.84657" height="1.81438" fill="rgba(var(--ui-color-gray-100))" opacity="0.3" />
              <rect x="66.50584" y="176.28047" width="333.84657" height="1.81438" fill="rgba(var(--ui-color-gray-100))" opacity="0.3" />
              <rect x="66.50584" y="196.23869" width="333.84657" height="1.81438" fill="rgba(var(--ui-color-gray-100))" opacity="0.3" />
              <path d="M624.394,387.12344c-.0907.61682-.23588,1.2156-.38095,1.81438H291.18249a14.99887,14.99887,0,0,1-.21772-1.81438Z" transform="translate(-224.42261 -170.92653)" fill="rgba(var(--ui-color-gray-100))" opacity="0.3" />
              <g opacity="0.1"><path d="M624.775,354.93629v28.08662a21.81835,21.81835,0,0,1-.38106,4.10053c-.0907.61682-.23588,1.2156-.38095,1.81438-.16335.61683-.3629,1.23377-.56246,1.83255-.127.32657-.23588.65315-.38106.96156-.05437.16334-.127.30841-.19955.47176-.16335.39911-.34474.78017-.5443,1.16123,0,.01816,0,.03621-.01816.03621-.10886.21772-.21771.43555-.32657.6351-.21772.39911-.4536.79834-.68948,1.17929-.29036.47175-.58061.90719-.90719,1.34273a8.12348,8.12348,0,0,1-.59878.78017c-.18139.23588-.38106.47176-.56245.70753a7.52669,7.52669,0,0,1-.635.68947,5.1333,5.1333,0,0,1-.43555.47176c-.29025.29037-.5805.58062-.889.85282a2.78525,2.78525,0,0,1-.34473.30841c-.19956.1814-.41728.3629-.635.5443-.10886.09069-.23588.19955-.3629.29036-.0907.07254-.1814.14507-.29026.23588h-.01816a13.87442,13.87442,0,0,1-1.23376.87087.01779.01779,0,0,1-.01817.01816c-.01816,0-.01816.01816-.03632.03621-.254.18151-.52613.34474-.79833.50808-.14518.0907-.29026.16323-.43544.23588a.38141.38141,0,0,1-.10886.07254c-.16334.09069-.30841.1815-.47175.254-.41728.21771-.83455.43543-1.27009.635a16.2231,16.2231,0,0,1-1.54219.6351.09422.09422,0,0,1-.07253.03621,2.86042,2.86042,0,0,1-.3629.127c-.23588.0907-.48992.1815-.7258.254-.18139.05448-.34473.0907-.52613.14518-.38106.127-.78017.21772-1.17939.30842a2.0948,2.0948,0,0,1-.32658.07253c-.19955.05449-.39911.09081-.59878.127a.0666.0666,0,0,0-.05437.01816.35874.35874,0,0,0-.1815.03633.308.308,0,0,0-.12691.01816c-.30853.05437-.6351.09069-.96168.14507-.18139.01816-.38106.03632-.58062.05448a.16309.16309,0,0,1-.09069.01817c-.19956.01816-.38106.03621-.56246.05437h-.03632c-.19956.01816-.39911.01816-.59867.03632-.3629.01816-.7258.01816-1.08869.01816H314.08a23.22593,23.22593,0,0,1-22.38954-17.23664h-.508a14.99887,14.99887,0,0,1-.21772-1.81438c-.01816-.34474-.03632-.70764-.03632-1.05238V354.42821a43.14762,43.14762,0,0,1,11.231,1.83254c9.87026,3.01183,19.4683,8.11025,29.774,8.11025.81649,0,1.66931-.03622,2.50386-.10886,10.85009-.90719,19.2869-7.63849,26.30856-15.24076.56245-.59878,1.12491-1.19755,1.65115-1.81438,1.32446-1.46965,2.59456-2.97562,3.82832-4.46342A97.67852,97.67852,0,0,1,379.416,329.06316c.78017-.6351,1.56034-1.23376,2.35867-1.81438a33.5112,33.5112,0,0,1,16.00288-6.40483c.74385-.07253,1.48781-.127,2.23166-.14507,7.76561-.23588,15.05936,2.55823,21.70006,6.5499.96157.58062,1.92324,1.17928,2.8486,1.81438a108.35117,108.35117,0,0,1,9.16261,6.949A175.16547,175.16547,0,0,0,447.87262,347.207c.3629.254.7258.508,1.08859.72569.56245.38106,1.14307.744,1.72368,1.08869a41.9322,41.9322,0,0,0,16.4021,6.187c.19956.03632.41728.07265.635.0907,9.453,1.10686,18.2527-1.68737,26.2904-6.2777.99789-.58061,2.01394-1.17939,2.99378-1.81438a123.97436,123.97436,0,0,0,17.58138-14.15217c1.41516-1.32458,2.8486-2.6672,4.33629-3.99167.67143-.59877,1.34274-1.21571,2.03221-1.81438,10.77734-9.47114,23.20593-18.14384,37.88423-18.14384.61694,0,1.25193.01817,1.887.05438,10.55973.50808,19.8312,5.62465,27.61486,12.12007a84.69952,84.69952,0,0,1,6.47737,5.96939c.09069.0907.16334.16323.254.254.508.508,1.016,1.0341,1.48781,1.56034,5.80605,6.07814,11.15839,12.57367,17.47252,18.14384.68947.635,1.397,1.23377,2.1228,1.81438a59.24951,59.24951,0,0,0,6.89463,4.93507C623.61379,354.30119,624.1944,354.62777,624.775,354.93629Z" transform="translate(-224.42261 -170.92653)" /></g>
              <g opacity="0.1"><path d="M624.775,327.52087v55.502a21.81835,21.81835,0,0,1-.38106,4.10053c-.0907.61682-.23588,1.2156-.38095,1.81438-.16335.61683-.3629,1.23377-.56246,1.83255-.127.32657-.23588.65315-.38106.96156-.05437.16334-.127.30841-.19955.47176-.16335.39911-.34474.78017-.5443,1.16123,0,.01816,0,.03621-.01816.03621-.10886.21772-.21771.43555-.32657.6351-.21772.39911-.4536.79834-.68948,1.17929-.29036.47175-.58061.90719-.90719,1.34273a8.12348,8.12348,0,0,1-.59878.78017c-.18139.23588-.38106.47176-.56245.70753a7.52669,7.52669,0,0,1-.635.68947,5.1333,5.1333,0,0,1-.43555.47176c-.29025.29037-.5805.58062-.889.85282a2.78525,2.78525,0,0,1-.34473.30841c-.19956.1814-.41728.3629-.635.5443-.10886.09069-.23588.19955-.3629.29036-.0907.07254-.1814.14507-.29026.23588h-.01816a13.87442,13.87442,0,0,1-1.23376.87087.01779.01779,0,0,1-.01817.01816c-.01816,0-.01816.01816-.03632.03621-.254.18151-.52613.34474-.79833.50808-.14518.0907-.29026.16323-.43544.23588a.38141.38141,0,0,1-.10886.07254c-.16334.09069-.30841.1815-.47175.254-.41728.21771-.83455.43543-1.27009.635a16.2231,16.2231,0,0,1-1.54219.6351.09422.09422,0,0,1-.07253.03621,2.86042,2.86042,0,0,1-.3629.127c-.23588.0907-.48992.1815-.7258.254-.18139.05448-.34473.0907-.52613.14518-.38106.127-.78017.21772-1.17939.30842a2.0948,2.0948,0,0,1-.32658.07253c-.19955.05449-.39911.09081-.59878.127a.0666.0666,0,0,0-.05437.01816.35874.35874,0,0,0-.1815.03633.308.308,0,0,0-.12691.01816c-.30853.05437-.6351.09069-.96168.14507-.18139.01816-.38106.03632-.58062.05448a.16309.16309,0,0,1-.09069.01817c-.0907,0-.19956.01816-.29026.01816a1.38119,1.38119,0,0,1-.2722.018.95767.95767,0,0,1-.23588.01816h-.09069c-.0907.01816-.19956.01816-.30842.03632-.3629.01816-.7258.01816-1.08869.01816H314.08a23.22593,23.22593,0,0,1-22.38954-17.23664c-.14507-.59878-.29026-1.19756-.38095-1.81438a21.81835,21.81835,0,0,1-.38106-4.10053V350.70875c.635-.5443,1.25193-1.10675,1.86886-1.68737.635-.59878,1.25182-1.19755,1.86876-1.81438a139.23351,139.23351,0,0,0,14.71463-18.14384c.14518-.19955.29036-.38106.41738-.58061.29025-.41728.5805-.8165.889-1.23377a142.58682,142.58682,0,0,1,14.71462-18.14384c.61694-.61693,1.23377-1.21571,1.86887-1.81438,6.74946-6.35034,14.44242-11.08586,23.51434-12.21088,12.50113-1.56034,24.13128,4.22755,34.41891,12.21088.762.59867,1.50586,1.19745,2.24982,1.81438,3.51991,2.86665,6.85831,5.98745,10.01532,9.09008.83466.83455,1.68748,1.66921,2.54019,2.50386,2.19544,2.19533,4.44526,4.39078,6.71324,6.5499.65315.61683,1.28825,1.21561,1.9414,1.81438,9.07192,8.40061,18.88768,15.78516,30.55416,18.14384.79833.16323,1.61483.30841,2.43132.41727a40.6162,40.6162,0,0,0,13.245-.41727c.7258-.127,1.43332-.29036,2.15912-.47176,10.92262-2.70341,21.0468-9.50735,30.20953-17.67208.65315-.59877,1.32446-1.19755,1.97761-1.81438,4.68115-4.3364,9.12641-8.98122,13.28131-13.5535,1.37894-1.524,2.79411-3.06632,4.20938-4.59034.58061-.59877,1.14307-1.19755,1.70552-1.81438a153.33059,153.33059,0,0,1,19.84936-18.14383c.85271-.63511,1.70553-1.23377,2.55824-1.81439,9.59816-6.5499,20.08524-10.75928,31.60664-10.088,9.50735.5443,18.19821,4.46332,26.0182,10.088.79833.58062,1.59666,1.17928,2.395,1.81439a108.69841,108.69841,0,0,1,16.20244,16.09357c.56245.67131,1.12491,1.36079,1.68736,2.05026.29036.34474.56245.70764.85282,1.05226l.59866.76212c4.80817,6.00561,9.43482,12.24709,14.35184,18.14384Z" transform="translate(-224.42261 -170.92653)" /></g>
              <g opacity="0.1"><path d="M624.775,304.6052v78.41771a21.81835,21.81835,0,0,1-.38106,4.10053c-.0907.61682-.23588,1.2156-.38095,1.81438-.16335.61683-.3629,1.23377-.56246,1.83255-.127.32657-.23588.65315-.38106.96156-.05437.16334-.127.30841-.19955.47176-.16335.39911-.34474.78017-.5443,1.16123,0,.01816,0,.03621-.01816.03621-.10886.21772-.21771.43555-.32657.6351-.21772.39911-.4536.79834-.68948,1.17929-.29036.47175-.58061.90719-.90719,1.34273a8.12348,8.12348,0,0,1-.59878.78017c-.18139.23588-.38106.47176-.56245.70753a7.52669,7.52669,0,0,1-.635.68947,5.1333,5.1333,0,0,1-.43555.47176c-.29025.29037-.5805.58062-.889.85282a2.78525,2.78525,0,0,1-.34473.30841c-.19956.1814-.41728.3629-.635.5443-.10886.09069-.23588.19955-.3629.29036-.0907.07254-.1814.14507-.29026.23588h-.01816a13.87442,13.87442,0,0,1-1.23376.87087.01779.01779,0,0,1-.01817.01816c-.01816,0-.01816.01816-.03632.03621-.254.18151-.52613.34474-.79833.50808-.14518.0907-.29026.16323-.43544.23588a.38141.38141,0,0,1-.10886.07254c-.16334.09069-.30841.1815-.47175.254-.41728.21771-.83455.43543-1.27009.635a16.2231,16.2231,0,0,1-1.54219.6351.09422.09422,0,0,1-.07253.03621,2.86042,2.86042,0,0,1-.3629.127c-.23588.0907-.48992.1815-.7258.254-.18139.05448-.34473.0907-.52613.14518-.38106.127-.78017.21772-1.17939.30842a2.0948,2.0948,0,0,1-.32658.07253c-.19955.05449-.39911.09081-.59878.127a.0666.0666,0,0,0-.05437.01816.35874.35874,0,0,0-.1815.03633.308.308,0,0,0-.12691.01816c-.30853.05437-.6351.09069-.96168.14507-.18139.01816-.38106.03632-.58062.05448a.16309.16309,0,0,1-.09069.01817c-.0907,0-.19956.01816-.29026.01816a1.38119,1.38119,0,0,1-.2722.018.0634.0634,0,0,1-.03632.01816h-.29025c-.4536.03632-.92536.05448-1.39711.05448H314.08a23.22593,23.22593,0,0,1-22.38954-17.23664c-.14507-.59878-.29026-1.19756-.38095-1.81438a21.81835,21.81835,0,0,1-.38106-4.10053V336.17552q2.74881-3.56526,5.51568-7.11236c.47176-.61694.94352-1.21571,1.41527-1.81438,2.4857-3.19333,4.98956-6.35034,7.56595-9.43482,2.46754-2.95745,5.0622-5.87858,7.76562-8.709.58061-.59877,1.16112-1.21571,1.7599-1.81438a100.85065,100.85065,0,0,1,23.46-18.14383c1.1794-.65316,2.37684-1.25193,3.59256-1.81439a56.0621,56.0621,0,0,1,20.52067-5.35245,56.98994,56.98994,0,0,1,27.1069,5.35245c1.27.54429,2.5219,1.16123,3.75567,1.81439,8.87236,4.57217,17.20043,10.977,25.00226,18.14383.67131.58062,1.3063,1.19745,1.95957,1.81438,6.187,5.80605,12.04742,12.02938,17.63575,18.14384.41738.4536.83466.92535,1.25193,1.37895.127.14507.2722.29025.39922.43543,5.44315,5.98745,11.24909,12.04754,17.418,17.67208.16334.16323.34474.30842.52613.47176.67131.61683,1.34274,1.2156,2.0321,1.81438,2.43132,2.15912,4.93518,4.22744,7.47536,6.187a97.28013,97.28013,0,0,0,19.54084,11.95684c1.46964.67131,2.95745,1.27009,4.46342,1.81438a53.6583,53.6583,0,0,0,26.05452,3.08448,51.91031,51.91031,0,0,0,11.81166-3.08448c1.45148-.54429,2.86675-1.16123,4.26375-1.81438,9.19894-4.35457,17.50885-10.94079,25.38332-18.14384.65315-.59878,1.30631-1.19755,1.95946-1.81438,4.48158-4.20938,8.836-8.58211,13.13612-12.80954,1.81438-1.77818,3.66509-3.5744,5.57017-5.3343.65326-.59877,1.32457-1.19755,1.99589-1.81438,2.28614-2.05026,4.64481-4.0642,7.076-5.96939a90.8935,90.8935,0,0,1,19.45025-12.17445c.59867-.2722,1.21561-.52624,1.81439-.76212.92535-.381,1.85059-.72568,2.77595-1.05226A48.65691,48.65691,0,0,1,624.775,304.6052Z" transform="translate(-224.42261 -170.92653)" /></g>
              <circle cx="138.17399" cy="116.40582" r="5.44315" fill="rgba(var(--ui-color-gray-100))" />
              <circle cx="221.63563" cy="176.28047" r="5.44315" fill="rgba(var(--ui-color-gray-100))" />
              <circle cx="334.12741" cy="136.36403" r="5.44315" fill="rgba(var(--ui-color-gray-100))" />
              <path d="M806.14077,353.73233H677.79307a4.63111,4.63111,0,1,0,0,9.26221h128.3477a4.6311,4.6311,0,1,0,0-9.26221Z" transform="translate(-224.42261 -170.92653)" fill="rgba(var(--ui-color-gray-300))" />
              <path d="M806.14077,423.86046H677.79307a4.6311,4.6311,0,1,0,0,9.26221h128.3477a4.6311,4.6311,0,1,0,0-9.26221Z" transform="translate(-224.42261 -170.92653)" fill="rgba(var(--ui-color-gray-300))" />
              <path d="M806.14077,493.98859H677.79307a4.6311,4.6311,0,1,0,0,9.2622h128.3477a4.6311,4.6311,0,1,0,0-9.2622Z" transform="translate(-224.42261 -170.92653)" fill="rgba(var(--ui-color-gray-300))" />
              <circle cx="659.48782" cy="187.78333" r="11.5653" fill="rgba(var(--ui-color-gray-400))" style="isolation:isolate" />
              <path d="M882.33268,364.72906a1.2861,1.2861,0,0,1-1.02908-.5147l-3.15519-4.207a1.28645,1.28645,0,1,1,2.05837-1.54367l2.06424,2.7521,5.30172-7.95247a1.2865,1.2865,0,0,1,2.14087,1.42725l-6.31038,9.46557a1.287,1.287,0,0,1-1.03474.57249Z" transform="translate(-224.42261 -170.92653)" fill="rgba(var(--ui-color-gray-100))" />
              <circle cx="659.48782" cy="257.91146" r="11.5653" fill="rgba(var(--ui-color-gray-400))" style="isolation:isolate" />
              <path d="M882.33268,434.85719a1.2861,1.2861,0,0,1-1.02908-.5147l-3.15519-4.207a1.28645,1.28645,0,1,1,2.05837-1.54367l2.06424,2.7521,5.30172-7.95247a1.2865,1.2865,0,1,1,2.14087,1.42724l-6.31038,9.46558a1.28705,1.28705,0,0,1-1.03474.57249Z" transform="translate(-224.42261 -170.92653)" fill="rgba(var(--ui-color-gray-100))" />
              <circle cx="659.48782" cy="328.03959" r="11.5653" fill="rgba(var(--ui-color-gray-400))" style="isolation:isolate" />
              <path d="M806.14077,283.6042H677.79307a4.6311,4.6311,0,1,0,0,9.26221h128.3477a4.6311,4.6311,0,1,0,0-9.26221Z" transform="translate(-224.42261 -170.92653)" fill="rgba(var(--ui-color-gray-300))" />
              <circle cx="659.48782" cy="117.6552" r="11.5653" fill="rgba(var(--ui-color-primary))" />
              <path d="M882.33268,294.60093a1.28612,1.28612,0,0,1-1.02908-.51469l-3.15519-4.207a1.28645,1.28645,0,1,1,2.05837-1.54367l2.06424,2.7521,5.30172-7.95247a1.2865,1.2865,0,1,1,2.14087,1.42725l-6.31038,9.46557a1.287,1.287,0,0,1-1.03474.57249Z" transform="translate(-224.42261 -170.92653)" fill="rgba(var(--ui-color-gray-100))" />
              <circle cx="621.11583" cy="117.6552" r="11.5653" fill="rgba(var(--ui-color-gray-400))" style="isolation:isolate" />
              <circle cx="621.11583" cy="187.78333" r="11.5653" fill="rgba(var(--ui-color-gray-400))" style="isolation:isolate" />
              <circle cx="621.11583" cy="257.91146" r="11.5653" fill="rgba(var(--ui-color-gray-400))" style="isolation:isolate" />
              <circle cx="621.11583" cy="328.03959" r="11.5653" fill="rgba(var(--ui-color-gray-400))" style="isolation:isolate" />
              <path d="M882.33268,504.98532a1.2861,1.2861,0,0,1-1.02908-.5147l-3.15519-4.207a1.28645,1.28645,0,1,1,2.05837-1.54368l2.06424,2.75211,5.30172-7.95248a1.2865,1.2865,0,0,1,2.14087,1.42725l-6.31038,9.46558a1.28705,1.28705,0,0,1-1.03474.57249Z" transform="translate(-224.42261 -170.92653)" fill="rgba(var(--ui-color-gray-100))" />
              <path d="M865.65741,724.88374a.42584.42584,0,0,1-.15.35.57519.57519,0,0,1-.27.11.39112.39112,0,0,1-.46-.29c-1.38-4.64-4.76-8.2-7.96-11.69-2.88-3.13-5.71-6.43-7.16-10.5a12.279,12.279,0,0,1,.52-10.05,17.72487,17.72487,0,0,1,1.73-2.62c1.43-1.82,3.13-3.44,4.66-5.16.16-.18005.32-.37.47-.55.21-.23.4-.47.58-.71a19.34546,19.34546,0,0,0,3.87-8.1,34.7963,34.7963,0,0,0,.31-10.97q-.29993-2.91-.83-5.78c-.02-.09-.03-.17-.05-.25a80.77148,80.77148,0,0,0-8.32-23.47c-.15-.27-.29-.54-.44-.8-.64-1.16-1.3-2.30005-2-3.42.24-.17.5-.33.76-.48a82.83115,82.83115,0,0,1,5.97,11.63,81.254,81.254,0,0,1,4.87,16.05c.07.3.12.61.17.91.42,2.31.73,4.65.92,6.98a32.336,32.336,0,0,1-.74,10.92,20.376,20.376,0,0,1-4.07,7.71q-.51.645-1.08,1.26c-1.52,1.66-3.2,3.27-4.57,5.08a15.11022,15.11022,0,0,0-1.77,2.94c-1.61,3.6-.85,7.54.93,10.92,3.22,6.15,9.36005,10.34,12.63,16.37a18.607,18.607,0,0,1,1.46,3.49A.50132.50132,0,0,1,865.65741,724.88374Z" transform="translate(-224.42261 -170.92653)" fill="rgba(var(--ui-color-gray-100))" />
              <path d="M861.51365,659.19926a12.20506,12.20506,0,0,0,9.18893-12.85841c-.051-.58356-.96023-.53171-.90915.05263a11.30161,11.30161,0,0,1-8.57207,11.94353c-.56886.14-.27332,1.00146.29229.86225Z" transform="translate(-224.42261 -170.92653)" fill="rgba(var(--ui-color-gray-100))" />
              <path d="M857.86593,683.92248A23.52433,23.52433,0,0,1,847.254,670.45783c-.16973-.56123-1.03177-.26827-.86225.29229a24.4688,24.4688,0,0,0,11.07117,13.98874c.5072.29546.90747-.52252.403-.81638Z" transform="translate(-224.42261 -170.92653)" fill="rgba(var(--ui-color-gray-100))" />
              <path d="M852.7074,635.15376c-.04.02-.07.03-.11.05a7.70346,7.70346,0,0,1-5.72.27,6.28289,6.28289,0,0,1,.31-.86005,6.83258,6.83258,0,0,0,4.97-.21c.09-.03.17-.07.26-.11005a.4575.4575,0,0,1,.58.28A.48084.48084,0,0,1,852.7074,635.15376Z" transform="translate(-224.42261 -170.92653)" fill="rgba(var(--ui-color-gray-100))" />
              <path d="M802.86062,481.92005a9.36228,9.36228,0,0,0-2.57888-14.1224l6.03863-32.71779-15.92105,6.74026-3.29352,30.036a9.413,9.413,0,0,0,15.75482,10.06392Z" transform="translate(-224.42261 -170.92653)" fill="#ffb6b6" />
              <path d="M812.57739,385.08375l-5.06-17.01-35.68-55.67a26.34992,26.34992,0,0,0-7.01-5.78,26.562,26.562,0,0,0-34.68,38.66,24.72027,24.72027,0,0,0,2.43,2.9l46.21,47.66,2.63,2.72,4.16,10.52,1.64,47.97,1.47.35,12.95,3.05,1.81.43,3.03-15.67,1.9-7.49a79.542,79.542,0,0,0,2.43-19.54c0-2.03-.07-4.07-.23-6.1Z" transform="translate(-224.42261 -170.92653)" fill="#3f3d56" />
              <polygon points="539.105 544.946 526.715 544.946 520.821 497.156 539.107 497.157 539.105 544.946" fill="#ffb6b6" />
              <path d="M763.19739,711.82374l-13.22-5.37-.39-.16-7.3,5.53a15.54247,15.54247,0,0,0-15.53,14.87c-.02.22-.02.45-.02.68v.51h39.95v-16.06Z" transform="translate(-224.42261 -170.92653)" fill="#2f2e41" />
              <polygon points="515.51 520.231 504.831 526.514 475.514 488.316 491.274 479.043 515.51 520.231" fill="#ffb6b6" />
              <path d="M747.30737,697.45375l-1.44995-2.47-5.25-8.92-2.73,1.61-.28.16-14.12,2.08-.42005.06006-3.48,8.47a15.54944,15.54944,0,0,0-5.52,21.29l.26.43,34.43-20.26Z" transform="translate(-224.42261 -170.92653)" fill="#2f2e41" />
              <path d="M779.21956,423.71246c5.809,17.51982,5.19483,36.5371-1.39627,56.9478L776.103,550.825l-5.52558,44.25873a75.7829,75.7829,0,0,1,5.04271,27.17369c-.02349,24.35193-1.66085,58.94778-9.96248,75.19971H746.01211l-4.43472-72.3734-5.29208-36.38819-.65241-38.99314-.569-34.00831L713.70294,546.93l-20.757,30.35273,20.63144,34.801,18,56-19,16-21.55387-40.86343-10.44613-12.13657L652.0614,569.353l2.5627-8.59494a203.32945,203.32945,0,0,1,22.78278-50.22981l0,0,28.364-65.83044Z" transform="translate(-224.42261 -170.92653)" fill="#2f2e41" />
              <path d="M781.73737,417.86372l-3.24-6.48.29-15.54.97-52.54a50.40424,50.40424,0,0,0-14.93-36.68,49.36031,49.36031,0,0,0-9.56-7.43l-6.96-4.16-3.52-8.94-32.46.79-.07,8.67-.03,3.05-11.63,18.54.01.08.24,33.74.48,67.16,3.21,10.41-4.85,12.12,2.58,7.72,2.06-.33,69.38-11.09a13.62235,13.62235,0,0,0,7.53-5.98,12.39286,12.39286,0,0,0,.89-1.74A13.6477,13.6477,0,0,0,781.73737,417.86372Z" transform="translate(-224.42261 -170.92653)" fill="#3f3d56" />
              <circle cx="501.15853" cy="74.55104" r="29.49581" fill="#ffb6b6" />
              <path d="M743.92951,269.91828c3.11538-2.19191,6.27-6.36464,8.37132-9.48836a35.418,35.418,0,0,0,5.07724-28.35134,10.799,10.799,0,0,0-2.6107-5.16613,4.64357,4.64357,0,0,0-5.36785-.98026,9.67951,9.67951,0,0,0-.49932-7.6741,17.05878,17.05878,0,0,0-5.12609-5.9366,28.40871,28.40871,0,0,0-28.97472-3.02462c-1.83046.87913,1.10421-5.75566-.81534-5.09324a7.86193,7.86193,0,0,1-5.93489-.0222c-1.82627-.88782-7.76266,4.61941-7.09343,2.70223a8.95783,8.95783,0,0,0-1.867,15.029c1.53993,1.26378,3.45059,1.97732,5.13232,3.04517a14.6133,14.6133,0,0,1,4.73027,18.79462,19.36034,19.36034,0,0,1,5.66333-2.55476,6.55283,6.55283,0,0,1,5.85079,1.32188,7.36207,7.36207,0,0,1,1.86036,5.53078c-.03838,2.00235-.48727,3.98073-.513,5.98328-.07557,5.876-3.06687,17.08687,1.53045,20.146C726.97132,276.59373,739.67588,272.911,743.92951,269.91828Z" transform="translate(-224.42261 -170.92653)" fill="#2f2e41" />
              <path d="M561.7215,317.221a9.36225,9.36225,0,0,0,14.16776,2.31676l28.786,16.68193-.99821-17.2602-27.18261-13.19527A9.413,9.413,0,0,0,561.7215,317.221Z" transform="translate(-224.42261 -170.92653)" fill="#ffb6b6" />
              <path d="M747.61737,312.05372a26.57075,26.57075,0,0,0-35.36-16.5c-.32.13-.64.27-.96.41l-63.86,29.07-24.86-2.95-32.18-11.24-.82,1.27-7.23,11.17-1.01,1.56,34.52,20.41,3.66.76a24.73314,24.73314,0,0,1,15.68,10.67l13.38,4.4,52.27-10.12,29.3-5.68,1.66-.32a26.63789,26.63789,0,0,0,17.07-24.84A26.37168,26.37168,0,0,0,747.61737,312.05372Z" transform="translate(-224.42261 -170.92653)" fill="#3f3d56" />
              <path d="M521.67365,450.86213H310.326a4.63111,4.63111,0,0,0,0,9.26221h211.3477a4.63111,4.63111,0,1,0,0-9.26221Z" transform="translate(-224.42261 -170.92653)" fill="rgba(var(--ui-color-gray-300))" />
              <circle cx="375.02071" cy="284.91313" r="11.5653" fill="rgba(var(--ui-color-primary))" />
              <path d="M597.86557,461.85886a1.2861,1.2861,0,0,1-1.02908-.5147l-3.1552-4.207a1.28645,1.28645,0,1,1,2.05838-1.54367l2.06423,2.7521,5.30172-7.95247a1.2865,1.2865,0,1,1,2.14087,1.42725l-6.31038,9.46557a1.287,1.287,0,0,1-1.03474.57249Z" transform="translate(-224.42261 -170.92653)" fill="rgba(var(--ui-color-gray-100))" />
              <circle cx="336.64871" cy="284.91313" r="11.5653" fill="rgba(var(--ui-color-gray-400))" style="isolation:isolate" />
              <path d="M520.67365,506.86213H309.326a4.63111,4.63111,0,0,0,0,9.26221h211.3477a4.6311,4.6311,0,1,0,0-9.26221Z" transform="translate(-224.42261 -170.92653)" fill="rgba(var(--ui-color-gray-300))" />
              <circle cx="374.02071" cy="340.91313" r="11.5653" fill="rgba(var(--ui-color-gray-400))" style="isolation:isolate" />
              <path d="M596.86557,517.85886a1.2861,1.2861,0,0,1-1.02908-.5147l-3.1552-4.207a1.28645,1.28645,0,1,1,2.05838-1.54367l2.06423,2.7521,5.30172-7.95247a1.2865,1.2865,0,1,1,2.14087,1.42725l-6.31038,9.46557a1.287,1.287,0,0,1-1.03474.57249Z" transform="translate(-224.42261 -170.92653)" fill="rgba(var(--ui-color-gray-100))" />
              <circle cx="335.64871" cy="340.91313" r="11.5653" fill="rgba(var(--ui-color-gray-400))" style="isolation:isolate" />
            </svg>
          </div>
        </div>
      </DuxCard>
    )
  },
})



---
File: /packages/pro/src/components/dashboard/index.ts
---

export * from './hello'
export * from './helloBig'
export * from './quick'



---
File: /packages/pro/src/components/dashboard/quick.tsx
---

import type { PropType } from 'vue'
import clsx from 'clsx'
import { ceil } from 'lodash-es'
import { defineComponent } from 'vue'

export interface DuxDashboardQuickItemProps {
  icon?: string
  title?: string
  color?: 'primary' | 'info' | 'success' | 'warning' | 'error'
  onClick?: () => void
}

export const DuxDashboardQuickItem = defineComponent({
  name: 'DuxDashboardQuickItem',
  props: {
    icon: String,
    title: String,
    color: String as PropType<'primary' | 'info' | 'success' | 'warning' | 'error'>,
    onClick: Function as PropType<() => void>,
  },
  setup(props) {
    return () => (
      <div class="flex flex-col justify-center items-center ">
        <div
          class="flex flex-col gap-1  justify-center items-center p-2 pb-1 hover:bg-elevated cursor-pointer"
          onClick={props?.onClick}
        >
          <div class={clsx([
            'p-1 rounded flex justify-center items-center text-white',
            `bg-${props.color || 'primary'}`,
          ])}
          >
            <div class={clsx([
              'size-7',
              props.icon,
            ])}
            />
          </div>
          <div class="text-muted">
            {props.title}
          </div>
        </div>
      </div>
    )
  },
})

export const DuxDashboardQuick = defineComponent({
  name: 'DuxDashboardQuick',
  props: {
    data: Array as PropType<Array<DuxDashboardQuickItemProps>>,
    col: {
      type: Number,
      default: 6,
    },
  },
  setup(props, { slots }) {
    const colors = ['primary', 'info', 'success', 'warning', 'error']

    return () => (
      <div class={clsx([
        'grid gap-2',
        `grid-cols-${ceil(props.col / 2)}`,
        `xl:grid-cols-${props.col}`,
      ])}
      >
        {props.data?.map((item, key) => {
          const color = colors[key % colors.length]
          return (
            <DuxDashboardQuickItem
              icon={item?.icon}
              title={item?.title}
              color={color as any}
              onClick={item?.onClick}
              key={key}
            />
          )
        })}
        {slots.default?.()}
      </div>
    )
  },
})



---
File: /packages/pro/src/components/data/dynamicData.tsx
---

import type { JsonSchemaNode } from '@duxweb/dvha-core'
import type { PropType, VNode } from 'vue'
import { useJsonSchema } from '@duxweb/dvha-core'
import { useVModel } from '@vueuse/core'
import { NButton, NTable } from 'naive-ui'
import { computed, defineComponent, h } from 'vue'
import { VueDraggable } from 'vue-draggable-plus'
import { DuxBlockEmpty } from '../status'

export interface DuxDynamicDataColumn {
  key: string
  title?: string
  copy?: boolean
  width?: number
  render?: (
    cell: Record<string, any>,
    rowIndex: number,
  ) => VNode
  schema?: JsonSchemaNode | JsonSchemaNode[] | ((cell: Record<string, any>, rowIndex: number) => JsonSchemaNode | JsonSchemaNode[])
}

export const DuxDynamicData = defineComponent({
  name: 'DuxDynamicData',
  props: {
    createAction: {
      type: Boolean,
      default: true,
    },
    deleteAction: {
      type: Boolean,
      default: true,
    },
    columns: Array as PropType<DuxDynamicDataColumn[]>,
    createCallback: Function as PropType<(value: Record<string, any>[]) => void>,
    onCreate: Function,
    value: {
      type: Array as PropType<Record<string, any>[]>,
      default: [],
    },
    defaultValue: {
      type: Array as PropType<Record<string, any>[]>,
      default: [],
    },
  },
  setup(props, { emit }) {
    const model = useVModel(props, 'value', emit, {
      passive: true,
      defaultValue: props.defaultValue || [],
      deep: true,
    })

    const { renderAsync } = useJsonSchema()

    const copy = (field: string | number) => {
      const firstRowValue = model.value?.[0][field]
      const newData = [...(model.value || [])].map(row => ({
        ...row,
        [field]: firstRowValue,
      }))
      model.value = [...newData]
    }

    const colNum = computed(() => {
      let num = props.columns?.length || 0
      if (props.createAction || props.deleteAction) {
        num += 1
      }
      return num
    })

    return () => (
      <VueDraggable
        modelValue={model.value}
        {...{
          'onUpdate:modelValue': (v) => {
            model.value = v
          },
        }}
        handle=".sort-handle"
        target=".sort-target"
        animation={150}
      >
        <div class="overflow-auto w-full">
          <NTable class="table-fixed w-full">
            <thead>
              <tr>
                <th style={{
                  width: '40px',
                }}
                >

                </th>
                {props.columns?.map((item, index) => (
                  <th
                    key={index}
                    style={{
                      width: `${item.width}px`,
                    }}
                  >
                    <div class="flex items-center justify-between">
                      <div>{item.title}</div>
                      {item.copy && (
                        <div>
                          <NButton
                            onClick={() => {
                              copy(item.key)
                            }}
                            renderIcon={() => <div class="i-tabler:pencil-down t-icon"></div>}
                            text
                            type="primary"
                          >
                          </NButton>
                        </div>
                      )}
                    </div>
                  </th>
                ))}

                {(props.createAction || props.deleteAction) && (
                  <th
                    class="w-15"
                  >
                    {props.createAction
                      && (
                        <NButton
                          tertiary
                          type="primary"
                          circle
                          renderIcon={() => <div class="i-tabler:plus h-4 w-4"></div>}
                          onClick={() => {
                            if (props?.onCreate) {
                              props.onCreate()
                            }
                            else {
                              if (!model.value) {
                                model.value = []
                              }
                              model.value?.push(props?.createCallback?.(model.value) || {})
                            }
                          }}
                        />
                      )}
                  </th>
                )}
              </tr>
            </thead>
            <tbody class="sort-target">
              {(model.value && model.value?.length > 0)
                ? model.value.map((row, rowIndex) => (
                    <tr key={rowIndex}>
                      <td>
                        <div class="sort-handle i-tabler:grid-dots size-4 cursor-move"></div>
                      </td>
                      {props.columns?.map((column, columnIndex) => {
                        const schema = typeof column.schema === 'function' ? column.schema(row, rowIndex) : column.schema

                        return (
                          <td key={columnIndex}>
                            {column.schema
                              ? h(renderAsync({
                                  data: (Array.isArray(schema) ? schema : [schema]) as JsonSchemaNode[],
                                  context: {
                                    rowIndex,
                                    model: model.value,
                                    row,
                                  },
                                }))
                              : column.render?.(row, rowIndex) || row[column.key]}
                          </td>
                        )
                      })}
                      {(props.createAction || props.deleteAction) && (
                        <td class="w-15">
                          {props.deleteAction && (
                            <NButton
                              tertiary
                              type="error"
                              circle
                              renderIcon={() => <div class="i-tabler:trash h-4 w-4"></div>}
                              onClick={() => {
                                model.value.splice(rowIndex, 1)
                              }}
                            />
                          )}
                        </td>
                      )}
                    </tr>
                  ))
                : (
                    <tr>
                      <td colspan={colNum.value}>
                        <DuxBlockEmpty />
                      </td>
                    </tr>
                  )}
            </tbody>
          </NTable>
        </div>
      </VueDraggable>
    )
  },
})



---
File: /packages/pro/src/components/data/dynamicSelect.tsx
---

import type { JsonSchemaNode } from '@duxweb/dvha-core'
import type { TableColumn } from '@duxweb/dvha-naiveui'
import type { PropType } from 'vue'
import type { DuxDynamicDataColumn } from './dynamicData'
import { useClient, useI18n } from '@duxweb/dvha-core'
import { useVModel } from '@vueuse/core'
import { defineComponent, ref, watch } from 'vue'
import { useModal } from '../../hooks'
import { DuxDynamicData } from './dynamicData'

type Value = Record<string, any>[]

export const DuxDynamicSelect = defineComponent({
  name: 'DuxDynamicSelect',
  props: {
    rowKey: {
      type: String,
      default: 'id',
    },
    path: String,
    columns: Array as PropType<DuxDynamicDataColumn[]>,
    filterColumns: Array as PropType<TableColumn[]>,
    filterSchema: {
      type: Array as PropType<JsonSchemaNode[]>,
    },
    value: {
      type: Array as PropType<Value>,
      default: [],
    },
    defaultValue: {
      type: Array as PropType<Value>,
      default: [],
    },
  },
  setup(props, { emit }) {
    const model = useVModel(props, 'value', emit, {
      passive: true,
      defaultValue: props.defaultValue,
      deep: true,
    })

    const modal = useModal()
    const client = useClient()
    const { t } = useI18n()

    const once = ref(true)

    watch([model, once], () => {
      if (!once.value || !model.value || model.value.length === 0) {
        return
      }
      const ids = model.value?.map(e => e[props.rowKey]) || []

      client.request({
        path: props.path,
        query: {
          ids: ids?.join(',') || '',
        },
      }).then((res) => {
        once.value = false
        res?.data?.forEach((row, index) => {
          if (!model.value.some(e => e[props.rowKey] === row[props.rowKey])) {
            model.value.push(row)
          }
          else {
            model.value[index] = { ...model.value[index], ...row }
          }
        })
      })
    })

    return () => (
      <DuxDynamicData
        v-model:value={model.value}
        columns={props.columns}
        onCreate={() => {
          modal.show({
            component: () => import('./selectModal'),
            componentProps: {
              path: props.path,
              columns: props.filterColumns,
              filterSchema: props.filterSchema,
            },
            width: 1000,
            title: t('components.button.select'),
          }).then((rows: Record<string, any>[]) => {
            once.value = false
            rows?.forEach((row) => {
              if (!model.value.some(e => e[props.rowKey] === row[props.rowKey])) {
                model.value.push(row)
              }
            })
          })
        }}
      />
    )
  },
})



---
File: /packages/pro/src/components/data/index.ts
---

export * from './dynamicData'
export * from './dynamicSelect'
export * from './selectModal'



---
File: /packages/pro/src/components/data/selectModal.tsx
---

import type { JsonSchemaNode } from '@duxweb/dvha-core'
import type { TableColumn } from '@duxweb/dvha-naiveui'
import type { PropType } from 'vue'
import { useI18n, useJsonSchema } from '@duxweb/dvha-core'
import { NButton, NDataTable } from 'naive-ui'
import { computed, defineComponent, h, ref, watch } from 'vue'
import { useTable } from '../../hooks'
import { DuxModalPage } from '../modal'

const Select = defineComponent({
  name: 'Select',
  props: {
    path: String,
    columns: Array<TableColumn>,
    rowKey: {
      type: String,
      default: 'id',
    },
    filterSchema: {
      type: Array as PropType<JsonSchemaNode[]>,
    },
    onConfirm: Function,
    onClose: Function,
  },
  setup(props) {
    const { t } = useI18n()

    const columns = computed<TableColumn[]>(() => {
      return [
        {
          type: 'selection',
          fixed: 'left',
        },
        ...props.columns || [],
      ]
    })

    const filter = ref({})

    const pagination = ref({
      page: 1,
      pageSize: 10,
    })

    const { table: tableProps, list, pageCount, pageSizes, checkeds } = useTable({
      path: props.path || '',
      columns: columns.value || [],
      filters: filter,
      pagination: pagination.value,
    })

    const checkedRowData = ref<Record<string, any>>([])
    watch(checkeds, (ids) => {
      checkedRowData.value = list.value?.filter(item => ids.includes(item[props.rowKey]))
    })

    const json = useJsonSchema({
      data: props.filterSchema || [],
      context: {
        filter: filter.value,
      },
    })

    return () => (
      <DuxModalPage
        title={t('components.data.selectTitle')}
        onClose={() => {
          props.onClose?.()
        }}
      >
        {{
          default: () => (
            <div class="flex flex-col gap-4">
              {props.filterSchema && (
                <div class="grid grid-cols-1 md:grid-cols-4 gap-2">
                  {h(json.render)}
                </div>
              )}
              <NDataTable
                bordered={false}
                maxHeight={400}
                rowKey={row => row[props.rowKey]}
                {...tableProps.value}
                pagination={{
                  page: pagination.value.page,
                  pageSize: pagination.value.pageSize,
                  pageCount: pageCount.value,
                  pageSizes,
                  onUpdatePage: (page) => {
                    pagination.value.page = page
                  },
                  onUpdatePageSize: (pageSize) => {
                    pagination.value.pageSize = pageSize
                  },
                }}
              />
            </div>
          ),
          footer: () => (
            <>
              <NButton onClick={() => {
                props.onClose?.()
              }}
              >
                {t('components.button.cancel')}
              </NButton>
              <NButton
                type="primary"
                onClick={() => {
                  props.onConfirm?.(checkedRowData.value)
                }}
              >
                {t('components.button.select')}
              </NButton>
            </>
          ),
        }}
      </DuxModalPage>
    )
  },
})

export default Select



---
File: /packages/pro/src/components/designEditor/components/grid.tsx
---

import type { JsonSchemaNode } from '@duxweb/dvha-core'
import type { PageEditorComponent } from '../editor/hook'
import { useI18n } from '@duxweb/dvha-core'
import { useVModel } from '@vueuse/core'
import clsx from 'clsx'
import { NFormItem, NInputNumber } from 'naive-ui'
import { computed, defineComponent } from 'vue'
import { DuxGrid } from '../../layout'
import { DuxWidgetEditorPreview } from '../editor/preview'
import { WidgetEditorSettingCard } from '../editor/setting'

const WidgetEditorGrid = defineComponent({
  name: 'WidgetEditorGrid',
  props: {
    options: Object,
    children: {
      type: Array,
      default: [],
    },
    onChildren: Function,
  },
  setup(props) {
    const colCount = computed(() => props.options?.col || 2)

    const gridChildren = computed(() => {
      const currentChildren = [...(props.children || [])]
      const count = colCount.value

      // 确保有足够的列位置且每个位置都是数组
      while (currentChildren.length < count) {
        currentChildren.push([])
      }

      for (let i = 0; i < count; i++) {
        if (!Array.isArray(currentChildren[i])) {
          currentChildren[i] = []
        }
      }

      return currentChildren
    })

    return () => (
      <DuxGrid cols={colCount.value} spac={props.options?.spac}>
        {gridChildren.value.map((cellChildren, index) => {
          const children = cellChildren as any[]
          return (
            <div
              key={index}
              class={clsx({
                'rounded border border-dashed border-accented': !children?.length,
              })}
            >
              <DuxWidgetEditorPreview
                modelValue={children}
                onUpdate={(v) => {
                  const newChildren = [...gridChildren.value]
                  newChildren[index] = v
                  props.onChildren?.(newChildren)
                }}
              />
            </div>
          )
        })}
      </DuxGrid>
    )
  },
})

const WidgetEditorGridSetting = defineComponent({
  name: 'WidgetEditorGridSetting',
  props: {
    value: {
      type: Object,
      default: () => ({
        col: 2,
        spac: 2,
      }),
    },
  },
  setup(props, { emit }) {
    const { t } = useI18n()
    const data = useVModel(props, 'value', emit)

    return () => (
      <WidgetEditorSettingCard title={t('components.designEditor.grid.title')} icon="i-tabler:grid-4x4">
        <NFormItem label={t('components.designEditor.grid.columns')} path="col">
          <NInputNumber
            v-model:value={data.value.col}
            min={1}
            max={12}
            placeholder={t('components.designEditor.grid.columnsPlaceholder')}
          />
        </NFormItem>
        <NFormItem label={t('components.designEditor.grid.spacing')} path="spac">
          <NInputNumber
            v-model:value={data.value.spac}
            min={0}
            max={100}
            placeholder={t('components.designEditor.grid.spacingPlaceholder')}
          />
        </NFormItem>
      </WidgetEditorSettingCard>
    )
  },
})

function FormEditorGridJson(props?: Record<string, any>): JsonSchemaNode {
  const { children, convertToJsonSchema } = props || {}

  // 处理 grid 的二维数组 children 结构
  let processedChildren: JsonSchemaNode[] = []
  if (children?.length && convertToJsonSchema) {
    // grid 的 children 是二维数组，每个元素代表一列的组件
    processedChildren = children.flatMap((columnChildren: any[]) => {
      if (Array.isArray(columnChildren)) {
        return convertToJsonSchema(columnChildren)
      }
      return []
    })
  }

  return {
    tag: 'dux-grid',
    attrs: {
      cols: props?.options?.col || 2,
      spac: props?.options?.spac || 2,
    },
    children: processedChildren,
  }
}

export function duxFormEditorGrid(t): PageEditorComponent {
  return {
    name: 'dux-grid',
    icon: 'i-tabler:grid-4x4',
    label: t('components.designEditor.grid.label'),
    group: 'layout',
    nested: true,
    component: props => <WidgetEditorGrid {...props} />,
    setting: props => <WidgetEditorGridSetting {...props} />,
    settingDefault: {
      col: 2,
      spac: 2,
    },
    json: FormEditorGridJson,
  }
}



---
File: /packages/pro/src/components/designEditor/components/index.ts
---

export * from './grid'



---
File: /packages/pro/src/components/designEditor/editor/hook.ts
---

import type { JsonSchemaNode } from '@duxweb/dvha-core'
import type { ComputedRef, Ref } from 'vue'
import ShortUniqueId from 'short-unique-id'
import { computed, ref } from 'vue'

export interface PageEditorJsonProps {
  options?: Record<string, any>
  children?: PageEditorData[] | PageEditorData[][]
  model?: Record<string, any>
  convertToJsonSchema?: (children: PageEditorData[] | PageEditorData[][], childModel?: Record<string, any>) => JsonSchemaNode[]
}

export interface PageEditorComponent {
  name: string
  icon: string
  group?: string
  label?: string
  component: (props?: Record<string, any>) => any
  setting?: (props?: Record<string, any>) => any
  nested?: boolean
  settingDefault?: Record<string, any>
  json?: (props?: PageEditorJsonProps) => JsonSchemaNode
}

export interface PageEditorGroup {
  name: string
  label: string
  icon: string
  children?: PageEditorComponent[]
}

export interface PageEditorData {
  key: string
  name: string
  // 组件选项
  options?: Record<string, any>
  // 子组件
  children?: PageEditorData[]
}

export interface PageEditorSettingPage {
  component?: (props?: Record<string, any>) => any
  default?: Record<string, any>
}

export interface UseEditorResult {
  clearComponent: () => void
  addComponent: (data: PageEditorComponent) => void
  clearGroup: () => void
  addGroup: (data: PageEditorGroup) => void
  getData: (key?: string) => PageEditorData | undefined
  copyData: (key: string, index: number) => void
  deleteData: (key: string, index: number) => void
  tree: ComputedRef<PageEditorGroup[]>
  components: Ref<PageEditorComponent[]>
  group: Ref<PageEditorGroup[]>
  selected: Ref<string | undefined>
  value: Ref<UseEditorValue>
  settingPage: PageEditorSettingPage | undefined
}

export interface UseEditorValue {
  config: Record<string, any>
  data: PageEditorData[]
}

export function useEditor({ settingPage }: { settingPage?: PageEditorSettingPage }): UseEditorResult {
  const components = ref<PageEditorComponent[]>([])
  const group = ref<PageEditorGroup[]>([])
  const selected = ref<string>()
  const value = ref<UseEditorValue>({
    config: settingPage?.default || {},
    data: [],
  })

  const clearComponent = () => {
    components.value = []
  }

  const clearGroup = () => {
    group.value = []
  }

  // 添加组件
  const addComponent = (data: PageEditorComponent) => {
    const index = components.value.findIndex(item => item.name === data.name)
    if (index !== -1) {
      return
    }
    components.value.push(data)
  }

  // 添加分组
  const addGroup = (data: PageEditorGroup) => {
    const index = group.value.findIndex(item => item.name === data.name)
    if (index !== -1) {
      return
    }
    group.value.push(data)
  }

  // 获取树形组件
  const tree = computed(() => {
    return group.value.map((item) => {
      return {
        name: item.name,
        label: item.label,
        icon: item.icon,
        children: components.value.filter(comp => comp.group === item.name),
      }
    })
  })

  // 查找数据
  const findDataLoop = (key: string, data: PageEditorData[]): PageEditorData | undefined => {
    for (const item of data) {
      if (!item) {
        continue
      }

      if (Array.isArray(item)) {
        const info = findDataLoop(key, item)
        if (info) {
          return info
        }
        continue
      }

      if (item.key === key) {
        return item
      }

      if (item.children && item.children.length) {
        const info = findDataLoop(key, item.children)
        if (info) {
          return info
        }
      }
    }
  }

  const getData = (key?: string) => {
    if (!key) {
      return
    }
    return findDataLoop(key, value.value.data)
  }

  const { randomUUID } = new ShortUniqueId({ length: 10 })

  const restDataKey = (data: PageEditorData[]) => {
    return data?.map((item) => {
      if (!item) {
        return undefined
      }

      if (Array.isArray(item)) {
        return restDataKey(item)
      }

      item.key = randomUUID()
      if (item.children && item.children.length > 0) {
        item.children = restDataKey(item.children)
      }

      return item
    }).filter(item => item !== undefined)
  }

  const findParent = (data: PageEditorData[], key: string, parent?: PageEditorData | PageEditorData[]): PageEditorData | PageEditorData[] | undefined => {
    for (const node of data) {
      if (!node) {
        continue
      }

      if (Array.isArray(node)) {
        const foundParent = findParent(node, key, node)
        if (foundParent) {
          return foundParent
        }
        continue
      }

      if (node.key === key) {
        return parent
      }

      if (node.children && node.children.length) {
        const foundParent = findParent(node.children, key, node)
        if (foundParent) {
          return foundParent
        }
      }
    }
  }

  const copyData = (key: string, index: number) => {
    const item = getData(key)

    const newItem = JSON.parse(JSON.stringify(item))
    newItem.key = randomUUID()

    if (newItem.children && newItem.children.length > 0) {
      newItem.children = restDataKey(newItem.children)
    }

    const parent = findParent(value.value.data, key)

    if (parent) {
      if (Array.isArray(parent)) {
        parent.splice(index + 1, 0, newItem)
      }
      else {
        parent.children?.splice(index + 1, 0, newItem)
      }
    }
    else {
      value.value.data?.splice(index + 1, 0, newItem)
    }
  }

  const deleteData = (key: string, index: number) => {
    const parent = findParent(value.value.data, key)

    if (parent) {
      if (Array.isArray(parent)) {
        parent.splice(index, 1)
      }
      else {
        parent.children?.splice(index, 1)
      }
    }
    else {
      value.value.data.splice(index, 1)
    }

    selected.value = undefined

    value.value = { ...value.value }
  }

  return {
    clearGroup,
    clearComponent,
    addComponent,
    addGroup,
    tree,
    components,
    group,
    getData,
    selected,
    value,
    copyData,
    deleteData,
    settingPage,
  }
}



---
File: /packages/pro/src/components/designEditor/editor/index.ts
---

export * from './hook'
export * from './preview'
export * from './setting'



---
File: /packages/pro/src/components/designEditor/editor/preview.tsx
---

import type { PropType } from 'vue'
import type { PageEditorData, UseEditorResult } from './hook'
import clsx from 'clsx'
import { defineComponent, inject } from 'vue'
import { VueDraggable } from 'vue-draggable-plus'

export const DuxWidgetEditorPreview = defineComponent({
  name: 'DuxWidgetEditorPreview',
  props: {
    class: String,
    select: String,
    modelValue: Array as PropType<PageEditorData[]>,
    onUpdate: Function,
    onSelect: Function,
  },
  setup(props) {
    const editor = inject<UseEditorResult>('editor.use')

    return () => (
      <>
        <VueDraggable
          modelValue={props.modelValue || []}
          animation={150}
          group="widget"
          handle=".editor-handle"
          class={props.class
            || clsx([
              'h-full flex flex-col gap-2',
              (!props.modelValue || props.modelValue?.length === 0) ? 'p-2' : '',
            ])}
          {...{
            'onUpdate:modelValue': (v) => {
              props.onUpdate?.(v)
            },
          }}
        >
          {props.modelValue?.map((item, index) => {
            const componentData = editor?.components?.value?.find(component => component.name === item.name)

            const componentProps: Record<string, any> = {
              options: item.options,
            }
            if (componentData?.nested) {
              componentProps.children = item.children || []
              componentProps.onChildren = (v) => {
                item.children = v
              }
            }

            return (
              <div
                class={clsx([
                  'border p-2 rounded-sm relative w-full',
                  editor?.selected.value === item.key ? 'bg-primary/10 border-primary border-solid' : 'border-accented border-dashed',
                ])}
                key={item.key}
                onClick={(e) => {
                  e.stopPropagation()
                  if (!editor?.selected) {
                    return
                  }
                  editor.selected.value = item.key
                }}
              >
                <div>
                  {componentData?.component(componentProps)}
                </div>
                {editor?.selected.value === item.key && (
                  <>
                    <div class="absolute right-0 bottom-0  bg-primary flex px-1 rounded-tl z-1">
                      <div
                        class="p-1 text-inverted cursor-pointer  hover:text-inverted/80"
                        onClick={() => {
                          editor.copyData(item.key, index)
                        }}
                      >
                        <div class="i-tabler:copy"></div>
                      </div>
                      <div class="p-1 text-inverted  cursor-pointer hover:text-inverted/80">
                        <div
                          class="i-tabler:trash-x"
                          onClick={() => {
                            editor?.deleteData(item.key, index)
                          }}
                        >
                        </div>
                      </div>

                    </div>
                    <div class="absolute left-0 top-0  bg-primary p-1 text-inverted rounded-br z-1 editor-handle">
                      <div class="i-tabler:arrows-move "></div>
                    </div>
                  </>
                )}
              </div>
            )
          })}
        </VueDraggable>
      </>
    )
  },
})



---
File: /packages/pro/src/components/designEditor/editor/setting.tsx
---

import type { PropType, VNode } from 'vue'
import type { UseEditorResult } from './hook'
import { computed, defineComponent, inject } from 'vue'
import { DuxFormLayout } from '../../../components'

export const WidgetEditorSetting = defineComponent({
  name: 'WidgetEditorSetting',
  props: {
    actionRender: Function as PropType<(editor?: UseEditorResult) => VNode>,
  },
  setup(props) {
    const editor = inject<UseEditorResult>('editor.use')

    const curData = computed(() => {
      return editor?.getData(editor.selected.value)
    })
    const curComponent = computed(() => {
      return editor?.components.value?.find(item => item.name === curData.value?.name)
    })

    return () => (
      <div class="flex-none  p-2 max-w-full w-220px overflow-y-auto bg-default" key={curData.value?.key}>

        {curComponent.value?.setting?.({
          'value': curData.value?.options,
          'update:modelValue': (v) => {
            if (!curData?.value) {
              return
            }
            curData.value.options = v
          },
        })
        || (
          <div class="flex flex-col gap-2 h-full">

            <div class="flex-1 min-h-0">
              {editor?.settingPage?.component?.({
                'value': editor.value.value.config,
                'update:modelValue': (v) => {
                  editor.value.value.config = v
                },
              })}
            </div>

            {props?.actionRender?.(editor)}
          </div>
        )}
      </div>
    )
  },
})

export const WidgetEditorSettingCard = defineComponent({
  name: 'WidgetEditorSettingCard',
  props: {
    title: String,
    icon: String,
  },
  setup(props, { slots }) {
    return () => (
      <div class="flex flex-col">
        <div class="bg-elevated rounded py-2 px-4 flex justify-center items-center gap-2">
          <div>{props.title}</div>
        </div>
        <div class="py-4 flex-1">
          <DuxFormLayout labelPlacement="top">
            {slots.default?.()}
          </DuxFormLayout>
        </div>
      </div>
    )
  },
})



---
File: /packages/pro/src/components/designEditor/editor.tsx
---

import type { PropType, VNode } from 'vue'
import type { PageEditorComponent, PageEditorGroup, PageEditorSettingPage, UseEditorResult, UseEditorValue } from './editor/hook'
import { useI18n } from '@duxweb/dvha-core'

import clsx from 'clsx'
import { cloneDeep } from 'lodash-es'
import { NScrollbar } from 'naive-ui'
import ShortUniqueId from 'short-unique-id'
import { defineComponent, provide, ref, watch } from 'vue'
import { VueDraggable } from 'vue-draggable-plus'
import { DuxCard } from '../card'
import { duxFormEditorGrid } from './components/grid'
import { useEditor } from './editor/hook'
import { DuxWidgetEditorPreview } from './editor/preview'
import { WidgetEditorSetting } from './editor/setting'

export const DuxDesignEditor = defineComponent({
  name: 'DuxDesignEditor',
  props: {
    data: Object as PropType<UseEditorValue | undefined>,
    onUpdateData: Function as PropType<(data: UseEditorValue) => void>,
    groups: Array as PropType<PageEditorGroup[]>,
    components: Array as PropType<PageEditorComponent[]>,
    settingPage: Object as PropType<PageEditorSettingPage>,
    actionRender: Function as PropType<(editor?: UseEditorResult) => VNode>,
    previewWrapper: Function as PropType<(preview: VNode, editor?: UseEditorResult) => VNode>,
  },
  setup(props) {
    const { t } = useI18n()

    const editor = useEditor({ settingPage: props.settingPage })
    provide('editor.use', editor)

    // 注册分组与组件
    watch([() => props.components, () => props.groups], () => {
      editor.clearGroup()
      editor.clearComponent()

      // 注册默认分组
      editor.addGroup({
        name: 'layout',
        label: t('components.designEditor.layout') || 'Layout',
        icon: 'i-tabler:layout',
      })

      props.groups?.forEach((group) => {
        editor.addGroup(group)
      })

      editor.addComponent(duxFormEditorGrid(t))

      props.components?.forEach((component) => {
        editor.addComponent(component)
      })
    }, { immediate: true, deep: true })

    // 选中分组
    const groupSelect = ref<string>()

    // 复制组件
    const { randomUUID } = new ShortUniqueId({ length: 10 })
    const compDragClone = (element) => {
      return {
        key: randomUUID(),
        name: element.name,
        options: cloneDeep(element.settingDefault),
      } as any
    }

    watch(() => props.data, (v) => {
      const defaultConfig = props.settingPage?.default || {}
      editor.value.value = {
        config: { ...defaultConfig, ...cloneDeep(v?.config || {}) },
        data: cloneDeep(v?.data || []),
      }
    }, { deep: true, immediate: true })

    watch(editor.value, (v) => {
      props.onUpdateData?.(v)
    }, { deep: true })

    return () => (
      <DuxCard class="h-full" shadow>
        <div class="h-full flex flex-row  text-default">
          <div class="flex-none flex flex-col gap-2  border-r border-default bg-default p-2">
            <MainMenuItem
              title={t('components.designEditor.all') || 'All'}
              icon="i-tabler:hexagons"
              active={!groupSelect.value}
              onClick={() => {
                groupSelect.value = undefined
              }}
            />
            {editor.group.value?.map((item, key) => (
              <MainMenuItem
                key={key}
                active={groupSelect.value === item.name}
                title={item.label}
                icon={item.icon}
                onClick={() => {
                  groupSelect.value = item.name
                }}
              />
            ))}
          </div>
          <div class="flex-none text-xs w-180px bg-default" id="comp-list">
            <NScrollbar>
              <div class="flex flex-col gap-4 p-2">
                {editor.tree.value?.filter((group) => {
                  if (groupSelect.value) {
                    return group.name === groupSelect.value
                  }
                  return true
                }).map(group => (
                  <div key={group.name} class="flex flex-col gap-2">
                    <div class="bg-muted border border-muted rounded p-2 flex justify-center">
                      {group.label}
                    </div>
                    <VueDraggable
                      modelValue={group.children || []}
                      animation={150}
                      group={
                        {
                          name: 'widget',
                          pull: 'clone',
                          put: false,
                        }
                      }
                      sort={false}
                      clone={compDragClone}
                      class="grid grid-cols-2 items-start gap-2 "
                    >
                      {group.children?.map(item => (
                        <div key={item.name} class="border border-muted rounded-sm p-2 flex flex-col items-center gap-2 cursor-pointer hover:bg-muted  edit-drag">
                          <div class={clsx([
                            'size-6',
                            item.icon,
                          ])}
                          >
                          </div>
                          <div class="truncate whitespace-nowrap px-2 overflow-hidden">{item.label}</div>
                        </div>
                      ))}
                    </VueDraggable>
                  </div>
                ))}
              </div>
            </NScrollbar>
          </div>
          <div
            class="flex-1 shadow-sm flex flex-col items-center p-6 overflow-auto"
            style="background: linear-gradient(45deg, rgba(0,0,0, 0.1) 25%, transparent 25%), linear-gradient(-45deg, rgba(0,0,0, 0.1) 25%, transparent 25%), linear-gradient(45deg, transparent 75%, rgba(0,0,0, 0.1) 75%), linear-gradient(-45deg, transparent 75%, rgba(0,0,0, 0.1) 75%); background-size: 20px 20px; background-position: 0 0, 0 10px, 10px -10px, -10px 0px;"
          >

            <div
              class="max-w-2xl w-full flex-1 bg-default shadow p-2"
              onClick={() => {
                editor.selected.value = undefined
              }}
            >
              {props.previewWrapper
                ? props.previewWrapper(<DuxWidgetEditorPreview modelValue={editor.value.value?.data} onUpdate={v => editor.value.value.data = v} />, editor)
                : <DuxWidgetEditorPreview modelValue={editor.value.value?.data} onUpdate={v => editor.value.value.data = v} />}
            </div>
          </div>
          <WidgetEditorSetting actionRender={props.actionRender} />
        </div>
      </DuxCard>
    )
  },
})

interface MainMenuItemProps {
  title: string
  icon: string
  onClick?: () => void
  active?: boolean
}

function MainMenuItem({ title, icon, active, onClick }: MainMenuItemProps) {
  return (
    <div
      class={clsx([
        'flex flex-col items-center px-3 py-2 hover:bg-primary/10 cursor-pointer rounded-sm',
        active ? 'bg-primary/10 text-primary' : '',
      ])}
      onClick={onClick}
    >
      <div class={clsx([
        'size-4',
        icon,
      ])}
      >
      </div>
      <div class="truncate whitespace-nowrap text-default text-sm">{title}</div>
    </div>
  )
}



---
File: /packages/pro/src/components/designEditor/index.ts
---

export * from './components'
export * from './editor'
export * from './editor/index'



---
File: /packages/pro/src/components/dialog/dialog.tsx
---

import type { JsonSchemaData } from '@duxweb/dvha-core'
import type { PropType } from 'vue'
import { useI18n, useJsonSchema } from '@duxweb/dvha-core'
import { useExtendOverlay } from '@overlastic/vue'
import { NButton, NForm, NModal } from 'naive-ui'
import { defineComponent, h, reactive, ref } from 'vue'

export default defineComponent({
  name: 'DuxDialog',
  props: {
    title: String,
    content: String,
    type: String as PropType<'confirm' | 'success' | 'error' | 'prompt' | 'node'>,
    formSchema: Array as PropType<JsonSchemaData>,
    defaultValue: Object as PropType<Record<string, any>>,
    render: Function,
  },
  setup(props) {
    const { t } = useI18n()
    const { visible, resolve, reject, vanish } = useExtendOverlay({
      duration: 1000,
    })

    const data = reactive({
      title: props?.title,
      content: props?.content,
      button: 'default',
    })

    if (props.type === 'confirm') {
      data.title = data.title || t('components.dialog.confirm.title')
      data.content = data.content || t('components.dialog.confirm.content')
      data.button = 'primary'
    }

    if (props.type === 'success') {
      data.title = data.title || t('components.dialog.success.title')
      data.content = data.content || t('components.dialog.success.content')
      data.button = 'success'
    }

    if (props.type === 'error') {
      data.title = data.title || t('components.dialog.error.title')
      data.content = data.content || t('components.dialog.error.content')
      data.button = 'error'
    }

    if (props.type === 'prompt') {
      data.title = data.title || t('components.dialog.prompt.title')
      data.button = 'primary'
    }

    const form = ref<Record<string, any>>({
      ...props.defaultValue,
    })

    const { render } = useJsonSchema({
      data: props.formSchema || [],
      context: {
        form: form.value,
      },
    })

    return () => (
      <NModal
        displayDirective="show"
        show={visible.value}
        onAfterLeave={() => {
          vanish()
        }}
        onClose={() => {
          reject()
        }}
        onEsc={() => {
          reject()
        }}
        role="dialog"
        aria-modal="true"
        draggable={true}
      >
        {{
          default: ({ draggableClass }) => (
            <div
              class={[
                'w-400px rounded border border-muted max-w-full shadow-lg shadow-gray-950/10 bg-white/70 dark:shadow-gray-950/80  dark:bg-gray-900/70 backdrop-blur',

              ]}
            >
              {props.type !== 'node'
                ? (
                    <div class={[
                      'p-6 pb-2 flex gap-4',
                      draggableClass,
                    ]}
                    >
                      <div>
                        {(props.type === 'confirm' || props.type === 'prompt') && (
                          <div class="bg-warning bg-opacity-10 text-warning rounded-full p-2">
                            <div class="i-tabler:info-circle size-5"></div>
                          </div>
                        )}
                        {props.type === 'success' && (
                          <div class="bg-success bg-opacity-10 text-success rounded-full p-2">
                            <div class="i-tabler:check size-5"></div>
                          </div>
                        )}
                        {props.type === 'error' && (
                          <div class="bg-error bg-opacity-10 text-error rounded-full p-2">
                            <div class="i-tabler:alert-triangle size-5"></div>
                          </div>
                        )}
                      </div>
                      <div class="flex flex-1 flex-col gap-2">
                        <div class="text-base font-bold">{data.title}</div>
                        {props.type === 'prompt'
                          ? (
                              <NForm labelAlign="left" showLabel={false} showFeedback={false} class="py-2">
                                {h(render)}
                              </NForm>
                            )
                          : (
                              <div class="text-sm text-gray-500">{data.content}</div>
                            )}
                      </div>
                    </div>
                  )
                : (
                    <div class="p-4 flex flex-col gap-4">
                      <div class="text-base font-bold">{data.title}</div>
                      {props.render?.()}
                    </div>
                  )}
              <div class="px-4  pb-4 flex justify-end gap-2">
                {(props.type === 'confirm' || props.type === 'prompt') && (
                  <NButton
                    tertiary
                    aria-label={t('components.button.cancel')}
                    type={data.button as any}
                    onClick={() => {
                      reject()
                    }}
                  >
                    {t('components.button.cancel')}
                  </NButton>
                )}
                <NButton
                  aria-label={t('components.button.confirm')}
                  type={data.button as any}
                  onClick={() => {
                    resolve(form.value)
                  }}
                >
                  {t('components.button.confirm')}
                </NButton>
              </div>
            </div>
          ),
        }}
      </NModal>
    )
  },
})



---
File: /packages/pro/src/components/dialog/index.ts
---

export { default as DuxDialog } from './dialog'



---
File: /packages/pro/src/components/draw/drawApps.tsx
---

import { defineComponent } from 'vue'

export const DuxDrawApps = defineComponent({
  name: 'DuxDrawApps',
  setup() {
    return () => (
      <svg
        xmlns="http://www.w3.org/2000/svg"
        viewBox="0 0 716.79 683.19"
      >
        <path
          d="m450.81,682c0,.66.53,1.19,1.19,1.19h263.59c.66,0,1.19-.53,1.19-1.19s-.53-1.19-1.19-1.19h-263.59c-.66,0-1.19.53-1.19,1.19Z"
          fill="#3f3d58"
        />
        <g>
          <path
            d="m546.64,348.65l-3.05,7.63s-2.81,10.68.48,14.94,4.02,36.87.49,39.28c-3.54,2.41,44.82-22.33,44.82-22.33,0,0-18.88-43.78-19.2-43.94s-12.69-4.02-12.69-4.02l-10.84,8.43Z"
            fill="#2f2e43"
          />
          <polygon points="578.12 386.36 561.92 391.69 561.92 368.37 576.62 368.37 578.12 386.36" fill="#f6a6a9" />
          <path
            id="uuid-48393ca6-ae17-4485-8fd8-05ea309d195e-638"
            d="m528.6,518.76c-.88,5.34-4.44,9.17-7.96,8.56-3.52-.62-5.66-5.45-4.78-10.79.32-2.14,1.17-4.16,2.47-5.9l4.02-22.59,10.93,2.29-5.12,22.02c.67,2.08.83,4.28.44,6.41,0,0,0,0,0,0Z"
            fill="#f6a6a9"
          />
          <rect x="556.86" y="647.44" width="15.18" height="21.53" fill="#f6a6a9" />
          <path
            d="m542.08,682c-1.6,0-3.02-.04-4.09-.14-4.03-.37-7.88-3.34-9.81-5.08-.87-.78-1.15-2.03-.69-3.1h0c.32-.77.97-1.35,1.78-1.58l10.65-3.04,17.25-11.64.19.34c.07.13,1.77,3.18,2.33,5.24.22.78.16,1.44-.17,1.94-.23.35-.54.55-.8.67.31.33,1.29.99,4.3,1.47,4.4.7,5.32-3.86,5.36-4.05l.03-.15.13-.08c2.09-1.35,3.38-1.96,3.83-1.83.28.08.74.22,1.99,12.64.13.39,1,3.25.41,5.98-.65,2.97-13.63,1.95-16.23,1.71-.07,0-9.8.7-16.46.7Z"
            fill="#2f2e43"
          />
          <rect
            x="606.91"
            y="632.91"
            width="15.18"
            height="21.53"
            transform="translate(-247.53 422.68) rotate(-31.95)"
            fill="#f6a6a9"
          />
          <path
            d="m598.14,679.05c-1.78,0-3.42-.21-4.58-.42-1.15-.2-2.04-1.11-2.23-2.26h0c-.13-.83.11-1.66.67-2.28l7.43-8.22,8.48-19,.35.19c.13.07,3.18,1.76,4.75,3.21.6.55.9,1.14.88,1.74,0,.42-.17.76-.32.99.44.11,1.62.16,4.43-1.03,4.1-1.73,2.48-6.09,2.4-6.28l-.06-.14.07-.14c1.06-2.25,1.83-3.46,2.28-3.58.28-.08.75-.2,8.38,9.67.31.26,2.57,2.22,3.51,4.86,1.02,2.87-10.54,8.87-12.86,10.04-.07.06-12.17,8.85-17.13,11.35-1.97.99-4.3,1.3-6.43,1.3Z"
            fill="#2f2e43"
          />
          <path
            d="m583.21,467.41h-42.48l-3.86,39.52,16.87,146.02h21.69l-8.67-84.34,35.18,76.14,19.28-13.49-27.47-71.08s9.81-61.93,2.1-77.35c-7.71-15.42-12.63-15.42-12.63-15.42Z"
            fill="#2f2e43"
          />
          <polygon points="604.34 469.82 530.6 469.82 557.11 382.59 586.51 382.59 604.34 469.82" fill="#e6e6e6" />
          <path
            d="m561.75,382.6s-18.31-.48-20.24,4.34c-1.93,4.82-24.58,119.52-24.58,119.52h14.94l29.88-123.86Z"
            fill="#e6e6e6"
          />
          <circle cx="563.93" cy="358.68" r="16.14" fill="#f6a6a9" />
          <path
            d="m567.06,333.6s19.44-4.98,25.38,20.88c0,0,.16,6.75,3.53,9.48,3.37,2.73,2.25,16.87,2.25,16.87,0,0,6.43,10.6.96,15.42,0,0-2.41,9.8,1.12,15.42,3.53,5.62,16.87,36.55-5.3,38.43,0,0-11.24-6.79-5.94-27.03,5.3-20.24-.64-31.42-.64-31.42,0,0-17.03-6.17-16.06-19.35.96-13.17-10.92-26.18-11.73-26.02s-9.16-4.66-12.85,10.12l-3.96-.67s-1.66-24.87,23.24-22.14Z"
            fill="#2f2e43"
          />
          <g>
            <path
              id="uuid-5634515f-d760-4925-b0a8-442b9e09929d-639"
              d="m616.92,516.16c1.08,5.31-.89,10.15-4.4,10.83-3.51.67-7.22-3.08-8.3-8.39-.46-2.11-.39-4.31.21-6.39l-4.27-22.54,11.03-1.74,3.03,22.41c1.37,1.71,2.29,3.71,2.69,5.84,0,0,0,0,0,0Z"
              fill="#f6a6a9"
            />
            <path
              d="m573.66,382.7s16.13-2.04,18.06,2.78c1.93,4.82,24.58,119.52,24.58,119.52h-14.94s-27.69-122.29-27.69-122.29Z"
              fill="#e6e6e6"
            />
          </g>
        </g>
        <path
          d="m96.98,211.83H18.38c-10.13,0-18.38-8.24-18.38-18.38v-78.6c0-10.13,8.24-18.38,18.38-18.38h78.6c10.13,0,18.38,8.24,18.38,18.38v78.6c0,10.13-8.24,18.38-18.38,18.38ZM18.38,98.48c-9.03,0-16.38,7.35-16.38,16.38v78.6c0,9.03,7.35,16.38,16.38,16.38h78.6c9.03,0,16.38-7.35,16.38-16.38v-78.6c0-9.03-7.35-16.38-16.38-16.38H18.38Z"
          fill="#ccc"
        />
        <path
          d="m267.66,211.83h-78.6c-10.13,0-18.38-8.24-18.38-18.38v-78.6c0-10.13,8.24-18.38,18.38-18.38h78.6c10.13,0,18.38,8.24,18.38,18.38v78.6c0,10.13-8.24,18.38-18.38,18.38Zm-78.6-113.36c-9.03,0-16.38,7.35-16.38,16.38v78.6c0,9.03,7.35,16.38,16.38,16.38h78.6c9.03,0,16.38-7.35,16.38-16.38v-78.6c0-9.03-7.35-16.38-16.38-16.38h-78.6Z"
          fill="#ccc"
        />
        <path
          d="m267.66,425.9h-78.6c-10.13,0-18.38-8.24-18.38-18.38v-78.6c0-10.13,8.24-18.38,18.38-18.38h78.6c10.13,0,18.38,8.24,18.38,18.38v78.6c0,10.13-8.24,18.38-18.38,18.38Zm-78.6-113.36c-9.03,0-16.38,7.35-16.38,16.38v78.6c0,9.03,7.35,16.38,16.38,16.38h78.6c9.03,0,16.38-7.35,16.38-16.38v-78.6c0-9.03-7.35-16.38-16.38-16.38h-78.6Z"
          fill="#ccc"
        />
        <path
          d="m96.98,425.9H18.38c-10.13,0-18.38-8.24-18.38-18.38v-78.6c0-10.13,8.24-18.38,18.38-18.38h78.6c10.13,0,18.38,8.24,18.38,18.38v78.6c0,10.13-8.24,18.38-18.38,18.38Zm-78.6-113.36c-9.03,0-16.38,7.35-16.38,16.38v78.6c0,9.03,7.35,16.38,16.38,16.38h78.6c9.03,0,16.38-7.35,16.38-16.38v-78.6c0-9.03-7.35-16.38-16.38-16.38H18.38Z"
          fill="#ccc"
        />
        <circle cx="111.03" cy="315.66" r="23.31" fill="rgba(var(--ui-color-primary))" />
        <path
          d="m438.34,211.83h-78.6c-10.13,0-18.38-8.24-18.38-18.38v-78.6c0-10.13,8.24-18.38,18.38-18.38h78.6c10.13,0,18.38,8.24,18.38,18.38v78.6c0,10.13-8.24,18.38-18.38,18.38Zm-78.6-113.36c-9.03,0-16.38,7.35-16.38,16.38v78.6c0,9.03,7.35,16.38,16.38,16.38h78.6c9.03,0,16.38-7.35,16.38-16.38v-78.6c0-9.03-7.35-16.38-16.38-16.38h-78.6Z"
          fill="#ccc"
        />
        <circle cx="455.72" cy="101.6" r="23.31" fill="rgba(var(--ui-color-primary))" />
        <path
          d="m78.21,235.83H31.32c-3.67,0-6.65-2.98-6.65-6.65s2.98-6.65,6.65-6.65h46.89c3.67,0,6.65,2.98,6.65,6.65s-2.98,6.65-6.65,6.65Z"
          fill="#e6e6e6"
        />
        <path
          d="m251.8,235.83h-46.89c-3.67,0-6.65-2.98-6.65-6.65s2.98-6.65,6.65-6.65h46.89c3.67,0,6.65,2.98,6.65,6.65s-2.98,6.65-6.65,6.65Z"
          fill="#e6e6e6"
        />
        <path
          d="m425.4,235.83h-46.89c-3.67,0-6.65-2.98-6.65-6.65s2.98-6.65,6.65-6.65h46.89c3.67,0,6.65,2.98,6.65,6.65s-2.98,6.65-6.65,6.65Z"
          fill="#e6e6e6"
        />
        <path
          d="m438.34,427.9h-78.6c-10.13,0-18.38-8.24-18.38-18.38v-78.6c0-10.13,8.24-18.38,18.38-18.38h78.6c10.13,0,18.38,8.24,18.38,18.38v78.6c0,10.13-8.24,18.38-18.38,18.38Zm-78.6-113.36c-9.03,0-16.38,7.35-16.38,16.38v78.6c0,9.03,7.35,16.38,16.38,16.38h78.6c9.03,0,16.38-7.35,16.38-16.38v-78.6c0-9.03-7.35-16.38-16.38-16.38h-78.6Z"
          fill="#ccc"
        />
        <path
          d="m425.4,451.89h-46.89c-3.67,0-6.65-2.98-6.65-6.65s2.98-6.65,6.65-6.65h46.89c3.67,0,6.65,2.98,6.65,6.65s-2.98,6.65-6.65,6.65Z"
          fill="#e6e6e6"
        />
        <path
          d="m609.03,211.83h-78.6c-10.13,0-18.38-8.24-18.38-18.38v-78.6c0-10.13,8.24-18.38,18.38-18.38h78.6c10.13,0,18.38,8.24,18.38,18.38v78.6c0,10.13-8.24,18.38-18.38,18.38Zm-78.6-113.36c-9.03,0-16.38,7.35-16.38,16.38v78.6c0,9.03,7.35,16.38,16.38,16.38h78.6c9.03,0,16.38-7.35,16.38-16.38v-78.6c0-9.03-7.35-16.38-16.38-16.38h-78.6Z"
          fill="#ccc"
        />
        <path
          d="m596.08,235.83h-46.89c-3.67,0-6.65-2.98-6.65-6.65s2.98-6.65,6.65-6.65h46.89c3.67,0,6.65,2.98,6.65,6.65s-2.98,6.65-6.65,6.65Z"
          fill="#e6e6e6"
        />
        <path
          d="m78.21,449.89H31.32c-3.67,0-6.65-2.98-6.65-6.65s2.98-6.65,6.65-6.65h46.89c3.67,0,6.65,2.98,6.65,6.65s-2.98,6.65-6.65,6.65Z"
          fill="#e6e6e6"
        />
        <path
          d="m251.8,449.89h-46.89c-3.67,0-6.65-2.98-6.65-6.65s2.98-6.65,6.65-6.65h46.89c3.67,0,6.65,2.98,6.65,6.65s-2.98,6.65-6.65,6.65Z"
          fill="#e6e6e6"
        />
        <g>
          <circle cx="297.74" cy="513.92" r="5.72" fill="rgba(var(--ui-color-primary))" />
          <circle cx="314.7" cy="513.92" r="5.72" fill="#e6e6e6" />
          <circle cx="331.66" cy="513.92" r="5.72" fill="#e6e6e6" />
        </g>
        <path
          d="m393.26,28.19h-157.14c-7.77,0-14.09-6.32-14.09-14.09s6.32-14.09,14.09-14.09h157.14c7.77,0,14.09,6.32,14.09,14.09s-6.32,14.09-14.09,14.09ZM236.13,2c-6.67,0-12.09,5.43-12.09,12.09s5.43,12.09,12.09,12.09h157.14c6.67,0,12.09-5.43,12.09-12.09s-5.43-12.09-12.09-12.09h-157.14Z"
          fill="#ccc"
        />
        <g>
          <path
            d="m281.11,17.78c-3.16,0-5.73-2.57-5.73-5.73s2.57-5.73,5.73-5.73,5.73,2.57,5.73,5.73-2.57,5.73-5.73,5.73Zm0-9.9c-2.3,0-4.17,1.87-4.17,4.17s1.87,4.17,4.17,4.17,4.17-1.87,4.17-4.17-1.87-4.17-4.17-4.17Z"
            fill="#484662"
          />
          <path
            d="m291.91,22.47c-.18,0-.36-.06-.51-.19l-7.24-6.21c-.33-.28-.36-.77-.08-1.1.28-.33.77-.36,1.1-.08l7.24,6.21c.33.28.36.77.08,1.1-.15.18-.37.27-.59.27Z"
            fill="#484662"
          />
        </g>
      </svg>

    )
  },
})



---
File: /packages/pro/src/components/draw/drawAuth.tsx
---

import { defineComponent } from 'vue'

export const DuxDrawAuth = defineComponent({
  name: 'DuxDrawAuth',
  setup() {
    return () => (
      <svg viewBox="0 0 150 150" fill="none" xmlns="http://www.w3.org/2000/svg">
        <path id="Ellipse 653" d="M150 75C150 116.42 116.42 150 75 150C33.57 150 0 116.42 0 75C0 33.57 33.57 0 75 0C116.42 0 150 33.57 150 75Z" fill="rgba(var(--ui-color-primary) / .3)" fill-opacity="1.000000" fill-rule="evenodd" />
        <path id="Subtraction 1" d="M120 150L30 150L30 53C34.24 52.99 38.3 51.3 41.3 48.3C44.3 45.3 45.99 41.24 46 37L104 37C103.99 39.1 104.4 41.18 105.21 43.12C106.01 45.06 107.2 46.82 108.69 48.3C110.17 49.79 111.93 50.98 113.87 51.78C115.81 52.59 117.89 53 120 53L120 150Z" fill="rgba(var(--ui-bg-muted))" fill-opacity="1.000000" fill-rule="evenodd" />
        <path id="Ellipse 665" d="M99 78C99 91.25 88.25 102 75 102C61.74 102 51 91.25 51 78C51 64.74 61.74 54 75 54C88.25 54 99 64.74 99 78Z" fill="rgba(var(--ui-color-primary))" fill-opacity="1.000000" fill-rule="evenodd" />
        <path id="Path 25936" d="M83.48 89.31L75 80.82L66.51 89.31L63.68 86.48L72.17 78L63.68 69.51L66.51 66.68L75 75.17L83.48 66.68L86.31 69.51L77.82 78L86.31 86.48L83.48 89.31Z" fill="rgba(var(--ui-bg-muted))" fill-opacity="1.000000" fill-rule="evenodd" />
        <path id="Rectangle 5617" d="M62 108L88 108C89.65 108 91 109.34 91 111C91 112.65 89.65 114 88 114L62 114C60.34 114 59 112.65 59 111C59 109.34 60.34 108 62 108Z" fill="rgba(var(--ui-color-primary) / .2)" fill-opacity="1.000000" fill-rule="evenodd" />
        <path id="Rectangle 5618" d="M53 120L97 120C98.65 120 100 121.34 100 123C100 124.65 98.65 126 97 126L53 126C51.34 126 50 124.65 50 123C50 121.34 51.34 120 53 120Z" fill="rgba(var(--ui-color-primary) / .2)" fill-opacity="1.000000" fill-rule="evenodd" />
      </svg>

    )
  },
})



---
File: /packages/pro/src/components/draw/drawEmpty.tsx
---

import { defineComponent } from 'vue'

export const DuxDrawEmpty = defineComponent({
  name: 'DuxDrawEmpty',
  setup() {
    return () => (
      <svg viewBox="0 0 150 178" fill="none" xmlns="http://www.w3.org/2000/svg">
        <defs>
          <linearGradient id="paint_linear_1_218_0" x1="75.000000" y1="17.000000" x2="75.000000" y2="167.000000" gradientUnits="userSpaceOnUse">
            <stop stop-color="rgb(var(--ui-color-primary) / .2)" />
            <stop offset="1.000000" stop-color="rgb(var(--ui-color-primary) / .2)" />
          </linearGradient>
        </defs>
        <path id="Ellipse 652" d="M150 92C150 133.42 116.42 167 75 167C33.57 167 0 133.42 0 92C0 50.57 33.57 17 75 17C116.42 17 150 50.57 150 92Z" fill="url(#paint_linear_1_218_0)" fill-opacity="1.000000" fill-rule="evenodd" />
        <g>
          <path id="Rectangle 5615" d="M32 60L118 60C120.76 60 123 62.23 123 65L123 170C123 172.76 120.76 175 118 175L32 175C29.23 175 27 172.76 27 170L27 65C27 62.23 29.23 60 32 60Z" fill="rgb(var(--ui-bg-muted))" fill-opacity="1.000000" fill-rule="evenodd" />
        </g>
        <path id="Rectangle 5617" d="M39 75L65 75C66.65 75 68 76.34 68 78C68 79.65 66.65 81 65 81L39 81C37.34 81 36 79.65 36 78C36 76.34 37.34 75 39 75Z" fill="rgb(var(--ui-color-primary-300))" fill-opacity="1.000000" fill-rule="evenodd" />
        <path id="Rectangle 5618" d="M39 88L83 88C84.65 88 86 89.34 86 91C86 92.65 84.65 94 83 94L39 94C37.34 94 36 92.65 36 91C36 89.34 37.34 88 39 88Z" fill="rgb(var(--ui-color-primary-100))" fill-opacity="1.000000" fill-rule="evenodd" />
        <path id="Rectangle 5617" d="M39 102L65 102C66.65 102 68 103.34 68 105C68 106.65 66.65 108 65 108L39 108C37.34 108 36 106.65 36 105C36 103.34 37.34 102 39 102Z" fill="rgb(var(--ui-color-primary-300))" fill-opacity="1.000000" fill-rule="evenodd" />
        <path id="Rectangle 5618" d="M39 115L83 115C84.65 115 86 116.34 86 118C86 119.65 84.65 121 83 121L39 121C37.34 121 36 119.65 36 118C36 116.34 37.34 115 39 115Z" fill="rgb(var(--ui-color-primary-100))" fill-opacity="1.000000" fill-rule="evenodd" />
        <path id="Rectangle 5617" d="M39 129L65 129C66.65 129 68 130.34 68 132C68 133.65 66.65 135 65 135L39 135C37.34 135 36 133.65 36 132C36 130.34 37.34 129 39 129Z" fill="rgb(var(--ui-color-primary-300))" fill-opacity="1.000000" fill-rule="evenodd" />
        <path id="Rectangle 5618" d="M39 142L83 142C84.65 142 86 143.34 86 145C86 146.65 84.65 148 83 148L39 148C37.34 148 36 146.65 36 145C36 143.34 37.34 142 39 142Z" fill="rgb(var(--ui-color-primary-100))" fill-opacity="1.000000" fill-rule="evenodd" />
        <g>
          <path id="Rectangle 5616" d="M32 9L118 9C120.76 9 123 11.23 123 14L123 44C123 46.76 120.76 49 118 49L32 49C29.23 49 27 46.76 27 44L27 14C27 11.23 29.23 9 32 9Z" fill="rgb(var(--ui-color-primary))" fill-opacity="1.000000" fill-rule="evenodd" />
        </g>
        <path id="Rectangle 5617" d="M39 20L65 20C66.65 20 68 21.34 68 23C68 24.65 66.65 26 65 26L39 26C37.34 26 36 24.65 36 23C36 21.34 37.34 20 39 20Z" fill="rgb(var(--ui-color-primary-300))" fill-opacity="1.000000" fill-rule="evenodd" />
        <path id="Rectangle 5618" d="M39 33L83 33C84.65 33 86 34.34 86 36C86 37.65 84.65 39 83 39L39 39C37.34 39 36 37.65 36 36C36 34.34 37.34 33 39 33Z" fill="rgb(var(--ui-color-gray-100))" fill-opacity="1.000000" fill-rule="evenodd" />
      </svg>
    )
  },
})



---
File: /packages/pro/src/components/draw/drawEmptyForm.tsx
---

import { defineComponent } from 'vue'

export const DuxDrawEmptyForm = defineComponent({
  name: 'DuxDrawEmptyForm',
  setup() {
    return () => (
      <svg viewBox="0 0 162 162" fill="none" xmlns="http://www.w3.org/2000/svg">
        <defs>

          <linearGradient x1="81.000000" y1="9.000000" x2="81.000000" y2="159.000000" id="paint_linear_1_260_0" gradientUnits="userSpaceOnUse">
            <stop stop-color="#E3ECFA" />
            <stop offset="1.000000" stop-color="#DAE7FF" />
          </linearGradient>
          <linearGradient x1="81.000000" y1="9.000000" x2="81.000000" y2="159.000000" id="paint_linear_4_2_0" gradientUnits="userSpaceOnUse">
            <stop stop-color="#E3ECFA" />
            <stop offset="1.000000" stop-color="#DAE7FF" />
          </linearGradient>
        </defs>
        <path id="Ellipse 652" d="M156 84C156 125.42 122.42 159 81 159C39.57 159 6 125.42 6 84C6 42.57 39.57 9 81 9C122.42 9 156 42.57 156 84Z" fill="rgba(var(--ui-color-primary) / .3)" fill-opacity="1.000000" fill-rule="evenodd" />
        <g filter="url(#filter_1_261_dd)">
          <mask id="mask4_2" mask-type="alpha" maskUnits="userSpaceOnUse" x="6.000000" y="9.000000" width="150.000000" height="150.000000">
            <path id="Ellipse 653" d="M156 84C156 125.42 122.42 159 81 159C39.57 159 6 125.42 6 84C6 42.57 39.57 9 81 9C122.42 9 156 42.57 156 84Z" fill="url(#paint_linear_4_2_0)" fill-opacity="1.000000" fill-rule="evenodd" />
          </mask>
          <g mask="url(#mask4_2)">
            <path id="Rectangle 5615" d="M38 52L124 52C126.76 52 129 54.23 129 57L129 162C129 164.76 126.76 167 124 167L38 167C35.23 167 33 164.76 33 162L33 57C33 54.23 35.23 52 38 52Z" fill="rgba(var(--ui-bg-elevated))" fill-opacity="1.000000" fill-rule="evenodd" />
          </g>
        </g>
        <path id="Rectangle 5617" d="M46 62L72 62C73.65 62 75 63.34 75 65C75 66.65 73.65 68 72 68L46 68C44.34 68 43 66.65 43 65C43 63.34 44.34 62 46 62Z" fill="rgba(var(--ui-color-primary), .2)" fill-opacity="1.000000" fill-rule="evenodd" />
        <path id="Rectangle 5620" d="M46 104L72 104C73.65 104 75 105.34 75 107C75 108.65 73.65 110 72 110L46 110C44.34 110 43 108.65 43 107C43 105.34 44.34 104 46 104Z" fill="rgba(var(--ui-color-primary), .2)" fill-opacity="1.000000" fill-rule="evenodd" />
        <path id="Vector" d="M114 77C116.2 77 118 78.79 118 81L118 91C118 93.2 116.2 95 114 95L48 95C45.79 95 44 93.2 44 91L44 81C44 78.79 45.79 77 48 77L114 77Z" stroke="rgba(var(--ui-color-primary))" stroke-opacity="1.000000" stroke-width="2.000000" />
        <path id="Rectangle 5619" d="M48 118L114 118C116.76 118 119 120.23 119 123L119 131C119 133.76 116.76 136 114 136L48 136C45.23 136 43 133.76 43 131L43 123C43 120.23 45.23 118 48 118Z" fill="rgba(var(--ui-color-primary) / .3)" fill-opacity="1.000000" fill-rule="evenodd" />
        <path id="Ellipse 654" d="M63 37C63 39.2 61.2 41 59 41C56.79 41 55 39.2 55 37C55 34.79 56.79 33 59 33C61.2 33 63 34.79 63 37Z" fill="rgba(var(--ui-bg-elevated))" fill-opacity="1.000000" fill-rule="evenodd" />
        <path id="Ellipse 655" d="M85 37C85 39.2 83.2 41 81 41C78.79 41 77 39.2 77 37C77 34.79 78.79 33 81 33C83.2 33 85 34.79 85 37Z" fill="rgba(var(--ui-color-primary))" fill-opacity="1.000000" fill-rule="evenodd" />
        <path id="Ellipse 656" d="M107 37C107 39.2 105.2 41 103 41C100.79 41 99 39.2 99 37C99 34.79 100.79 33 103 33C105.2 33 107 34.79 107 37Z" fill="rgba(var(--ui-bg-elevated))" fill-opacity="1.000000" fill-rule="evenodd" />
        <path id="Ellipse 658" d="M97 92C97 94.76 94.76 97 92 97C89.23 97 87 94.76 87 92C87 89.23 89.23 87 92 87C94.76 87 97 89.23 97 92Z" fill="rgba(var(--ui-color-primary) / .3)" fill-opacity="1.000000" fill-rule="evenodd" />
        <path id="Path 25916" d="M95.9 113.37C95.1 113.37 94.36 113.37 93.68 113.32C92.84 113.27 92.03 112.98 91.35 112.49C90.66 112.01 90.12 111.34 89.79 110.57L85.57 102.24C85.26 101.88 85.11 101.41 85.14 100.93C85.18 100.46 85.4 100.02 85.75 99.71C86.05 99.47 86.41 99.34 86.79 99.35C87.07 99.36 87.34 99.42 87.59 99.55C87.83 99.67 88.05 99.85 88.23 100.06L90.14 102.68L90.17 102.71L90.17 92.78C90.17 92.28 90.37 91.81 90.72 91.46C91.06 91.11 91.54 90.92 92.03 90.92C92.52 90.92 93 91.11 93.34 91.46C93.69 91.81 93.89 92.28 93.89 92.78L93.89 99.28C93.87 99.04 93.89 98.79 93.97 98.57C94.05 98.34 94.17 98.13 94.33 97.95C94.5 97.78 94.69 97.63 94.91 97.54C95.13 97.44 95.37 97.39 95.61 97.39C95.85 97.39 96.09 97.44 96.31 97.54C96.53 97.63 96.72 97.78 96.89 97.95C97.05 98.13 97.17 98.34 97.25 98.57C97.33 98.79 97.35 99.04 97.33 99.28L97.33 100.63C97.31 100.39 97.34 100.15 97.42 99.92C97.49 99.69 97.62 99.49 97.78 99.31C97.94 99.13 98.14 98.99 98.36 98.89C98.58 98.8 98.81 98.75 99.05 98.75C99.29 98.75 99.53 98.8 99.75 98.89C99.97 98.99 100.17 99.13 100.33 99.31C100.49 99.49 100.62 99.69 100.69 99.92C100.77 100.15 100.8 100.39 100.78 100.63L100.78 101.67C100.75 101.44 100.78 101.19 100.86 100.97C100.94 100.74 101.06 100.53 101.22 100.35C101.38 100.18 101.58 100.03 101.8 99.94C102.02 99.84 102.26 99.79 102.5 99.79C102.74 99.79 102.98 99.84 103.2 99.94C103.42 100.03 103.61 100.18 103.77 100.35C103.94 100.53 104.06 100.74 104.14 100.97C104.21 101.19 104.24 101.44 104.22 101.67L104.22 108.01C104.19 109.96 103.31 113.25 100.21 113.25C99.98 113.26 98.08 113.37 95.91 113.37L95.9 113.37Z" fill="rgba(var(--ui-color-primary))" fill-opacity="1.000000" fill-rule="nonzero" />
        <path id="Path 25916" d="M93.68 113.32C92.84 113.27 92.03 112.98 91.35 112.49C90.66 112.01 90.12 111.34 89.79 110.57L85.57 102.24C85.26 101.88 85.11 101.41 85.14 100.93C85.18 100.46 85.4 100.02 85.75 99.71C86.05 99.47 86.41 99.34 86.79 99.35C87.07 99.36 87.34 99.42 87.59 99.55C87.83 99.67 88.05 99.85 88.23 100.06L90.14 102.68L90.17 102.71L90.17 92.78C90.17 92.28 90.37 91.81 90.72 91.46C91.06 91.11 91.54 90.92 92.03 90.92C92.52 90.92 93 91.11 93.34 91.46C93.69 91.81 93.89 92.28 93.89 92.78L93.89 99.28C93.87 99.04 93.89 98.79 93.97 98.57C94.05 98.34 94.17 98.13 94.33 97.95C94.5 97.78 94.69 97.63 94.91 97.54C95.13 97.44 95.37 97.39 95.61 97.39C95.85 97.39 96.09 97.44 96.31 97.54C96.53 97.63 96.72 97.78 96.89 97.95C97.05 98.13 97.17 98.34 97.25 98.57C97.33 98.79 97.35 99.04 97.33 99.28L97.33 100.63C97.31 100.39 97.34 100.15 97.42 99.92C97.49 99.69 97.62 99.49 97.78 99.31C97.94 99.13 98.14 98.99 98.36 98.89C98.58 98.8 98.81 98.75 99.05 98.75C99.29 98.75 99.53 98.8 99.75 98.89C99.97 98.99 100.17 99.13 100.33 99.31C100.49 99.49 100.62 99.69 100.69 99.92C100.77 100.15 100.8 100.39 100.78 100.63L100.78 101.67C100.75 101.44 100.78 101.19 100.86 100.97C100.94 100.74 101.06 100.53 101.22 100.35C101.38 100.18 101.58 100.03 101.8 99.94C102.02 99.84 102.26 99.79 102.5 99.79C102.74 99.79 102.98 99.84 103.2 99.94C103.42 100.03 103.61 100.18 103.77 100.35C103.94 100.53 104.06 100.74 104.14 100.97C104.21 101.19 104.24 101.44 104.22 101.67L104.22 108.01C104.19 109.96 103.31 113.25 100.21 113.25C99.98 113.26 98.08 113.37 95.91 113.37L95.9 113.37C95.1 113.37 94.36 113.37 93.68 113.32Z" stroke="rgba(var(--ui-bg-elevated))" stroke-opacity="1.000000" stroke-width="1.000000" />
      </svg>

    )
  },
})



---
File: /packages/pro/src/components/draw/drawError.tsx
---

import { defineComponent } from 'vue'

export const DuxDrawError = defineComponent({
  name: 'DuxDrawError',
  setup() {
    return () => (
      <svg viewBox="0 0 200 140" fill="none" xmlns="http://www.w3.org/2000/svg">
        <defs>
          <filter id="filter_1_304_dd" x="0.000000" y="7.000000" width="157.000000" height="47.000000" filterUnits="userSpaceOnUse" color-interpolation-filters="sRGB">
            <feFlood flood-opacity="0" result="BackgroundImageFix" />
            <feColorMatrix in="SourceAlpha" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0" result="hardAlpha" />
            <feOffset dx="0" dy="3" />
            <feGaussianBlur stdDeviation="2" />
            <feComposite in2="hardAlpha" operator="out" k2="-1" k3="1" />
            <feColorMatrix type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.16 0" />
            <feBlend mode="normal" in2="BackgroundImageFix" result="effect_dropShadow_1" />
            <feBlend mode="normal" in="SourceGraphic" in2="effect_dropShadow_1" result="shape" />
          </filter>
          <filter id="filter_1_313_dd" x="43.000000" y="50.000000" width="157.000000" height="47.000000" filterUnits="userSpaceOnUse" color-interpolation-filters="sRGB">
            <feFlood flood-opacity="0" result="BackgroundImageFix" />
            <feColorMatrix in="SourceAlpha" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0" result="hardAlpha" />
            <feOffset dx="0" dy="3" />
            <feGaussianBlur stdDeviation="2" />
            <feComposite in2="hardAlpha" operator="out" k2="-1" k3="1" />
            <feColorMatrix type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.16 0" />
            <feBlend mode="normal" in2="BackgroundImageFix" result="effect_dropShadow_1" />
            <feBlend mode="normal" in="SourceGraphic" in2="effect_dropShadow_1" result="shape" />
          </filter>
          <filter id="filter_1_322_dd" x="0.000000" y="93.000000" width="157.000000" height="47.000000" filterUnits="userSpaceOnUse" color-interpolation-filters="sRGB">
            <feFlood flood-opacity="0" result="BackgroundImageFix" />
            <feColorMatrix in="SourceAlpha" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0" result="hardAlpha" />
            <feOffset dx="0" dy="3" />
            <feGaussianBlur stdDeviation="2" />
            <feComposite in2="hardAlpha" operator="out" k2="-1" k3="1" />
            <feColorMatrix type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.16 0" />
            <feBlend mode="normal" in2="BackgroundImageFix" result="effect_dropShadow_1" />
            <feBlend mode="normal" in="SourceGraphic" in2="effect_dropShadow_1" result="shape" />
          </filter>
          <linearGradient id="paint_linear_1_302_0" x1="102.000000" y1="0.000000" x2="102.000000" y2="140.000000" gradientUnits="userSpaceOnUse">
            <stop stop-color="rgba(var(--ui-color-warning) / 0.2)" />
            <stop offset="1.000000" stop-color="rgba(var(--ui-color-warning) / 0.2)" />
          </linearGradient>
        </defs>
        <path id="Rectangle 5622" d="M42 0L162 0C167.52 0 172 4.47 172 10L172 130C172 135.52 167.52 140 162 140L42 140C36.47 140 32 135.52 32 130L32 10C32 4.47 36.47 0 42 0Z" fill="url(#paint_linear_1_302_0)" fill-opacity="1.000000" fill-rule="evenodd" />
        <g filter="url(#filter_1_304_dd)">
          <path id="Rectangle 5623" d="M11 10L146 10C148.76 10 151 12.23 151 15L151 40C151 42.76 148.76 45 146 45L11 45C8.23 45 6 42.76 6 40L6 15C6 12.23 8.23 10 11 10Z" fill="rgba(var(--ui-color-bg-muted))" fill-opacity="1.000000" fill-rule="evenodd" />
        </g>
        <path id="Rectangle 5617" d="M49 18L75 18C76.65 18 78 19.34 78 21C78 22.65 76.65 24 75 24L49 24C47.34 24 46 22.65 46 21C46 19.34 47.34 18 49 18Z" fill="rgba(var(--ui-color-warning) / 0.4)" fill-opacity="1.000000" fill-rule="evenodd" />
        <path id="Rectangle 5618" d="M49 31L93 31C94.65 31 96 32.34 96 34C96 35.65 94.65 37 93 37L49 37C47.34 37 46 35.65 46 34C46 32.34 47.34 31 49 31Z" fill="rgba(var(--ui-color-warning) / 0.2)" fill-opacity="1.000000" fill-rule="evenodd" />
        <path id="Rectangle 5624" d="M14 13L33 13C35.76 13 38 15.23 38 18L38 37C38 39.76 35.76 42 33 42L14 42C11.23 42 9 39.76 9 37L9 18C9 15.23 11.23 13 14 13Z" fill="rgba(var(--ui-color-warning) / 0.8)" fill-opacity="1.000000" fill-rule="evenodd" />
        <path id="Path 25917" d="M21.22 30.78L23.22 30.78L23.24 30.01C23.24 28.99 23.88 28.73 24.78 28.44C25.68 28.19 26.48 27.64 27.05 26.89C27.62 26.14 27.92 25.23 27.93 24.29C27.94 23.71 27.85 23.14 27.63 22.6C27.42 22.07 27.1 21.59 26.69 21.18C26.28 20.78 25.79 20.47 25.25 20.26C24.72 20.06 24.14 19.97 23.57 20C22.96 19.98 22.36 20.09 21.8 20.32C21.23 20.55 20.72 20.88 20.3 21.31C19.87 21.74 19.53 22.26 19.31 22.82C19.08 23.39 18.98 23.99 18.99 24.6L21.06 24.6C21.05 24.26 21.11 23.93 21.23 23.62C21.36 23.3 21.54 23.02 21.77 22.78C22.01 22.54 22.29 22.35 22.6 22.22C22.9 22.09 23.24 22.02 23.57 22.02C23.87 22 24.18 22.05 24.46 22.16C24.74 22.27 24.99 22.44 25.21 22.65C25.42 22.87 25.58 23.13 25.68 23.42C25.78 23.7 25.82 24.01 25.79 24.31C25.78 24.79 25.61 25.27 25.31 25.65C25.01 26.03 24.59 26.31 24.12 26.44L23.4 26.73C22.68 26.9 22.06 27.33 21.66 27.94C21.25 28.55 21.08 29.28 21.2 30.01L21.22 30.78ZM22.21 35.53C22.4 35.54 22.6 35.5 22.78 35.43C22.96 35.36 23.13 35.26 23.27 35.12C23.41 34.99 23.53 34.82 23.61 34.64C23.68 34.46 23.72 34.27 23.73 34.08C23.72 33.88 23.68 33.69 23.6 33.51C23.53 33.33 23.41 33.16 23.27 33.03C23.13 32.89 22.96 32.79 22.78 32.72C22.6 32.65 22.4 32.62 22.21 32.62C22.01 32.62 21.82 32.65 21.63 32.72C21.45 32.79 21.28 32.89 21.14 33.03C21 33.16 20.89 33.33 20.81 33.51C20.73 33.69 20.69 33.88 20.69 34.08C20.69 34.27 20.73 34.46 20.81 34.64C20.89 34.82 21 34.99 21.14 35.12C21.28 35.26 21.45 35.36 21.63 35.43C21.82 35.5 22.01 35.54 22.21 35.53L22.21 35.53Z" fill="rgba(var(--ui-color-bg-muted))" fill-opacity="1.000000" fill-rule="evenodd" />
        <g filter="url(#filter_1_313_dd)">
          <path id="Path 25918" d="M54 53L189 53C190.32 53 191.59 53.52 192.53 54.46C193.47 55.4 194 56.67 194 58L194 83C194 84.32 193.47 85.59 192.53 86.53C191.59 87.47 190.32 88 189 88L54 88C52.67 88 51.4 87.47 50.46 86.53C49.52 85.59 49 84.32 49 83L49 58C49 56.67 49.52 55.4 50.46 54.46C51.4 53.52 52.67 53 54 53L54 53Z" fill="rgba(var(--ui-color-bg-muted))" fill-opacity="1.000000" fill-rule="evenodd" />
        </g>
        <path id="Rectangle 5617" d="M92 61L118 61C119.65 61 121 62.34 121 64C121 65.65 119.65 67 118 67L92 67C90.34 67 89 65.65 89 64C89 62.34 90.34 61 92 61Z" fill="rgba(var(--ui-color-warning) / 0.4)" fill-opacity="1.000000" fill-rule="evenodd" />
        <path id="Rectangle 5618" d="M92 74L136 74C137.65 74 139 75.34 139 77C139 78.65 137.65 80 136 80L92 80C90.34 80 89 78.65 89 77C89 75.34 90.34 74 92 74Z" fill="rgba(var(--ui-color-warning) / 0.2)" fill-opacity="1.000000" fill-rule="evenodd" />
        <path id="Rectangle 5624" d="M57 56L76 56C78.76 56 81 58.23 81 61L81 80C81 82.76 78.76 85 76 85L57 85C54.23 85 52 82.76 52 80L52 61C52 58.23 54.23 56 57 56Z" fill="rgba(var(--ui-color-warning) / 0.8)" fill-opacity="1.000000" fill-rule="evenodd" />
        <path id="Path 25917" d="M64.22 73.78L66.22 73.78L66.24 73.01C66.24 71.99 66.88 71.73 67.78 71.44C68.68 71.19 69.48 70.64 70.05 69.89C70.62 69.14 70.92 68.23 70.93 67.29C70.94 66.71 70.85 66.14 70.63 65.6C70.42 65.07 70.1 64.59 69.69 64.18C69.28 63.78 68.79 63.47 68.25 63.26C67.72 63.06 67.14 62.97 66.57 63C65.96 62.98 65.36 63.09 64.8 63.32C64.23 63.55 63.72 63.88 63.3 64.31C62.87 64.74 62.53 65.26 62.31 65.82C62.08 66.39 61.98 66.99 61.99 67.6L64.06 67.6C64.05 67.26 64.11 66.93 64.23 66.62C64.36 66.3 64.54 66.02 64.77 65.78C65.01 65.54 65.29 65.35 65.6 65.22C65.9 65.09 66.24 65.02 66.57 65.02C66.87 65 67.18 65.05 67.46 65.16C67.74 65.27 67.99 65.44 68.21 65.65C68.42 65.87 68.58 66.13 68.68 66.42C68.78 66.7 68.82 67.01 68.79 67.31C68.78 67.79 68.61 68.27 68.31 68.65C68.01 69.03 67.59 69.31 67.12 69.44L66.4 69.73C65.68 69.9 65.06 70.33 64.66 70.94C64.25 71.55 64.08 72.28 64.19 73.01L64.22 73.78ZM65.21 78.53C65.4 78.54 65.6 78.5 65.78 78.43C65.96 78.36 66.13 78.26 66.27 78.12C66.41 77.99 66.53 77.82 66.61 77.64C66.68 77.46 66.72 77.27 66.73 77.08C66.72 76.88 66.68 76.69 66.6 76.51C66.53 76.33 66.41 76.16 66.27 76.03C66.13 75.89 65.96 75.79 65.78 75.72C65.6 75.65 65.4 75.62 65.21 75.62C65.01 75.62 64.82 75.65 64.63 75.72C64.45 75.79 64.28 75.89 64.14 76.03C64 76.16 63.89 76.33 63.81 76.51C63.73 76.69 63.69 76.88 63.69 77.08C63.69 77.27 63.73 77.46 63.81 77.64C63.89 77.82 64 77.99 64.14 78.12C64.28 78.26 64.45 78.36 64.63 78.43C64.82 78.5 65.01 78.54 65.21 78.53L65.21 78.53Z" fill="rgba(var(--ui-color-bg-muted))" fill-opacity="1.000000" fill-rule="evenodd" />
        <g filter="url(#filter_1_322_dd)">
          <path id="Path 25919" d="M11 96L146 96C147.32 96 148.59 96.52 149.53 97.46C150.47 98.4 151 99.67 151 101L151 126C151 127.32 150.47 128.59 149.53 129.53C148.59 130.47 147.32 131 146 131L11 131C9.67 131 8.4 130.47 7.46 129.53C6.52 128.59 6 127.32 6 126L6 101C6 99.67 6.52 98.4 7.46 97.46C8.4 96.52 9.67 96 11 96L11 96Z" fill="rgba(var(--ui-color-bg-muted))" fill-opacity="1.000000" fill-rule="evenodd" />
        </g>
        <path id="Rectangle 5617" d="M49 104L75 104C76.65 104 78 105.34 78 107C78 108.65 76.65 110 75 110L49 110C47.34 110 46 108.65 46 107C46 105.34 47.34 104 49 104Z" fill="rgba(var(--ui-color-warning) / 0.4)" fill-opacity="1.000000" fill-rule="evenodd" />
        <path id="Rectangle 5618" d="M49 117L93 117C94.65 117 96 118.34 96 120C96 121.65 94.65 123 93 123L49 123C47.34 123 46 121.65 46 120C46 118.34 47.34 117 49 117Z" fill="rgba(var(--ui-color-warning) / 0.2)" fill-opacity="1.000000" fill-rule="evenodd" />
        <path id="Rectangle 5624" d="M14 99L33 99C35.76 99 38 101.23 38 104L38 123C38 125.76 35.76 128 33 128L14 128C11.23 128 9 125.76 9 123L9 104C9 101.23 11.23 99 14 99Z" fill="rgba(var(--ui-color-warning) / 0.8)" fill-opacity="1.000000" fill-rule="evenodd" />
        <path id="Path 25917" d="M21.22 116.78L23.22 116.78L23.24 116.01C23.24 114.99 23.88 114.73 24.78 114.44C25.68 114.19 26.48 113.64 27.05 112.89C27.62 112.14 27.92 111.23 27.93 110.29C27.94 109.71 27.85 109.14 27.63 108.61C27.42 108.07 27.1 107.59 26.69 107.18C26.28 106.78 25.79 106.47 25.25 106.26C24.72 106.06 24.14 105.97 23.57 106C22.96 105.98 22.36 106.09 21.8 106.32C21.23 106.55 20.72 106.88 20.3 107.31C19.87 107.75 19.53 108.26 19.31 108.82C19.08 109.39 18.98 109.99 18.99 110.6L21.06 110.6C21.05 110.26 21.11 109.93 21.23 109.62C21.36 109.3 21.54 109.02 21.77 108.78C22.01 108.54 22.29 108.35 22.6 108.22C22.9 108.09 23.24 108.02 23.57 108.02C23.87 108 24.18 108.05 24.46 108.16C24.74 108.27 24.99 108.44 25.21 108.66C25.42 108.87 25.58 109.13 25.68 109.42C25.78 109.7 25.82 110.01 25.79 110.31C25.78 110.8 25.61 111.27 25.31 111.65C25.01 112.03 24.59 112.31 24.12 112.44L23.4 112.73C22.68 112.9 22.06 113.33 21.66 113.94C21.25 114.55 21.08 115.28 21.2 116.01L21.22 116.78ZM22.21 121.53C22.4 121.54 22.6 121.5 22.78 121.43C22.96 121.36 23.13 121.26 23.27 121.12C23.41 120.99 23.53 120.83 23.61 120.65C23.68 120.47 23.72 120.27 23.73 120.08C23.72 119.88 23.68 119.69 23.6 119.51C23.53 119.33 23.41 119.16 23.27 119.03C23.13 118.89 22.96 118.79 22.78 118.72C22.6 118.65 22.4 118.62 22.21 118.62C22.01 118.62 21.82 118.65 21.63 118.72C21.45 118.79 21.28 118.89 21.14 119.03C21 119.16 20.89 119.33 20.81 119.51C20.73 119.69 20.69 119.88 20.69 120.08C20.69 120.27 20.73 120.47 20.81 120.65C20.89 120.83 21 120.99 21.14 121.12C21.28 121.26 21.45 121.36 21.63 121.43C21.82 121.5 22.01 121.54 22.21 121.53L22.21 121.53Z" fill="rgba(var(--ui-color-bg-muted))" fill-opacity="1.000000" fill-rule="evenodd" />
      </svg>
    )
  },
})



---
File: /packages/pro/src/components/draw/index.ts
---

export * from './drawApps'
export * from './drawAuth'
export * from './drawEmpty'
export * from './drawEmptyForm'
export * from './drawError'



---
File: /packages/pro/src/components/drawer/drawer.tsx
---

import type { AsyncComponentLoader, Component, PropType } from 'vue'
import { useExtendOverlay } from '@overlastic/vue'
import { NDrawer, NSpin } from 'naive-ui'
import { defineAsyncComponent, defineComponent, Suspense } from 'vue'

export default defineComponent({
  name: 'DuxDrawer',
  props: {
    title: String,
    width: [Number, String],
    maxWidth: [Number],
    placement: {
      type: String as PropType<'left' | 'right' | 'top' | 'bottom'>,
      default: 'right',
    },
    component: {
      type: [Function, Object] as PropType<AsyncComponentLoader<any> | Component>,
      required: true,
    },
    componentProps: Object,
  },
  setup(props) {
    const { visible, resolve, reject, vanish } = useExtendOverlay({
      duration: 1000,
    })

    const params = props?.componentProps || {}
    params.title = props.title
    params.onConfirm = resolve
    params.onClose = reject

    const Page = typeof props.component === 'function'
      ? defineAsyncComponent(props.component as AsyncComponentLoader<any>)
      : props.component as Component

    return () => (
      <NDrawer
        closeOnEsc={false}
        maskClosable={false}
        minWidth={200}
        maxWidth={props?.maxWidth || 800}
        defaultWidth={props?.width || 400}
        resizable={true}
        placement={props.placement}
        show={visible.value}
        onUpdateShow={() => resolve()}
        onAfterLeave={() => {
          vanish()
        }}
        onEsc={() => {
          reject()
        }}
        autoFocus={false}
      >
        <div class="h-full">
          <Suspense>
            {{
              default: () => <Page {...params} />,
              fallback: () => (
                <NSpin show class="h-full">
                  <div class="flex-1 min-h-1"></div>
                </NSpin>
              ),
            }}
          </Suspense>

        </div>
      </NDrawer>
    )
  },
})



---
File: /packages/pro/src/components/drawer/drawerPage.tsx
---

import type { PropType } from 'vue'
import { NButton, NScrollbar } from 'naive-ui'
import { defineComponent, nextTick, ref, watch } from 'vue'

export const DuxDrawerPage = defineComponent({
  name: 'DuxDrawerPage',
  props: {
    title: String,
    onClose: Function as PropType<() => void>,
    onConfirm: Function as PropType<() => void>,
    scrollbar: {
      type: Boolean,
      default: true,
    },
  },
  setup(props, { slots }) {
    const closeRef = ref()

    watch(closeRef, (val) => {
      if (val) {
        nextTick(() => {
          val.$el?.focus?.()
        })
      }
    })

    return () => (
      <div class="h-full flex flex-col">
        <div class="flex justify-between items-center p-2 border-b border-default">
          <div class="text-base">{props?.title}</div>
          <div class="flex items-center gap-2">
            {slots.header?.()}
            <NButton quaternary ref={closeRef} size="small" color="default" class="!px-1 h-6" onClick={() => props.onClose?.()}>
              <div class="i-tabler:x w-5 h-5"></div>
            </NButton>
          </div>
        </div>
        <div class="flex-1 min-h-1">
          {props.scrollbar ? <NScrollbar>{slots.default?.()}</NScrollbar> : slots.default?.()}
        </div>
        {slots.footer && (
          <div class="flex-none border-t border-muted p-4 flex justify-end gap-2">
            {slots.footer?.({
              onClose: props.onClose,
              onConfirm: props.onConfirm,
            })}
          </div>
        )}
      </div>
    )
  },
})



---
File: /packages/pro/src/components/drawer/index.ts
---

export { default as DuxDrawer } from './drawer'
export * from './drawerPage'



---
File: /packages/pro/src/components/editor/aiEditor.tsx
---

import type { AiMessage } from 'aieditor'
import type { PropType } from 'vue'
import { useGetAuth, useI18n, useManage, useTheme, useUpload } from '@duxweb/dvha-core'
import { useVModel } from '@vueuse/core'
import { AiEditor } from 'aieditor'
import { useMessage } from 'naive-ui'
import { computed, defineComponent, onMounted, onUnmounted, ref, watch } from 'vue'

export const DuxAiEditor = defineComponent({
  name: 'DuxAiEditor',
  props: {
    value: String,
    defaultValue: String,
    uploadPath: String,
    uploadHeaders: Object as PropType<Record<string, any>>,
    aiPath: String,
    height: {
      type: String,
      default: '500px',
    },
    onUpdateValue: Function as PropType<(value: string) => void>,
  },
  setup(props, { emit }) {
    const divRef = ref()
    let aiEditor: AiEditor | null = null

    const theme = useTheme()
    const { config } = useManage()
    const auth = useGetAuth()
    const { t } = useI18n()
    const message = useMessage()

    const model = useVModel(props, 'value', emit, {
      passive: true,
    })

    const uploadPath = computed(() => {
      return props.uploadPath || config.apiPath?.upload || 'upload'
    })

    const upload = useUpload({
      path: uploadPath.value,
      autoUpload: false,
    })

    watch(model, (value) => {
      if (!aiEditor) {
        return
      }
      aiEditor.setContent(value || '')
      props.onUpdateValue?.(model.value || '')
    }, { immediate: true })

    const editorUpload = (file: File): Promise<Record<string, any>> => {
      return new Promise((resolve, reject) => {
        upload.addFiles([file], 'file').then(() => {
          upload.trigger().then((res) => {
            res.forEach((item) => {
              const data = item?.data?.data
              resolve({
                errorCode: 0,
                data: {
                  src: data?.url,
                  alt: item?.filename,
                },
              })
            })
          }).catch((error) => {
            message.error(error.message)
            reject(error)
          }).finally(() => {
            upload.clearFiles()
          })
        })
      })
    }

    onMounted(() => {
      aiEditor = new AiEditor({
        theme: theme.isDark.value ? 'dark' : 'light',
        element: divRef.value as Element,
        placeholder: t('components.editor.placeholder'),
        content: props.defaultValue || '',
        onBlur: (aiEditor) => {
          model.value = aiEditor.getHtml()
        },
        image: {
          uploadUrl: uploadPath.value,
          uploadHeaders: props.uploadHeaders || {},
          uploader: editorUpload,
        },
        video: {
          uploadUrl: uploadPath.value,
          uploadHeaders: props.uploadHeaders || {},
          uploader: editorUpload,
        },
        attachment: {
          uploadUrl: uploadPath.value,
          uploadHeaders: props.uploadHeaders || {},
          uploader: editorUpload,
        },
        ai: {
          models: {
            custom: {
              url: props.aiPath || config.apiPath?.ai || 'ai',
              headers: () => {
                return {
                  'Content-Type': 'application/json',
                  'Authorization': auth.token,
                }
              },
              wrapPayload: (message: string) => {
                return JSON.stringify({ prompt: message })
              },
              parseMessage: (message: string): AiMessage => {
                const data = JSON.parse(message)
                return {
                  role: 'assistant',
                  content: data.message,
                  index: data.number,
                  status: data.status,
                }
              },
              protocol: 'sse',
            },
          },
        },
      })
    })

    onUnmounted(() => {
      aiEditor?.destroy()
    })

    watch(theme.isDark, (value) => {
      if (!divRef.value) {
        return
      }
      divRef.value.classList.remove('aie-theme-dark', 'aie-theme-light')
      divRef.value.classList.add(value ? 'aie-theme-dark' : 'aie-theme-light')
    }, { immediate: true })

    return () => (
      <div ref={divRef} style={`height: ${props.height}; width:100%`} />
    )
  },
})



---
File: /packages/pro/src/components/editor/index.ts
---

export * from './aiEditor'



---
File: /packages/pro/src/components/form/drawerForm.tsx
---

import type { IDataProviderError, IDataProviderResponse } from '@duxweb/dvha-core'
import type { MaybeRef, PropType } from 'vue'
import { useExtendForm, useI18n, useInvalidate } from '@duxweb/dvha-core'
import { NButton, NScrollbar, useMessage } from 'naive-ui'
import { computed, defineComponent, toRef } from 'vue'
import { DuxDrawerPage } from '..'
import { DuxFormLayout } from './formLayout'

export const DuxDrawerForm = defineComponent({
  name: 'DuxDrawerForm',
  props: {
    id: {
      type: [String, Number] as PropType<string | number>,
    },
    action: {
      type: String as PropType<'create' | 'edit'>,
    },
    path: {
      type: String as PropType<string>,
    },
    data: {
      type: Object as PropType<MaybeRef<Record<string, any>>>,
    },
    onClose: {
      type: Function as PropType<() => void>,
    },
    title: {
      type: String as PropType<string>,
    },
    onSuccess: {
      type: Function as PropType<(data?: IDataProviderResponse) => void>,
    },
    onError: {
      type: Function as PropType<(error?: IDataProviderError) => void>,
    },
    invalidate: {
      type: String as PropType<string>,
    },
  },
  extends: DuxFormLayout,
  setup(props, { slots }) {
    const { t } = useI18n()
    const formProps = computed(() => {
      const { onClose, onSuccess, onError, action, title, id, path, data, ...rest } = props
      return rest
    })
    const form = toRef(props, 'data', {})
    const message = useMessage()
    const { invalidate } = useInvalidate()

    const { isLoading, onSubmit, onReset, isEdit } = useExtendForm({
      id: props.id,
      path: props.path,
      form,
      action: props.action,
      onError: (error) => {
        message.error(error.message || t('components.form.error') as string)
        props.onError?.(error)
      },
      onSuccess: (data) => {
        message.success(t('components.form.success') as string)
        props.onSuccess?.(data)
        props.onClose?.()
        if (props.invalidate) {
          invalidate(props.invalidate)
        }
      },
    })

    return () => (
      <DuxDrawerPage scrollbar={false} title={props?.title || (isEdit.value ? t('components.form.edit') : t('components.form.create'))} onClose={props?.onClose}>
        {{
          default: () => (
            <NScrollbar>
              <DuxFormLayout
                class="p-4"
                {...formProps.value}
              >
                {slots?.default?.()}
              </DuxFormLayout>
            </NScrollbar>
          ),
          footer: () => (
            <>
              <NButton onClick={onReset} loading={isLoading.value}>
                {t('components.button.reset')}
              </NButton>
              <NButton type="primary" loading={isLoading.value} onClick={() => onSubmit()}>
                {t('components.button.submit')}
              </NButton>
            </>
          ),
        }}
      </DuxDrawerPage>
    )
  },
})



---
File: /packages/pro/src/components/form/formItem.tsx
---

import type { RuleExpression } from 'vee-validate'
import type { PropType, VNode } from 'vue'
import { watchThrottled } from '@vueuse/core'
import { NTooltip } from 'naive-ui'
import { useField } from 'vee-validate'
import { computed, defineComponent, inject, ref, toRef, watch } from 'vue'

export const DuxFormItem = defineComponent({
  name: 'DuxFormItem',
  props: {
    label: String,
    description: [String, Object] as PropType<string | VNode>,
    tooltip: String,
    path: String,
    labelPlacement: {
      type: String as PropType<'left' | 'top' | 'setting' | 'page'>,
    },
    labelAlign: {
      type: String as PropType<'left' | 'right'>,
    },
    labelWidth: {
      type: Number,
    },
    required: {
      type: Boolean,
      default: false,
    },
    rule: [String, Object] as PropType<RuleExpression<any>>,
    message: [String, Object] as PropType<string | Record<string, string>>,
  },
  setup(props, { slots }) {
    const message = toRef(props.message)
    const rule = computed(() => {
      if (typeof props.rule === 'object') {
        return {
          ...props.rule,
          required: !!props.required,
        }
      }
      if (typeof props.rule === 'string') {
        return props.rule?.includes('required') ? props.rule : (props.rule ? `${props.rule}|required` : 'required')
      }
      return props.rule
    })
    const { errorMessage, value, setErrors, validate } = useField(props.path || '', rule.value || {}, {
      label: props.label,
    })

    const isRequired = computed(() => {
      if (props.required)
        return true

      if (!props.rule)
        return false

      if (typeof props.rule === 'string') {
        return props.rule.includes('required')
      }

      if (typeof props.rule === 'object') {
        return 'required' in props.rule
      }
      return false
    })

    const error = computed(() => {
      return errorMessage.value && (message.value || errorMessage.value)
    })

    watch(error, (newError) => {
      if (newError) {
        setErrors(newError as string)
      }
    }, { immediate: true })

    watchThrottled(value, (v) => {
      if (!v) {
        return
      }
      validate()
    }, { throttle: 300, deep: true })

    const form = inject('dux.form', {
      labelPlacement: ref('left'),
      labelAlign: ref('left'),
      labelWidth: ref(70),
      divider: ref(false),
    })

    const labelPlacement = computed(() => {
      return props.labelPlacement || form.labelPlacement.value
    })

    const labelWidth = computed(() => {
      let width: string | number = props.labelWidth || form.labelWidth.value || 70
      if (typeof width === 'number') {
        width = `${width}px`
      }
      return labelPlacement.value !== 'left' ? 'auto' : width
    })

    const divider = computed(() => {
      return form.divider.value || labelPlacement.value === 'page'
    })

    return () => (
      <div class={[
        labelPlacement.value !== 'top' ? 'md:flex-row gap-2 lg:items-center' : 'gap-1',
        divider.value ? 'py-6' : '',
        labelPlacement.value === 'setting' ? 'md:justify-between md:items-start md:gap-4' : '',
        labelPlacement.value === 'page' ? 'grid grid-cols-1 lg:grid-cols-4 px-4' : 'flex flex-col',
      ]}
      >
        {props.label && (
          <div
            class={[
              labelPlacement.value === 'left' ? 'flex lg:items-center' : 'md:mb-1',
              labelPlacement.value === 'left' && form.labelAlign.value === 'right' ? 'justify-end' : '',
            ]}
            style={{ width: labelWidth.value }}
          >
            <div class="flex flex-col">
              <div>
                <span class="relative flex items-center gap-1">
                  {props.label}
                  {props.tooltip && (
                    <NTooltip trigger="hover">
                      {{
                        trigger: () => <div class="i-tabler:help size-4 text-muted"></div>,
                        default: () => props.tooltip,
                      }}
                    </NTooltip>
                  )}
                  {isRequired.value && <span class="text-error font-mono text-xs">*</span>}
                </span>
              </div>
              {props.description && (labelPlacement.value === 'setting' || labelPlacement.value === 'page') && (
                <div class="text-sm text-muted">
                  {props.description}
                </div>
              )}
            </div>
          </div>
        )}
        <div class={[
          'flex flex-col gap-1',
          labelPlacement.value === 'setting' ? 'flex-none md:w-40%' : 'flex-1',
          labelPlacement.value === 'page' ? 'col-span-3' : '',
        ]}
        >
          <div class={labelPlacement.value === 'setting' ? 'flex-1 lg:flex lg:justify-end' : ''}>
            {slots?.default?.()}
          </div>
          {props.description && (labelPlacement.value === 'left' || labelPlacement.value === 'top') && (
            <div class="text-sm text-muted">
              {props.description}
            </div>
          )}

          {error.value && (
            <div class="text-error">
              {error.value}
            </div>
          )}
        </div>
      </div>
    )
  },
})



---
File: /packages/pro/src/components/form/formLayout.tsx
---

import type { PropType } from 'vue'
import { defineComponent, provide, toRef } from 'vue'

export const DuxFormLayout = defineComponent({
  name: 'DuxFormLayout',
  props: {
    labelPlacement: {
      type: String as PropType<'left' | 'top' | 'setting' | 'page'>,
      default: 'left',
    },
    labelAlign: {
      type: String as PropType<'left' | 'right'>,
      default: 'left',
    },
    labelWidth: {
      type: Number,
    },
    inline: {
      type: Boolean,
      default: false,
    },
    divider: {
      type: Boolean,
      default: false,
    },
  },
  setup(props, { slots }) {
    provide('dux.form', {
      labelPlacement: toRef(props, 'labelPlacement'),
      labelAlign: toRef(props, 'labelAlign'),
      labelWidth: toRef(props, 'labelWidth'),
      divider: toRef(props, 'divider'),
    })

    return () => (
      <div class={[
        'flex ',
        (props.divider || props.labelPlacement === 'page') ? ' divide-y divide-default dark:divide-gray-800' : '',
        props.inline ? 'flex-row' : 'flex-col',
        props.labelPlacement === 'page' || props.labelPlacement === 'setting' ? 'container mx-auto' : 'gap-4',
      ]}
      >
        {slots?.default?.()}
      </div>
    )
  },
})



---
File: /packages/pro/src/components/form/index.ts
---

export * from './drawerForm'
export * from './formItem'
export * from './formLayout'
export * from './modalForm'
export * from './pageForm'
export * from './pageTabForm'
export * from './settingForm'



---
File: /packages/pro/src/components/form/modalForm.tsx
---

import type { IDataProviderError, IDataProviderResponse } from '@duxweb/dvha-core'
import type { MaybeRef, PropType } from 'vue'
import { useExtendForm, useI18n, useInvalidate } from '@duxweb/dvha-core'
import { NButton, useMessage } from 'naive-ui'
import { computed, defineComponent, toRef } from 'vue'
import { DuxModalPage } from '../../components'
import { DuxFormLayout } from './formLayout'

export const DuxModalForm = defineComponent({
  name: 'DuxModalForm',
  props: {
    id: {
      type: [String, Number] as PropType<string | number>,
    },
    action: {
      type: String as PropType<'create' | 'edit'>,
    },
    path: {
      type: String as PropType<string>,
    },
    data: {
      type: Object as PropType<MaybeRef<Record<string, any>>>,
    },
    onClose: {
      type: Function as PropType<() => void>,
    },
    title: {
      type: String as PropType<string>,
    },
    invalidate: {
      type: String as PropType<string>,
    },
    onSuccess: {
      type: Function as PropType<(data?: IDataProviderResponse) => void>,
    },
    onError: {
      type: Function as PropType<(error?: IDataProviderError) => void>,
    },
  },
  extends: DuxFormLayout,
  setup(props, { slots }) {
    const { t } = useI18n()
    const formProps = computed(() => {
      const { onClose, onSuccess, onError, action, title, id, path, data, ...rest } = props
      return rest
    })
    const form = toRef(props, 'data', {})
    const message = useMessage()

    const { invalidate } = useInvalidate()

    const { isLoading, onSubmit, onReset, isEdit } = useExtendForm({
      id: props.id,
      path: props.path,
      form,
      action: props.action,
      onError: (error) => {
        message.error(error.message || t('components.form.error') as string)
        props.onError?.(error)
      },
      onSuccess: (data) => {
        if (props.invalidate) {
          invalidate(props.invalidate)
        }
        message.success(t('components.form.success') as string)
        props.onSuccess?.(data)
        props.onClose?.()
      },
    })

    return () => (
      <DuxModalPage title={props?.title || (isEdit.value ? t('components.form.edit') : t('components.form.create'))} onClose={props?.onClose}>
        {{
          default: () => (
            <DuxFormLayout
              {...formProps.value}
            >
              {slots?.default?.()}
            </DuxFormLayout>
          ),
          footer: () => (
            <>
              <NButton onClick={onReset} loading={isLoading.value}>
                {t('components.button.reset')}
              </NButton>
              <NButton type="primary" loading={isLoading.value} onClick={() => onSubmit()}>
                {t('components.button.submit')}
              </NButton>
            </>
          ),
        }}
      </DuxModalPage>
    )
  },
})



---
File: /packages/pro/src/components/form/pageForm.tsx
---

import type { IDataProviderError, IDataProviderResponse } from '@duxweb/dvha-core'
import type { MaybeRef, PropType } from 'vue'
import { useExtendForm, useI18n, useInvalidate, useTabStore } from '@duxweb/dvha-core'
import { NButton, NScrollbar, useMessage } from 'naive-ui'
import { defineComponent, toRef } from 'vue'
import { useRouter } from 'vue-router'
import { DuxPage } from '../../pages'
import { DuxCard } from '../card'
import { DuxFormLayout } from './formLayout'

export const DuxPageForm = defineComponent({
  name: 'DuxPageForm',
  props: {
    id: {
      type: [String, Number] as PropType<string | number>,
    },
    action: {
      type: String as PropType<'create' | 'edit'>,
    },
    title: {
      type: String as PropType<string>,
    },
    description: {
      type: String as PropType<string>,
    },
    labelPlacement: {
      type: String as PropType<'left' | 'top' | 'setting' | 'page'>,
      default: 'left',
    },
    path: {
      type: String as PropType<string>,
    },
    data: {
      type: Object as PropType<MaybeRef<Record<string, any>>>,
    },
    onSuccess: {
      type: Function as PropType<(data?: IDataProviderResponse) => void>,
    },
    onError: {
      type: Function as PropType<(error?: IDataProviderError) => void>,
    },
    invalidate: {
      type: String as PropType<string>,
    },
  },
  setup(props, { slots }) {
    const { t } = useI18n()
    const form = toRef(props, 'data', {})

    const message = useMessage()
    const router = useRouter()
    const tab = useTabStore()
    const { invalidate } = useInvalidate()

    const result = useExtendForm({
      id: props.id,
      path: props.path,
      form,
      action: props.action,
      onError: (error) => {
        message.error(error.message || t('components.form.error') as string)
        props.onError?.(error)
      },
      onSuccess: (data) => {
        message.success(t('components.form.success') as string)
        props.onSuccess?.(data)

        if (!result.isEdit.value && tab.current) {
          tab.delTab(tab.current, v => router.push(v.path || ''))
        }
        if (props.invalidate) {
          invalidate(props.invalidate)
        }
      },
    })

    const tabInfo = tab.tabs.find(v => v.path === tab.current)

    return () => (
      <DuxPage card={false} scrollbar={false}>
        <DuxCard
          title={props?.title || tabInfo?.label || (result.isEdit.value ? t('components.form.edit') : t('components.form.create'))}
          description={props?.description}
          class="h-full flex flex-col"
          contentClass="flex-1 min-h-0"
          contentSize="none"
          header-bordered
        >
          {{
            default: () => (
              <NScrollbar>
                <DuxFormLayout labelPlacement={props.labelPlacement} class="p-4">
                  {slots?.default?.(result)}
                </DuxFormLayout>
              </NScrollbar>
            ),
            headerExtra: () => (
              <div class="flex gap-6 items-center">
                {slots?.actions?.(result)}
                <div class="flex gap-2">
                  <NButton onClick={() => result.onReset()} loading={result.isLoading.value}>
                    {{
                      default: () => t('components.button.reset'),
                      icon: () => <i class="i-tabler:refresh" />,
                    }}
                  </NButton>
                  <NButton type="primary" onClick={() => result.onSubmit()} loading={result.isLoading.value}>
                    {{
                      default: () => t('components.button.submit'),
                      icon: () => <i class="i-tabler:device-floppy" />,
                    }}
                  </NButton>
                </div>
              </div>
            ),
          }}
        </DuxCard>
      </DuxPage>
    )
  },
})



---
File: /packages/pro/src/components/form/pageTabForm.tsx
---

import type { IDataProviderError, IDataProviderResponse } from '@duxweb/dvha-core'
import type { MaybeRef, PropType } from 'vue'
import { useExtendForm, useI18n, useInvalidate, useTabStore } from '@duxweb/dvha-core'
import { NButton, NTabs, useMessage } from 'naive-ui'
import { defineComponent, toRef } from 'vue'
import { useRouter } from 'vue-router'
import { DuxPage } from '../../pages'
import { DuxCard } from '../card'

export const DuxPageTabForm = defineComponent({
  name: 'DuxPageTabForm',
  props: {
    id: {
      type: [String, Number] as PropType<string | number>,
    },
    action: {
      type: String as PropType<'create' | 'edit'>,
    },
    title: {
      type: String as PropType<string>,
    },
    path: {
      type: String as PropType<string>,
    },
    data: {
      type: Object as PropType<MaybeRef<Record<string, any>>>,
    },
    onSuccess: {
      type: Function as PropType<(data?: IDataProviderResponse) => void>,
    },
    onError: {
      type: Function as PropType<(error?: IDataProviderError) => void>,
    },
    invalidate: {
      type: String as PropType<string>,
    },
    defaultTab: {
      type: String as PropType<string>,
      default: '0',
    },
  },
  setup(props, { slots }) {
    const { t } = useI18n()
    const form = toRef(props, 'data', {})

    const message = useMessage()
    const router = useRouter()
    const tab = useTabStore()
    const { invalidate } = useInvalidate()

    const result = useExtendForm({
      id: props.id,
      path: props.path,
      form,
      action: props.action,
      onError: (error) => {
        message.error(error.message || t('components.form.error') as string)
        props.onError?.(error)
      },
      onSuccess: (data) => {
        message.success(t('components.form.success') as string)
        props.onSuccess?.(data)

        if (!result.isEdit.value && tab.current) {
          tab.delTab(tab.current, v => router.push(v.path || ''))
        }
        if (props.invalidate) {
          invalidate(props.invalidate)
        }
      },
    })

    return () => (
      <DuxPage card={false} scrollbar={false}>
        <DuxCard class="h-full">
          <NTabs
            class="app-page-tabs"
            type="line"
            size="large"
            defaultValue={props.defaultTab}
          >
            {{
              prefix: () => (
                <div class="w-1">
                </div>
              ),
              default: () => slots?.default?.(result),
              suffix: () => (
                <div class="flex gap-6 items-center px-3">
                  {slots?.actions?.(result)}
                  <div class="flex gap-2">
                    <NButton onClick={() => result.onReset()} loading={result.isLoading.value}>
                      {{
                        default: () => t('components.button.reset'),
                        icon: () => <i class="i-tabler:refresh" />,
                      }}
                    </NButton>
                    <NButton type="primary" onClick={() => result.onSubmit()} loading={result.isLoading.value}>
                      {{
                        default: () => t('components.button.submit'),
                        icon: () => <i class="i-tabler:device-floppy" />,
                      }}
                    </NButton>
                  </div>
                </div>
              ),
            }}
          </NTabs>
        </DuxCard>
      </DuxPage>
    )
  },
})



---
File: /packages/pro/src/components/form/settingForm.tsx
---

import type { IDataProviderError, IDataProviderResponse } from '@duxweb/dvha-core'
import type { MaybeRef, PropType } from 'vue'
import { useExtendForm, useI18n, useInvalidate } from '@duxweb/dvha-core'
import { NTabs, useMessage } from 'naive-ui'
import { computed, defineComponent, ref, toRef } from 'vue'
import { DuxPage } from '../../pages'

export const DuxSettingForm = defineComponent({
  name: 'DuxSettingForm',
  props: {
    id: {
      type: [String, Number] as PropType<string | number>,
    },
    action: {
      type: String as PropType<'create' | 'edit'>,
    },
    path: {
      type: String as PropType<string>,
    },
    data: {
      type: Object as PropType<MaybeRef<Record<string, any>>>,
    },
    onSuccess: {
      type: Function as PropType<(data?: IDataProviderResponse) => void>,
    },
    onError: {
      type: Function as PropType<(error?: IDataProviderError) => void>,
    },
    tabs: {
      type: Boolean,
      default: false,
    },
    defaultTab: {
      type: String,
      default: '',
    },
    size: {
      type: String as PropType<'small' | 'medium' | 'large'>,
      default: 'medium',
    },
    invalidate: {
      type: String as PropType<string>,
    },
  },
  setup(props, { slots }) {
    const activeTab = ref(props.defaultTab)
    const form = toRef(props, 'data', {})
    const { t } = useI18n()

    const message = useMessage()
    const { invalidate } = useInvalidate()

    const result = useExtendForm({
      id: props.id,
      path: props.path,
      form,
      action: props.action,
      onError: (error) => {
        message.error(error.message || t('components.form.error') as string)
        props.onError?.(error)
      },
      onSuccess: (data) => {
        message.success(t('components.form.success') as string)
        props.onSuccess?.(data)
        if (props.invalidate) {
          invalidate(props.invalidate)
        }
      },
    })

    const sizeClass = computed(() => {
      switch (props.size) {
        case 'small':
          return 'lg:max-w-lg'
        case 'large':
          return 'lg:max-w-4xl'
        case 'medium':
        default:
          return 'lg:max-w-2xl'
      }
    })

    return () => (
      <DuxPage>
        <div class={`flex flex-col gap-6 w-full ${sizeClass.value} mx-auto py-4`}>
          {props.tabs
            ? (
                <NTabs
                  defaultValue={props.defaultTab}
                  value={activeTab.value}
                  onUpdateValue={(value) => {
                    activeTab.value = value
                  }}
                  type="segment"
                >
                  {slots?.default?.(result)}
                </NTabs>
              )
            : (
                slots?.default?.(result)
              )}
        </div>
      </DuxPage>
    )
  },
})



---
File: /packages/pro/src/components/formEditor/base/base.tsx
---

import { useI18n } from '@duxweb/dvha-core'
import { useVModel } from '@vueuse/core'
import { NInput } from 'naive-ui'
import { defineComponent } from 'vue'
import { WidgetEditorSettingCard } from '../../designEditor'
import { DuxFormItem } from '../../../components'

export const DuxFormEditorItem = defineComponent({
  name: 'DuxFormEditorItem',
  props: {
    value: {
      type: Object,
      default: [],
    },
  },
  setup(props, { emit }) {
    const { t } = useI18n()
    const data = useVModel(props, 'value', emit)

    return () => (
      <WidgetEditorSettingCard title={t('components.formEditor.componentConfig')}>
        <DuxFormItem label={t('components.formEditor.common.label')} path="label">
          <NInput
            v-model:value={data.value.label}
          />
        </DuxFormItem>
        <DuxFormItem label={t('components.formEditor.common.name')}>
          <NInput
            v-model:value={data.value.name}
          />
        </DuxFormItem>
        <DuxFormItem label={t('components.formEditor.common.desc')}>
          <NInput
            v-model:value={data.value.desc}
          />
        </DuxFormItem>
      </WidgetEditorSettingCard>
    )
  },
})

export const DuxFormEditorRule = defineComponent({
  name: 'FormEditorInput',
  props: {
    value: {
      type: Array,
      default: [],
    },
  },
  setup(props, { emit }) {
    const { t } = useI18n()
    const data = useVModel(props, 'value', emit)

    return () => (
      <WidgetEditorSettingCard title={t('components.formEditor.validation')}>
        <NInput
          v-model:value={data.value}
        />
      </WidgetEditorSettingCard>
    )
  },
})



---
File: /packages/pro/src/components/formEditor/base/index.ts
---

export * from './base'
export * from './setting'
export * from './json'
export * from './options'


---
File: /packages/pro/src/components/formEditor/base/json.tsx
---

import { useVModel } from '@vueuse/core'
import { defineComponent } from 'vue'
import { DuxModalPage } from '../../modal'
import { DuxCodeEditor } from '../../code'

const DuxFormEditorJson = defineComponent({
  name: 'DuxFormEditorJson',
  props: {
    value: {
      type: String,
      default: [],
    },
    onChange: Function,
    desc: String,
  },
  setup(props, { emit }) {
    const data = useVModel(props, 'value', emit, {
      passive: true,
      defaultValue: '',
      shouldEmit: (v) => {
        props.onChange?.(v)
        return true
      },
    })
    return () => (
      <DuxModalPage>
        <div class="flex flex-col gap-4">
          {props.desc && <div class="px-4 py-3 border border-primary-5 bg-primary/10 rounded-sm text-primary text-sm">{props.desc}</div>}
          <DuxCodeEditor v-model:value={data.value} />
        </div>
      </DuxModalPage>
    )
  },
})
export default DuxFormEditorJson



---
File: /packages/pro/src/components/formEditor/base/options.tsx
---

import type { PropType } from 'vue'
import { useVModel } from '@vueuse/core'
import { NDynamicInput, NInput } from 'naive-ui'
import { defineComponent } from 'vue'
import { DuxModalPage } from '../../modal'

interface OptionItem {
  label: string
  value: string
}

const DuxFormEditorOptions = defineComponent({
  name: 'DuxFormEditorOptions',
  props: {
    value: {
      type: Array,
      default: [],
    },
    onChange: Function,
    options: Array as PropType<OptionItem[]>,
  },
  setup(props, { emit }) {
    const data = useVModel(props, 'value', emit, {
      passive: true,
      defaultValue: [],
      shouldEmit: (v) => {
        props.onChange?.(v)
        return true
      },
    })
    return () => (
      <DuxModalPage>
        <NDynamicInput
          v-model:value={data.value}
          onCreate={() => {
            return {
              label: '',
              value: undefined,
            }
          }}
        >
          {{
            default: ({ value }) => (
              <div class="grid grid-cols-2 gap-2">
                {props.options?.map((item, index) => <NInput key={index} v-model:value={value[item.value]} />)}
              </div>
            ),
          }}
        </NDynamicInput>
      </DuxModalPage>
    )
  },
})
export default DuxFormEditorOptions



---
File: /packages/pro/src/components/formEditor/base/setting.tsx
---

import { useI18n } from '@duxweb/dvha-core'
import { useVModel } from '@vueuse/core'
import { NRadio, NRadioGroup } from 'naive-ui'
import { defineComponent } from 'vue'
import { WidgetEditorSettingCard } from '../../designEditor/editor/setting'
import { DuxFormItem } from '../../../components'

export const DuxFormEditorSettingPage = defineComponent({
  name: 'DuxFormEditorSettingPage',
  inheritAttrs: false,
  props: {
    value: {
      type: Object,
      default: () => ({}),
    },
  },
  setup(props, { emit }) {
    const { t } = useI18n()
    const model = useVModel(props, 'value', emit)

    return () => (
      <div class="flex flex-col gap-2">
        <WidgetEditorSettingCard title={t('components.formEditor.setting.title')}>
          <DuxFormItem label={t('components.formEditor.common.formDirection')} path="labelPlacement">
            <NRadioGroup
              v-model:value={model.value.labelPlacement}
            >
              <div class='grid grid-cols-2 gap-2'>
              <NRadio value="left">
                {t('components.formEditor.common.leftAlign')}
              </NRadio>
              <NRadio value="top">
                {t('components.formEditor.common.topAlign')}
              </NRadio>
              <NRadio value="setting">
                {t('components.formEditor.common.settingAlign')}
              </NRadio>
              <NRadio value="page">
                {t('components.formEditor.common.pageAlign')}
              </NRadio>
              </div>
            </NRadioGroup>
          </DuxFormItem>
        </WidgetEditorSettingCard>
      </div>
    )
  },
})



---
File: /packages/pro/src/components/formEditor/components/cascader.tsx
---

import type { JsonSchemaNode } from '@duxweb/dvha-core'
import type { PageEditorComponent, PageEditorJsonProps } from '../../designEditor'
import { useI18n } from '@duxweb/dvha-core'
import { useVModel } from '@vueuse/core'
import { NButton, NCascader, NSwitch } from 'naive-ui'
import { defineComponent } from 'vue'
import { useModal } from '../../../hooks/modal'
import { WidgetEditorSettingCard } from '../../designEditor'
import { DuxFormItem } from '../../form'
import { DuxFormEditorItem, DuxFormEditorRule } from '../base'

const Comp = defineComponent({
  name: 'FormEditorCascader',
  props: {
    options: Object,
  },
  setup(props) {
    return () => (
      <DuxFormItem label={props.options?.label} description={props.options?.desc}>
        <NCascader {...props.options?.attr} />
      </DuxFormItem>
    )
  },
})

function Json(props?: PageEditorJsonProps): JsonSchemaNode {
  const { options, model } = props || {}

  return {
    tag: 'dux-form-item',
    attrs: {
      label: options?.label,
      description: options?.desc,
    },
    children: [
      {
        tag: 'n-cascader',
        attrs: {
          ...options?.attr,
          'v-model:value': [model, options?.name],
        },
      },
    ],
  }
}

const Setting = defineComponent({
  name: 'FormEditorCascaderSetting',
  props: {
    value: {
      type: Object,
      default: {},
    },
  },
  setup(props, { emit }) {
    const data = useVModel(props, 'value', emit)
    const modal = useModal()
    const { t } = useI18n()

    return () => (
      <div class="">

        <DuxFormEditorItem v-model:value={props.value} />

        <WidgetEditorSettingCard title={t('components.formEditor.common.componentConfig')}>

          <DuxFormItem label={t('components.formEditor.common.multiple')} labelPlacement="left">
            <div class="flex flex-1 justify-end">
              <NSwitch v-model:value={data.value.attr.multiple} />
            </div>
          </DuxFormItem>
          <DuxFormItem label={t('components.formEditor.common.cascade')} labelPlacement="left">
            <div class="flex flex-1 justify-end">
              <NSwitch v-model:value={data.value.attr.cascade} />
            </div>
          </DuxFormItem>

          <DuxFormItem label={t('components.formEditor.common.showPath')} labelPlacement="left">
            <div class="flex flex-1 justify-end">
              <NSwitch v-model:value={data.value.attr.showPath} />
            </div>
          </DuxFormItem>

          <DuxFormItem label={t('components.formEditor.common.disabled')} labelPlacement="left">
            <div class="flex flex-1 justify-end">
              <NSwitch v-model:value={data.value.attr.disabled} />
            </div>
          </DuxFormItem>

          <DuxFormItem label={t('components.formEditor.common.clearable')} labelPlacement="left">
            <div class="flex flex-1 justify-end">
              <NSwitch v-model:value={data.value.attr.clearable} />
            </div>
          </DuxFormItem>

        </WidgetEditorSettingCard>

        <WidgetEditorSettingCard title={t('components.formEditor.common.optionData')}>
          <NButton
            block
            dashed
            renderIcon={() => <div class="i-tabler:edit"></div>}
            onClick={() => {
              modal.show({
                title: t('components.formEditor.common.dataEdit'),
                component: () => import('../base/json'),
                componentProps: {
                  desc: t('components.formEditor.cascader.optionDesc'),
                  value: JSON.stringify(data.value.attr.options, null, 2),
                  onChange: (value) => {
                    try {
                      data.value.attr.options = JSON.parse(value)
                    }
                    catch {}
                  },
                },
              })
            }}
          >
            {t('components.formEditor.common.dataEdit')}
          </NButton>

        </WidgetEditorSettingCard>

        <DuxFormEditorRule v-model:value={data.value.rule} />
      </div>
    )
  },
})

export function duxFormEditorCascader(t): PageEditorComponent {
  return {
    name: 'dux-cascader',
    icon: 'i-tabler:list-tree',
    label: t('components.formEditor.cascader.label'),
    group: 'select',
    component: props => <Comp {...props} />,
    setting: props => <Setting {...props} />,
    settingDefault: {
      label: t('components.formEditor.cascader.label'),
      name: 'cascader',
      attr: {
        options: [],
        clearable: true,
      },
      rule: [],
    },
    json: Json,
  }
}



---
File: /packages/pro/src/components/formEditor/components/cascaderAsync.tsx
---

import type { JsonSchemaNode } from '@duxweb/dvha-core'
import type { PageEditorComponent, PageEditorJsonProps } from '../../designEditor'
import { useI18n } from '@duxweb/dvha-core'
import { DuxCascader } from '@duxweb/dvha-naiveui'
import { useVModel } from '@vueuse/core'
import { NInput, NSwitch } from 'naive-ui'
import { defineComponent } from 'vue'
import { WidgetEditorSettingCard } from '../../designEditor'
import { DuxFormItem } from '../../form'
import { DuxFormEditorItem, DuxFormEditorRule } from '../base'

const Comp = defineComponent({
  name: 'FormEditorCascaderAsync',
  props: {
    options: Object,
  },
  setup(props) {
    return () => (
      <DuxFormItem label={props.options?.label} description={props.options?.desc}>
        <DuxCascader {...props.options?.attr} />
      </DuxFormItem>
    )
  },
})

function Json(props?: PageEditorJsonProps): JsonSchemaNode {
  const { options, model } = props || {}

  return {
    tag: 'dux-form-item',
    attrs: {
      label: options?.label,
      description: options?.desc,
    },
    children: [
      {
        tag: 'dux-cascader',
        attrs: {
          ...options?.attr,
          'v-model:value': [model, options?.name],
        },
      },
    ],
  }
}

const Setting = defineComponent({
  name: 'FormEditorCascaderAsyncSetting',
  props: {
    value: {
      type: Object,
      default: {},
    },
  },
  setup(props, { emit }) {
    const data = useVModel(props, 'value', emit)
    const { t } = useI18n()

    return () => (
      <div class="">

        <DuxFormEditorItem v-model:value={props.value} />

        <WidgetEditorSettingCard title={t('components.formEditor.common.componentConfig')}>

          <DuxFormItem label={t('components.formEditor.common.multiple')} labelPlacement="left">
            <div class="flex flex-1 justify-end">
              <NSwitch v-model:value={data.value.attr.multiple} />
            </div>
          </DuxFormItem>
          <DuxFormItem label={t('components.formEditor.common.cascade')} labelPlacement="left">
            <div class="flex flex-1 justify-end">
              <NSwitch v-model:value={data.value.attr.cascade} />
            </div>
          </DuxFormItem>

          <DuxFormItem label={t('components.formEditor.common.showPath')} labelPlacement="left">
            <div class="flex flex-1 justify-end">
              <NSwitch v-model:value={data.value.attr.showPath} />
            </div>
          </DuxFormItem>

          <DuxFormItem label={t('components.formEditor.common.disabled')} labelPlacement="left">
            <div class="flex flex-1 justify-end">
              <NSwitch v-model:value={data.value.attr.disabled} />
            </div>
          </DuxFormItem>

          <DuxFormItem label={t('components.formEditor.common.clearable')} labelPlacement="left">
            <div class="flex flex-1 justify-end">
              <NSwitch v-model:value={data.value.attr.clearable} />
            </div>
          </DuxFormItem>

        </WidgetEditorSettingCard>

        <WidgetEditorSettingCard title={t('components.formEditor.common.dataConfig')}>

          <DuxFormItem label={t('components.formEditor.cascaderAsync.dataApi')}>
            <NInput v-model:value={data.value.attr.url} placeholder={t('components.formEditor.cascaderAsync.apiPlaceholder')} />
          </DuxFormItem>

          <DuxFormItem label={t('components.formEditor.common.labelField')}>
            <NInput v-model:value={data.value.attr.labelField} />
          </DuxFormItem>

          <DuxFormItem label={t('components.formEditor.common.valueField')}>
            <NInput v-model:value={data.value.attr.valueField} />
          </DuxFormItem>

        </WidgetEditorSettingCard>

        <DuxFormEditorRule v-model:value={data.value.rule} />
      </div>
    )
  },
})

export function duxFormEditorCascaderAsync(t): PageEditorComponent {
  return {
    name: 'dux-cascader-async',
    icon: 'i-tabler:list-tree',
    label: t('components.formEditor.cascaderAsync.label'),
    group: 'async',
    component: props => <Comp {...props} />,
    setting: props => <Setting {...props} />,
    settingDefault: {
      label: t('components.formEditor.cascaderAsync.label'),
      name: 'cascaderAsync',
      attr: {
        url: '',
        valueField: 'id',
        labelField: 'title',
        clearable: true,
        pagination: true,
      },
      rule: [],
    },
    json: Json,
  }
}



---
File: /packages/pro/src/components/formEditor/components/checkbox.tsx
---

import type { JsonSchemaNode } from '@duxweb/dvha-core'
import type { PageEditorComponent, PageEditorJsonProps } from '../../designEditor'
import { useI18n } from '@duxweb/dvha-core'
import { useVModel } from '@vueuse/core'
import { NButton, NCheckbox, NCheckboxGroup, NDynamicInput, NSwitch } from 'naive-ui'
import { defineComponent } from 'vue'
import { useModal } from '../../../hooks/modal'
import { WidgetEditorSettingCard } from '../../designEditor'
import { DuxFormItem } from '../../form'
import { DuxFormEditorItem, DuxFormEditorRule } from '../base'

const Comp = defineComponent({
  name: 'FormEditorCheckbox',
  props: {
    options: Object,
  },
  setup(props) {
    return () => (
      <DuxFormItem label={props.options?.label} description={props.options?.desc}>
        <NCheckboxGroup {...props.options?.attr} value={props.options?.attr?.defaultValue}>
          {props.options?.attr?.options?.map((item, index) => <NCheckbox key={index} value={item.value}>{item.label}</NCheckbox>)}
        </NCheckboxGroup>

      </DuxFormItem>
    )
  },
})

function Json(props?: PageEditorJsonProps): JsonSchemaNode {
  const { options, model } = props || {}

  return {
    tag: 'dux-form-item',
    attrs: {
      label: options?.label,
      description: options?.desc,
    },
    children: [
      {
        tag: 'n-checkbox-group',
        attrs: {
          ...options?.attr,
          'v-model:value': [model, options?.name],
        },
        children: options?.attr?.options?.map((item: any) => ({
          tag: 'n-checkbox',
          attrs: {
            value: item.value,
          },
          children: [item.label],
        })) || [],
      },
    ],
  }
}

const Setting = defineComponent({
  name: 'FormEditorCheckboxSetting',
  props: {
    value: {
      type: Object,
      default: {},
    },
  },
  setup(props, { emit }) {
    const data = useVModel(props, 'value', emit)
    const modal = useModal()
    const { t } = useI18n()

    return () => (
      <div class="">

        <DuxFormEditorItem v-model:value={props.value} />

        <WidgetEditorSettingCard title={t('components.formEditor.common.componentConfig')}>

          <DuxFormItem label={t('components.formEditor.common.defaultValue')}>
            <NDynamicInput v-model:value={data.value.attr.defaultValue} />
          </DuxFormItem>

          <DuxFormItem label={t('components.formEditor.common.disabled')} labelPlacement="left">
            <div class="flex flex-1 justify-end">
              <NSwitch v-model:value={data.value.attr.disabled} />
            </div>
          </DuxFormItem>

        </WidgetEditorSettingCard>

        <WidgetEditorSettingCard title={t('components.formEditor.common.optionConfig')}>

          <NButton
            block
            dashed
            renderIcon={() => <div class="i-tabler:edit"></div>}
            onClick={() => {
              modal.show({
                title: t('components.formEditor.common.dataConfig'),
                component: () => import('../base/options'),
                componentProps: {
                  desc: t('components.formEditor.checkbox.configDesc'),
                  value: data.value.attr.options,
                  onChange: (value) => {
                    data.value.attr.options = value
                  },
                  options: [
                    {
                      label: t('components.formEditor.common.optionLabel'),
                      value: 'label',
                    },
                    {
                      label: t('components.formEditor.common.optionValue'),
                      value: 'value',
                    },
                  ],
                },

              })
            }}
          >
            {t('components.formEditor.common.dataConfig')}
          </NButton>

        </WidgetEditorSettingCard>

        <DuxFormEditorRule v-model:value={data.value.rule} />
      </div>
    )
  },
})

export function duxFormEditorCheckbox(t): PageEditorComponent {
  return {
    name: 'dux-checkbox',
    icon: 'i-tabler:square-check',
    label: t('components.formEditor.checkbox.label'),
    group: 'form',
    component: props => <Comp {...props} />,
    setting: props => <Setting {...props} />,
    settingDefault: {
      label: t('components.formEditor.checkbox.label'),
      name: 'checkbox',
      attr: {
        options: [
          {
            label: 'option 1',
            value: '1',
          },
          {
            label: 'option 2',
            value: '2',
          },
        ],
        defaultValue: [],
      },
      rule: [],
    },
    json: Json,
  }
}



---
File: /packages/pro/src/components/formEditor/components/color.tsx
---

import type { JsonSchemaNode } from '@duxweb/dvha-core'
import type { PageEditorComponent, PageEditorJsonProps } from '../../designEditor'
import { useI18n } from '@duxweb/dvha-core'
import { useVModel } from '@vueuse/core'
import { NColorPicker, NSwitch } from 'naive-ui'
import { defineComponent } from 'vue'
import { WidgetEditorSettingCard } from '../../designEditor'
import { DuxFormItem } from '../../form'
import { DuxFormEditorItem, DuxFormEditorRule } from '../base'

const Comp = defineComponent({
  name: 'FormEditorColor',
  props: {
    options: Object,
  },
  setup(props) {
    const attr = props.options?.attr
    return () => (
      <DuxFormItem label={props.options?.label} description={props.options?.desc}>
        <div class="flex-1">
          <NColorPicker {...attr} />
        </div>
      </DuxFormItem>
    )
  },
})

function Json(props?: PageEditorJsonProps): JsonSchemaNode {
  const { options, model } = props || {}

  return {
    tag: 'dux-form-item',
    attrs: {
      label: options?.label,
      description: options?.desc,
    },
    children: [
      {
        tag: 'n-color-picker',
        attrs: {
          ...options?.attr,
          'v-model:value': [model, options?.name],
        },
      },
    ],
  }
}

const Setting = defineComponent({
  name: 'FormEditorColorSetting',
  props: {
    value: {
      type: Object,
      default: {},
    },
  },
  setup(props, { emit }) {
    const data = useVModel(props, 'value', emit)
    const { t } = useI18n()

    return () => (
      <div class="">

        <DuxFormEditorItem v-model:value={props.value} />

        <WidgetEditorSettingCard title={t('components.formEditor.common.componentConfig')}>

          <DuxFormItem label={t('components.formEditor.common.disabled')} labelPlacement="left">
            <div class="flex flex-1 justify-end">
              <NSwitch v-model:value={data.value.attr.disabled} />
            </div>
          </DuxFormItem>
          <DuxFormItem label={t('components.formEditor.color.showAlpha')} labelPlacement="left">
            <div class="flex flex-1 justify-end">
              <NSwitch v-model:value={data.value.attr.showAlpha} />
            </div>
          </DuxFormItem>

        </WidgetEditorSettingCard>
        <DuxFormEditorRule v-model:value={data.value.rule} />
      </div>
    )
  },
})

export function duxFormEditorColor(t): PageEditorComponent {
  return {
    name: 'dux-color',
    icon: 'i-tabler:palette',
    label: t('components.formEditor.color.label'),
    group: 'form',
    component: props => <Comp {...props} />,
    setting: props => <Setting {...props} />,
    settingDefault: {
      label: t('components.formEditor.color.label'),
      name: 'color',
      attr: {
        showAlpha: true,
      },
      rule: [],
    },
    json: Json,
  }
}



---
File: /packages/pro/src/components/formEditor/components/date.tsx
---

import type { JsonSchemaNode } from '@duxweb/dvha-core'
import type { PageEditorComponent, PageEditorJsonProps } from '../../designEditor'
import { useI18n } from '@duxweb/dvha-core'
import { useVModel } from '@vueuse/core'
import { NDatePicker, NSelect, NSwitch } from 'naive-ui'
import { defineComponent } from 'vue'
import { WidgetEditorSettingCard } from '../../designEditor'
import { DuxFormItem } from '../../form'
import { DuxFormEditorItem, DuxFormEditorRule } from '../base/base'

const Comp = defineComponent({
  name: 'FormEditorDate',
  props: {
    options: Object,
  },
  setup(props) {
    const attr = props.options?.attr
    return () => (
      <DuxFormItem label={props.options?.label} description={props.options?.desc}>
        <div class="flex-1">
          <NDatePicker {...attr} />
        </div>
      </DuxFormItem>
    )
  },
})

function Json(props?: PageEditorJsonProps): JsonSchemaNode {
  const { options, model } = props || {}

  return {
    tag: 'dux-form-item',
    attrs: {
      label: options?.label,
      description: options?.desc,
    },
    children: [
      {
        tag: 'n-date-picker',
        attrs: {
          ...options?.attr,
          'v-model:value': [model, options?.name],
        },
      },
    ],
  }
}

const Setting = defineComponent({
  name: 'FormEditorDateSetting',
  props: {
    value: {
      type: Object,
      default: {},
    },
  },
  setup(props, { emit }) {
    const data = useVModel(props, 'value', emit)
    const { t } = useI18n()

    return () => (
      <div class="">

        <DuxFormEditorItem v-model:value={props.value} />

        <WidgetEditorSettingCard title={t('components.formEditor.common.componentConfig')}>

          <DuxFormItem label={t('components.formEditor.date.dateType')}>

            <NSelect
              v-model:value={data.value.attr.type}
              options={[
                {
                  label: t('components.formEditor.date.date'),
                  value: 'date',
                },
                {
                  label: t('components.formEditor.date.daterange'),
                  value: 'daterange',
                },
                {
                  label: t('components.formEditor.date.datetime'),
                  value: 'datetime',
                },
                {
                  label: t('components.formEditor.date.datetimerange'),
                  value: 'datetimerange',
                },
                {
                  label: t('components.formEditor.date.month'),
                  value: 'month',
                },
                {
                  label: t('components.formEditor.date.monthrange'),
                  value: 'monthrange',
                },
                {
                  label: t('components.formEditor.date.year'),
                  value: 'year',
                },
                {
                  label: t('components.formEditor.date.yearrange'),
                  value: 'yearrange',
                },
                {
                  label: t('components.formEditor.date.quarter'),
                  value: 'quarter',
                },
                {
                  label: t('components.formEditor.date.quarterrange'),
                  value: 'quarterrange',
                },
                {
                  label: t('components.formEditor.date.week'),
                  value: 'week',
                },
              ]}
            />

          </DuxFormItem>

          <DuxFormItem label={t('components.formEditor.common.disabled')} labelPlacement="left">
            <div class="flex flex-1 justify-end">
              <NSwitch v-model:value={data.value.attr.disabled} />
            </div>
          </DuxFormItem>

          <DuxFormItem label={t('components.formEditor.common.clearable')} labelPlacement="left">
            <div class="flex flex-1 justify-end">
              <NSwitch v-model:value={data.value.attr.clearable} />
            </div>
          </DuxFormItem>

        </WidgetEditorSettingCard>
        <DuxFormEditorRule v-model:value={data.value.rule} />
      </div>
    )
  },
})

export function duxFormEditorDate(t): PageEditorComponent {
  return {
    name: 'dux-date',
    icon: 'i-tabler:calendar-due',
    label: t('components.formEditor.date.label'),
    group: 'form',
    component: props => <Comp {...props} />,
    setting: props => <Setting {...props} />,
    settingDefault: {
      label: t('components.formEditor.date.label'),
      name: 'date',
      attr: {
        type: 'date',
      },
      rule: [],
    },
    json: Json,
  }
}



---
File: /packages/pro/src/components/formEditor/components/dynamicInput.tsx
---

import type { JsonSchemaNode } from '@duxweb/dvha-core'
import type { PropType } from 'vue'
import type { PageEditorComponent, PageEditorData, PageEditorJsonProps } from '../../designEditor'
import { useI18n } from '@duxweb/dvha-core'
import { useVModel } from '@vueuse/core'
import { NDynamicInput, NInputNumber, NSwitch } from 'naive-ui'
import { computed, defineComponent } from 'vue'
import { DuxWidgetEditorPreview, WidgetEditorSettingCard } from '../../designEditor'
import { DuxFormItem } from '../../form'
import { DuxFormEditorItem, DuxFormEditorRule } from '../base/base'

const Comp = defineComponent({
  name: 'FormEditorDynamicInput',
  props: {
    options: {
      type: Object,
      default: () => ({}),
    },
    children: {
      type: Array as PropType<PageEditorData[]>,
      default: () => [],
    },
    onChildren: Function,
  },
  setup(props) {
    const attr = computed(() => props.options?.attr || {})
    const label = computed(() => props.options?.label)

    return () => (
      <DuxFormItem label={label.value} description={props.options?.desc}>
        <div class="flex-1 w-full">
          <NDynamicInput {...attr.value} value={[{}]}>
            {{
              default: () => (
                <DuxWidgetEditorPreview
                  class="w-full flex gap-2 rounded-sm border border-dashed border-muted p-2"
                  modelValue={props.children}
                  onUpdate={props.onChildren}
                />
              ),
            }}
          </NDynamicInput>
        </div>
      </DuxFormItem>
    )
  },
})

function Json(props?: PageEditorJsonProps): JsonSchemaNode {
  const { options, children, model, convertToJsonSchema } = props || {}

  return {
    tag: 'dux-form-item',
    attrs: {
      label: options?.label,
      description: options?.desc,
    },
    children: [
      {
        tag: 'n-dynamic-input',
        attrs: {
          ...options?.attr,
          'v-model:value': [model, options?.name],
          '@create': () => ({}),
        },
        slots: {
          default: ({ value, index }) => {
            return {
              tag: 'div',
              attrs: {
                class: 'flex-1 flex gap-2',
                key: index,
              },
              children: convertToJsonSchema
                ? convertToJsonSchema(children || [], value).map((child) => {
                    if (child && typeof child === 'object' && 'attrs' in child) {
                      const { label, ...restAttrs } = child.attrs || {}
                      return {
                        ...child,
                        attrs: {
                          class: 'w-full',
                          restAttrs,
                        },
                      }
                    }
                    return child
                  })
                : [],
            }
          },
        },
      },
    ],
  }
}

const Setting = defineComponent({
  name: 'FormEditorDynamicInputSetting',
  props: {
    value: {
      type: Object,
      default: () => ({
        attr: {
          min: 0,
          max: 10,
          disabled: false,
        },
        rule: [],
      }),
    },
  },
  setup(props, { emit }) {
    const data = useVModel(props, 'value', emit)
    const { t } = useI18n()

    if (!data.value.attr) {
      data.value.attr = {
        min: 0,
        max: 10,
        disabled: false,
      }
    }

    return () => (
      <div>
        <DuxFormEditorItem v-model:value={data.value} />

        <WidgetEditorSettingCard title={t('components.formEditor.common.componentConfig')}>
          <DuxFormItem label={t('components.formEditor.common.minCount')}>
            <NInputNumber
              v-model:value={data.value.attr.min}
              min={0}
              max={50}
              placeholder={t('components.formEditor.common.minCount')}
            />
          </DuxFormItem>

          <DuxFormItem label={t('components.formEditor.common.maxCount')}>
            <NInputNumber
              v-model:value={data.value.attr.max}
              min={1}
              max={100}
              placeholder={t('components.formEditor.common.maxCount')}
            />
          </DuxFormItem>

          <DuxFormItem label={t('components.formEditor.common.disabled')} labelPlacement="left">
            <div class="flex flex-1 justify-end">
              <NSwitch v-model:value={data.value.attr.disabled} />
            </div>
          </DuxFormItem>
        </WidgetEditorSettingCard>

        <DuxFormEditorRule v-model:value={data.value.rule} />
      </div>
    )
  },
})

export function duxFormEditorDynamicInput(t): PageEditorComponent {
  return {
    name: 'dux-dynamic-input',
    icon: 'i-tabler:calendar-due',
    label: t('components.formEditor.dynamicInput.label'),
    group: 'form',
    component: props => <Comp {...props} />,
    setting: props => <Setting {...props} />,
    nested: true,
    settingDefault: {
      label: t('components.formEditor.dynamicInput.label'),
      name: 'data',
      attr: {
        min: 0,
        max: 10,
        disabled: false,
      },
      rule: [],
      defaultValue: [],
    },
    json: Json,
  }
}



---
File: /packages/pro/src/components/formEditor/components/dynamicTags.tsx
---

import type { JsonSchemaNode } from '@duxweb/dvha-core'
import type { PageEditorComponent, PageEditorJsonProps } from '../../designEditor'
import { useI18n } from '@duxweb/dvha-core'
import { useVModel } from '@vueuse/core'
import { NDynamicTags, NInputNumber, NSwitch } from 'naive-ui'
import { defineComponent } from 'vue'
import { WidgetEditorSettingCard } from '../../designEditor'
import { DuxFormItem } from '../../form'
import { DuxFormEditorItem, DuxFormEditorRule } from '../base/base'

const Comp = defineComponent({
  props: {
    options: Object,
  },
  setup(props) {
    return () => (
      <DuxFormItem label={props.options?.label} description={props.options?.desc}>
        <NDynamicTags {...props.options?.attr} />
      </DuxFormItem>
    )
  },
})

function Json(props?: PageEditorJsonProps): JsonSchemaNode {
  const { options, model } = props || {}

  return {
    tag: 'dux-form-item',
    attrs: {
      label: options?.label,
      description: options?.desc,
    },
    children: [
      {
        tag: 'n-dynamic-tags',
        attrs: {
          ...options?.attr,
          'v-model:value': [model, options?.name],
        },
      },
    ],
  }
}

const Setting = defineComponent({
  props: {
    value: {
      type: Object,
      default: {},
    },
  },
  setup(props, { emit }) {
    const data = useVModel(props, 'value', emit)
    const { t } = useI18n()

    return () => (
      <div class="">

        <DuxFormEditorItem v-model:value={props.value} />

        <WidgetEditorSettingCard title={t('components.formEditor.config')}>

          <DuxFormItem label={t('components.formEditor.common.disabled')} labelPlacement="left">
            <div class="flex flex-1 justify-end">
              <NSwitch v-model:value={data.value.attr.disabled} />
            </div>
          </DuxFormItem>

        </WidgetEditorSettingCard>

        <WidgetEditorSettingCard title={t('components.formEditor.options')}>

          <DuxFormItem label={t('components.formEditor.dynamicTags.max')}>
            <NInputNumber v-model:value={data.value.attr.max} />
          </DuxFormItem>

        </WidgetEditorSettingCard>
        <DuxFormEditorRule v-model:value={data.value.rule} />
      </div>
    )
  },
})

export function duxFormEditorDynamicTags(t): PageEditorComponent {
  return {
    name: 'dynamic-tags',
    icon: 'i-tabler:tag',
    label: t('components.formEditor.dynamicTags.name'),
    group: 'form',
    component: props => <Comp {...props} />,
    setting: props => <Setting {...props} />,
    settingDefault: {
      label: t('components.formEditor.dynamicTags.name'),
      name: 'dynamic-tags',
      attr: {
      },
      rule: [],
    },
    json: Json,
  }
}



---
File: /packages/pro/src/components/formEditor/components/editor.tsx
---

import type { JsonSchemaNode } from '@duxweb/dvha-core'
import type { PageEditorComponent, PageEditorJsonProps } from '../../designEditor'
import { useI18n } from '@duxweb/dvha-core'
import { useVModel } from '@vueuse/core'
import { NInput } from 'naive-ui'
import { defineComponent } from 'vue'
import { WidgetEditorSettingCard } from '../../designEditor'
import { DuxAiEditor } from '../../editor'
import { DuxFormItem } from '../../form'
import { DuxFormEditorItem, DuxFormEditorRule } from '../base/base'

const Comp = defineComponent({
  name: 'FormEditorAIEditor',
  props: {
    options: Object,
  },
  setup(props) {
    return () => (
      <DuxFormItem label={props.options?.label} description={props.options?.desc}>
        <DuxAiEditor {...props.options?.attr} />
      </DuxFormItem>
    )
  },
})

function Json(props?: PageEditorJsonProps): JsonSchemaNode {
  const { options, model } = props || {}

  return {
    tag: 'dux-form-item',
    attrs: {
      label: options?.label,
      description: options?.desc,
    },
    children: [
      {
        tag: 'dux-ai-editor',
        attrs: {
          ...options?.attr,
          'v-model:value': [model, options?.name],
        },
      },
    ],
  }
}

const Setting = defineComponent({
  name: 'FormEditorAIEditorSetting',
  props: {
    value: {
      type: Object,
      default: {},
    },
  },
  setup(props, { emit }) {
    const data = useVModel(props, 'value', emit)
    const { t } = useI18n()

    return () => (
      <div class="">

        <DuxFormEditorItem v-model:value={props.value} />

        <WidgetEditorSettingCard title={t('components.formEditor.common.componentConfig')}>

          <DuxFormItem label={t('components.formEditor.aiEditor.uploadUrl')} description={t('components.formEditor.aiEditor.uploadUrlFeedback')}>
            <NInput v-model:value={data.value.attr.uploadUrl} />
          </DuxFormItem>

        </WidgetEditorSettingCard>
        <DuxFormEditorRule v-model:value={data.value.rule} />
      </div>
    )
  },
})

export function duxFormEditorAIEditor(t): PageEditorComponent {
  return {
    name: 'dux-editor',
    icon: 'i-tabler:pencil',
    label: t('components.formEditor.aiEditor.label'),
    group: 'form',
    component: props => <Comp {...props} />,
    setting: props => <Setting {...props} />,
    settingDefault: {
      label: t('components.formEditor.aiEditor.label'),
      name: 'editor',
      attr: {
      },
      rule: [],
    },
    json: Json,
  }
}



---
File: /packages/pro/src/components/formEditor/components/fileUpload.tsx
---

import type { JsonSchemaNode } from '@duxweb/dvha-core'
import type { PageEditorComponent, PageEditorJsonProps } from '../../designEditor'
import { useI18n } from '@duxweb/dvha-core'
import { useVModel } from '@vueuse/core'
import { NCheckbox, NInput, NInputNumber } from 'naive-ui'
import { defineComponent } from 'vue'
import { WidgetEditorSettingCard } from '../../designEditor'
import { DuxFormItem } from '../../form'
import { DuxFileUpload } from '../../upload'
import { DuxFormEditorItem, DuxFormEditorRule } from '../base/base'

const Comp = defineComponent({
  name: 'FormEditorFileUpload',
  props: {
    options: Object,
  },
  setup(props) {
    return () => (
      <DuxFormItem label={props.options?.label} description={props.options?.desc}>
        <DuxFileUpload {...props.options?.attr} />
      </DuxFormItem>
    )
  },
})

function Json(props?: PageEditorJsonProps): JsonSchemaNode {
  const { options, model } = props || {}

  return {
    tag: 'dux-form-item',
    attrs: {
      label: options?.label,
      description: options?.desc,
    },
    children: [
      {
        tag: 'dux-file-upload',
        attrs: {
          ...options?.attr,
          'v-model:value': [model, options?.name],
        },
      },
    ],
  }
}

const Setting = defineComponent({
  name: 'FormEditorFileUploadSetting',
  props: {
    value: {
      type: Object,
      default: {},
    },
  },
  setup(props, { emit }) {
    const data = useVModel(props, 'value', emit)
    const { t } = useI18n()

    return () => (
      <div class="">
        <DuxFormEditorItem v-model:value={props.value} />

        <WidgetEditorSettingCard title={t('components.formEditor.common.componentConfig')}>
          <DuxFormItem label={t('components.formEditor.fileUpload.accept')}>
            <NInput
              v-model:value={data.value.attr.accept}
              placeholder={t('components.formEditor.fileUpload.acceptPlaceholder')}
            />
          </DuxFormItem>

          <DuxFormItem label={t('components.formEditor.common.maxCount')}>
            <NInputNumber
              v-model:value={data.value.attr.maxNum}
              min={1}
              placeholder={t('components.formEditor.fileUpload.maxNumPlaceholder')}
            />
          </DuxFormItem>

          <DuxFormItem label={t('components.formEditor.fileUpload.maxSize')}>
            <NInputNumber
              v-model:value={data.value.attr.maxSize}
              min={0}
              placeholder={t('components.formEditor.fileUpload.maxSizePlaceholder')}
            />
          </DuxFormItem>

          <DuxFormItem label={t('components.formEditor.common.status')}>
            <div class="w-full grid grid-cols-2">
              <NCheckbox
                label={t('components.formEditor.common.multiple')}
                v-model:checked={data.value.attr.multiple}
              />
              <NCheckbox
                label={t('components.formEditor.fileUpload.manager')}
                v-model:checked={data.value.attr.manager}
              />
            </div>
          </DuxFormItem>
        </WidgetEditorSettingCard>

        <DuxFormEditorRule v-model:value={data.value.rule} />
      </div>
    )
  },
})

export function duxFormEditorFileUpload(t): PageEditorComponent {
  return {
    name: 'dux-file-upload',
    icon: 'i-tabler:file-upload',
    label: t('components.formEditor.fileUpload.label'),
    group: 'form',
    component: props => <Comp {...props} />,
    setting: props => <Setting {...props} />,
    settingDefault: {
      label: t('components.formEditor.fileUpload.label'),
      name: 'files',
      attr: {
        maxSize: 10,
        multiple: false,
        manager: false,
        accept: '*/*',
      },
      rule: [],
    },
    json: Json,
  }
}



---
File: /packages/pro/src/components/formEditor/components/imageUpload.tsx
---

import type { JsonSchemaNode } from '@duxweb/dvha-core'
import type { PageEditorComponent, PageEditorJsonProps } from '../../designEditor'
import { useI18n } from '@duxweb/dvha-core'
import { useVModel } from '@vueuse/core'
import { NCheckbox, NInputNumber } from 'naive-ui'
import { defineComponent } from 'vue'
import { WidgetEditorSettingCard } from '../../designEditor'
import { DuxFormItem } from '../../form'
import { DuxImageUpload } from '../../upload'
import { DuxFormEditorItem, DuxFormEditorRule } from '../base/base'

const Comp = defineComponent({
  name: 'FormEditorImageUpload',
  props: {
    options: Object,
  },
  setup(props) {
    return () => (
      <DuxFormItem label={props.options?.label} description={props.options?.desc}>
        <DuxImageUpload {...props.options?.attr} />
      </DuxFormItem>
    )
  },
})

function Json(props?: PageEditorJsonProps): JsonSchemaNode {
  const { options, model } = props || {}

  return {
    tag: 'dux-form-item',
    attrs: {
      label: options?.label,
      description: options?.desc,
    },
    children: [
      {
        tag: 'dux-image-upload',
        attrs: {
          ...options?.attr,
          'v-model:value': [model, options?.name],
        },
      },
    ],
  }
}

const Setting = defineComponent({
  name: 'FormEditorImageUploadSetting',
  props: {
    value: {
      type: Object,
      default: {},
    },
  },
  setup(props, { emit }) {
    const data = useVModel(props, 'value', emit)
    const { t } = useI18n()

    return () => (
      <div class="">
        <DuxFormEditorItem v-model:value={props.value} />

        <WidgetEditorSettingCard title={t('components.formEditor.common.componentConfig')}>
          <DuxFormItem label={t('components.formEditor.common.maxCount')}>
            <NInputNumber
              v-model:value={data.value.attr.maxNum}
              min={1}
              placeholder={t('components.formEditor.imageUpload.maxNumPlaceholder')}
            />
          </DuxFormItem>

          <DuxFormItem label={t('components.formEditor.imageUpload.maxSize')}>
            <NInputNumber
              v-model:value={data.value.attr.maxSize}
              min={0}
              placeholder={t('components.formEditor.imageUpload.maxSizePlaceholder')}
            />
          </DuxFormItem>

          <DuxFormItem label={t('components.formEditor.common.status')}>
            <div class="w-full grid grid-cols-2">
              <NCheckbox
                label={t('components.formEditor.common.multiple')}
                v-model:checked={data.value.attr.multiple}
              />
              <NCheckbox
                label={t('components.formEditor.imageUpload.manager')}
                v-model:checked={data.value.attr.manager}
              />
            </div>
          </DuxFormItem>
        </WidgetEditorSettingCard>

        <DuxFormEditorRule v-model:value={data.value.rule} />
      </div>
    )
  },
})

export function duxFormEditorImageUpload(t): PageEditorComponent {
  return {
    name: 'dux-image-upload',
    icon: 'i-tabler:photo',
    label: t('components.formEditor.imageUpload.label'),
    group: 'form',
    component: props => <Comp {...props} />,
    setting: props => <Setting {...props} />,
    settingDefault: {
      label: t('components.formEditor.imageUpload.label'),
      name: 'images',
      attr: {
        maxSize: 5,
        multiple: false,
        manager: false,
      },
      rule: [],
    },
    json: Json,
  }
}



---
File: /packages/pro/src/components/formEditor/components/index.ts
---

export * from './cascader'
export * from './cascaderAsync'
export * from './checkbox'
export * from './color'
export * from './date'
export * from './dynamicInput'
export * from './dynamicTags'
export * from './editor'
export * from './fileUpload'
export * from './imageUpload'
export * from './input'
export * from './inputNumber'
export * from './mentionAsync'
export * from './radio'
export * from './region'
export * from './select'
export * from './selectAsync'
export * from './sider'
export * from './switch'
export * from './time'
export * from './transferAsync'
export * from './treeSelect'
export * from './treeSelectAsync'



---
File: /packages/pro/src/components/formEditor/components/input.tsx
---

import type { JsonSchemaNode } from '@duxweb/dvha-core'
import type { PageEditorComponent, PageEditorJsonProps } from '../../designEditor'
import { useI18n } from '@duxweb/dvha-core'
import { useVModel } from '@vueuse/core'
import { NCheckbox, NInput, NInputNumber, NSelect } from 'naive-ui'
import { defineComponent } from 'vue'
import { WidgetEditorSettingCard } from '../../designEditor'
import { DuxFormItem } from '../../form'
import { DuxFormEditorItem, DuxFormEditorRule } from '../base/base'

const Comp = defineComponent({
  name: 'FormEditorInput',
  props: {
    options: Object,
  },
  setup(props) {
    return () => (
      <DuxFormItem label={props.options?.label} description={props.options?.desc}>
        <NInput {...props.options?.attr} inputProps={{ autocomplete: 'new-password' }} />
      </DuxFormItem>
    )
  },
})

function Json(props?: PageEditorJsonProps): JsonSchemaNode {
  const { options, model } = props || {}

  return {
    tag: 'dux-form-item',
    attrs: {
      label: options?.label,
      description: options?.desc,
    },
    children: [
      {
        tag: 'n-input',
        attrs: {
          ...options?.attr,
          'v-model:value': [model, options?.name],
        },
      },
    ],
  }
}

const Setting = defineComponent({
  name: 'FormEditorInputSetting',
  props: {
    value: {
      type: Object,
      default: {},
    },
  },
  setup(props, { emit }) {
    const data = useVModel(props, 'value', emit)
    const { t } = useI18n()

    return () => (
      <div class="">

        <DuxFormEditorItem v-model:value={props.value} />

        <WidgetEditorSettingCard title={t('components.formEditor.common.componentConfig')}>
          <DuxFormItem label={t('components.formEditor.common.inputType')}>
            <NSelect
              v-model:value={data.value.attr.type}
              options={[
                { label: t('components.formEditor.input.types.text'), value: 'text' },
                { label: t('components.formEditor.input.types.textarea'), value: 'textarea' },
                { label: t('components.formEditor.input.types.password'), value: 'password' },
              ]}
            />
          </DuxFormItem>

          <DuxFormItem label={t('components.formEditor.common.placeholder')}>
            <NInput
              v-model:value={data.value.attr.placeholder}
            />
          </DuxFormItem>
          <DuxFormItem label={t('components.formEditor.common.minLength')}>
            <NInputNumber
              v-model:value={data.value.attr.minlength}
            />
          </DuxFormItem>

          <DuxFormItem label={t('components.formEditor.common.maxLength')}>
            <NInputNumber
              v-model:value={data.value.attr.maxlength}
            />
          </DuxFormItem>
          <DuxFormItem label={t('components.formEditor.common.prefix')}>
            <NInput
              v-model:value={data.value.attr['v-slot:prefix']}
            />
          </DuxFormItem>
          <DuxFormItem label={t('components.formEditor.common.suffix')}>
            <NInput
              v-model:value={data.value.attr['v-slot:suffix']}
            />
          </DuxFormItem>

          <DuxFormItem label={t('components.formEditor.common.status')}>
            <div class="w-full grid grid-cols-2">
              <NCheckbox
                label={t('components.formEditor.common.readonly')}
                v-model:checked={data.value.attr.readonly}
              />
              <NCheckbox
                label={t('components.formEditor.common.disabled')}
                v-model:checked={data.value.attr.disabled}
              />
              <NCheckbox
                label={t('components.formEditor.common.clearable')}
                v-model:checked={data.value.attr.clearable}
              />
              <NCheckbox
                label={t('components.formEditor.common.showCount')}
                v-model:checked={data.value.attr.showCount}
              />
            </div>
          </DuxFormItem>

        </WidgetEditorSettingCard>
        <DuxFormEditorRule v-model:value={data.value.rule} />
      </div>
    )
  },
})

export function duxFormEditorInput(t): PageEditorComponent {
  return {
    name: 'dux-input',
    icon: 'i-tabler:cursor-text',
    label: t('components.formEditor.input.label'),
    group: 'form',
    component: props => <Comp {...props} />,
    setting: props => <Setting {...props} />,
    settingDefault: {
      label: t('components.formEditor.input.label'),
      name: 'text',
      attr: {
        type: 'text',
      },
      rule: [],
    },
    json: Json,
  }
}



---
File: /packages/pro/src/components/formEditor/components/inputNumber.tsx
---

import type { JsonSchemaNode } from '@duxweb/dvha-core'
import type { PageEditorComponent, PageEditorJsonProps } from '../../designEditor'
import { useI18n } from '@duxweb/dvha-core'
import { useVModel } from '@vueuse/core'
import { NCheckbox, NInput, NInputNumber } from 'naive-ui'
import { defineComponent } from 'vue'
import { WidgetEditorSettingCard } from '../../designEditor'
import { DuxFormItem } from '../../form'
import { DuxFormEditorItem, DuxFormEditorRule } from '../base/base'

const Comp = defineComponent({
  name: 'FormEditorInputNumber',
  props: {
    options: Object,
  },
  setup(props) {
    const attr = props.options?.attr
    return () => (
      <DuxFormItem label={props.options?.label} description={props.options?.desc}>
        <div class="flex-1">
          <NInputNumber {...attr}>
            {{
              prefix: attr['v-slot:prefix'] ? () => attr['v-slot:prefix'] : undefined,
              suffix: attr['v-slot:suffix'] ? () => attr['v-slot:suffix'] : undefined,
            }}
          </NInputNumber>
        </div>
      </DuxFormItem>
    )
  },
})

function Json(props?: PageEditorJsonProps): JsonSchemaNode {
  const { options, model } = props || {}

  return {
    tag: 'dux-form-item',
    attrs: {
      label: options?.label,
      description: options?.desc,
    },
    children: [
      {
        tag: 'n-input-number',
        attrs: {
          ...options?.attr,
          'v-model:value': [model, options?.name],
        },
      },
    ],
  }
}

const Setting = defineComponent({
  name: 'FormEditorInputNumberSetting',
  props: {
    value: {
      type: Object,
      default: {},
    },
  },
  setup(props, { emit }) {
    const data = useVModel(props, 'value', emit)
    const { t } = useI18n()

    return () => (
      <div>
        <DuxFormEditorItem v-model:value={props.value} />

        <WidgetEditorSettingCard title={t('components.formEditor.common.componentConfig')}>

          <DuxFormItem label={t('components.formEditor.common.placeholder')}>
            <NInput
              v-model:value={data.value.attr.placeholder}
            />
          </DuxFormItem>
          <DuxFormItem label={t('components.formEditor.common.minValue')}>
            <NInputNumber
              v-model:value={data.value.attr.min}
            />
          </DuxFormItem>

          <DuxFormItem label={t('components.formEditor.common.maxValue')}>
            <NInputNumber
              v-model:value={data.value.attr.max}
            />
          </DuxFormItem>

          <DuxFormItem label={t('components.formEditor.common.prefix')}>
            <NInput
              v-model:value={data.value.attr['v-slot:prefix']}
            />
          </DuxFormItem>
          <DuxFormItem label={t('components.formEditor.common.suffix')}>
            <NInput
              v-model:value={data.value.attr['v-slot:suffix']}
            />
          </DuxFormItem>

          <DuxFormItem label={t('components.formEditor.common.status')}>
            <div class="w-full grid grid-cols-2">
              <NCheckbox
                label={t('components.formEditor.common.readonly')}
                v-model:checked={data.value.attr.readonly}
              />
              <NCheckbox
                label={t('components.formEditor.common.disabled')}
                v-model:checked={data.value.attr.disabled}
              />
              <NCheckbox
                label={t('components.formEditor.common.clearable')}
                v-model:checked={data.value.attr.clearable}
              />
            </div>
          </DuxFormItem>

        </WidgetEditorSettingCard>

        <DuxFormEditorRule v-model:value={data.value.rule} />
      </div>
    )
  },
})

export function duxFormEditorInputNumber(t): PageEditorComponent {
  return {
    name: 'dux-input-number',
    icon: 'i-tabler:number',
    label: t('components.formEditor.inputNumber.label'),
    group: 'form',
    component: props => <Comp {...props} />,
    setting: props => <Setting {...props} />,
    settingDefault: {
      label: t('components.formEditor.inputNumber.label'),
      name: 'number',
      attr: {
      },
      rule: [],
    },
    json: Json,
  }
}



---
File: /packages/pro/src/components/formEditor/components/mentionAsync.tsx
---

import type { JsonSchemaNode } from '@duxweb/dvha-core'
import type { PageEditorComponent, PageEditorJsonProps } from '../../designEditor'
import { useI18n } from '@duxweb/dvha-core'
import { DuxMention } from '@duxweb/dvha-naiveui'
import { useVModel } from '@vueuse/core'
import { NInput, NSwitch } from 'naive-ui'
import { defineComponent } from 'vue'
import { WidgetEditorSettingCard } from '../../designEditor'
import { DuxFormItem } from '../../form'
import { DuxFormEditorItem, DuxFormEditorRule } from '../base/base'

const Comp = defineComponent({
  props: {
    options: Object,
  },
  setup(props) {
    return () => (
      <DuxFormItem label={props.options?.label} description={props.options?.desc}>
        <DuxMention {...props.options?.attr} />
      </DuxFormItem>
    )
  },
})

function Json(props?: PageEditorJsonProps): JsonSchemaNode {
  const { options, model } = props || {}

  return {
    tag: 'dux-form-item',
    attrs: {
      label: options?.label,
      description: options?.desc,
    },
    children: [
      {
        tag: 'dux-mention',
        attrs: {
          ...options?.attr,
          'v-model:value': [model, options?.name],
        },
      },
    ],
  }
}

const Setting = defineComponent({
  props: {
    value: {
      type: Object,
      default: {},
    },
  },
  setup(props, { emit }) {
    const data = useVModel(props, 'value', emit)
    const { t } = useI18n()

    return () => (
      <div class="">

        <DuxFormEditorItem v-model:value={props.value} />

        <WidgetEditorSettingCard title={t('components.formEditor.config')}>

          <DuxFormItem label={t('components.formEditor.common.disabled')} labelPlacement="left">
            <div class="flex flex-1 justify-end">
              <NSwitch v-model:value={data.value.attr.disabled} />
            </div>
          </DuxFormItem>

          <DuxFormItem label={t('components.formEditor.common.clearable')} labelPlacement="left">
            <div class="flex flex-1 justify-end">
              <NSwitch v-model:value={data.value.attr.clearable} />
            </div>
          </DuxFormItem>

        </WidgetEditorSettingCard>

        <WidgetEditorSettingCard title={t('components.formEditor.options')}>

          <DuxFormItem label={t('components.formEditor.mentionAsync.path')}>
            <NInput v-model:value={data.value.attr.path} />
          </DuxFormItem>
          <DuxFormItem label={t('components.formEditor.mentionAsync.labelField')}>
            <NInput v-model:value={data.value.attr.labelField} />
          </DuxFormItem>

          <DuxFormItem label={t('components.formEditor.mentionAsync.valueField')}>
            <NInput v-model:value={data.value.attr.valueField} />
          </DuxFormItem>

        </WidgetEditorSettingCard>

        <DuxFormEditorRule v-model:value={data.value.rule} />
      </div>
    )
  },
})

export function duxFormEditorMentionAsync(t): PageEditorComponent {
  return {
    name: 'mention-async',
    icon: 'i-tabler:at',
    label: t('components.formEditor.mentionAsync.name'),
    group: 'async',
    component: props => <Comp {...props} />,
    setting: props => <Setting {...props} />,
    settingDefault: {
      label: t('components.formEditor.mentionAsync.name'),
      name: 'mentionAsync',
      attr: {
        path: '',
        valueField: 'id',
        labelField: 'title',
        clearable: true,
        pagination: true,
      },
      rule: [],
    },
    json: Json,
  }
}



---
File: /packages/pro/src/components/formEditor/components/radio.tsx
---

import type { JsonSchemaNode } from '@duxweb/dvha-core'
import type { PageEditorComponent, PageEditorJsonProps } from '../../designEditor'
import { useI18n } from '@duxweb/dvha-core'
import { useVModel } from '@vueuse/core'
import { NButton, NInput, NRadio, NRadioGroup, NSwitch } from 'naive-ui'
import { defineComponent } from 'vue'
import { useModal } from '../../../hooks/modal'
import { WidgetEditorSettingCard } from '../../designEditor'
import { DuxFormItem } from '../../form'
import { DuxFormEditorItem, DuxFormEditorRule } from '../base/base'

const Comp = defineComponent({
  name: 'FormEditorRadio',
  props: {
    options: Object,
  },
  setup(props) {
    return () => (
      <DuxFormItem label={props.options?.label} description={props.options?.desc}>
        <NRadioGroup {...props.options?.attr} value={props.options?.attr?.defaultValue}>
          {props.options?.attr?.options?.map((item, index) => <NRadio key={index} value={item.value}>{item.label}</NRadio>)}
        </NRadioGroup>
      </DuxFormItem>
    )
  },
})

function Json(props?: PageEditorJsonProps): JsonSchemaNode {
  const { options, model } = props || {}

  return {
    tag: 'dux-form-item',
    attrs: {
      label: options?.label,
      description: options?.desc,
    },
    children: [
      {
        tag: 'n-radio-group',
        attrs: {
          ...options?.attr,
          'v-model:value': [model, options?.name],
        },
        children: options?.attr?.options?.map((item: any) => ({
          tag: 'n-radio',
          attrs: {
            value: item.value,
          },
          children: [item.label],
        })) || [],
      },
    ],
  }
}

const Setting = defineComponent({
  name: 'FormEditorRadioSetting',
  props: {
    value: {
      type: Object,
      default: {},
    },
  },
  setup(props, { emit }) {
    const data = useVModel(props, 'value', emit)
    const modal = useModal()
    const { t } = useI18n()

    return () => (
      <div class="">

        <DuxFormEditorItem v-model:value={props.value} />

        <WidgetEditorSettingCard title={t('components.formEditor.common.componentConfig')}>

          <DuxFormItem label={t('components.formEditor.common.defaultValue')}>
            <NInput
              v-model:value={data.value.attr.defaultValue}
            />
          </DuxFormItem>

          <DuxFormItem label={t('components.formEditor.common.disabled')} labelPlacement="left">
            <div class="flex flex-1 justify-end">
              <NSwitch v-model:value={data.value.attr.disabled} />
            </div>
          </DuxFormItem>

        </WidgetEditorSettingCard>

        <WidgetEditorSettingCard title={t('components.formEditor.common.optionConfig')}>

          <NButton
            block
            dashed
            renderIcon={() => <div class="i-tabler:edit"></div>}
            onClick={() => {
              modal.show({
                title: t('components.formEditor.common.dataConfig'),
                component: () => import('../base/options'),
                componentProps: {
                  desc: t('components.formEditor.radio.configDesc'),
                  value: data.value.attr.options,
                  onChange: (value) => {
                    data.value.attr.options = value
                  },
                  options: [
                    {
                      label: t('components.formEditor.common.optionLabel'),
                      value: 'label',
                    },
                    {
                      label: t('components.formEditor.common.optionValue'),
                      value: 'value',
                    },
                  ],
                },

              })
            }}
          >
            {t('components.formEditor.common.dataConfig')}
          </NButton>

        </WidgetEditorSettingCard>

        <DuxFormEditorRule v-model:value={data.value.rule} />
      </div>
    )
  },
})

export function duxFormEditorRadio(t): PageEditorComponent {
  return {
    name: 'dux-radio',
    icon: 'i-tabler:circle-dot',
    label: t('components.formEditor.radio.label'),
    group: 'form',
    component: props => <Comp {...props} />,
    setting: props => <Setting {...props} />,
    settingDefault: {
      label: t('components.formEditor.radio.label'),
      name: 'radio',
      attr: {
        options: [
          {
            label: 'option 1',
            value: '1',
          },
          {
            label: 'option 2',
            value: '2',
          },
        ],
        defaultValue: '1',
      },
      rule: [],
    },
    json: Json,
  }
}



---
File: /packages/pro/src/components/formEditor/components/region.tsx
---

import type { JsonSchemaNode } from '@duxweb/dvha-core'
import type { PageEditorComponent, PageEditorJsonProps } from '../../designEditor'
import { useI18n } from '@duxweb/dvha-core'
import { useVModel } from '@vueuse/core'
import { NCheckbox, NInput } from 'naive-ui'
import { defineComponent } from 'vue'
import { WidgetEditorSettingCard } from '../../designEditor'
import { DuxFormItem } from '../../form'
import { DuxLevel } from '../../level'
import { DuxFormEditorItem, DuxFormEditorRule } from '../base/base'

const Comp = defineComponent({
  name: 'FormRegion',
  props: {
    options: Object,
  },
  setup(props) {
    return () => (
      <DuxFormItem label={props.options?.label} description={props.options?.desc}>
        <DuxLevel {...props.options?.attr} />
      </DuxFormItem>
    )
  },
})

function Json(props?: PageEditorJsonProps): JsonSchemaNode {
  const { options, model } = props || {}

  return {
    tag: 'dux-form-item',
    attrs: {
      label: options?.label,
      description: options?.desc,
    },
    children: [
      {
        tag: 'dux-level',
        attrs: {
          ...options?.attr,
          'v-model:value': [model, options?.name],
        },
      },
    ],
  }
}

const Setting = defineComponent({
  name: 'FormRegionSetting',
  props: {
    value: {
      type: Object,
      default: {},
    },
  },
  setup(props, { emit }) {
    const data = useVModel(props, 'value', emit)
    const { t } = useI18n()

    return () => (
      <div class="">

        <DuxFormEditorItem v-model:value={props.value} />

        <WidgetEditorSettingCard title={t('components.formEditor.config')}>

          <DuxFormItem label={t('components.formEditor.region.Path')}>
            <NInput v-model:value={data.value.attr.path} />
          </DuxFormItem>
          <DuxFormItem label={t('components.formEditor.region.labelField')}>
            <NInput v-model:value={data.value.attr.labelField} />
          </DuxFormItem>

          <DuxFormItem label={t('components.formEditor.region.valueField')}>
            <NInput v-model:value={data.value.attr.valueField} />
          </DuxFormItem>

          <DuxFormItem label={t('components.formEditor.common.status')}>
            <div class="w-full grid grid-cols-2">
              <NCheckbox
                label={t('components.formEditor.common.disabled')}
                v-model:checked={data.value.attr.disabled}
              />
            </div>
          </DuxFormItem>

        </WidgetEditorSettingCard>

        <DuxFormEditorRule v-model:value={data.value.rule} />
      </div>
    )
  },
})

export function duxFormEditorRegion(t): PageEditorComponent {
  return {
    name: 'region',
    icon: 'i-tabler:directions',
    label: t('components.formEditor.region.name'),
    group: 'select',
    component: props => <Comp {...props} />,
    setting: props => <Setting {...props} />,
    settingDefault: {
      label: t('components.formEditor.region.name'),
      name: 'region',
      attr: {
        path: '/region',
        valueField: 'id',
        labelField: 'name',
      },
      rule: [],
    },
    json: Json,
  }
}



---
File: /packages/pro/src/components/formEditor/components/select.tsx
---

import type { JsonSchemaNode } from '@duxweb/dvha-core'
import type { PageEditorComponent, PageEditorJsonProps } from '../../designEditor'
import { useI18n } from '@duxweb/dvha-core'
import { useVModel } from '@vueuse/core'
import { NButton, NSelect, NSwitch } from 'naive-ui'
import { defineComponent } from 'vue'
import { useModal } from '../../../hooks/modal'
import { WidgetEditorSettingCard } from '../../designEditor'
import { DuxFormItem } from '../../form'
import { DuxFormEditorItem, DuxFormEditorRule } from '../base/base'

const Comp = defineComponent({
  name: 'FormEditorSelect',
  props: {
    options: Object,
  },
  setup(props) {
    return () => (
      <DuxFormItem label={props.options?.label} description={props.options?.desc}>
        <NSelect {...props.options?.attr} />
      </DuxFormItem>
    )
  },
})

function Json(props?: PageEditorJsonProps): JsonSchemaNode {
  const { options, model } = props || {}

  return {
    tag: 'dux-form-item',
    attrs: {
      label: options?.label,
      description: options?.desc,
    },
    children: [
      {
        tag: 'n-select',
        attrs: {
          ...options?.attr,
          'v-model:value': [model, options?.name],
        },
      },
    ],
  }
}

const Setting = defineComponent({
  name: 'FormEditorSelectSetting',
  props: {
    value: {
      type: Object,
      default: {},
    },
  },
  setup(props, { emit }) {
    const data = useVModel(props, 'value', emit)
    const modal = useModal()
    const { t } = useI18n()

    return () => (
      <div class="">

        <DuxFormEditorItem v-model:value={props.value} />

        <WidgetEditorSettingCard title={t('components.formEditor.common.componentConfig')}>

          <DuxFormItem label={t('components.formEditor.common.multiple')} labelPlacement="left">
            <div class="flex flex-1 justify-end">
              <NSwitch v-model:value={data.value.attr.multiple} />
            </div>
          </DuxFormItem>

          <DuxFormItem label={t('components.formEditor.common.disabled')} labelPlacement="left">
            <div class="flex flex-1 justify-end">
              <NSwitch v-model:value={data.value.attr.disabled} />
            </div>
          </DuxFormItem>

          <DuxFormItem label={t('components.formEditor.common.clearable')} labelPlacement="left">
            <div class="flex flex-1 justify-end">
              <NSwitch v-model:value={data.value.attr.clearable} />
            </div>
          </DuxFormItem>

        </WidgetEditorSettingCard>

        <WidgetEditorSettingCard title={t('components.formEditor.common.optionConfig')}>

          <NButton
            block
            dashed
            renderIcon={() => <div class="i-tabler:edit"></div>}
            onClick={() => {
              modal.show({
                title: t('components.formEditor.common.dataConfig'),
                component: () => import('../base/options'),
                componentProps: {
                  desc: t('components.formEditor.select.configDesc'),
                  value: data.value.attr.options,
                  onChange: (value) => {
                    data.value.attr.options = value
                  },
                  options: [
                    {
                      label: t('components.formEditor.common.labelField'),
                      value: 'label',
                    },
                    {
                      label: t('components.formEditor.common.valueField'),
                      value: 'value',
                    },
                  ],
                },

              })
            }}
          >
            {t('components.formEditor.common.dataConfig')}
          </NButton>

        </WidgetEditorSettingCard>

        <DuxFormEditorRule v-model:value={data.value.rule} />
      </div>
    )
  },
})

export function duxFormEditorSelect(t): PageEditorComponent {
  return {
    name: 'dux-select',
    icon: 'i-tabler:select',
    label: t('components.formEditor.select.label'),
    group: 'form',
    component: props => <Comp {...props} />,
    setting: props => <Setting {...props} />,
    settingDefault: {
      label: t('components.formEditor.select.label'),
      name: 'select',
      attr: {
        options: [],
        clearable: true,
      },
      rule: [],
    },
    json: Json,
  }
}



---
File: /packages/pro/src/components/formEditor/components/selectAsync.tsx
---

import type { JsonSchemaNode } from '@duxweb/dvha-core'
import type { PageEditorComponent, PageEditorJsonProps } from '../../designEditor'
import { useI18n } from '@duxweb/dvha-core'
import { DuxSelect } from '@duxweb/dvha-naiveui'
import { useVModel } from '@vueuse/core'
import { NInput, NSwitch } from 'naive-ui'
import { defineComponent } from 'vue'
import { WidgetEditorSettingCard } from '../../designEditor'
import { DuxFormItem } from '../../form'
import { DuxFormEditorItem, DuxFormEditorRule } from '../base/base'

const Comp = defineComponent({
  props: {
    options: Object,
  },
  setup(props) {
    return () => (
      <DuxFormItem label={props.options?.label} description={props.options?.desc}>
        <DuxSelect {...props.options?.attr} />
      </DuxFormItem>
    )
  },
})

function Json(props?: PageEditorJsonProps): JsonSchemaNode {
  const { options, model } = props || {}

  return {
    tag: 'dux-form-item',
    attrs: {
      label: options?.label,
      description: options?.desc,
    },
    children: [
      {
        tag: 'dux-select',
        attrs: {
          ...options?.attr,
          'v-model:value': [model, options?.name],
        },
      },
    ],
  }
}

const Setting = defineComponent({
  props: {
    value: {
      type: Object,
      default: {},
    },
  },
  setup(props, { emit }) {
    const data = useVModel(props, 'value', emit)
    const { t } = useI18n()

    return () => (
      <div class="">

        <DuxFormEditorItem v-model:value={props.value} />

        <WidgetEditorSettingCard title={t('components.formEditor.config')}>

          <DuxFormItem label={t('components.formEditor.common.multiple')} labelPlacement="left">
            <div class="flex flex-1 justify-end">
              <NSwitch v-model:value={data.value.attr.multiple} />
            </div>
          </DuxFormItem>

          <DuxFormItem label={t('components.formEditor.common.disabled')} labelPlacement="left">
            <div class="flex flex-1 justify-end">
              <NSwitch v-model:value={data.value.attr.disabled} />
            </div>
          </DuxFormItem>

          <DuxFormItem label={t('components.formEditor.common.clearable')} labelPlacement="left">
            <div class="flex flex-1 justify-end">
              <NSwitch v-model:value={data.value.attr.clearable} />
            </div>
          </DuxFormItem>

          <DuxFormItem label={t('components.formEditor.selectAsync.pagination')} labelPlacement="left">
            <div class="flex flex-1 justify-end">
              <NSwitch v-model:value={data.value.attr.pagination} />
            </div>
          </DuxFormItem>

        </WidgetEditorSettingCard>

        <WidgetEditorSettingCard title={t('components.formEditor.options')}>

          <DuxFormItem label={t('components.formEditor.selectAsync.path')}>
            <NInput v-model:value={data.value.attr.path} />
          </DuxFormItem>
          <DuxFormItem label={t('components.formEditor.selectAsync.labelField')}>
            <NInput v-model:value={data.value.attr.labelField} />
          </DuxFormItem>

          <DuxFormItem label={t('components.formEditor.selectAsync.valueField')}>
            <NInput v-model:value={data.value.attr.valueField} />
          </DuxFormItem>

          <DuxFormItem label={t('components.formEditor.selectAsync.imageField')}>
            <NInput v-model:value={data.value.attr.imageField} />
          </DuxFormItem>

          <DuxFormItem label={t('components.formEditor.selectAsync.descField')}>
            <NInput v-model:value={data.value.attr.descField} />
          </DuxFormItem>

        </WidgetEditorSettingCard>

        <DuxFormEditorRule v-model:value={data.value.rule} />
      </div>
    )
  },
})

export function duxFormEditorSelectAsync(t): PageEditorComponent {
  return {
    name: 'select-async',
    icon: 'i-tabler:select',
    label: t('components.formEditor.selectAsync.name'),
    group: 'async',
    component: props => <Comp {...props} />,
    setting: props => <Setting {...props} />,
    settingDefault: {
      label: t('components.formEditor.selectAsync.name'),
      name: 'selectAsync',
      attr: {
        path: '',
        valueField: 'id',
        labelField: 'title',
        clearable: true,
        pagination: true,
      },
      rule: [],
    },
    json: Json,
  }
}



---
File: /packages/pro/src/components/formEditor/components/sider.tsx
---

import type { JsonSchemaNode } from '@duxweb/dvha-core'
import type { PageEditorComponent, PageEditorJsonProps } from '../../designEditor'
import { useI18n } from '@duxweb/dvha-core'
import { useVModel } from '@vueuse/core'
import { NInputNumber, NSlider, NSwitch } from 'naive-ui'
import { defineComponent } from 'vue'
import { WidgetEditorSettingCard } from '../../designEditor'
import { DuxFormItem } from '../../form'
import { DuxFormEditorItem, DuxFormEditorRule } from '../base/base'

const Comp = defineComponent({
  props: {
    options: Object,
  },
  setup(props) {
    return () => (
      <DuxFormItem label={props.options?.label} description={props.options?.desc}>
        <NSlider {...props.options?.attr} />
      </DuxFormItem>
    )
  },
})

function Json(props?: PageEditorJsonProps): JsonSchemaNode {
  const { options, model } = props || {}

  return {
    tag: 'dux-form-item',
    attrs: {
      label: options?.label,
      description: options?.desc,
    },
    children: [
      {
        tag: 'n-slider',
        attrs: {
          ...options?.attr,
          'v-model:value': [model, options?.name],
        },
      },
    ],
  }
}

const Setting = defineComponent({
  props: {
    value: {
      type: Object,
      default: {},
    },
  },
  setup(props, { emit }) {
    const data = useVModel(props, 'value', emit)
    const { t } = useI18n()

    return () => (
      <div class="">

        <DuxFormEditorItem v-model:value={props.value} />

        <WidgetEditorSettingCard title={t('components.formEditor.config')}>

          <DuxFormItem label={t('components.formEditor.common.disabled')} labelPlacement="left">
            <div class="flex flex-1 justify-end">
              <NSwitch v-model:value={data.value.attr.disabled} />
            </div>
          </DuxFormItem>

        </WidgetEditorSettingCard>

        <WidgetEditorSettingCard title={t('components.formEditor.options')}>

          <DuxFormItem label={t('components.formEditor.sider.step')}>
            <NInputNumber v-model:value={data.value.attr.step} />
          </DuxFormItem>

          <DuxFormItem label={t('components.formEditor.sider.min')}>
            <NInputNumber v-model:value={data.value.attr.min} />
          </DuxFormItem>

          <DuxFormItem label={t('components.formEditor.sider.max')}>
            <NInputNumber v-model:value={data.value.attr.max} />
          </DuxFormItem>

        </WidgetEditorSettingCard>

        <DuxFormEditorRule v-model:value={data.value.rule} />
      </div>
    )
  },
})

export function duxFormEditorSider(t): PageEditorComponent {
  return {
    name: 'sider',
    icon: 'i-tabler:separator',
    label: t('components.formEditor.sider.name'),
    group: 'form',
    component: props => <Comp {...props} />,
    setting: props => <Setting {...props} />,
    settingDefault: {
      label: t('components.formEditor.sider.name'),
      name: 'sider',
      attr: {
        step: 1,
        min: 0,
        max: 100,
      },
      rule: [],
    },
    json: Json,
  }
}



---
File: /packages/pro/src/components/formEditor/components/switch.tsx
---

import type { JsonSchemaNode } from '@duxweb/dvha-core'
import type { PageEditorComponent, PageEditorJsonProps } from '../../designEditor'
import { useI18n } from '@duxweb/dvha-core'
import { useVModel } from '@vueuse/core'
import { NSwitch } from 'naive-ui'
import { defineComponent } from 'vue'
import { WidgetEditorSettingCard } from '../../designEditor'
import { DuxFormItem } from '../../form'
import { DuxFormEditorItem, DuxFormEditorRule } from '../base/base'

const Comp = defineComponent({
  name: 'FormEditorSwitch',
  props: {
    options: Object,
  },
  setup(props) {
    return () => (
      <DuxFormItem label={props.options?.label} description={props.options?.desc}>
        <NSwitch {...props.options?.attr} />
      </DuxFormItem>
    )
  },
})

function Json(props?: PageEditorJsonProps): JsonSchemaNode {
  const { options, model } = props || {}

  return {
    tag: 'dux-form-item',
    attrs: {
      label: options?.label,
      description: options?.desc,
    },
    children: [
      {
        tag: 'n-switch',
        attrs: {
          ...options?.attr,
          'v-model:value': [model, options?.name],
        },
      },
    ],
  }
}

const Setting = defineComponent({
  name: 'FormEditorSwitchSetting',
  props: {
    value: {
      type: Object,
      default: {},
    },
  },
  setup(props, { emit }) {
    const data = useVModel(props, 'value', emit)
    const { t } = useI18n()

    return () => (
      <div class="">

        <DuxFormEditorItem v-model:value={props.value} />

        <WidgetEditorSettingCard title={t('components.formEditor.common.componentConfig')}>

          <DuxFormItem label={t('components.formEditor.common.disabled')} labelPlacement="left">
            <div class="flex flex-1 justify-end">
              <NSwitch v-model:value={data.value.attr.disabled} />
            </div>
          </DuxFormItem>

          <DuxFormItem label={t('components.formEditor.common.defaultValue')} labelPlacement="left">
            <div class="flex flex-1 justify-end">
              <NSwitch v-model:value={data.value.attr.defaultValue} />
            </div>
          </DuxFormItem>

        </WidgetEditorSettingCard>

        <DuxFormEditorRule v-model:value={data.value.rule} />
      </div>
    )
  },
})

export function duxFormEditorSwitch(t): PageEditorComponent {
  return {
    name: 'dux-switch',
    icon: 'i-tabler:toggle-left',
    label: t('components.formEditor.switch.label'),
    group: 'form',
    component: props => <Comp {...props} />,
    setting: props => <Setting {...props} />,
    settingDefault: {
      label: t('components.formEditor.switch.label'),
      name: 'switch',
      attr: {
        defaultValue: false,
      },
      rule: [],
    },
    json: Json,
  }
}



---
File: /packages/pro/src/components/formEditor/components/time.tsx
---

import type { JsonSchemaNode } from '@duxweb/dvha-core'
import type { PageEditorComponent, PageEditorJsonProps } from '../../designEditor'
import { useI18n } from '@duxweb/dvha-core'
import { useVModel } from '@vueuse/core'
import { NInput, NSwitch, NTimePicker } from 'naive-ui'
import { defineComponent } from 'vue'
import { WidgetEditorSettingCard } from '../../designEditor'
import { DuxFormItem } from '../../form'
import { DuxFormEditorItem, DuxFormEditorRule } from '../base/base'

const Comp = defineComponent({
  name: 'FormEditorTime',
  props: {
    options: Object,
  },
  setup(props) {
    const attr = props.options?.attr
    return () => (
      <DuxFormItem label={props.options?.label} description={props.options?.desc}>
        <div class="flex-1">
          <NTimePicker {...attr} />
        </div>
      </DuxFormItem>
    )
  },
})

function Json(props?: PageEditorJsonProps): JsonSchemaNode {
  const { options, model } = props || {}

  return {
    tag: 'dux-form-item',
    attrs: {
      label: options?.label,
      description: options?.desc,
    },
    children: [
      {
        tag: 'n-time-picker',
        attrs: {
          ...options?.attr,
          'v-model:value': [model, options?.name],
        },
      },
    ],
  }
}

const Setting = defineComponent({
  name: 'FormEditorTimeSetting',
  props: {
    value: {
      type: Object,
      default: {},
    },
  },
  setup(props, { emit }) {
    const data = useVModel(props, 'value', emit)
    const { t } = useI18n()

    return () => (
      <div>

        <DuxFormEditorItem v-model:value={props.value} />

        <WidgetEditorSettingCard title={t('components.formEditor.common.componentConfig')}>

          <DuxFormItem label={t('components.formEditor.time.timeFormat')}>

            <NInput v-model:value={data.value.attr.format} />

          </DuxFormItem>

          <DuxFormItem label={t('components.formEditor.time.use12Hours')} labelPlacement="left">
            <div class="flex flex-1 justify-end">
              <NSwitch v-model:value={data.value.attr.use12Hours} />
            </div>
          </DuxFormItem>

          <DuxFormItem label={t('components.formEditor.common.disabled')} labelPlacement="left">
            <div class="flex flex-1 justify-end">
              <NSwitch v-model:value={data.value.attr.disabled} />
            </div>
          </DuxFormItem>

          <DuxFormItem label={t('components.formEditor.common.clearable')} labelPlacement="left">
            <div class="flex flex-1 justify-end">
              <NSwitch v-model:value={data.value.attr.clearable} />
            </div>
          </DuxFormItem>

        </WidgetEditorSettingCard>
        <DuxFormEditorRule v-model:value={data.value.rule} />
      </div>
    )
  },
})

export function duxFormEditorTime(t): PageEditorComponent {
  return {
    name: 'dux-time',
    icon: 'i-tabler:clock',
    label: t('components.formEditor.time.label'),
    group: 'form',
    component: props => <Comp {...props} />,
    setting: props => <Setting {...props} />,
    settingDefault: {
      label: t('components.formEditor.time.label'),
      name: 'time',
      attr: {
        use12Hours: false,
      },
      rule: [],
    },
    json: Json,
  }
}



---
File: /packages/pro/src/components/formEditor/components/transferAsync.tsx
---

import type { JsonSchemaNode } from '@duxweb/dvha-core'
import type { PageEditorComponent, PageEditorJsonProps } from '../../designEditor'
import { useI18n } from '@duxweb/dvha-core'
import { DuxTransfer } from '@duxweb/dvha-naiveui'
import { useVModel } from '@vueuse/core'
import { NInput, NSwitch } from 'naive-ui'
import { defineComponent } from 'vue'
import { WidgetEditorSettingCard } from '../../designEditor'
import { DuxFormItem } from '../../form'
import { DuxFormEditorItem, DuxFormEditorRule } from '../base/base'

const Comp = defineComponent({
  props: {
    options: Object,
  },
  setup(props) {
    return () => (
      <DuxFormItem label={props.options?.label} description={props.options?.desc}>
        <DuxTransfer {...props.options?.attr} />
      </DuxFormItem>
    )
  },
})

function Json(props?: PageEditorJsonProps): JsonSchemaNode {
  const { options, model } = props || {}

  return {
    tag: 'dux-form-item',
    attrs: {
      label: options?.label,
      description: options?.desc,
    },
    children: [
      {
        tag: 'dux-transfer',
        attrs: {
          ...options?.attr,
          'v-model:value': [model, options?.name],
        },
      },
    ],
  }
}

const Setting = defineComponent({
  props: {
    value: {
      type: Object,
      default: {},
    },
  },
  setup(props, { emit }) {
    const data = useVModel(props, 'value', emit)
    const { t } = useI18n()

    return () => (
      <div class="">

        <DuxFormEditorItem v-model:value={props.value} />

        <WidgetEditorSettingCard title={t('components.formEditor.config')}>

          <DuxFormItem label={t('components.formEditor.common.disabled')} labelPlacement="left">
            <div class="flex flex-1 justify-end">
              <NSwitch v-model:value={data.value.attr.disabled} />
            </div>
          </DuxFormItem>

          <DuxFormItem label={t('components.formEditor.tree.disabled')} labelPlacement="left">
            <div class="flex flex-1 justify-end">
              <NSwitch v-model:value={data.value.attr.clearable} />
            </div>
          </DuxFormItem>

        </WidgetEditorSettingCard>

        <WidgetEditorSettingCard title={t('components.formEditor.options')}>

          <DuxFormItem label={t('components.formEditor.selectAsync.path')}>
            <NInput v-model:value={data.value.attr.path} />
          </DuxFormItem>
          <DuxFormItem label={t('components.formEditor.selectAsync.labelField')}>
            <NInput v-model:value={data.value.attr.labelField} />
          </DuxFormItem>

          <DuxFormItem label={t('components.formEditor.selectAsync.valueField')}>
            <NInput v-model:value={data.value.attr.valueField} />
          </DuxFormItem>

          <DuxFormItem label={t('components.formEditor.selectAsync.imageField')}>
            <NInput v-model:value={data.value.attr.imageField} />
          </DuxFormItem>

          <DuxFormItem label={t('components.formEditor.selectAsync.descField')}>
            <NInput v-model:value={data.value.attr.descField} />
          </DuxFormItem>

        </WidgetEditorSettingCard>

        <DuxFormEditorRule v-model:value={data.value.rule} />
      </div>
    )
  },
})

export function duxFormEditorTransferAsync(t): PageEditorComponent {
  return {
    name: 'transfer-async',
    icon: 'i-tabler:transfer',
    label: t('components.formEditor.transferAsync.name'),
    group: 'async',
    component: props => <Comp {...props} />,
    setting: props => <Setting {...props} />,
    settingDefault: {
      label: t('components.formEditor.transferAsync.name'),
      name: 'transferAsync',
      attr: {
        path: '',
        valueField: 'id',
        labelField: 'title',
        clearable: true,
      },
      rule: [],
    },
    json: Json,
  }
}



---
File: /packages/pro/src/components/formEditor/components/treeSelect.tsx
---

import type { JsonSchemaNode } from '@duxweb/dvha-core'
import type { PageEditorComponent, PageEditorJsonProps } from '../../designEditor'
import { useI18n } from '@duxweb/dvha-core'
import { useVModel } from '@vueuse/core'
import { NButton, NSwitch, NTreeSelect } from 'naive-ui'
import { defineComponent } from 'vue'
import { useModal } from '../../../hooks/modal'
import { WidgetEditorSettingCard } from '../../designEditor'
import { DuxFormItem } from '../../form'
import { DuxFormEditorItem, DuxFormEditorRule } from '../base/base'

const Comp = defineComponent({
  props: {
    options: Object,
  },
  setup(props) {
    return () => (
      <DuxFormItem label={props.options?.label} description={props.options?.desc}>
        <NTreeSelect {...props.options?.attr} />
      </DuxFormItem>
    )
  },
})

function Json(props?: PageEditorJsonProps): JsonSchemaNode {
  const { options, model } = props || {}

  return {
    tag: 'dux-form-item',
    attrs: {
      label: options?.label,
      description: options?.desc,
    },
    children: [
      {
        tag: 'n-tree-select',
        attrs: {
          ...options?.attr,
          'v-model:value': [model, options?.name],
        },
      },
    ],
  }
}

const Setting = defineComponent({
  props: {
    value: {
      type: Object,
      default: {},
    },
  },
  setup(props, { emit }) {
    const data = useVModel(props, 'value', emit)
    const modal = useModal()
    const { t } = useI18n()

    return () => (
      <div class="">

        <DuxFormEditorItem v-model:value={props.value} />

        <WidgetEditorSettingCard title={t('components.formEditor.config')}>

          <DuxFormItem label={t('components.formEditor.common.multiple')} labelPlacement="left">
            <div class="flex flex-1 justify-end">
              <NSwitch v-model:value={data.value.attr.multiple} />
            </div>
          </DuxFormItem>
          <DuxFormItem label={t('components.formEditor.common.cascade')} labelPlacement="left">
            <div class="flex flex-1 justify-end">
              <NSwitch v-model:value={data.value.attr.cascade} />
            </div>
          </DuxFormItem>

          <DuxFormItem label={t('components.formEditor.common.disabled')} labelPlacement="left">
            <div class="flex flex-1 justify-end">
              <NSwitch v-model:value={data.value.attr.disabled} />
            </div>
          </DuxFormItem>

          <DuxFormItem label={t('components.formEditor.common.clearable')} labelPlacement="left">
            <div class="flex flex-1 justify-end">
              <NSwitch v-model:value={data.value.attr.clearable} />
            </div>
          </DuxFormItem>

        </WidgetEditorSettingCard>

        <WidgetEditorSettingCard title={t('components.formEditor.options')}>
          <NButton
            block
            dashed
            renderIcon={() => <div class="i-tabler:edit"></div>}
            onClick={() => {
              modal.show({
                title: t('components.formEditor.common.data'),
                component: () => import('../base/json'),
                componentProps: {
                  desc: t('components.formEditor.cascader.optionsDescription'),
                  value: JSON.stringify(data.value.attr.options, null, 2),
                  onChange: (value) => {
                    try {
                      data.value.attr.options = JSON.parse(value)
                    }
                    catch {}
                  },
                },
              })
            }}
          >
            {t('components.formEditor.common.data')}
          </NButton>
        </WidgetEditorSettingCard>

        <DuxFormEditorRule v-model:value={data.value.rule} />
      </div>
    )
  },
})

export function duxFormEditorTreeSelect(t): PageEditorComponent {
  return {
    name: 'tree-select',
    icon: 'i-tabler:binary-tree',
    label: t('components.formEditor.treeSelect.name'),
    group: 'select',
    component: props => <Comp {...props} />,
    setting: props => <Setting {...props} />,
    settingDefault: {
      label: t('components.formEditor.treeSelect.name'),
      name: 'treeSelect',
      attr: {
        options: [],
        clearable: true,
      },
      rule: [],
    },
    json: Json,
  }
}



---
File: /packages/pro/src/components/formEditor/components/treeSelectAsync.tsx
---

import type { JsonSchemaNode } from '@duxweb/dvha-core'
import type { PageEditorComponent, PageEditorJsonProps } from '../../designEditor'
import { useI18n } from '@duxweb/dvha-core'
import { DuxTreeSelect } from '@duxweb/dvha-naiveui'
import { useVModel } from '@vueuse/core'
import { NInput, NSwitch } from 'naive-ui'
import { defineComponent } from 'vue'
import { WidgetEditorSettingCard } from '../../designEditor'
import { DuxFormItem } from '../../form'
import { DuxFormEditorItem, DuxFormEditorRule } from '../base/base'

const Comp = defineComponent({
  props: {
    options: Object,
  },
  setup(props) {
    return () => (
      <DuxFormItem label={props.options?.label} description={props.options?.desc}>
        <DuxTreeSelect {...props.options?.attr} />
      </DuxFormItem>
    )
  },
})

function Json(props?: PageEditorJsonProps): JsonSchemaNode {
  const { options, model } = props || {}

  return {
    tag: 'dux-form-item',
    attrs: {
      label: options?.label,
      description: options?.desc,
    },
    children: [
      {
        tag: 'dux-tree-select',
        attrs: {
          ...options?.attr,
          'v-model:value': [model, options?.name],
        },
      },
    ],
  }
}

const Setting = defineComponent({
  props: {
    value: {
      type: Object,
      default: {},
    },
  },
  setup(props, { emit }) {
    const data = useVModel(props, 'value', emit)
    const { t } = useI18n()

    return () => (
      <div class="">

        <DuxFormEditorItem v-model:value={props.value} />

        <WidgetEditorSettingCard title={t('components.formEditor.config')}>

          <DuxFormItem label={t('components.formEditor.common.disabled')} labelPlacement="left">
            <div class="flex flex-1 justify-end">
              <NSwitch v-model:value={data.value.attr.disabled} />
            </div>
          </DuxFormItem>

          <DuxFormItem label={t('components.formEditor.common.clearable')} labelPlacement="left">
            <div class="flex flex-1 justify-end">
              <NSwitch v-model:value={data.value.attr.clearable} />
            </div>
          </DuxFormItem>

        </WidgetEditorSettingCard>

        <WidgetEditorSettingCard title={t('components.formEditor.options')}>

          <DuxFormItem label={t('components.formEditor.treeSelectAsync.path')}>
            <NInput v-model:value={data.value.attr.path} />
          </DuxFormItem>
          <DuxFormItem label={t('components.formEditor.treeSelectAsync.labelField')}>
            <NInput v-model:value={data.value.attr.labelField} />
          </DuxFormItem>

          <DuxFormItem label={t('components.formEditor.treeSelectAsync.keyField')}>
            <NInput v-model:value={data.value.attr.keyField} />
          </DuxFormItem>

        </WidgetEditorSettingCard>

        <DuxFormEditorRule v-model:value={data.value.rule} />
      </div>
    )
  },
})

export function duxFormEditorTreeSelectAsync(t): PageEditorComponent {
  return {
    name: 'tree-select-async',
    icon: 'i-tabler:binary-tree',
    label: t('components.formEditor.treeSelectAsync.name'),
    group: 'async',
    component: props => <Comp {...props} />,
    setting: props => <Setting {...props} />,
    settingDefault: {
      label: t('components.formEditor.treeSelectAsync.name'),
      name: 'treeSelectAsync',
      attr: {
        path: '',
        keyField: 'id',
        labelField: 'name',
        clearable: true,
      },
      rule: [],
    },
    json: Json,
  }
}



---
File: /packages/pro/src/components/formEditor/editor.tsx
---

import type { PageEditorComponent, PageEditorGroup, UseEditorResult } from '../designEditor'
import { useI18n } from '@duxweb/dvha-core'
import { NButton } from 'naive-ui'
import { computed, defineComponent } from 'vue'
import { useModal } from '../../hooks'
import { DuxDesignEditor } from '../designEditor'
import { DuxFormLayout } from '../form/formLayout'
import { DuxFormEditorSettingPage } from './base'
import {
  duxFormEditorAIEditor,
  duxFormEditorCascader,
  duxFormEditorCascaderAsync,
  duxFormEditorCheckbox,
  duxFormEditorColor,
  duxFormEditorDate,
  duxFormEditorDynamicInput,
  duxFormEditorDynamicTags,
  duxFormEditorFileUpload,
  duxFormEditorImageUpload,
  duxFormEditorInput,
  duxFormEditorInputNumber,
  duxFormEditorMentionAsync,
  duxFormEditorRadio,
  duxFormEditorRegion,
  duxFormEditorSelect,
  duxFormEditorSelectAsync,
  duxFormEditorSider,
  duxFormEditorSwitch,
  duxFormEditorTime,
  duxFormEditorTransferAsync,
  duxFormEditorTreeSelect,
  duxFormEditorTreeSelectAsync,
} from './components'

export const DuxFormEditor = defineComponent({
  name: 'DuxFormEditor',
  props: {
    onSave: Function,
  },
  extends: DuxDesignEditor,
  setup(props) {
    const { t } = useI18n()
    const modal = useModal()
    const groups = computed<PageEditorGroup[]>(() => {
      return [
        {
          name: 'form',
          label: t('components.formEditor.groups.form'),
          icon: 'i-tabler:forms',
        },
        {
          name: 'select',
          label: t('components.formEditor.groups.select'),
          icon: 'i-tabler:select',
        },
        {
          name: 'async',
          label: t('components.formEditor.groups.async'),
          icon: 'i-tabler:loader',
        },
      ] as PageEditorGroup[]
    })

    const components = computed<PageEditorComponent[]>(() => {
      return [
        duxFormEditorInput(t),
        duxFormEditorInputNumber(t),
        duxFormEditorAIEditor(t),
        duxFormEditorSider(t),
        duxFormEditorDate(t),
        duxFormEditorTime(t),
        duxFormEditorColor(t),
        duxFormEditorCheckbox(t),
        duxFormEditorRadio(t),
        duxFormEditorSwitch(t),
        duxFormEditorDynamicInput(t),
        duxFormEditorDynamicTags(t),
        duxFormEditorImageUpload(t),
        duxFormEditorFileUpload(t),
        duxFormEditorSelect(t),
        duxFormEditorCascader(t),
        duxFormEditorTreeSelect(t),
        duxFormEditorRegion(t),
        duxFormEditorSelectAsync(t),
        duxFormEditorCascaderAsync(t),
        duxFormEditorTreeSelectAsync(t),
        duxFormEditorTransferAsync(t),
        duxFormEditorMentionAsync(t),
      ]
    })

    return () => (
      <DuxDesignEditor
        {...props}
        groups={groups.value}
        components={components.value}
        settingPage={{
          component: params => <DuxFormEditorSettingPage {...params} />,
          default: {
            labelPlacement: 'left',
          },
        }}
        previewWrapper={(preview, editor) => {
          const config = computed(() => {
            return editor?.value?.value?.config
          })
          return <DuxFormLayout labelPlacement={config.value?.labelPlacement || 'left'} class="h-full">{preview}</DuxFormLayout>
        }}
        actionRender={(edit?: UseEditorResult) => {
          return (
            <div class="flex flex-col gap-2">
              <NButton
                type="primary"
                secondary
                block
                onClick={() => {
                  modal.show({
                    title: t('components.formEditor.main.actions.jsonOutput'),
                    component: () => import('./json'),
                    componentProps: {
                      value: edit?.value?.value.data || [],
                    },
                  })
                }}
              >
                {t('components.formEditor.main.actions.jsonOutput')}
              </NButton>
              <NButton
                type="info"
                secondary
                block
                onClick={() => {
                  modal.show({
                    title: t('common.preview'),
                    component: () => import('./preview'),
                    componentProps: {
                      data: edit?.value?.value.data || [],
                      config: edit?.value?.value.config || {},
                    },
                  })
                }}
              >
                {t('common.preview')}
              </NButton>
              <NButton
                type="primary"
                block
                onClick={() => {
                  props.onSave?.(edit?.value?.value || {})
                }}
              >
                {t('components.formEditor.main.actions.save')}
              </NButton>
            </div>
          )
        }}

      />
    )
  },
})



---
File: /packages/pro/src/components/formEditor/index.ts
---

export * from './editor'
export * from './renderer'



---
File: /packages/pro/src/components/formEditor/json.tsx
---

import { defineComponent } from 'vue'
import { DuxCodeEditor } from '../code'
import { DuxModalPage } from '../modal'

export default defineComponent({
  props: {
    value: {
      type: Object,
      default: () => ({}),
    },
  },
  setup(props) {
    return () => (
      <DuxModalPage>
        <DuxCodeEditor value={JSON.stringify(props.value, null, 2)} readonly />
      </DuxModalPage>
    )
  },
})



---
File: /packages/pro/src/components/formEditor/preview.tsx
---

import type { PropType } from 'vue'
import type { PageEditorData } from '../designEditor'
import { useI18n } from '@duxweb/dvha-core'
import { defineComponent, ref } from 'vue'
import { DuxModalPage } from '../modal'
import { DuxFormRenderer } from './renderer'

export const DuxFormPreview = defineComponent({
  name: 'DuxFormPreview',
  props: {
    data: {
      type: Array as PropType<PageEditorData[]>,
      default: () => [],
    },
    config: {
      type: Object as PropType<Record<string, any>>,
      default: () => ({}),
    },
  },
  setup(props) {
    const { t } = useI18n()
    const formData = ref({})

    return () => (
      <DuxModalPage title={t('common.preview')}>
        <DuxFormRenderer
          v-model:value={formData.value}
          data={props.data}
          config={props.config}
        />
      </DuxModalPage>
    )
  },
})

export default DuxFormPreview



---
File: /packages/pro/src/components/formEditor/renderer.tsx
---

import type { JsonSchemaNode } from '@duxweb/dvha-core'
import type { PropType } from 'vue'
import type { PageEditorComponent, PageEditorData } from '../designEditor'
import { useI18n, useJsonSchema } from '@duxweb/dvha-core'
import { useVModel } from '@vueuse/core'
import { computed, defineComponent } from 'vue'
import { duxFormEditorGrid } from '../designEditor'
import {
  duxFormEditorAIEditor,
  duxFormEditorCascader,
  duxFormEditorCascaderAsync,
  duxFormEditorCheckbox,
  duxFormEditorColor,
  duxFormEditorDate,
  duxFormEditorDynamicInput,
  duxFormEditorDynamicTags,
  duxFormEditorFileUpload,
  duxFormEditorImageUpload,
  duxFormEditorInput,
  duxFormEditorInputNumber,
  duxFormEditorMentionAsync,
  duxFormEditorRadio,
  duxFormEditorRegion,
  duxFormEditorSelect,
  duxFormEditorSelectAsync,
  duxFormEditorSider,
  duxFormEditorSwitch,
  duxFormEditorTime,
  duxFormEditorTransferAsync,
  duxFormEditorTreeSelect,
  duxFormEditorTreeSelectAsync,
} from './components'

export interface FormData {
  [key: string]: any
}

export interface FormConfig {
  labelPlacement?: 'left' | 'top'
  [key: string]: any
}
export const DuxFormRenderer = defineComponent({
  name: 'DuxFormRenderer',
  props: {
    data: {
      type: Array as PropType<PageEditorData[]>,
      default: () => [],
    },
    value: {
      type: Object as PropType<FormData>,
      default: () => ({}),
    },
    config: {
      type: Object as PropType<FormConfig>,
      default: () => ({}),
    },
    readonly: {
      type: Boolean,
      default: false,
    },
    disabled: {
      type: Boolean,
      default: false,
    },
  },
  setup(props, { emit }) {
    const { t } = useI18n()

    const componentMap = computed(() => {
      const components: PageEditorComponent[] = [
        duxFormEditorGrid(t),
        duxFormEditorInput(t),
        duxFormEditorInputNumber(t),
        duxFormEditorAIEditor(t),
        duxFormEditorSider(t),
        duxFormEditorDate(t),
        duxFormEditorTime(t),
        duxFormEditorColor(t),
        duxFormEditorCheckbox(t),
        duxFormEditorRadio(t),
        duxFormEditorSwitch(t),
        duxFormEditorDynamicInput(t),
        duxFormEditorDynamicTags(t),
        duxFormEditorImageUpload(t),
        duxFormEditorFileUpload(t),
        duxFormEditorSelect(t),
        duxFormEditorCascader(t),
        duxFormEditorTreeSelect(t),
        duxFormEditorRegion(t),
        duxFormEditorSelectAsync(t),
        duxFormEditorCascaderAsync(t),
        duxFormEditorTreeSelectAsync(t),
        duxFormEditorTransferAsync(t),
        duxFormEditorMentionAsync(t),
      ]

      const map = new Map<string, PageEditorComponent>()
      components.forEach((comp) => {
        map.set(comp.name, comp)
      })
      return map
    })

    const form = useVModel(props, 'value', emit, {
      defaultValue: {},
      deep: true,
    })

    const convertToJsonSchema = (items: PageEditorData[] | PageEditorData[][], model: FormData = form.value): JsonSchemaNode[] => {
      if (items.length > 0 && Array.isArray(items[0])) {
        return (items as PageEditorData[][]).flatMap(childArray =>
          Array.isArray(childArray) ? convertToJsonSchema(childArray, model) : [],
        )
      }

      return (items as PageEditorData[]).map((item) => {
        const { name, options = {} } = item
        const component = componentMap.value.get(name)

        const mergedOptions = {
          ...options,
          attr: {
            ...options.attr,
            readonly: props.readonly || options.attr?.readonly,
            disabled: props.disabled || options.attr?.disabled,
          },
        }

        if (component?.json) {
          return component.json({
            options: mergedOptions,
            children: item.children,
            model,
            convertToJsonSchema,
          })
        }

        const jsonNode: JsonSchemaNode = {
          tag: name,
          attrs: mergedOptions.attr || {},
        }

        if (item.children?.length) {
          jsonNode.children = convertToJsonSchema(item.children, model)
        }

        return jsonNode
      })
    }

    const jsonSchemaData = computed(() => {
      const nodes = convertToJsonSchema(props.data, form.value)
      return [{
        tag: 'dux-form-layout',
        attrs: {
          labelPlacement: props.config?.labelPlacement || 'left',
        },
        children: nodes,
      }]
    })

    const { render: JsonRender } = useJsonSchema({
      data: jsonSchemaData,
      context: {
        form: form.value,
      },
    })

    return () => <JsonRender />
  },
})



---
File: /packages/pro/src/components/icon/icon.tsx
---

import { useI18n } from '@duxweb/dvha-core'
import { useVModel } from '@vueuse/core'
import { NButton } from 'naive-ui'
import { defineComponent } from 'vue'
import { useModal } from '../../hooks'

export const DuxIconPicker = defineComponent({
  name: 'DuxIconPicker',
  props: {
    defaultValue: String,
    value: String,
  },
  setup(props, { emit }) {
    const model = useVModel(props, 'value', emit, {
      defaultValue: props.defaultValue,
      passive: true,
    })
    const modal = useModal()
    const { t } = useI18n()

    return () => (
      <NButton
        dashed={!model.value}
        onClick={() => {
          modal.show({
            title: t('components.iconPicker.title'),
            component: () => import('./iconPicker'),
          }).then((res) => {
            model.value = res
          })
        }}
        iconPlacement="right"
      >
        {{
          default: () => (
            <div class="flex gap-2 items-center">
              {model.value ? <div class={`size-4 ${model.value || ''}`}></div> : undefined}
              {t('components.iconPicker.title')}
            </div>
          ),
          icon: () => model.value
            ? (
                <div
                  class="rounded-full p-1 hover:bg-gray-2 hover:text-gray-7"
                  onClick={(e) => {
                    e.stopPropagation()
                    model.value = undefined
                  }}
                >
                  <div class="size-4 i-tabler:x"></div>
                </div>
              )
            : undefined,
        }}
      </NButton>
    )
  },
})



---
File: /packages/pro/src/components/icon/iconPicker.tsx
---

import type { PropType } from 'vue'
import { useI18n } from '@duxweb/dvha-core'
import { icons } from '@iconify-json/tabler/icons.json'

import { useOffsetPagination } from '@vueuse/core'
import { NInput, NPagination } from 'naive-ui'
import { defineComponent, onMounted, ref, watch } from 'vue'

const DuxIconPicker = defineComponent({
  name: 'DuxIconPicker',
  props: {
    onConfirm: Function as PropType<(icon: string) => void>,
    onClose: Function as PropType<() => void>,
  },
  setup(props) {
    const allData = Object.keys(icons)
    const iconData = ref(allData)
    const keyword = ref('')
    const data = ref<string[]>([])
    const total = ref(allData.length)

    function fetchData({ currentPage, currentPageSize }: { currentPage: number, currentPageSize: number }) {
      data.value = iconData.value.slice((currentPage - 1) * currentPageSize, currentPage * currentPageSize)
    }

    const {
      currentPage,
      currentPageSize,
      pageCount,
    } = useOffsetPagination({
      total: () => total.value,
      page: 1,
      pageSize: 42,
      onPageChange: fetchData,
      onPageSizeChange: fetchData,
      onPageCountChange: fetchData,
    })

    onMounted(() => {
      fetchData({
        currentPage: currentPage.value,
        currentPageSize: 42,
      })
    })

    watch(keyword, () => {
      iconData.value = Object.keys(icons).filter(item => item.includes(keyword.value))
      total.value = iconData.value.length
      currentPage.value = 1
      fetchData({ currentPage: currentPage.value, currentPageSize: currentPageSize.value })
    }, { immediate: true })

    const { t } = useI18n()

    return () => (
      <div class="p-4 flex flex-col gap-4">
        <NInput placeholder={t('common.keyword')} v-model:value={keyword.value} clearable />
        <div class="grid grid-cols-6">
          {data.value?.map((item, index) => (
            <div
              key={index}
              class="flex justify-center items-center"
              onClick={() => {
                props.onConfirm?.(`i-tabler:${item}`)
              }}
            >
              <div class="py-2 px-3 hover:bg-primary/10 border border-transparent hover:border-primary-hover rounded cursor-pointer transition-all">
                <div class={`i-tabler:${item} size-6`}></div>
              </div>
            </div>
          ))}
        </div>
        <div class="flex justify-center">
          <NPagination page={currentPage.value} pageSize={currentPageSize.value} pageCount={pageCount.value} onUpdatePage={v => currentPage.value = v} />
        </div>
      </div>
    )
  },
})

export default DuxIconPicker



---
File: /packages/pro/src/components/icon/index.ts
---

export * from './icon'
export * from './iconPicker'



---
File: /packages/pro/src/components/layout/filter.tsx
---

import { defineComponent, inject } from 'vue'

export const DuxTableFilter = defineComponent({
  name: 'DuxTableFilter',
  props: {
    label: {
      type: String,
      default: '',
    },
  },
  setup(props, { slots }) {

    const filter = inject('dux.filter', {
      showLabel: false,
      labelPlacement: 'left',
    })

    return () => (
      <div class={[
        'flex gap-2 gap-2 flex-nowrap',
        filter.labelPlacement === 'left' ? 'flex-row items-center' : 'flex-col',
      ]}>
        {filter.showLabel && props.label && <div class="text-sm text-default whitespace-nowrap">{props.label}</div>}
        <div class="flex-1 min-w-60">
          {slots.default?.()}
        </div>
      </div>
    )
  },
})



---
File: /packages/pro/src/components/layout/filterLayout.tsx
---

import { defineComponent, PropType, provide } from 'vue'

export const DuxFilterLayout = defineComponent({
  name: 'DuxFilterLayout',
  props: {
    showLabel: {
      type: Boolean,
      default: false,
    },
    labelPlacement: {
      type: String as PropType<'left' | 'top'>,
      default: 'left',
    },
    horizontal: {
      type: Boolean,
      default: false,
    },
  },
  setup(props, { slots }) {

    provide('dux.filter', {
      showLabel: props.showLabel,
      labelPlacement: props.labelPlacement,
    })

    return () => (
      <div class={[
        'flex flex-col gap-2',
        props.horizontal ? 'flex-row' : 'flex-col',
      ]}>
        {slots.default?.()}
      </div>
    )
  },
})



---
File: /packages/pro/src/components/layout/grid.tsx
---

import { defineComponent } from 'vue'

export const DuxGrid = defineComponent({
  name: 'DuxGrid',
  props: {
    cols: {
      type: Number,
      default: 2,
    },
    spac: {
      type: Number,
      default: 2,
    },
  },
  setup(props, { slots }) {
    return () => (
      <div class={`w-full grid md:grid-cols-${props?.cols || 2} grid-cols-1 gap-${props?.spac || 2}`}>
        {slots.default?.()}
      </div>
    )
  },
})



---
File: /packages/pro/src/components/layout/index.ts
---

export * from './filter'
export * from './filterLayout'
export * from './grid'
export * from './list'
export * from './table'
export * from './tools'



---
File: /packages/pro/src/components/layout/list.tsx
---

import type { JsonSchemaNode, UseExtendListProps } from '@duxweb/dvha-core'
import type { PropType } from 'vue'
import type { UseActionItem } from '../../hooks'

export interface TablePagination {
  page: number
  pageSize: number
}
import { useExtendList, useI18n, useJsonSchema } from '@duxweb/dvha-core'
import { useWindowSize } from '@vueuse/core'
import { NButton, NCheckbox, NDrawer, NModal, NPagination, NProgress, NSpin, NTab, NTabs, NTooltip } from 'naive-ui'
import { computed, defineComponent, h, onMounted, reactive, ref, toRef, watch } from 'vue'
import { useAction } from '../../hooks'
import { DuxPage, DuxPageEmpty } from '../../pages'
import { DuxDrawerPage } from '../drawer'
import { DuxModalPage } from '../modal'
import { DuxFilterLayout, DuxTableFilter, DuxTableTools } from './'

export interface ListPageTools {
  import?: boolean
  export?: boolean
  refresh?: boolean
}

export const DuxListLayout = defineComponent({
  name: 'DuxListLayout',
  props: {
    rowKey: {
      type: String,
      default: 'id',
    },
    path: {
      type: String,
      required: true,
    },
    filter: {
      type: Object as PropType<Record<string, any>>,
    },
    filterSchema: {
      type: Array as PropType<JsonSchemaNode[]>,
    },
    pagination: {
      type: [Boolean, Object] as PropType<boolean | TablePagination>,
      default: true,
    },
    tabs: {
      type: Array as PropType<{
        label: string
        value: string | number
      }[]>,
    },
    tools: {
      type: Object as PropType<ListPageTools>,
    },
    actions: {
      type: Array as PropType<UseActionItem[]>,
      default: () => [],
    },
    checkable: {
      type: Boolean,
    },
    sideLeftTitle: {
      type: String,
      default: '',
    },
    sideRightTitle: {
      type: String,
      default: '',
    },
    hookListProps: {
      type: Object as PropType<UseExtendListProps>,
    },
  },
  setup(props, { slots }) {
    const filters = toRef(props.filter || {})
    const { t } = useI18n()
    const { renderAction } = useAction()

    const pagination = toRef(props.pagination && typeof props.pagination === 'object'
      ? props.pagination
      : {
          page: 1,
          pageSize: 20,
        })

    const tableFilter = ref<Record<string, any>>({})
    const handleFilter = () => {
      Object.assign(tableFilter.value, filters.value)
    }

    const result = useExtendList({
      path: props.path,
      filters: tableFilter.value,
      pagination: pagination.value,
      ...props.hookListProps,
    })

    const { meta, list, isLoading, autoRefetch, autoCountdown, onAutoRefetch, isExporting, isExportingRows, isImporting, onExport, onExportRows, onImport } = result

    // 分页处理
    const paginationProps = computed(() => {
      return {
        page: result.page.value,
        pageSize: result.pageSize.value,
        pageCount: result.pageCount.value,
        pageSizes: result.pageSizes,
        pageSlot: 5,
        onUpdatePage: result.onUpdatePage,
        onUpdatePageSize: result.onUpdatePageSize,
        showSizePicker: true,
        showQuickJumper: true,
      }
    })

    // 筛选处理
    const filterOptions = reactive({
      show: false,
    })

    const sideLeft = reactive({
      show: false,
    })

    const sideRight = reactive({
      show: false,
    })

    const visibleFieldCount = ref(props.filterSchema?.length || 0)
    const { width: windowWidth } = useWindowSize()

    const calculateVisibleFields = () => {
      if (!props.filterSchema?.length)
        return 0

      const totalFields = props.filterSchema.length

      if (totalFields <= 3) {
        return totalFields
      }

      const screenWidth = windowWidth.value || 1024

      let maxFields = 3

      if (screenWidth >= 1280) {
        maxFields = 4
      }
      else if (screenWidth >= 1024) {
        maxFields = 3
      }
      else if (screenWidth >= 768) {
        maxFields = 2
      }
      else {
        maxFields = 1
      }

      return Math.min(totalFields, maxFields)
    }

    watch(windowWidth, () => {
      visibleFieldCount.value = calculateVisibleFields()
    })

    onMounted(() => {
      visibleFieldCount.value = calculateVisibleFields()
    })

    const primaryFilterSchema = computed(() => {
      return (props.filterSchema || []).slice(0, visibleFieldCount.value)
    })

    const advancedFilterSchema = computed(() => {
      return (props.filterSchema || []).slice(visibleFieldCount.value)
    })

    const showAdvancedFilter = computed(() => {
      return advancedFilterSchema.value.length > 0
    })

    const formatSchema = (schema: JsonSchemaNode[]) => {
      return schema.map((item) => {
        const { title, ...rest } = item
        return {
          tag: DuxTableFilter,
          attrs: {
            label: title,
            class: 'flex-1 min-w-0',
          },
          children: rest,
        }
      })
    }

    const { render: filterRenderPrimary } = useJsonSchema({
      data: computed(() => formatSchema(primaryFilterSchema.value)),
    })

    const { render: filterRenderAdvanced } = useJsonSchema({
      data: computed(() => formatSchema(advancedFilterSchema.value)),
    })

    const tools = computed(() => {
      return {
        import: false,
        export: true,
        refresh: true,
        ...props.tools,
      }
    })

    return () => (
      <DuxPage padding={false} scrollbar={false}>
        {{
          sideLeft: () => slots?.sideLeft && windowWidth.value >= 1024 ? slots?.sideLeft?.() : undefined,
          sideRight: () => slots?.sideRight && windowWidth.value >= 1024 ? slots?.sideRight?.() : undefined,
          default: () => (
            <div class="flex flex-col h-full relative">
              <div class="lg:justify-between gap-2 p-3">
                <div class="flex flex-col lg:flex-row lg:items-center gap-2">
                  {props.checkable && (
                    <div class="hidden lg:flex items-center pl-2">
                      <NTooltip>
                        {{
                          trigger: () => (
                            <div
                              class="flex items-center"
                            >
                              <NCheckbox
                                checked={result.isAllChecked.value}
                                indeterminate={result.isIndeterminate.value}
                                onUpdateChecked={result.toggleSelectAll}
                              >
                              </NCheckbox>
                            </div>
                          ),
                          default: () => t('components.list.selectAll'),
                        }}
                      </NTooltip>
                    </div>
                  )}
                  {props.tabs && (
                    <div>
                      <NTabs
                        type="segment"
                        size="small"
                        style={{
                          '--n-tab-padding': '4px 10px',
                        }}
                        default-value={props.tabs?.[0]?.value}
                        value={tableFilter.value?.tab}
                        onUpdateValue={(v) => {
                          tableFilter.value.tab = v
                        }}
                      >
                        {props.tabs?.map(tab => (
                          <NTab name={tab.value} tab={tab.label} />
                        ))}
                      </NTabs>
                    </div>
                  )}

                  <div class="flex gap-2">
                    {slots?.sideLeft && windowWidth.value < 1024 && (
                      <NButton
                        class="flex-none"
                        secondary
                        onClick={() => {
                          sideLeft.show = !sideLeft.show
                        }}
                      >
                        {{
                          icon: () => <div class="i-tabler:layout-sidebar-inactive size-4" />,
                        }}
                      </NButton>
                    )}

                    <div
                      class="flex flex-wrap gap-2 items-center flex-1 lg:flex-none"
                    >
                      {h(filterRenderPrimary)}
                    </div>

                    <NButton type="primary" secondary onClick={handleFilter}>
                      {{
                        icon: () => <div class="i-tabler:search size-4" />,
                        default: () => t('components.button.search'),
                      }}
                    </NButton>

                    {slots?.sideRight && windowWidth.value < 1024 && (
                      <NButton
                        class="flex-none"
                        secondary
                        onClick={() => {
                          sideRight.show = !sideRight.show
                        }}
                      >
                        {{
                          icon: () => <div class="i-tabler:layout-sidebar-right-inactive size-4" />,
                        }}
                      </NButton>
                    )}

                    {showAdvancedFilter.value && (
                      <NButton
                        iconPlacement="right"
                        onClick={() => {
                          filterOptions.show = !filterOptions.show
                        }}
                      >
                        {{
                          default: () => t('components.button.advanced'),
                          icon: () => (
                            <div class={[
                              'i-tabler:chevrons-down size-4 transition-all',
                            ]}
                            />
                          ),
                        }}
                      </NButton>
                    )}
                  </div>
                </div>

                <div class="flex gap-2">
                  {slots.actions?.()}
                  {props.actions?.length > 0 && renderAction({
                    type: windowWidth.value < 1024 ? 'dropdown' : 'button',
                    text: windowWidth.value < 1024,
                    items: props.actions,
                  })}
                </div>

              </div>

              <NSpin show={isLoading.value} class="flex-1 min-h-0" contentClass="h-full">
                <div
                  class={[
                    'h-full overflow-auto rounded-lg px-3',
                  ]}
                >
                  {!isLoading.value && list.value.length === 0 && (
                    <div class="flex justify-center items-center h-full">
                      <DuxPageEmpty />
                    </div>
                  )}
                  {list.value.length > 0 && slots?.default?.(result)}
                </div>
              </NSpin>

              <div class="flex justify-between px-3 py-2 gap-2">
                <div>

                  <div class="flex gap-1 items-center">

                    {props.checkable && (
                      <NTooltip>
                        {{
                          trigger: () => (
                            <NButton
                              loading={isImporting.value}
                              circle
                              quaternary
                            >
                              <NCheckbox
                                checked={result.isAllChecked.value}
                                indeterminate={result.isIndeterminate.value}
                                onUpdateChecked={result.toggleSelectAll}
                              >
                              </NCheckbox>
                            </NButton>
                          ),
                          default: () => t('components.list.selectAll'),
                        }}
                      </NTooltip>
                    )}

                    {slots?.tools?.()}

                    {tools.value.export && (
                      <NTooltip>
                        {{
                          trigger: () => (
                            <NButton loading={isExporting.value} onClick={onExport} circle quaternary>
                              {{
                                icon: () => <div class="i-tabler:database-export size-4" />,
                              }}
                            </NButton>
                          ),
                          default: () => t('components.button.export'),
                        }}
                      </NTooltip>
                    )}
                    {tools.value.import && (
                      <NTooltip>
                        {{
                          trigger: () => (
                            <NButton loading={isImporting.value} onClick={onImport} circle quaternary>
                              {{
                                icon: () => <div class="i-tabler:database-import size-4" />,
                              }}
                            </NButton>
                          ),
                          default: () => t('components.button.import'),
                        }}
                      </NTooltip>
                    )}
                    {tools.value.refresh && (
                      <NTooltip>
                        {{
                          trigger: () => (
                            <NButton onClick={onAutoRefetch} circle quaternary>
                              {{
                                icon: () => (
                                  autoRefetch.value
                                    ? (
                                        <NProgress class="size-4" type="circle" percentage={autoCountdown.value * 10} strokeWidth={20} color="rgba(var(--ui-color-primary))">
                                          <span class="text-8px">{autoCountdown.value}</span>
                                        </NProgress>
                                      )
                                    : <div class="i-tabler:refresh size-4" />
                                ),
                              }}
                            </NButton>
                          ),
                          default: () => t('components.button.autoRefresh'),
                        }}
                      </NTooltip>
                    )}
                  </div>

                </div>
                <div class="flex items-center gap-2">
                  {slots?.bottom?.()}
                  {props.pagination && (
                    <NPagination
                      {...paginationProps.value}
                      simple={windowWidth.value < 768}
                    >
                      {{
                        prefix: () => (
                          <div>
                            {t('components.list.total', {
                              total: meta?.value?.total || 0,
                            })}
                          </div>
                        ),
                      }}
                    </NPagination>
                  )}
                </div>
              </div>

              <DuxTableTools
                number={result.checkeds.value.length}
                group={[
                  [
                    {
                      icon: 'i-tabler:x',
                      onClick: () => {
                        result.checkeds.value = []
                        result.onUpdateChecked?.([])
                      },
                    },
                  ],
                  [
                    {
                      label: t('components.button.export'),
                      icon: 'i-tabler:file-export',
                      loading: isExportingRows.value,
                      onClick: onExportRows,
                    },
                    {
                      label: t('components.button.delete'),
                      type: 'error',
                      icon: 'i-tabler:trash',
                    },
                  ],
                ]}
              />

              <NModal draggable class="bg-white rounded dark:shadow-gray-950/80  dark:bg-gray-800/60 backdrop-blur" show={filterOptions.show} onUpdateShow={v => filterOptions.show = v}>
                {{
                  default: ({ draggableClass }) => {
                    return (
                      <DuxModalPage title={t('components.button.filter')} handle={draggableClass} onClose={() => filterOptions.show = false}>
                        <DuxFilterLayout showLabel labelPlacement="top">
                          {h(filterRenderAdvanced)}
                        </DuxFilterLayout>
                      </DuxModalPage>
                    )
                  },
                }}
              </NModal>

              <NDrawer
                show={sideLeft.show}
                onUpdateShow={v => sideLeft.show = v}
                autoFocus={false}
                placement="left"
              >
                <DuxDrawerPage title={props.sideLeftTitle || t('components.button.sideLeft')} onClose={() => sideLeft.show = false} scrollbar={false}>
                  {slots?.sideLeft?.()}
                </DuxDrawerPage>
              </NDrawer>

              <NDrawer
                show={sideRight.show}
                onUpdateShow={v => sideRight.show = v}
                autoFocus={false}
                placement="right"
              >
                <DuxDrawerPage title={props.sideRightTitle || t('components.button.sideRight')} onClose={() => sideRight.show = false} scrollbar={false}>
                  {slots?.sideRight?.()}
                </DuxDrawerPage>
              </NDrawer>
            </div>
          ),
        }}
      </DuxPage>
    )
  },
})



---
File: /packages/pro/src/components/layout/table.tsx
---

import type { JsonSchemaNode } from '@duxweb/dvha-core'
import type { TableColumn, TablePagination, UseNaiveTableReturn, UseTableProps } from '@duxweb/dvha-naiveui'
import type { DataTableBaseColumn, SelectOption } from 'naive-ui'
import type { PropType } from 'vue'
import type { UseActionItem } from '../../hooks'
import { useI18n, useJsonSchema, useTabStore } from '@duxweb/dvha-core'
import { useWindowSize } from '@vueuse/core'
import { NButton, NDrawer, NModal, NPagination, NPopselect, NProgress, NTab, NTabs, NTooltip } from 'naive-ui'
import { computed, defineComponent, h, reactive, toRef } from 'vue'
import { useAction, useTable } from '../../hooks'
import { DuxPage } from '../../pages'
import { DuxDrawerPage } from '../drawer'
import { DuxModalPage } from '../modal'
import { DuxTableFilter } from './filter'
import { DuxFilterLayout } from './filterLayout'
import { DuxTableTools } from './tools'

export interface TablePageTools {
  import?: boolean
  export?: boolean
  refresh?: boolean
}

export interface TablePageSlotProps extends UseNaiveTableReturn {
  width: number
}

export const DuxTableLayout = defineComponent({
  name: 'DuxTableLayout',
  props: {
    path: {
      type: String,
      required: true,
    },
    filter: {
      type: Object as PropType<Record<string, any>>,
    },
    filterSchema: {
      type: Array as PropType<JsonSchemaNode[]>,
    },
    filterNumber: {
      type: Number,
      default: 1,
    },
    columns: {
      type: Array as PropType<TableColumn[]>,
    },
    pagination: {
      type: [Boolean, Object] as PropType<boolean | TablePagination>,
      default: true,
    },
    tabs: {
      type: Array as PropType<{
        label: string
        value: string | number
      }[]>,
    },
    actions: {
      type: Array as PropType<UseActionItem[]>,
      default: () => [],
    },
    tools: {
      type: Object as PropType<TablePageTools>,
    },
    sideLeftTitle: {
      type: String,
      default: '',
    },
    sideRightTitle: {
      type: String,
      default: '',
    },
    hookTableProps: {
      type: Object as PropType<Partial<UseTableProps>>,
    },
  },
  setup(props, { slots }) {
    const filters = toRef(props, 'filter', {})
    const tableColumns = toRef(props, 'columns', [])
    const { t } = useI18n()
    const { renderAction } = useAction()

    const result = useTable({
      path: props.path,
      filters: filters.value,
      columns: tableColumns,
      pagination: props.pagination,
      ...props.hookTableProps,
    })

    const { columns, tablePagination, table, onUpdateColumnSelected, onUpdateChecked, columnSelected, autoRefetch, autoCountdown, onAutoRefetch, isExporting, isExportingRows, isImporting, onExport, onExportRows, onImport } = result

    const columnConfig = computed<SelectOption[]>(() => {
      return (columns.value as DataTableBaseColumn[]).filter(column => 'title' in column && 'key' in column).map((column) => {
        return {
          label: column.title,
          value: column.key,
        } as SelectOption
      })
    })

    const { width } = useWindowSize()

    const tableWidth = computed(() => {
      const width = columns.value.reduce((acc, column) => {
        return acc + (Number(column?.width) || Number(column?.minWidth) || 110)
      }, 0)
      return width
    })

    const filterOptions = reactive({
      show: false,
    })

    const sideLeft = reactive({
      show: false,
    })

    const sideRight = reactive({
      show: false,
    })

    const filterSchema = computed(() => {
      return (props.filterSchema || []).map((item) => {
        const { label, ...rest } = item
        return {
          tag: DuxTableFilter,
          attrs: {
            label,
          },
          children: rest,
        }
      })
    })

    const { render: filterRender } = useJsonSchema({
      data: computed(() => filterSchema.value?.slice(props.filterNumber)),
    })

    const { render: filterRenderCollapse } = useJsonSchema({
      data: computed(() => filterSchema.value?.slice(0, props.filterNumber)),
    })

    const tools = computed(() => {
      return {
        import: false,
        export: true,
        refresh: true,
        ...props.tools,
      }
    })

    const tab = useTabStore()

    const tabInfo = tab.tabs.find(v => v.path === tab.current)

    return () => (
      <DuxPage actions={props.actions} scrollbar={false}>
        {{
          sideLeft: () => slots?.sideLeft && width.value >= 1024 ? slots?.sideLeft?.() : undefined,
          sideRight: () => slots?.sideRight && width.value >= 1024 ? slots?.sideRight?.() : undefined,
          default: () => (
            <div class="flex flex-col gap-2 h-full relative">
              <div class="flex gap-2 justify-between flex-col lg:flex-row">
                {props.tabs && (
                  <div class="flex flex-none">

                    <NTabs
                      type="segment"
                      size="small"
                      style={{
                        '--n-tab-padding': '4px 10px',
                      }}
                      default-value={props.tabs?.[0]?.value}
                      value={filters.value?.tab}
                      onUpdateValue={(v) => {
                        filters.value.tab = v
                      }}
                    >
                      {props.tabs?.map(tab => (
                        <NTab name={tab.value} tab={tab.label} />
                      ))}
                    </NTabs>
                  </div>
                )}
                <div class={[
                  'overflow-hidden flex-1 flex gap-2',
                ]}
                >
                  {slots?.sideLeft && width.value < 1024 && (
                    <NButton
                      class="flex-none"
                      secondary
                      onClick={() => {
                        sideLeft.show = !sideLeft.show
                      }}
                    >
                      {{
                        icon: () => <div class="i-tabler:layout-sidebar-inactive size-4" />,
                      }}
                    </NButton>
                  )}

                  <div
                    class={[
                      'flex-1 flex flex-col lg:flex-row gap-2 flex-wrap',
                      props.tabs ? 'justify-end' : 'justify-start',
                    ]}
                  >
                    {!props.tabs && !props.filterSchema?.length && (
                      <div class="flex flex-none items-center text-base font-medium">
                        {tabInfo?.label}
                      </div>
                    )}
                    {h(filterRenderCollapse)}
                  </div>

                  {slots?.sideRight && width.value < 1024 && (
                    <NButton
                      class="flex-none"
                      secondary
                      onClick={() => {
                        sideRight.show = !sideRight.show
                      }}
                    >
                      {{
                        icon: () => <div class="i-tabler:layout-sidebar-right-inactive size-4" />,
                      }}
                    </NButton>
                  )}

                </div>
                <div class="flex gap-2 justify-between lg:justify-end">

                  <div class="flex gap-2 items-center">

                    {filterSchema.value.length > props.filterNumber && (
                      <NButton
                        iconPlacement="right"
                        onClick={() => {
                          filterOptions.show = !filterOptions.show
                        }}
                      >
                        {{
                          default: () => t('components.button.filter'),
                          icon: () => (
                            <div class={[
                              'i-tabler:chevrons-down size-4 transition-all',
                            ]}
                            />
                          ),
                        }}
                      </NButton>
                    )}

                    {slots?.tools?.()}

                    <NPopselect
                      options={columnConfig.value}
                      value={columnSelected.value}
                      onUpdateValue={(v) => {
                        onUpdateColumnSelected(v)
                      }}
                      multiple
                      placement="bottom-start"
                      trigger="click"
                    >
                      <NTooltip>
                        {{
                          trigger: () => (
                            <NButton secondary icon-placement="right">
                              {{
                                icon: () => <div class="i-tabler:columns size-4" />,
                              }}
                            </NButton>
                          ),
                          default: () => t('components.list.columnSetting'),
                        }}
                      </NTooltip>
                    </NPopselect>

                    {tools.value.export && (
                      <NTooltip>
                        {{
                          trigger: () => (
                            <NButton secondary loading={isExporting.value} onClick={onExport}>
                              {{
                                icon: () => <div class="i-tabler:database-export size-4" />,
                              }}
                            </NButton>
                          ),
                          default: () => t('components.button.export'),
                        }}
                      </NTooltip>
                    )}
                    {tools.value.import && (
                      <NTooltip>
                        {{
                          trigger: () => (
                            <NButton secondary loading={isImporting.value} onClick={onImport}>
                              {{
                                icon: () => <div class="i-tabler:database-import size-4" />,
                              }}
                            </NButton>
                          ),
                          default: () => t('components.button.import'),
                        }}
                      </NTooltip>
                    )}
                    {tools.value.refresh && (
                      <NTooltip>
                        {{
                          trigger: () => (
                            <NButton secondary onClick={onAutoRefetch}>
                              {{
                                icon: () => (
                                  autoRefetch.value
                                    ? (
                                        <NProgress class="size-4" type="circle" percentage={autoCountdown.value * 10} strokeWidth={20} color="rgba(var(--ui-color-primary))">
                                          <span class="text-8px">{autoCountdown.value}</span>
                                        </NProgress>
                                      )
                                    : <div class="i-tabler:refresh size-4" />
                                ),
                              }}
                            </NButton>
                          ),
                          default: () => t('components.button.autoRefresh'),
                        }}
                      </NTooltip>
                    )}
                  </div>
                  <div class="flex gap-2 justify-end">
                    {slots.actions?.()}

                    {props.actions?.length > 0 && renderAction({
                      type: width.value < 1024 ? 'dropdown' : 'button',
                      items: props.actions,
                    })}
                  </div>
                </div>
              </div>
              {slots?.header?.()}
              <div class="flex-1 min-h-0">
                {slots?.default?.({
                  ...result,
                  width: tableWidth.value,
                })}
              </div>
              <div class="flex justify-between">
                <div>
                  {slots?.bottom?.()}
                </div>
                <div>
                  {props.pagination && (
                    <NPagination
                      {...tablePagination.value}
                      simple={width.value < 768}
                    >
                      {{
                        prefix: () => (
                          <div>
                            {t('components.list.total', {
                              total: result.total.value || 0,
                            })}
                          </div>
                        ),
                      }}
                    </NPagination>
                  )}
                </div>
              </div>
              <DuxTableTools
                number={table.value.checkedRowKeys?.length || 0 || 0}
                group={[
                  [
                    {
                      icon: 'i-tabler:x',
                      onClick: () => {
                        onUpdateChecked?.([])
                      },
                    },
                  ],
                  [
                    {
                      label: t('components.button.export'),
                      icon: 'i-tabler:file-export',
                      loading: isExportingRows.value,
                      onClick: onExportRows,
                    },
                    {
                      label: t('components.button.delete'),
                      type: 'error',
                      icon: 'i-tabler:trash',
                    },
                  ],
                ]}
              />

              <NModal draggable class="bg-white rounded dark:shadow-gray-950/80  dark:bg-gray-800/60 backdrop-blur min-w-110" show={filterOptions.show} onUpdateShow={v => filterOptions.show = v}>
                {{
                  default: ({ draggableClass }) => {
                    return (
                      <DuxModalPage title={t('components.button.filter')} handle={draggableClass} onClose={() => filterOptions.show = false}>
                        <DuxFilterLayout showLabel labelPlacement="top">
                          {h(filterRender)}
                        </DuxFilterLayout>
                      </DuxModalPage>
                    )
                  },
                }}
              </NModal>

              <NDrawer
                show={sideLeft.show}
                onUpdateShow={v => sideLeft.show = v}
                autoFocus={false}
                placement="left"
              >
                <DuxDrawerPage title={props.sideLeftTitle || t('components.button.sideLeft')} onClose={() => sideLeft.show = false} scrollbar={false}>
                  {slots?.sideLeft?.()}
                </DuxDrawerPage>
              </NDrawer>

              <NDrawer
                show={sideRight.show}
                onUpdateShow={v => sideRight.show = v}
                autoFocus={false}
                placement="right"
              >
                <DuxDrawerPage title={props.sideRightTitle || t('components.button.sideRight')} onClose={() => sideRight.show = false} scrollbar={false}>
                  {slots?.sideRight?.()}
                </DuxDrawerPage>
              </NDrawer>
            </div>
          ),
        }}
      </DuxPage>
    )
  },
})



---
File: /packages/pro/src/components/layout/tools.tsx
---

import type { DropdownOption } from 'naive-ui'
import type { PropType } from 'vue'
import { useI18n } from '@duxweb/dvha-core'
import { NButton, NDropdown } from 'naive-ui'
import { computed, defineComponent, Transition } from 'vue'

export interface DuxToolOptionItem {
  label?: string
  icon?: string
  onClick?: () => void
  loading?: boolean
  disabled?: boolean
  type?: 'default' | 'error' | 'success' | 'warning'
}

export const DuxTableTools = defineComponent({
  name: 'DuxTableTools',
  props: {
    number: {
      type: Number,
    },
    options: {
      type: Array as PropType<DuxToolOptionItem[]>,
    },
    group: {
      type: Array as PropType<DuxToolOptionItem[][]>,
    },
    dropdown: {
      type: Array as PropType<DropdownOption[]>,
    },
  },
  setup(props) {
    const { t } = useI18n()
    const group = computed(() => {
      if (props.group) {
        return props.group
      }
      return [props.options]
    })

    const hasSelectedItems = computed(() => {
      return props.number && props.number > 0
    })

    return () => (
      <div class="absolute  bottom-0 left-0 right-0 pointer-events-none">
        <Transition
          name="slide-up"
          appear={true}
          enterActiveClass="transition-all duration-200 ease-out"
          enterFromClass="transform translate-y-full opacity-0"
          enterToClass="transform translate-y-0 opacity-100"
          leaveActiveClass="transition-all duration-200 ease-in"
          leaveFromClass="transform translate-y-0 opacity-100"
          leaveToClass="transform translate-y-full opacity-0"
        >
          {hasSelectedItems.value
            ? (
                <div class="flex h-12 px-1 justify-between lg:justify-center gap-2 pointer-events-auto backdrop-blur">
                  {group.value?.map((options, index) => (
                    <div class="h-10 mt-1 bg-gray-800 rounded px-4 py-1 shadow-lg flex items-center gap-4">

                      {index === group.value.length - 1 && (
                        <>
                          <span class="text-gray-300">
                            {t('components.list.selectedItems', { num: props.number || 0 })}
                          </span>
                          <div class="w-px h-4 bg-gray-600"></div>
                        </>
                      )}

                      {options?.map(item => (
                        <NButton text onClick={item.onClick} class="text-gray-300" loading={item.loading} disabled={item.disabled} type={item.type}>
                          {{
                            default: () => item.label,
                            icon: () => <div class={item.icon} />,
                          }}
                        </NButton>
                      ))}

                      {index === group.value.length - 1 && props.dropdown && props.dropdown.length > 0 && (
                        <NDropdown
                          options={props.dropdown}
                        >
                          <NButton text class="text-gray-300">
                            {{
                              icon: () => <div class="i-tabler:dots-vertical size-4" />,
                            }}
                          </NButton>
                        </NDropdown>
                      )}
                    </div>
                  ))}
                </div>
              )
            : null}
        </Transition>
      </div>
    )
  },
})



---
File: /packages/pro/src/components/level/index.ts
---

export * from './level'



---
File: /packages/pro/src/components/level/level.tsx
---

import { useVModel } from '@vueuse/core'
import { NSelect } from 'naive-ui'
import { computed, defineComponent } from 'vue'
import { useLevel } from '../../hooks'

export const DuxLevel = defineComponent({
  name: 'DuxLevel',
  props: {
    value: {
      type: Array as () => string[],
      default: () => [],
    },
    path: {
      type: String,
      default: 'area',
    },
    maxLevel: {
      type: Number,
      default: 4,
    },
    nameField: {
      type: String,
      default: 'name',
    },
    labelField: {
      type: String,
      default: 'name',
    },
    valueField: {
      type: String,
      default: 'value',
    },
  },
  emits: ['update:value'],
  setup(props, { emit }) {
    const value = useVModel(props, 'value', emit, {
      passive: true,
      defaultValue: [],
    })

    const { regions, onChange, isLoading } = useLevel({
      value,
      path: props.path,
      nameField: props.nameField,
      maxLevel: props.maxLevel,
      labelField: props.labelField,
      valueField: props.valueField,
    })

    const handleChange = (selectedValue: string, index: number) => {
      onChange(selectedValue, index)
    }

    // 根据maxLevel创建对应数量的选择器
    const selectors = computed(() => {
      return Array.from({ length: props.maxLevel }, (_, index) => {
        const options = regions.value[index] || []
        return {
          index,
          options,
          value: value.value[index] || null,
        }
      })
    })

    return () => (
      <div class={[
        'grid grid-cols-1 gap-2',
        `lg:grid-cols-[repeat(auto-fit,minmax(120px,1fr))]`,
      ]}
      >
        {selectors.value.map(selector => (
          <NSelect
            key={selector.index}
            value={selector.value}
            options={selector.options}
            clearable
            loading={isLoading.value}
            onUpdateValue={(val: string) => handleChange(val, selector.index)}
          />
        ))}
      </div>
    )
  },
})



---
File: /packages/pro/src/components/list/card.tsx
---

import type { SlotsType } from 'vue'
import { useElementSize, useWindowSize, watchDebounced } from '@vueuse/core'
import { computed, defineComponent, ref, toRef } from 'vue'
import { DuxListLayout } from '../layout/list'

export interface CardPageSlotProps {
  item: Record<string, any>
  isChecked: (id: string | number) => boolean
  toggleChecked: (id: string | number) => void
}

export const DuxCardPage = defineComponent({
  name: 'DuxCardPage',
  props: {
    colWidth: {
      type: Number,
      default: 320,
    },
    rows: {
      type: Number,
      default: 4,
    },
    maxRows: {
      type: Number,
      default: 10,
    },
    sideLeftTitle: {
      type: String,
      default: '',
    },
    sideRightTitle: {
      type: String,
      default: '',
    },
  },
  extends: DuxListLayout,
  slots: Object as SlotsType<{
    default: (props: CardPageSlotProps) => any
    bottom: () => any
    tools: () => any
    actions: () => any
    sideLeft: () => any
    sideRight: () => any
  }>,
  setup(props, { slots }) {
    // 网格容器引用
    const gridContainerRef = ref<HTMLElement>()
    const { width } = useElementSize(gridContainerRef)
    const { width: windowWidth } = useWindowSize()

    // 计算网格样式
    const minColumnWidth = computed(() => {
      return props.colWidth || 320
    })

    // 计算网格条目数的函数
    const getGridItemCount = (containerWidth = 0) => {
      const actualWidth = containerWidth || windowWidth.value || 1024
      const minColWidth = props.colWidth || 320
      const baseRows = props.rows || 4
      const maxRows = props.maxRows || 10
      const gap = 0.25 * 16 * 3

      // 计算当前列数
      const cols = Math.max(1, Math.floor((actualWidth + gap) / (minColWidth + gap)))

      const standardScreenWidth = 1920
      const baseColumns = Math.floor((standardScreenWidth + gap) / (minColWidth + gap))
      const idealTotal = baseColumns * baseRows

      const adaptiveRows = Math.ceil(idealTotal / cols)

      const finalRows = Math.min(Math.max(adaptiveRows, baseRows), maxRows)

      return cols * finalRows
    }

    const pagination = toRef(props.pagination && typeof props.pagination === 'object'
      ? props.pagination
      : {
          page: 1,
          pageSize: getGridItemCount(),
        })

    watchDebounced([width], () => {
      if (props.pagination && typeof props.pagination === 'object') {
        return
      }

      const newPageSize = getGridItemCount(width.value)
      if (newPageSize === pagination.value.pageSize) {
        return
      }

      pagination.value.pageSize = newPageSize
      pagination.value.page = 1
    }, { debounce: 300 })

    const listProps = computed(() => {
      const { maxRows, rows, colWidth, ...rest } = props
      return {
        ...rest,
        pagination: pagination.value,
      }
    })

    return () => (
      <DuxListLayout {...listProps.value}>
        {{
          default: result => (
            <div

              class="grid gap-3"
              style={{
                'grid-template-columns': `repeat(auto-fit, minmax(${minColumnWidth.value}px, 1fr))`,
              }}
            >
              {result.list.value.map(item => slots?.default?.({
                item,
                isChecked: result.isChecked,
                toggleChecked: result.toggleChecked,
              }))}
            </div>
          ),
          actions: slots.actions,
          tools: slots.tools,
          bottom: slots.bottom,
          sideLeft: slots.sideLeft,
          sideRight: slots.sideRight,
        }}
      </DuxListLayout>
    )
  },
})



---
File: /packages/pro/src/components/list/index.ts
---

export * from './card'
export * from './list'



---
File: /packages/pro/src/components/list/list.tsx
---

import type { SlotsType } from 'vue'
import { computed, defineComponent } from 'vue'
import { DuxListLayout } from '../layout/list'

export interface ListPageSlotProps {
  item: Record<string, any>
  isChecked: (id: string | number) => boolean
  toggleChecked: (id: string | number) => void
}

export const DuxListPage = defineComponent({
  name: 'DuxListPage',
  props: {
    sideLeftTitle: {
      type: String,
      default: '',
    },
    sideRightTitle: {
      type: String,
      default: '',
    },
  },
  extends: DuxListLayout,
  slots: Object as SlotsType<{
    default: (props: ListPageSlotProps) => any
    bottom: () => any
    tools: () => any
    actions: () => any
    sideLeft: () => any
    sideRight: () => any
  }>,
  setup(props, { slots }) {
    const listProps = computed(() => {
      const { ...rest } = props
      return {
        ...rest,
      }
    })

    return () => (
      <DuxListLayout {...listProps.value}>
        {{
          default: result => (
            <div
              class="flex flex-col gap-3"
            >
              {result.list.value.map(item => slots?.default?.({
                item,
                isChecked: result.isChecked,
                toggleChecked: result.toggleChecked,
              }))}
            </div>
          ),
          actions: slots.actions,
          tools: slots.tools,
          bottom: slots.bottom,
          sideLeft: slots.sideLeft,
          sideRight: slots.sideRight,
        }}
      </DuxListLayout>
    )
  },
})



---
File: /packages/pro/src/components/media/index.ts
---

export * from './media'



---
File: /packages/pro/src/components/media/media.tsx
---

import clsx from 'clsx'
import { NImageGroup } from 'naive-ui'
import { computed, defineComponent } from 'vue'
import { DuxAvatar } from '../widget'
import { DuxImage } from '../widget/image'

export const DuxMedia = defineComponent({
  name: 'DuxMedia',
  props: {
    title: String,
    avatar: Boolean,
    image: [String, Array<string>],
    desc: [String, Array<string>],
    extend: String,
    onClick: Function,
    imageWidth: {
      type: Number,
      default: 42,
    },
    imageHeight: {
      type: Number,
      default: 42,
    },
  },
  setup(props, { slots }) {
    const images = computed(() => {
      return Array.isArray(props.image) ? props.image : props.image ? [props.image] : []
    })
    const desc = computed(() => {
      return Array.isArray(props.desc) ? props.desc : props.desc ? [props.desc] : []
    })

    return () => (
      <div class="flex gap-2 items-center">
        {slots?.image && <div class="flex-none flex items-center gap-2">{slots?.image?.()}</div>}
        {(props.avatar || images?.value.length > 0) && (
          <div class="flex-none flex items-center gap-2">
            {props.avatar
              ? (
                  <>
                    {images.value.length > 0
                      ? images.value.map((item, key) => (
                          <DuxAvatar key={key} src={item} round size={props.imageWidth} />
                        ))
                      : <DuxAvatar round size={props.imageWidth} />}
                  </>
                )
              : (
                  <NImageGroup>
                    { images.value.map((item, key) => (
                      <DuxImage key={key} src={item} class="rounded" objectFit="cover" width={props.imageWidth} height={props.imageHeight} />
                    ))}
                  </NImageGroup>
                )}
          </div>
        )}
        <div class="flex-1 flex-col gap-2 min-w-0 truncate items-center">
          <div class="flex gap-2 items-center">
            {slots.prefix?.()}
            {(props.title || slots.default) && (
              <div
                onClick={() => props.onClick?.()}
                class={clsx([
                  'transition-all truncate',
                  props?.onClick && 'hover:text-primary cursor-pointer',
                ])}
              >
                {props.title || slots.default?.()}
              </div>
            )}
          </div>
          {(desc?.value.length > 0 || slots.desc) && (
            <div class="text-sm text-muted flex flex-col gap-0">
              {desc?.value.map?.((item, key) => <div key={key} class="truncate">{item}</div>)}
              {slots.desc?.() }
            </div>
          )}
        </div>
        {props?.extend && <div class="flex-none flex items-center gap-2 text-gray-7">{props?.extend}</div>}
        {slots?.extend && <div class="flex-none flex items-center gap-2 text-gray-7">{slots?.extend?.()}</div>}
      </div>
    )
  },
})



---
File: /packages/pro/src/components/modal/index.ts
---

export * from './modal'
export { default as DuxModalPage } from './modalPage'
export { default as DuxModalTab } from './modalTab'



---
File: /packages/pro/src/components/modal/modal.tsx
---

import type { ModalProps } from 'naive-ui'
import type { AsyncComponentLoader, Component, PropType } from 'vue'
import { useExtendOverlay } from '@overlastic/vue'
import { NModal, NSpin } from 'naive-ui'
import { defineAsyncComponent, defineComponent, Suspense } from 'vue'

export const DuxModal = defineComponent({
  name: 'DuxModal',
  props: {
    title: {
      type: String,
    },
    component: {
      type: [Function, Object] as PropType<AsyncComponentLoader<any> | Component>,
    },
    componentProps: Object,
    width: {
      type: [Number, String],
      default: 500,
    },
    modalProps: {
      type: Object as PropType<ModalProps>,
    },
    draggable: {
      type: Boolean,
      default: true,
    },
  },
  setup(props) {
    const { visible, resolve, reject, vanish } = useExtendOverlay({
      duration: 1000,
    })

    const params = props?.componentProps || {}
    params.title = props.title
    params.onConfirm = resolve
    params.onClose = reject

    const Page = typeof props.component === 'function'
      ? defineAsyncComponent(props.component as AsyncComponentLoader<any>)
      : props.component as Component

    return () => (
      <NModal
        displayDirective="show"
        show={visible.value}
        onAfterLeave={() => {
          vanish()
        }}
        onClose={() => {
          reject()
        }}
        onEsc={() => {
          reject()
        }}
        draggable={props.draggable}
        class="bg-white rounded dark:shadow-gray-950/80  dark:bg-gray-800/60 backdrop-blur"
        role="dialog"
        aria-modal="true"
        {...props.modalProps}
        autoFocus={false}
      >
        {{
          default: ({ draggableClass }) => (
            <div
              class={[
                'max-w-full shadow-lg',
              ]}
              style={{
                width: typeof props.width === 'number' ? `${props.width}px` : props.width,
              }}
            >
              <Suspense>
                {{
                  default: () => <Page {...params} title={props.title} handle={draggableClass} />,
                  fallback: () => (
                    <NSpin show>
                      <div class="h-100"></div>
                    </NSpin>
                  ),
                }}
              </Suspense>
            </div>
          ),
        }}
      </NModal>
    )
  },
})

export default DuxModal



---
File: /packages/pro/src/components/modal/modalPage.tsx
---

import type { PropType } from 'vue'
import { NButton } from 'naive-ui'
import { defineComponent, nextTick, ref, watch } from 'vue'

export default defineComponent({
  name: 'DuxModalPage',
  props: {
    title: {
      type: String,
      default: '',
    },
    draggable: {
      type: Boolean,
      default: false,
    },
    handle: {
      type: String,
    },
    onClose: {
      type: Function as PropType<() => void>,
      default: () => {},
    },
  },
  setup(props, { slots }) {
    const closeRef = ref()

    watch(closeRef, (val) => {
      if (val) {
        nextTick(() => {
          val.$el?.focus?.()
        })
      }
    })

    return () => (
      <div class="flex flex-col">
        <div
          class={[
            'px-4 py-3 border-b border-muted rounded-t flex justify-between items-center  bg-white dark:bg-gray-800/50',
            props.draggable && 'cursor-move',
            props.handle,
          ]}
        >
          <div class="text-base font-bold">{props.title}</div>
          <div class="flex justify-end gap-2">
            <NButton text onClick={props.onClose} aria-label="close" ref={closeRef}>
              {{
                icon: () => <div class="i-tabler:x" />,
              }}
            </NButton>
          </div>
        </div>
        <div class="p-4">
          {slots.default?.()}
        </div>
        {slots.footer?.() && (
          <div class="flex justify-end gap-2 p-3 rounded-b border-t border-muted bg-muted dark:bg-gray-800/50">
            {slots.footer?.()}
          </div>
        )}
      </div>
    )
  },
})



---
File: /packages/pro/src/components/modal/modalTab.tsx
---

import type { PropType, Ref } from 'vue'
import { NButton, NTabs } from 'naive-ui'
import { defineComponent, ref } from 'vue'

export default defineComponent({
  name: 'ModalTab',
  props: {
    draggable: {
      type: Boolean,
      default: false,
    },
    defaultTab: {
      type: String,
      default: '0',
    },
    handle: {
      type: Object as PropType<Ref<HTMLElement>>,
      default: () => ref<HTMLElement>(),
    },
    onClose: {
      type: Function as PropType<() => void>,
      default: () => {},
    },
  },
  setup(props, { slots }) {
    return () => (
      <div class="flex flex-col">
        <NTabs
          type="line"
          defaultValue={props.defaultTab}
          class="app-modal-tabs"
          size="large"
          style={{
            '--n-pane-padding-right': '16px',
            '--n-pane-padding-left': '16px',
          }}
        >
          {{
            default: () => slots.default?.(),
            prefix: () => props.draggable ? <div class="pl-4 cursor-move flex items-center" ref={props.handle}><div class="i-tabler:grid-dots size-4" /></div> : null,
            suffix: () => (
              <div class="pr-4 flex items-center">
                <NButton text onClick={props.onClose} aria-label="close">
                  {{
                    icon: () => <div class="i-tabler:x size-4" />,
                  }}
                </NButton>
              </div>
            ),
          }}
        </NTabs>
        {slots.footer?.() && (
          <div class="flex justify-end gap-2 p-3 rounded-b border-t border-muted bg-muted dark:bg-gray-800/50">
            {slots.footer?.()}
          </div>
        )}
      </div>
    )
  },
})



---
File: /packages/pro/src/components/panel/alert.tsx
---

import type { PropType } from 'vue'
import { computed, defineComponent } from 'vue'

export const DuxPanelAlert = defineComponent({
  name: 'DuxPanelAlert',
  props: {
    type: {
      type: String as PropType<'default' | 'error' | 'warning' | 'info' | 'success'>,
      default: 'default',
    },
    title: {
      type: String,
      default: '',
    },
    description: {
      type: String,
      default: '',
    },
  },
  setup(props, { slots }) {
    const typeClass = computed(() => {
      switch (props.type) {
        case 'error':
          return 'to-error/20'
        case 'warning':
          return 'to-warning/20'
        case 'info':
          return 'to-info/20'
        case 'success':
          return 'to-success/20'
        default:
          return 'to-gray/20'
      }
    })

    return () => (
      <div class={`relative flex rounded-lg ring ring-muted bg-linear-to-br from-transparent ${typeClass.value}`}>
        <div class="relative flex flex-col flex-1 lg:grid gap-x-8 gap-y-4 p-4 sm:p-6">
          <div class="flex flex-col flex-1 items-start">
            <div class="flex-1">
              <div class="text-base text-pretty text-highlighted">
                {slots.title?.() || props.title}
              </div>
              <div class="text-sm text-pretty text-muted mt-1">
                {slots.description?.() || props.description}
              </div>
            </div>
            {slots.actions && (
              <div class="pt-4 mt-auto">
                {slots.actions?.()}
              </div>
            )}
          </div>
        </div>
      </div>
    )
  },
})



---
File: /packages/pro/src/components/panel/collapse.tsx
---

import clsx from 'clsx'
import { defineComponent, ref } from 'vue'

export const DuxCollapsePanel = defineComponent({
  name: 'DuxCollapsePanel',
  props: {
    title: String,
    desc: String,
    defaultShow: Boolean,
    highlight: Boolean,
  },
  setup(props, { slots }) {
    const show = ref(!!props.defaultShow)
    return () => (
      <div class={clsx([
        'border rounded-sm',
        props.highlight ? 'border-primary' : 'border-muted',
      ])}
      >
        <div class={clsx([
          'px-4 py-3 flex justify-between items-center',
          props.highlight ? 'bg-primary/10' : 'bg-gray/5',
        ])}
        >
          <div class="flex gap-2 items-start">
            <div class="pt-0.5">
              {slots.suffix?.()}
            </div>
            <div class="flex flex-col">
              <div class="font-medium text-base">{props?.title}</div>
              {props?.desc && <div class="text-muted">{props.desc}</div>}
            </div>
          </div>
          <div
            class={clsx([
              'p-2 rounded-full text-primary cursor-pointer',
              props.highlight ? 'bg-primary/10' : 'bg-gray/5',
            ])}
            onClick={() => show.value = !show.value}
          >
            <div
              class={clsx([
                'i-tabler:arrow-down size-4 transition-all',
                !show.value ? 'rotate-180' : '',
              ])}
            >
            </div>
          </div>
        </div>
        <div
          class={clsx('transition-all overflow-hidden', {
            'max-h-0': !show.value,
            'max-h-500': show.value,
          })}
        >
          <div class="p-4">
            {slots.default?.()}
          </div>
        </div>
      </div>
    )
  },
})



---
File: /packages/pro/src/components/panel/index.ts
---

export * from './alert'
export * from './setting'
export * from './collapse'



---
File: /packages/pro/src/components/panel/setting.tsx
---

import type { PropType } from 'vue'
import { defineComponent } from 'vue'
import { DuxCard } from '../card'

export const DuxPanelCard = defineComponent({
  name: 'DuxPanelCard',
  props: {
    title: {
      type: String,
      default: '',
    },
    description: {
      type: String,
      default: '',
    },
    padding: {
      type: String as PropType<'none' | 'small' | 'medium' | 'large'>,
    },
    bordered: {
      type: Boolean,
      default: true,
    },
  },
  setup(props, { slots }) {
    return () => (
      <div class="flex flex-col gap-4">
        <div class="flex items-center px-2">
          <div class="flex-1 flex flex-col">
            <div class="text-base">
              {props.title}
            </div>
            {props.description && (
              <div class="text-sm text-muted">
                {props.description}
              </div>
            )}
          </div>
          <div class="flex-none flex items-center">
            {slots.actions?.()}
          </div>
        </div>

        <DuxCard size={props.padding} shadow={false} bordered={props.bordered}>
          {slots.default?.()}
        </DuxCard>
      </div>
    )
  },
})



---
File: /packages/pro/src/components/posterEditor/components/CanvasRuler.tsx
---

import { computed, defineComponent } from 'vue'

export interface CanvasRulerProps {
  canvasWidth: number
  canvasHeight: number
  canvasScale: number
  rulerSize?: number
}

export const CanvasRuler = defineComponent({
  name: 'CanvasRuler',
  props: {
    canvasWidth: {
      type: Number,
      required: true,
    },
    canvasHeight: {
      type: Number,
      required: true,
    },
    canvasScale: {
      type: Number,
      required: true,
    },
    rulerSize: {
      type: Number,
      default: 20,
    },
  },
  setup(props) {
    // 计算标尺刻度
    const getTickMarks = (length: number, scale: number) => {
      const marks: Array<{ position: number, value: number, isMajor: boolean }> = []

      // 根据缩放比例调整刻度间距
      let tickInterval = 10
      if (scale < 0.5) {
        tickInterval = 50
      }
      else if (scale < 1) {
        tickInterval = 25
      }

      for (let i = 0; i <= length; i += tickInterval) {
        const position = i * scale
        const isMajor = i % (tickInterval * 5) === 0
        marks.push({ position, value: i, isMajor })
      }

      return marks
    }

    const horizontalTicks = computed(() =>
      getTickMarks(props.canvasWidth, props.canvasScale),
    )

    const verticalTicks = computed(() =>
      getTickMarks(props.canvasHeight, props.canvasScale),
    )

    // 计算画布实际显示尺寸
    const canvasDisplayWidth = computed(() => props.canvasWidth * props.canvasScale)
    const canvasDisplayHeight = computed(() => props.canvasHeight * props.canvasScale)

    return () => (
      <div class="absolute inset-0 pointer-events-none">
        <div
          class="absolute flex justify-center left-6 top-0 right-0 bg-default"
          style={{
            height: `${props.rulerSize}px`,
          }}
        >
          <div
            class="absolute top-0 bg-default"
            style={{
              left: '50%',
              transform: 'translateX(-50%)',
              width: `${canvasDisplayWidth.value}px`,
              height: `${props.rulerSize}px`,
            }}
          >
            <svg
              width={canvasDisplayWidth.value}
              height={props.rulerSize}
              class="absolute top-0 left-0"
            >
              {horizontalTicks.value.map((tick, index) => (
                <g key={index}>
                  <line
                    x1={tick.position}
                    y1={tick.isMajor ? 0 : props.rulerSize / 2}
                    x2={tick.position}
                    y2={props.rulerSize}
                    stroke="rgba(0,0,0, 0.1)"
                    stroke-width="1"
                  />
                  {tick.isMajor && (
                    <text
                      x={tick.position + 2}
                      y={props.rulerSize - 6}
                      font-size="10"
                      stroke="rgba(0,0,0, 0.1)"
                      font-family="monospace"
                      fill="rgb(var(--ui-text-muted))"
                    >
                      {tick.value}
                    </text>
                  )}
                </g>
              ))}
            </svg>
          </div>
        </div>

        {/* 左侧标尺 - 红色背景，黄色刻度区域 */}
        <div
          class="absolute flex justify-center items-center flex-col top-6 left-0 bottom-0 bg-default border-r border-muted"
          style={{
            width: `${props.rulerSize}px`,
          }}
        >
          {/* 黄色刻度区域 */}
          <div
            class="absolute left-0 bg-default"
            style={{
              top: '50%',
              transform: 'translateY(-50%)',
              width: `${props.rulerSize}px`,
              height: `${canvasDisplayHeight.value}px`,
            }}
          >
            <svg
              width={props.rulerSize}
              height={canvasDisplayHeight.value}
              class="absolute top-0 left-0"
            >
              {verticalTicks.value.map((tick, index) => (
                <g key={index}>
                  <line
                    x1={tick.isMajor ? 0 : props.rulerSize / 2}
                    y1={tick.position}
                    x2={props.rulerSize}
                    y2={tick.position}
                    stroke="rgba(0,0,0, 0.1)"
                    stroke-width="1"
                  />
                  {tick.isMajor && (
                    <text
                      x={props.rulerSize - 6}
                      y={tick.position - 6}
                      font-size="10"
                      fill="rgb(var(--ui-text-muted))"
                      font-family="monospace"
                      text-anchor="end"
                      transform={`rotate(-90, ${props.rulerSize - 2}, ${tick.position - 2})`}
                    >
                      {tick.value}
                    </text>
                  )}
                </g>
              ))}
            </svg>
          </div>
        </div>

        {/* 左上角区域 - 红色背景 */}
        <div
          class="absolute size-6 bg-default top-0 left-0"
        />
      </div>
    )
  },
})



---
File: /packages/pro/src/components/posterEditor/components/index.ts
---

export { CanvasRuler } from './CanvasRuler'



---
File: /packages/pro/src/components/posterEditor/elements/circle.ts
---

import type { ElementConfig, ToolbarControl } from './types'
import { Circle } from 'fabric'

const circleElement: ElementConfig = {
  type: 'circle',
  name: '圆形',
  icon: 'i-tabler:circle',
  category: 'basic',

  defaultProps: {
    type: 'circle',
    left: 100,
    top: 100,
    width: 100,
    height: 100,
    angle: 0,
    scaleX: 1,
    scaleY: 1,
    visible: true,
    locked: false,
    radius: 50,
    fill: '#00ff00',
    stroke: '',
    strokeWidth: 0,
    strokeDashArray: null,
    opacity: 1,
    label: '',
  },

  createFabricObject: (props) => {
    const circle = new Circle({
      left: props.left,
      top: props.top,
      radius: props.radius,
      fill: props.fill,
      stroke: props.stroke || undefined,
      strokeWidth: props.strokeWidth,
      strokeDashArray: props.strokeDashArray,
      angle: props.angle,
      scaleX: props.scaleX,
      scaleY: props.scaleY,
      opacity: props.opacity,
      visible: props.visible,
      selectable: !props.locked,
      evented: !props.locked,
      strokeUniform: true,
      lockUniScaling: true, // 强制等比例缩放，确保圆形始终占满容器
    })

    // 保存label到自定义属性
    ;(circle as any).label = props.label

    return circle
  },

  getPropsFromFabricObject: (obj) => {
    const circle = obj as Circle
    const scaleX = circle.scaleX || 1
    const scaleY = circle.scaleY || 1
    const radius = Math.round((circle.radius || 50) * Math.max(scaleX, scaleY)) // 圆形使用较大的缩放值

    return {
      type: 'circle',
      left: Math.round(circle.left || 0),
      top: Math.round(circle.top || 0),
      width: radius * 2,
      height: radius * 2,
      angle: Math.round(circle.angle || 0),
      scaleX: 1, // 始终重置为1，将缩放应用到实际尺寸
      scaleY: 1, // 始终重置为1，将缩放应用到实际尺寸
      visible: circle.visible !== false,
      locked: !circle.selectable,
      radius,
      fill: circle.fill || '#00ff00',
      stroke: circle.stroke || '',
      strokeWidth: Math.round(circle.strokeWidth || 0),
      strokeDashArray: circle.strokeDashArray || null,
      opacity: circle.opacity || 1,
      label: (circle as any).label || '',
    }
  },

  getToolbarControls: (props): ToolbarControl[] => [
    {
      key: 'label',
      label: '标签',
      type: 'text',
      value: props.label,
      options: { placeholder: '请输入标签' },
    },
    {
      key: 'radius',
      label: '半径',
      type: 'number',
      value: props.radius,
      options: { min: 1, max: 1000, step: 1 },
    },
    {
      key: 'fill',
      label: '填充颜色',
      type: 'color',
      value: props.fill,
    },
    {
      key: 'stroke',
      label: '边框颜色',
      type: 'color',
      value: props.stroke,
    },
    {
      key: 'strokeWidth',
      label: '边框宽度',
      type: 'number',
      value: props.strokeWidth,
      options: { min: 0, max: 50, step: 1 },
    },
    {
      key: 'opacity',
      label: '透明度',
      type: 'slider',
      value: props.opacity,
      options: { min: 0, max: 1, step: 0.01 },
    },
  ],

  onPropsChange: (props, fabricObject) => {
    const circle = fabricObject as Circle
    circle.set({
      radius: props.radius,
      fill: props.fill,
      stroke: props.stroke || undefined,
      strokeWidth: props.strokeWidth,
      opacity: props.opacity,
    })
    // 保存label到自定义属性
    ;(circle as any).label = props.label
  },
}

export default circleElement



---
File: /packages/pro/src/components/posterEditor/elements/image.ts
---

import type { ElementConfig, ToolbarControl } from './types'
import { FabricImage } from 'fabric'


const imageElement: ElementConfig = {
  type: 'image',
  name: '图片',
  icon: 'i-tabler:photo',
  category: 'basic',

  defaultProps: {
    id: '',
    type: 'image',
    left: 100,
    top: 100,
    width: 200,
    height: 200,
    angle: 0,
    scaleX: 1,
    scaleY: 1,
    visible: true,
    locked: false,
    src: '',
    opacity: 1,
  },

  createFabricObject: (props): any => {
    return FabricImage.fromURL(props.src || '', {
      crossOrigin: 'anonymous',
    }).then((img) => {
      img.set({
        left: props.left,
        top: props.top,
        width: props.width,
        height: props.height,
        angle: props.angle,
        opacity: props.opacity,
        visible: props.visible,
        selectable: !props.locked,
        evented: !props.locked,
      })
      return img
    })
  },

  getPropsFromFabricObject: (obj) => {
    const img = obj as FabricImage
    const actualWidth = (img.width || 200) * (img.scaleX || 1)
    const actualHeight = (img.height || 200) * (img.scaleY || 1)
    return {
      type: 'image',
      left: Math.round(img.left || 0),
      top: Math.round(img.top || 0),
      width: Math.round(actualWidth),
      height: Math.round(actualHeight),
      angle: Math.round(img.angle || 0),
      scaleX: img.scaleX || 1,
      scaleY: img.scaleY || 1,
      visible: img.visible !== false,
      locked: !img.selectable,
      src: img.getSrc() || '',
      opacity: img.opacity || 1,
      cropX: 0,
      cropY: 0,
      borderRadius: 0,
    }
  },

  getToolbarControls: (props): ToolbarControl[] => [
    {
      key: 'src',
      label: '选择图片',
      type: 'image',
      value: props.src,
      options: { placeholder: '点击选择图片文件' },
    },
    {
      key: 'width',
      label: '宽度',
      type: 'number',
      value: props.width,
      options: { min: 10, max: 2000, step: 1 },
    },
    {
      key: 'height',
      label: '高度',
      type: 'number',
      value: props.height,
      options: { min: 10, max: 2000, step: 1 },
    },
    {
      key: 'opacity',
      label: '透明度',
      type: 'slider',
      value: props.opacity,
      options: { min: 0, max: 1, step: 0.01 },
    },
  ],

  onPropsChange: (props, fabricObject) => {
    const img = fabricObject as FabricImage

    if (props.src && props.src !== (img.getSrc() || '')) {
      img.setSrc(props.src, { crossOrigin: 'anonymous' })
      .then(() => {
        const imgWidth = img.getElement().width
        const imgHeight = img.getElement().height

        const canvas = img.canvas
        const canvasWidth = canvas?.width || 800
        const canvasHeight = canvas?.height || 600

        const scaleX = canvasWidth / imgWidth
        const scaleY = canvasHeight / imgHeight
        const scale = Math.min(scaleX, scaleY, 1)

        img.set({
          left: props.left,
          top: props.top,
          width: imgWidth,
          height: imgHeight,
          scaleX: scale,
          scaleY: scale,
          angle: props.angle,
          opacity: props.opacity,
          visible: props.visible,
          selectable: !props.locked,
          evented: !props.locked,
        })

        img.setCoords()
        img.canvas?.renderAll()

        img.canvas?.fire('object:modified', { target: img })
      })

      return
    }

    if (!props.src) {
      img.setSrc('').then(() => {
        img.set({
          width: 200,
          height: 200,
        })
        img.setCoords()
        img.canvas?.renderAll()

        img.canvas?.fire('object:modified', { target: img })
      })
      return
    }

    const currentWidth = img.width || 200
    const currentHeight = img.height || 200
    const newScaleX = props.width / currentWidth
    const newScaleY = props.height / currentHeight

    img.set({
      left: props.left,
      top: props.top,
      scaleX: newScaleX,
      scaleY: newScaleY,
      angle: props.angle,
      opacity: props.opacity,
      visible: props.visible,
      selectable: !props.locked,
      evented: !props.locked,
    })

    img.setCoords()
    img.canvas?.renderAll()

    img.canvas?.fire('object:modified', { target: img })

  },
}

export default imageElement



---
File: /packages/pro/src/components/posterEditor/elements/index.ts
---

import type { ElementConfig } from './types'
import circleElement from './circle'
import imageElement from './image'
import rectElement from './rect'
import textElement from './text'

// 元素注册器
class ElementRegistry {
  private elements = new Map<string, ElementConfig>()

  // 注册元素
  register(config: ElementConfig): void {
    this.elements.set(config.type, config)
  }

  // 批量注册元素
  registerAll(configs: ElementConfig[]): void {
    configs.forEach(config => this.register(config))
  }

  // 获取元素配置
  get(type: string): ElementConfig | null {
    return this.elements.get(type) || null
  }

  // 获取所有元素配置
  getAll(): ElementConfig[] {
    return Array.from(this.elements.values())
  }

  // 根据分类获取元素配置
  getByCategory(category: string): ElementConfig[] {
    return this.getAll().filter(config => config.category === category)
  }

  // 获取所有分类
  getCategories(): string[] {
    const categories = new Set(this.getAll().map(config => config.category))
    return Array.from(categories)
  }
}

// 创建全局元素注册器实例
export const elementRegistry = new ElementRegistry()

// 注册默认元素
elementRegistry.registerAll([
  textElement,
  rectElement,
  circleElement,
  imageElement,
])

// 兼容性导出（保持向后兼容）
export const elementConfigs: ElementConfig[] = elementRegistry.getAll()
export const getElementConfig = (type: string) => elementRegistry.get(type)
export const getElementsByCategory = (category: string) => elementRegistry.getByCategory(category)

// 导出类型
export * from './types'



---
File: /packages/pro/src/components/posterEditor/elements/rect.ts
---

import type { ElementConfig, ToolbarControl } from './types'
import { Rect } from 'fabric'

const rectElement: ElementConfig = {
  type: 'rect',
  name: '矩形',
  icon: 'i-tabler:square',
  category: 'basic',

  defaultProps: {
    id: '',
    type: 'rect',
    left: 100,
    top: 100,
    width: 100,
    height: 100,
    angle: 0,
    scaleX: 1,
    scaleY: 1,
    visible: true,
    locked: false,
    fill: '#ff0000',
    stroke: '',
    strokeWidth: 0,
    strokeDashArray: null,
    rx: 0,
    ry: 0,
    opacity: 1,
    label: '',
  },

  createFabricObject: (props) => {
    const rect = new Rect({
      left: props.left,
      top: props.top,
      width: props.width,
      height: props.height,
      fill: props.fill,
      stroke: props.stroke || undefined,
      strokeWidth: props.strokeWidth,
      strokeDashArray: props.strokeDashArray,
      rx: props.rx,
      ry: props.ry,
      angle: props.angle,
      scaleX: props.scaleX,
      scaleY: props.scaleY,
      opacity: props.opacity,
      visible: props.visible,
      selectable: !props.locked,
      evented: !props.locked,
      strokeUniform: true,
      // 支持等比例缩放：用户可以按住Shift键进行等比例缩放
      uniformScaling: false, // 默认不强制等比例，但支持Shift键等比例缩放
    })

    // 添加自定义控制点，支持等比例缩放
    rect.setControlsVisibility({
      mtr: true, // 旋转控制点
      mt: true, // 顶部中间
      mb: true, // 底部中间
      ml: true, // 左侧中间
      mr: true, // 右侧中间
      tl: true, // 左上角 - 支持等比例缩放
      tr: true, // 右上角 - 支持等比例缩放
      bl: true, // 左下角 - 支持等比例缩放
      br: true, // 右下角 - 支持等比例缩放
    })

    // 保存label到自定义属性
    ;(rect as any).label = props.label

    return rect
  },

  getPropsFromFabricObject: (obj) => {
    const rect = obj as Rect
    const scaleX = rect.scaleX || 1
    const scaleY = rect.scaleY || 1

    return {
      type: 'rect',
      left: Math.round(rect.left || 0),
      top: Math.round(rect.top || 0),
      width: Math.round((rect.width || 100) * scaleX),
      height: Math.round((rect.height || 100) * scaleY),
      angle: Math.round(rect.angle || 0),
      scaleX: 1, // 始终重置为1，将缩放应用到实际尺寸
      scaleY: 1, // 始终重置为1，将缩放应用到实际尺寸
      visible: rect.visible !== false,
      locked: !rect.selectable,
      fill: rect.fill || '#ff0000',
      stroke: rect.stroke || '',
      strokeWidth: Math.round(rect.strokeWidth || 0),
      strokeDashArray: rect.strokeDashArray || null,
      rx: Math.round(rect.rx || 0),
      ry: Math.round(rect.ry || 0),
      opacity: rect.opacity || 1,
      label: (rect as any).label || '',
    }
  },

  getToolbarControls: (props): ToolbarControl[] => [
    {
      key: 'label',
      label: '标签',
      type: 'text',
      value: props.label,
      options: { placeholder: '请输入标签' },
    },
    {
      key: 'width',
      label: '宽度',
      type: 'number',
      value: props.width,
      options: { min: 1, max: 2000, step: 1 },
    },
    {
      key: 'height',
      label: '高度',
      type: 'number',
      value: props.height,
      options: { min: 1, max: 2000, step: 1 },
    },
    {
      key: 'fill',
      label: '填充颜色',
      type: 'color',
      value: props.fill,
    },
    {
      key: 'stroke',
      label: '边框颜色',
      type: 'color',
      value: props.stroke,
    },
    {
      key: 'strokeWidth',
      label: '边框宽度',
      type: 'number',
      value: props.strokeWidth,
      options: { min: 0, max: 50, step: 1 },
    },
    {
      key: 'rx',
      label: '圆角半径',
      type: 'number',
      value: props.rx,
      options: { min: 0, max: 100, step: 1 },
    },
    {
      key: 'opacity',
      label: '透明度',
      type: 'slider',
      value: props.opacity,
      options: { min: 0, max: 1, step: 0.01 },
    },
  ],

  onPropsChange: (props, fabricObject) => {
    const rect = fabricObject as Rect
    rect.set({
      width: props.width,
      height: props.height,
      fill: props.fill,
      stroke: props.stroke || undefined,
      strokeWidth: props.strokeWidth,
      rx: props.rx,
      ry: props.rx, // 让ry跟随rx
      opacity: props.opacity,
    })
    // 保存label到自定义属性
    ;(rect as any).label = props.label
  },
}

export default rectElement



---
File: /packages/pro/src/components/posterEditor/elements/text.ts
---

import type { ElementConfig, ToolbarControl } from './types'
import { Textbox } from 'fabric'

const textElement: ElementConfig = {
  type: 'text',
  name: '文本',
  icon: 'i-tabler:typography',
  category: 'basic',

  defaultProps: {
    id: '',
    type: 'text',
    left: 100,
    top: 100,
    width: 200,
    angle: 0,
    scaleX: 1,
    scaleY: 1,
    visible: true,
    locked: false,
    text: '双击编辑文本',
    fontSize: 20,
    fontFamily: 'Arial',
    fill: '#000000',
    textAlign: 'left',
    fontWeight: 'normal',
    fontStyle: 'normal',
    underline: false,
    linethrough: false,
  },

  createFabricObject: (props) => {
    const textbox = new Textbox(props.text, {
      left: props.left,
      top: props.top,
      width: props.width,
      angle: props.angle,
      scaleX: props.scaleX,
      scaleY: props.scaleY,
      visible: props.visible,
      selectable: !props.locked,
      evented: !props.locked,
      fontSize: props.fontSize,
      fontFamily: props.fontFamily,
      fill: props.fill,
      textAlign: props.textAlign as any,
      fontWeight: props.fontWeight as any,
      fontStyle: props.fontStyle as any,
      underline: props.underline,
      linethrough: props.linethrough,
      // 启用自动换行的关键配置
      splitByGrapheme: true,
      // 锁定高度缩放，只允许宽度缩放
      lockScalingY: true,
      // 禁用高度手柄
      setControlsVisibility: {
        mt: false, // 顶部中间
        mb: false, // 底部中间
      },
    })

    // 记录开始缩放时的字体大小
    let scaleStartFontSize = props.fontSize

    // 添加鼠标按下事件监听，记录开始缩放时的字体大小
    textbox.on('mousedown', () => {
      scaleStartFontSize = textbox.fontSize || 20
    })

    // 添加缩放事件监听
    textbox.on('scaling', () => {
      // 计算新的字体大小，使用X轴缩放比例（因为锁定了Y轴缩放）
      const scale = textbox.scaleX || 1
      const newFontSize = Math.round(scaleStartFontSize * scale)

      // 限制字体大小范围
      const fontSize = Math.max(8, Math.min(200, newFontSize))

      // 更新字体大小并重置缩放
      textbox.set({
        fontSize,
        scaleX: 1,
        scaleY: 1,
      })

      // 强制重新渲染
      textbox.canvas?.requestRenderAll()
    })

    // 添加双击编辑事件
    textbox.on('mousedblclick', () => {
      textbox.enterEditing()
      textbox.selectAll()
    })

    return textbox
  },

  getPropsFromFabricObject: (obj) => {
    const textbox = obj as Textbox
    return {
      left: Math.round(textbox.left || 0),
      top: Math.round(textbox.top || 0),
      width: Math.round(textbox.width || 0),
      angle: Math.round(textbox.angle || 0),
      scaleX: textbox.scaleX || 1,
      scaleY: textbox.scaleY || 1,
      visible: textbox.visible !== false,
      locked: !textbox.selectable,
      text: textbox.text || '',
      fontSize: Math.round(textbox.fontSize || 20),
      fontFamily: textbox.fontFamily || 'Arial',
      fill: textbox.fill as string,
      textAlign: textbox.textAlign || 'left',
      fontWeight: textbox.fontWeight || 'normal',
      fontStyle: textbox.fontStyle || 'normal',
      underline: textbox.underline || false,
      linethrough: textbox.linethrough || false,
    }
  },

  onPropsChange: (props, fabricObject) => {
    const textbox = fabricObject as Textbox

    // 更新基础属性
    textbox.set({
      left: props.left,
      top: props.top,
      width: props.width,
      angle: props.angle,
      visible: props.visible,
      selectable: !props.locked,
      evented: !props.locked,
      text: props.text,
      fontSize: props.fontSize,
      fontFamily: props.fontFamily,
      fill: props.fill,
      textAlign: props.textAlign,
      fontWeight: props.fontWeight,
      fontStyle: props.fontStyle,
      underline: props.underline,
      linethrough: props.linethrough,
    })
  },

  getToolbarControls: (props): ToolbarControl[] => {
    return [
      {
        key: 'text',
        label: '文本内容',
        type: 'text',
        value: props.text,
      },
      {
        key: 'fontSize',
        label: '字体大小',
        type: 'number',
        value: props.fontSize,
        options: {
          min: 8,
          max: 200,
          step: 1,
        },
      },
      {
        key: 'fontFamily',
        label: '字体',
        type: 'select',
        value: props.fontFamily,
        options: {
          choices: [
            { label: 'Arial', value: 'Arial' },
            { label: '微软雅黑', value: 'Microsoft YaHei' },
            { label: '宋体', value: 'SimSun' },
            { label: '黑体', value: 'SimHei' },
          ],
        },
      },
      {
        key: 'fill',
        label: '颜色',
        type: 'color',
        value: props.fill,
      },
      {
        key: 'textAlign',
        label: '对齐',
        type: 'select',
        value: props.textAlign,
        options: {
          choices: [
            { label: '左对齐', value: 'left' },
            { label: '居中', value: 'center' },
            { label: '右对齐', value: 'right' },
          ],
        },
      },
      {
        key: 'fontWeight',
        label: '粗体',
        type: 'select',
        value: props.fontWeight,
        options: {
          choices: [
            { label: '正常', value: 'normal' },
            { label: '粗体', value: 'bold' },
          ],
        },
      },
      {
        key: 'fontStyle',
        label: '斜体',
        type: 'select',
        value: props.fontStyle,
        options: {
          choices: [
            { label: '正常', value: 'normal' },
            { label: '斜体', value: 'italic' },
          ],
        },
      },
      {
        key: 'underline',
        label: '下划线',
        type: 'switch',
        value: props.underline,
      },
      {
        key: 'linethrough',
        label: '删除线',
        type: 'switch',
        value: props.linethrough,
      },
    ]
  },
}

export default textElement



---
File: /packages/pro/src/components/posterEditor/elements/types.ts
---

import type { FabricObject } from 'fabric'

// 元素基础属性
export interface BaseElementProps {
  id: string
  type: string
  left: number
  top: number
  width: number
  height: number
  angle: number
  scaleX: number
  scaleY: number
  visible: boolean
  locked: boolean
}

// 工具栏控件类型
export type ToolbarControlType = 'number' | 'text' | 'color' | 'select' | 'switch' | 'slider' | 'image'

// 工具栏控件配置
export interface ToolbarControl {
  key: string
  label: string
  type: ToolbarControlType
  value: any
  options?: {
    min?: number
    max?: number
    step?: number
    choices?: Array<{ label: string, value: any }>
    placeholder?: string
  }
}

// 元素配置接口
export interface ElementConfig {
  type: string
  name: string
  icon: string
  category: string
  defaultProps: Record<string, any>

  // 创建Fabric对象
  createFabricObject: (props: Record<string, any>) => FabricObject

  // 从Fabric对象获取属性
  getPropsFromFabricObject: (obj: FabricObject) => Record<string, any>

  // 获取工具栏控件
  getToolbarControls: (props: Record<string, any>) => ToolbarControl[]

  // 属性更新回调
  onPropsChange?: (props: Record<string, any>, fabricObject: FabricObject) => void
}

// 对齐类型
export type AlignType
  = | 'left'
    | 'right'
    | 'top'
    | 'bottom'
    | 'center-horizontal'
    | 'center-vertical'
    | 'center-both'
    | 'distribute-horizontal'
    | 'distribute-vertical'
    | 'move-up'
    | 'move-down'
    | 'move-to-front'
    | 'move-to-back'

// 元素数据类型（BaseElementProps 的别名，用于更清晰的语义）
export type ElementData = BaseElementProps & Record<string, any>

// 画布数据
export interface CanvasData {
  width: number
  height: number
  backgroundColor: string
  backgroundImage?: string
  elements: ElementData[]
}



---
File: /packages/pro/src/components/posterEditor/hooks/index.ts
---

export * from './usePosterEditor'


---
File: /packages/pro/src/components/posterEditor/hooks/usePosterEditor.ts
---

import type { Canvas, FabricObject } from 'fabric'
import type { ComputedRef, Ref } from 'vue'
import type { AlignType, CanvasData, ElementConfig, ElementData } from '../elements/types'
import { useThrottleFn } from '@vueuse/core'
import { Canvas as FabricCanvas, FabricImage } from 'fabric'
import { computed, markRaw, nextTick, ref, watch } from 'vue'
import { getElementConfig } from '../elements'

interface PosterEditorOptions {
  width?: number
  height?: number
  backgroundColor?: string
  backgroundImage?: string
}

export interface PosterEditorReturn {
  initCanvas: (element: HTMLCanvasElement, container?: HTMLElement) => void
  destroy: () => void
  setCallbacks: (callbacks: { onDataChange?: (data?: string) => void }) => void
  addElement: (type: string, customProps?: Record<string, any>) => Promise<string | undefined>
  deleteSelectedElements: () => void
  updateElementProperty: (elementId: string, key: string, value: any) => void
  alignElements: (alignType: AlignType) => void
  canMoveUp: ComputedRef<boolean>
  canMoveDown: ComputedRef<boolean>
  canMoveToFront: ComputedRef<boolean>
  canMoveToBack: ComputedRef<boolean>
  clearCanvas: () => void
  loadData: (data?: string) => void
  updateData: () => void
  canvas: Ref<any>
  canvasData: Ref<CanvasData>
  selectedElements: Ref<FabricObject[]>
  canvasScale: Ref<number>
  currentElement: ComputedRef<FabricObject | null>
  currentElementData: ComputedRef<ElementData | null>
  currentElementConfig: ComputedRef<ElementConfig | null>
  hasMultipleSelection: ComputedRef<boolean>
  clearSelection: () => void
  updateCanvasSize: () => void
  setupAutoResize: (container: HTMLElement) => () => void
  getSelectedElementProperty: (key: string) => any
  selectedElementsData: ComputedRef<ElementData[]>
  syncAllFabricObjectsToData: () => void
  updateCanvasSettings: (width: number, height: number) => void
  updateCanvasBackground: (color: string) => void
  updateCanvasBackgroundImage: (imageUrl: string) => void
  saveData: () => void
  exportJson: () => void
}

export function usePosterEditor(options: PosterEditorOptions = {}): PosterEditorReturn {
  const canvas = ref<Canvas | null>(null)
  const canvasElement = ref<HTMLCanvasElement | null>(null)
  const canvasData = ref<CanvasData>({
    width: options.width || 750,
    height: options.height || 1000,
    backgroundColor: options.backgroundColor || '#ffffff',
    backgroundImage: options.backgroundImage || '',
    elements: [],
  })
  const selectedElements = ref<any[]>([])
  const isUpdating = ref(false)
  const canvasScale = ref(1)
  const containerWidth = ref(0)
  const containerHeight = ref(0)
  let containerElement: HTMLElement | null = null

  let onDataChange: (data: string) => void = () => {}
  let elementIdCounter = 0
  const generateElementId = () => `element_${++elementIdCounter}`

  const updateData = () => {
    if (isUpdating.value)
      return
    isUpdating.value = true
    nextTick(() => {
      onDataChange(JSON.stringify(canvasData.value))
      isUpdating.value = false
    })
  }

  const syncAllFabricObjectsToData = () => {
    if (!canvas.value)
      return

    const fabricObjects = canvas.value.getObjects()
    const newElements: any[] = []

    fabricObjects.forEach((fabricObject: any) => {
      const elementId = fabricObject.elementId
      if (!elementId)
        return

      const existingElement = canvasData.value.elements.find(el => el.id === elementId)
      if (!existingElement)
        return

      const elementConfig = getElementConfig(existingElement.type)
      if (!elementConfig)
        return

      const updatedProps = elementConfig.getPropsFromFabricObject(fabricObject)
      newElements.push({
        ...existingElement,
        ...updatedProps,
        id: existingElement.id,
        type: existingElement.type,
      })
    })

    canvasData.value.elements = newElements
  }

  const throttledSyncAllData = useThrottleFn(() => {
    syncAllFabricObjectsToData()
    updateData()
  }, 100)

  const handleSelectionChange = () => {
    if (!canvas.value)
      return
    const activeObjects = canvas.value.getActiveObjects()
    const activeObject = canvas.value.getActiveObject()

    if (activeObjects.length > 0) {
      selectedElements.value = [...activeObjects]
    }
    else if (activeObject) {
      selectedElements.value = [activeObject]
    }
    else {
      selectedElements.value = []
    }
  }

  const handleSelectionClear = () => {
    selectedElements.value = []
  }

  const handleObjectModified = (e: any) => {
    if (!e.target)
      return

    const obj = e.target
    const elementId = (obj as any).elementId
    const elementData = canvasData.value.elements.find((el: any) => el.id === elementId)
    const elementType = elementData?.type
    const scaleX = obj.scaleX || 1
    const scaleY = obj.scaleY || 1

    if (scaleX !== 1 || scaleY !== 1) {
      if (elementType === 'circle') {
        const maxScale = Math.max(scaleX, scaleY)
        const newRadius = Math.round((obj.radius || 50) * maxScale)
        obj.set({ radius: newRadius, scaleX: 1, scaleY: 1 })
      }
      else if (elementType === 'image') {

      }
      else {
        const newWidth = Math.round(obj.width * scaleX)
        const newHeight = Math.round(obj.height * scaleY)
        obj.set({ width: newWidth, height: newHeight, scaleX: 1, scaleY: 1 })
      }
      obj.setCoords()
    }

    // 确保数据同步
    throttledSyncAllData()
  }

  const handleObjectScaling = (e: any) => {
    const obj = e.target
    if (!obj)
      return

    const elementId = (obj as any).elementId
    if (!elementId)
      return

    const elementData = canvasData.value.elements.find((el: any) => el.id === elementId)
    if (!elementData)
      return

    if (elementData.type === 'circle') {
      const scale = Math.max(obj.scaleX || 1, obj.scaleY || 1)
      obj.set({ scaleX: scale, scaleY: scale })
      obj.setCoords()
    }

    if (elementData.type === 'rect') {
      const corner = obj.__corner
      const isCornerDrag = corner && ['tl', 'tr', 'bl', 'br'].includes(corner)

      if (isCornerDrag) {
        const scale = Math.max(Math.abs(obj.scaleX || 1), Math.abs(obj.scaleY || 1))
        obj.set({
          scaleX: obj.scaleX >= 0 ? scale : -scale,
          scaleY: obj.scaleY >= 0 ? scale : -scale,
        })
        obj.setCoords()
      }
    }

    if (elementData.type === 'image') {
      const corner = obj.__corner
      const isCornerDrag = corner && ['tl', 'tr', 'bl', 'br'].includes(corner)

      if (isCornerDrag) {
        const scale = Math.max(Math.abs(obj.scaleX || 1), Math.abs(obj.scaleY || 1))
        obj.set({
          scaleX: obj.scaleX >= 0 ? scale : -scale,
          scaleY: obj.scaleY >= 0 ? scale : -scale,
        })
        obj.setCoords()
      }
    }
  }

  const bindCanvasEvents = () => {
    if (!canvas.value)
      return

    canvas.value.on('selection:created', handleSelectionChange)
    canvas.value.on('selection:updated', handleSelectionChange)
    canvas.value.on('selection:cleared', handleSelectionClear)
    canvas.value.on('mouse:down', () => setTimeout(handleSelectionChange, 10))
    canvas.value.on('mouse:up', () => setTimeout(handleSelectionChange, 10))
    canvas.value.on('object:modified', handleObjectModified)
    canvas.value.on('object:scaling', handleObjectScaling)
    canvas.value.on('path:created', throttledSyncAllData)

    // 统一的数据同步事件监听
    canvas.value.on('object:moving', throttledSyncAllData)
    canvas.value.on('object:rotating', throttledSyncAllData)
    canvas.value.on('object:skewing', throttledSyncAllData)
    canvas.value.on('object:added', throttledSyncAllData)
    canvas.value.on('object:removed', throttledSyncAllData)

    ;(canvas.value as any).on('custom:text:changed', (e: any) => {
      if (e.target && e.newText !== undefined) {
        const elementId = (e.target as any).elementId
        if (elementId) {
          // 数据同步通过统一的事件监听自动触发
          throttledSyncAllData()
        }
      }
    })
  }

  const updateCanvasSize = () => {
    if (!canvas.value)
      return

    const currentScale = canvasScale.value || 1
    canvas.value.setZoom(currentScale)
    canvas.value.setDimensions({
      width: canvasData.value.width * currentScale,
      height: canvasData.value.height * currentScale,
    })
    canvas.value.backgroundColor = canvasData.value.backgroundColor
    canvas.value.renderAll()
    canvas.value.getObjects().forEach(obj => obj.setCoords())
  }

  const updateScale = () => {
    if (!containerElement)
      return

    const containerRect = containerElement.getBoundingClientRect()
    containerWidth.value = containerRect.width - 40
    containerHeight.value = containerRect.height - 40

    const scaleX = containerWidth.value / canvasData.value.width
    const scaleY = containerHeight.value / canvasData.value.height
    const scale = Math.min(scaleX, scaleY, 1)

    canvasScale.value = scale

    if (canvas.value) {
      canvas.value.setZoom(scale)
      canvas.value.setDimensions({
        width: canvasData.value.width * scale,
        height: canvasData.value.height * scale,
      })
      canvas.value.renderAll()
      canvas.value.getObjects().forEach(obj => obj.setCoords())
    }
  }

  const setupAutoResize = (container: HTMLElement) => {
    containerElement = container

    nextTick(updateScale)
    const resizeObserver = new ResizeObserver(updateScale)
    resizeObserver.observe(container)
    return () => resizeObserver.disconnect()
  }

  const alignToCanvas = (obj: any, alignType: AlignType) => {
    const canvasWidth = canvasData.value.width
    const canvasHeight = canvasData.value.height
    const objBounds = obj.getBoundingRect()

    switch (alignType) {
      case 'center-horizontal':
        obj.set('left', Math.round(obj.left + (canvasWidth / 2 - objBounds.left - objBounds.width / 2)))
        break
      case 'center-vertical':
        obj.set('top', Math.round(obj.top + (canvasHeight / 2 - objBounds.top - objBounds.height / 2)))
        break
      case 'center-both':
        obj.set({
          left: Math.round(obj.left + (canvasWidth / 2 - objBounds.left - objBounds.width / 2)),
          top: Math.round(obj.top + (canvasHeight / 2 - objBounds.top - objBounds.height / 2)),
        })
        break
      case 'move-up':
        canvas.value?.bringObjectForward(obj)
        break
      case 'move-down':
        canvas.value?.sendObjectBackwards(obj)
        break
      case 'move-to-front':
        canvas.value?.bringObjectToFront(obj)
        break
      case 'move-to-back':
        canvas.value?.sendObjectToBack(obj)
        break
    }
    obj.setCoords()
    canvas.value?.renderAll()
  }

  const distributeElementsHorizontally = (objects: any[]) => {
    if (objects.length < 3)
      return

    const sortedObjects = [...objects].sort((a, b) => a.getBoundingRect().left - b.getBoundingRect().left)
    const firstBounds = sortedObjects[0].getBoundingRect()
    const lastBounds = sortedObjects[sortedObjects.length - 1].getBoundingRect()
    const totalSpace = (lastBounds.left + lastBounds.width) - firstBounds.left
    const totalObjectsWidth = sortedObjects.reduce((sum, obj) => sum + obj.getBoundingRect().width, 0)
    const gap = (totalSpace - totalObjectsWidth) / (sortedObjects.length - 1)
    let currentX = firstBounds.left + firstBounds.width + gap

    for (let i = 1; i < sortedObjects.length - 1; i++) {
      const obj = sortedObjects[i]
      const objBounds = obj.getBoundingRect()
      obj.set('left', Math.round(obj.left + (currentX - objBounds.left)))
      currentX += objBounds.width + gap
    }
  }

  const distributeElementsVertically = (objects: any[]) => {
    if (objects.length < 3)
      return

    const sortedObjects = [...objects].sort((a, b) => a.getBoundingRect().top - b.getBoundingRect().top)
    const firstBounds = sortedObjects[0].getBoundingRect()
    const lastBounds = sortedObjects[sortedObjects.length - 1].getBoundingRect()
    const totalSpace = (lastBounds.top + lastBounds.height) - firstBounds.top
    const totalObjectsHeight = sortedObjects.reduce((sum, obj) => sum + obj.getBoundingRect().height, 0)
    const gap = (totalSpace - totalObjectsHeight) / (sortedObjects.length - 1)
    let currentY = firstBounds.top + firstBounds.height + gap

    for (let i = 1; i < sortedObjects.length - 1; i++) {
      const obj = sortedObjects[i]
      const objBounds = obj.getBoundingRect()
      obj.set('top', Math.round(obj.top + (currentY - objBounds.top)))
      currentY += objBounds.height + gap
    }
  }

  const alignMultipleElements = (objects: any[], alignType: AlignType) => {
    if (objects.length < 2)
      return

    const allBounds = objects.map(obj => obj.getBoundingRect())
    const minLeft = Math.min(...allBounds.map(b => b.left))
    const maxRight = Math.max(...allBounds.map(b => b.left + b.width))
    const minTop = Math.min(...allBounds.map(b => b.top))
    const maxBottom = Math.max(...allBounds.map(b => b.top + b.height))
    const groupCenterX = (minLeft + maxRight) / 2
    const groupCenterY = (minTop + maxBottom) / 2

    switch (alignType) {
      case 'left':
        objects.forEach((obj) => {
          const objBounds = obj.getBoundingRect()
          obj.set('left', Math.round(obj.left + (minLeft - objBounds.left)))
        })
        break
      case 'right':
        objects.forEach((obj) => {
          const objBounds = obj.getBoundingRect()
          obj.set('left', Math.round(obj.left + (maxRight - objBounds.left - objBounds.width)))
        })
        break
      case 'top':
        objects.forEach((obj) => {
          const objBounds = obj.getBoundingRect()
          obj.set('top', Math.round(obj.top + (minTop - objBounds.top)))
        })
        break
      case 'bottom':
        objects.forEach((obj) => {
          const objBounds = obj.getBoundingRect()
          obj.set('top', Math.round(obj.top + (maxBottom - objBounds.top - objBounds.height)))
        })
        break
      case 'center-horizontal':
        objects.forEach((obj) => {
          const objBounds = obj.getBoundingRect()
          const objCenterX = objBounds.left + objBounds.width / 2
          obj.set('left', Math.round(obj.left + (groupCenterX - objCenterX)))
        })
        break
      case 'center-vertical':
        objects.forEach((obj) => {
          const objBounds = obj.getBoundingRect()
          const objCenterY = objBounds.top + objBounds.height / 2
          obj.set('top', Math.round(obj.top + (groupCenterY - objCenterY)))
        })
        break
      case 'distribute-horizontal':
        distributeElementsHorizontally(objects)
        break
      case 'distribute-vertical':
        distributeElementsVertically(objects)
        break
    }

    objects.forEach(obj => obj.setCoords())
    canvas.value?.renderAll()
  }

  // 初始化画布
  const initCanvas = (element: HTMLCanvasElement, container?: HTMLElement) => {
    canvasElement.value = element

    // 创建Fabric画布
    canvas.value = markRaw(new FabricCanvas(element, {
      selection: true,
      preserveObjectStacking: true,
      uniformScaling: false,
      uniScaleKey: 'shiftKey',
      altActionKey: 'altKey',
    }))

    // 绑定事件
    bindCanvasEvents()

    // 设置初始尺寸
    updateCanvasSize()

    // 如果提供了容器，设置自适应
    if (container) {
      setupAutoResize(container)
    }

    return canvas.value
  }

  const addElement = async (type: string, customProps: Record<string, any> = {}) => {
    const elementConfig = getElementConfig(type)
    if (!elementConfig || !canvas.value)
      return

    const elementId = generateElementId()

    const centerX = canvasData.value.width / 2
    const centerY = canvasData.value.height / 2

    const elementProps = {
      ...elementConfig.defaultProps,
      left: Math.round(centerX - (elementConfig.defaultProps.width || 100) / 2),
      top: Math.round(centerY - (elementConfig.defaultProps.height || 50) / 2),
      ...customProps,
      id: elementId,
    }

    const fabricObject = await elementConfig.createFabricObject(elementProps)
    if (!fabricObject) {
      return
    }

    ;(fabricObject as any).elementId = elementId

    canvas.value.add(fabricObject)
    fabricObject.setCoords()
    canvas.value.setActiveObject(fabricObject)
    canvas.value.renderAll()

    const elementData = elementProps as any
    canvasData.value.elements.push(elementData)
    // 数据更新通过事件监听自动触发

    return elementId
  }

  // 删除选中元素
  const deleteSelectedElements = () => {
    if (!canvas.value || selectedElements.value.length === 0) {
      return
    }

    // 获取当前选中的对象
    const activeObjects = canvas.value.getActiveObjects()

    activeObjects.forEach((obj) => {
      const elementId = (obj as any).elementId
      if (elementId) {
        // 从数据中删除
        const index = canvasData.value.elements.findIndex(el => el.id === elementId)
        if (index !== -1) {
          canvasData.value.elements.splice(index, 1)
        }
      }
      // 从画布删除
      canvas.value?.remove(obj)
    })

    // 清除选择状态
    canvas.value.discardActiveObject()
    selectedElements.value = []
    canvas.value.renderAll()
    // 数据更新通过事件监听自动触发
  }

  const clearSelection = () => {
    canvas.value?.discardActiveObject()
    canvas.value?.renderAll()
  }

  const updateElementProperty = (elementId: string, key: string, value: any) => {
    const elementIndex = canvasData.value.elements.findIndex(el => el.id === elementId)
    if (elementIndex === -1)
      return

    const element = canvasData.value.elements[elementIndex]
    const elementConfig = getElementConfig(element.type)
    if (!elementConfig)
      return

    canvasData.value.elements[elementIndex] = {
      ...element,
      [key]: value,
    }

    const fabricObject = canvas.value?.getObjects().find(obj => (obj as any).elementId === elementId)
    if (fabricObject && elementConfig.onPropsChange) {
      elementConfig.onPropsChange(canvasData.value.elements[elementIndex], fabricObject)
      fabricObject.setCoords()
      canvas.value?.renderAll()
    }

    // 数据更新通过事件监听自动触发
  }

  const canMoveUp = computed(() => {
    if (selectedElements.value.length !== 1 || canvasData.value.elements.length <= 1)
      return false
    const activeObject = selectedElements.value[0]
    const elementId = (activeObject as any).elementId
    if (!elementId)
      return false
    const currentIndex = canvasData.value.elements.findIndex(el => el.id === elementId)
    return currentIndex !== -1 && currentIndex < canvasData.value.elements.length - 1
  })

  const canMoveDown = computed(() => {
    if (selectedElements.value.length !== 1 || canvasData.value.elements.length <= 1)
      return false
    const activeObject = selectedElements.value[0]
    const elementId = (activeObject as any).elementId
    if (!elementId)
      return false
    const currentIndex = canvasData.value.elements.findIndex(el => el.id === elementId)
    return currentIndex > 0
  })

  const canMoveToFront = computed(() => {
    if (selectedElements.value.length !== 1 || canvasData.value.elements.length <= 1)
      return false
    const activeObject = selectedElements.value[0]
    const elementId = (activeObject as any).elementId
    if (!elementId)
      return false
    const currentIndex = canvasData.value.elements.findIndex(el => el.id === elementId)
    return currentIndex !== -1 && currentIndex < canvasData.value.elements.length - 1
  })

  const canMoveToBack = computed(() => {
    if (selectedElements.value.length !== 1 || canvasData.value.elements.length <= 1)
      return false
    const activeObject = selectedElements.value[0]
    const elementId = (activeObject as any).elementId
    if (!elementId)
      return false
    const currentIndex = canvasData.value.elements.findIndex(el => el.id === elementId)
    return currentIndex > 0
  })

  const alignElements = (alignType: AlignType) => {
    const activeObjects = canvas.value?.getActiveObjects() || []

    if (activeObjects.length === 1) {
      alignToCanvas(activeObjects[0], alignType)

      // 同步层级移动到数据数组
      if (['move-up', 'move-down', 'move-to-front', 'move-to-back'].includes(alignType)) {
        const elementId = (activeObjects[0] as any).elementId
        if (elementId) {
          const currentIndex = canvasData.value.elements.findIndex(el => el.id === elementId)
          if (currentIndex !== -1) {
            const element = canvasData.value.elements[currentIndex]
            canvasData.value.elements.splice(currentIndex, 1)

            switch (alignType) {
              case 'move-up':
                canvasData.value.elements.splice(Math.min(currentIndex + 1, canvasData.value.elements.length), 0, element)
                break
              case 'move-down':
                canvasData.value.elements.splice(Math.max(currentIndex - 1, 0), 0, element)
                break
              case 'move-to-front':
                canvasData.value.elements.push(element)
                break
              case 'move-to-back':
                canvasData.value.elements.unshift(element)
                break
            }
          }
        }
      }
    }
    else if (activeObjects.length > 1) {
      alignMultipleElements(activeObjects, alignType)
    }

    // 数据更新通过事件监听自动触发
  }

  const clearCanvas = () => {
    if (!canvas.value)
      return
    canvas.value.clear()
    canvasData.value.elements = []
    selectedElements.value = []
    // 数据更新通过事件监听自动触发
  }

  const loadData = async (data?: string) => {
    if (!data) {
      return
    }
    try {
      const parsedData = JSON.parse(data) as CanvasData
      canvasData.value = {
        width: parsedData.width || 750,
        height: parsedData.height || 1000,
        backgroundColor: parsedData.backgroundColor || '#ffffff',
        backgroundImage: parsedData.backgroundImage || '',
        elements: parsedData.elements || [],
      }

      if (canvas.value) {
        canvas.value.clear()
        canvas.value.setDimensions({
          width: canvasData.value.width,
          height: canvasData.value.height,
        })
        canvas.value.backgroundColor = canvasData.value.backgroundColor

        // 设置背景图
        if (canvasData.value.backgroundImage) {
          setCanvasBackgroundImage(canvasData.value.backgroundImage)
        }

        const loadPromises = canvasData.value.elements.map(async (elementData) => {
          const elementConfig = getElementConfig(elementData.type)
          if (!elementConfig)
            return

          const fabricObject = await elementConfig.createFabricObject(elementData)
          if (fabricObject) {
            ;(fabricObject as any).elementId = elementData.id
            canvas.value?.add(fabricObject)
          }
        })

        Promise.all(loadPromises).then(() => {
          updateCanvasSize()
          canvas.value?.renderAll()
          // 加载完成后手动触发一次数据更新
          updateData()
        })
      }
    }
    catch (error) {
      console.error('Failed to load data:', error)
    }
  }

  const setCallbacks = (callbacks: { onDataChange?: (data: string) => void }) => {
    onDataChange = callbacks?.onDataChange || (() => {})
  }

  const destroy = () => {
    if (canvas.value) {
      canvas.value.dispose()
      canvas.value = null
    }
  }

  const currentElement = computed(() => {
    return selectedElements.value.length === 1 ? selectedElements.value[0] : null
  })

  const currentElementData = computed(() => {
    if (!currentElement.value)
      return null
    const elementId = (currentElement.value as any).elementId
    return canvasData.value.elements.find(el => el.id === elementId) || null
  })

  const currentElementConfig = computed(() => {
    if (!currentElementData.value)
      return null
    return getElementConfig(currentElementData.value.type)
  })

  const hasMultipleSelection = computed(() => {
    return selectedElements.value.length > 1
  })

  // 获取选中元素的属性值（从 Vue 数据中获取，而不是从 Fabric 对象）
  const getSelectedElementProperty = (key: string) => {
    if (!currentElementData.value)
      return undefined
    return currentElementData.value[key]
  }

  // 获取所有选中元素的数据
  const selectedElementsData = computed(() => {
    return selectedElements.value.map((obj) => {
      const elementId = (obj as any).elementId
      return canvasData.value.elements.find(el => el.id === elementId)
    }).filter((item): item is ElementData => Boolean(item))
  })

  // 更新画布设置
  const updateCanvasSettings = (width: number, height: number) => {
    canvasData.value.width = width
    canvasData.value.height = height

    if (canvas.value) {
      canvas.value.setDimensions({ width, height })
      updateScale() // 重新计算缩放比例
      canvas.value.renderAll()
    }

    updateData()
  }

  // 更新画布背景颜色
  const updateCanvasBackground = (color: string) => {
    canvasData.value.backgroundColor = color

    if (canvas.value) {
      canvas.value.backgroundColor = color
      canvas.value.renderAll()
    }

    updateData()
  }

  // 设置画布背景图
  const setCanvasBackgroundImage = (imageUrl: string) => {
    if (!canvas.value || !imageUrl) return

    FabricImage.fromURL(imageUrl, {
      crossOrigin: 'anonymous'
    }).then((img) => {
      if (canvas.value) {
        // 设置背景图并重新渲染
        canvas.value.backgroundImage = img
        canvas.value.renderAll()
      }
    }).catch((error) => {
      console.error('Failed to load background image:', error)
    })
  }

  // 更新画布背景图
  const updateCanvasBackgroundImage = (imageUrl: string) => {
    canvasData.value.backgroundImage = imageUrl

    if (imageUrl) {
      setCanvasBackgroundImage(imageUrl)
    } else if (canvas.value) {
      // 清除背景图
      canvas.value.backgroundImage = undefined
      canvas.value.renderAll()
    }

    updateData()
  }

  // 保存数据
  const saveData = () => {
    syncAllFabricObjectsToData()
    updateData()
  }

  // 导出 JSON
  const exportJson = () => {
    syncAllFabricObjectsToData()
    const dataStr = JSON.stringify(canvasData.value, null, 2)
    const dataBlob = new Blob([dataStr], { type: 'application/json' })
    const url = URL.createObjectURL(dataBlob)
    const link = document.createElement('a')
    link.href = url
    link.download = `poster-${Date.now()}.json`
    document.body.appendChild(link)
    link.click()
    document.body.removeChild(link)
    URL.revokeObjectURL(url)
  }

  watch(
    canvasData,
    () => {
      throttledSyncAllData()
    },
    { deep: true },
  )

  return {
    initCanvas,
    destroy,
    setCallbacks,
    addElement,
    deleteSelectedElements,
    updateElementProperty,
    alignElements,
    canMoveUp,
    canMoveDown,
    canMoveToFront,
    canMoveToBack,
    clearCanvas,
    loadData,
    updateData,
    canvas,
    canvasData,
    selectedElements,
    canvasScale,
    currentElement,
    currentElementData,
    currentElementConfig,
    hasMultipleSelection,
    clearSelection,
    updateCanvasSize,
    setupAutoResize,
    getSelectedElementProperty,
    selectedElementsData,
    syncAllFabricObjectsToData,
    updateCanvasSettings,
    updateCanvasBackground,
    updateCanvasBackgroundImage,
    saveData,
    exportJson,
  }
}



---
File: /packages/pro/src/components/posterEditor/pages/index.ts
---

export { LeftToolbar } from './LeftToolbar'
export type { LeftToolbarProps } from './LeftToolbar'
export { RightPanel } from './RightPanel'
export type { RightPanelProps } from './RightPanel'



---
File: /packages/pro/src/components/posterEditor/pages/LeftToolbar.tsx
---

import type { PropType } from 'vue'
import { NButton, NTooltip } from 'naive-ui'
import { defineComponent } from 'vue'
import { elementConfigs } from '../elements'

export interface LeftToolbarProps {
  onAddElement: (type: string) => void
  canvasWidth: number
  canvasHeight: number
}

export const LeftToolbar = defineComponent({
  name: 'LeftToolbar',
  props: {
    onAddElement: {
      type: Function as PropType<(type: string) => void>,
      required: true,
    },
    canvasWidth: {
      type: Number,
      required: true,
    },
    canvasHeight: {
      type: Number,
      required: true,
    },
  },
  setup(props) {
    return () => (
      <div class="p-4 bg-default border-r border-default flex flex-col gap-6">
        {elementConfigs.map(config => (
          <NTooltip>
            {{
              default: () => config.name,
              trigger: () => (
                <NButton
                  key={config.type}
                  text
                  size='large'
                  onClick={() => props.onAddElement(config.type)}
                >
                  {{
                    icon: () => <div class={config.icon} />,
                  }}
                </NButton>
              ),
            }}
          </NTooltip>

        ))}
      </div>
    )
  },
})



---
File: /packages/pro/src/components/posterEditor/pages/Panel.tsx
---

import { NScrollbar } from 'naive-ui'
import { defineComponent } from 'vue'

export const Panel = defineComponent({
  name: 'Panel',
  props: {
    title: {
      type: String,
      required: true,
    },
  },
  setup(props, { slots }) {
    return () => (
      <div class="flex flex-col h-full">
        <div class="font-medium p-3 border-b border-default">
          {props.title}
        </div>
        <div class=" flex-1 min-h-0">
          <NScrollbar>
            <div class="p-3 flex flex-col gap-2">
              {slots.default?.()}
            </div>
          </NScrollbar>
        </div>
        <div class="border-t border-default p-3 flex flex-col gap-2">
          {slots.footer?.()}
        </div>
      </div>
    )
  },
})



---
File: /packages/pro/src/components/posterEditor/pages/PanelItem.tsx
---

import { defineComponent } from 'vue'

export const PanelItem = defineComponent({
  name: 'PanelItem',
  props: {
    title: {
      type: String,
      required: true,
    },
  },
  setup(props, { slots }) {
    return () => (
      <div class="flex flex-col gap-1">
        <div class="text-muted text-sm">
          {props.title}
        </div>
        <div>
          {slots.default?.()}
        </div>
      </div>
    )
  },
})



---
File: /packages/pro/src/components/posterEditor/pages/RightPanel.tsx
---

import type { PropType } from 'vue'
import type { ElementData, ToolbarControl } from '../elements/types'
import { NButton, NColorPicker, NInputNumber, NTooltip } from 'naive-ui'
import { defineComponent } from 'vue'
import { DuxImageUpload } from '../../upload'
import { Panel } from './Panel'
import { PanelItem } from './PanelItem'

export interface RightPanelProps {
  // 选中元素相关
  hasMultipleSelection: boolean
  selectedElementsCount: number
  currentElementData?: ElementData
  currentElementConfig?: any
  canMoveUp: boolean
  canMoveDown: boolean
  canMoveToFront: boolean
  canMoveToBack: boolean

  // 画布设置相关
  canvasWidth: number
  canvasHeight: number
  canvasBackgroundColor: string
  canvasBackgroundImage?: string

  // 事件处理
  onDeleteSelectedElements: () => void
  onAlignElements: (type: string) => void
  onUpdateElementProperty: (id: string, key: string, value: any) => void
  onUpdateCanvasSize: (width: number, height: number) => void
  onUpdateCanvasBackground: (color: string) => void
  onUpdateCanvasBackgroundImage: (imageUrl: string) => void
  onSaveData: () => void
  onExportJson: () => void
  onRenderToolbarControl: (control: ToolbarControl) => any

  onClearCanvas: () => void

  canvasScale: number
}

export const RightPanel = defineComponent({
  name: 'RightPanel',
  props: {
    hasMultipleSelection: {
      type: Boolean,
      required: true,
    },
    selectedElementsCount: {
      type: Number,
      required: true,
    },
    currentElementData: {
      type: Object as PropType<ElementData>,
    },
    currentElementConfig: {
      type: Object,
    },
    canMoveUp: {
      type: Boolean,
      required: true,
    },
    canMoveDown: {
      type: Boolean,
      required: true,
    },
    canMoveToFront: {
      type: Boolean,
      required: true,
    },
    canMoveToBack: {
      type: Boolean,
      required: true,
    },
    canvasWidth: {
      type: Number,
      required: true,
    },
    canvasHeight: {
      type: Number,
      required: true,
    },
    canvasBackgroundColor: {
      type: String,
      required: true,
    },
    canvasBackgroundImage: {
      type: String,
    },
    onDeleteSelectedElements: {
      type: Function as PropType<() => void>,
      required: true,
    },
    onAlignElements: {
      type: Function as PropType<(type: string) => void>,
      required: true,
    },
    onUpdateElementProperty: {
      type: Function as PropType<(id: string, key: string, value: any) => void>,
      required: true,
    },
    onUpdateCanvasSize: {
      type: Function as PropType<(width: number, height: number) => void>,
      required: true,
    },
    onUpdateCanvasBackground: {
      type: Function as PropType<(color: string) => void>,
      required: true,
    },
    onUpdateCanvasBackgroundImage: {
      type: Function as PropType<(imageUrl: string) => void>,
      required: true,
    },
    onSaveData: {
      type: Function as PropType<() => void>,
      required: true,
    },
    onExportJson: {
      type: Function as PropType<() => void>,
      required: true,
    },
    onRenderToolbarControl: {
      type: Function as PropType<(control: ToolbarControl) => any>,
      required: true,
    },

    onClearCanvas: {
      type: Function as PropType<() => void>,
      required: true,
    },

    canvasScale: {
      type: Number,
      required: true,
    },

  },
  setup(props) {
    // 渲染元素属性
    const renderElementProperties = () => {
      // 多选工具栏
      if (props.hasMultipleSelection) {
        return (

          <Panel title="多选操作">
            {{
              default: () => (
                <>
                  <PanelItem title="对齐">
                    <div class="grid grid-cols-4 gap-2">
                      <NTooltip>
                        {{
                          trigger: () => <NButton onClick={() => props.onAlignElements('left')} renderIcon={() => <div class="i-tabler:layout-align-left"></div>}></NButton>,
                          default: () => '左对齐',
                        }}
                      </NTooltip>
                      <NTooltip>
                        {{
                          trigger: () => <NButton onClick={() => props.onAlignElements('right')} renderIcon={() => <div class="i-tabler:layout-align-right"></div>}></NButton>,
                          default: () => '右对齐',
                        }}
                      </NTooltip>
                      <NTooltip>
                        {{
                          trigger: () => <NButton onClick={() => props.onAlignElements('top')} renderIcon={() => <div class="i-tabler:layout-align-top"></div>}></NButton>,
                          default: () => '顶部对齐',
                        }}
                      </NTooltip>
                      <NTooltip>
                        {{
                          trigger: () => <NButton onClick={() => props.onAlignElements('bottom')} renderIcon={() => <div class="i-tabler:layout-align-bottom"></div>}></NButton>,
                          default: () => '底部对齐',
                        }}
                      </NTooltip>
                    </div>
                  </PanelItem>
                  <PanelItem title="居中">
                    <div class="grid grid-cols-4 gap-2">
                      <NTooltip>
                        {{
                          trigger: () => <NButton onClick={() => props.onAlignElements('center-horizontal')} renderIcon={() => <div class="i-tabler:layout-align-center"></div>}></NButton>,
                          default: () => '水平居中',
                        }}
                      </NTooltip>
                      <NTooltip>
                        {{
                          trigger: () => <NButton onClick={() => props.onAlignElements('center-vertical')} renderIcon={() => <div class="i-tabler:layout-align-middle"></div>}></NButton>,
                          default: () => '垂直居中',
                        }}
                      </NTooltip>

                      <NTooltip>
                        {{
                          trigger: () => <NButton onClick={() => props.onAlignElements('distribute-horizontal')} renderIcon={() => <div class="i-tabler:layout-distribute-horizontal"></div>}></NButton>,
                          default: () => '水平分布',
                        }}
                      </NTooltip>
                      <NTooltip>
                        {{
                          trigger: () => <NButton onClick={() => props.onAlignElements('distribute-vertical')} renderIcon={() => <div class="i-tabler:layout-distribute-vertical"></div>}></NButton>,
                          default: () => '垂直分布',
                        }}
                      </NTooltip>
                    </div>
                  </PanelItem>
                </>
              ),
              footer: () => (
                <>
                  <NButton
                    block
                    onClick={props.onDeleteSelectedElements}
                    type="error"
                  >
                    {{
                      icon: () => <div class="i-tabler:trash" />,
                      default: () => '删除',
                    }}
                  </NButton>
                </>
              ),
            }}
          </Panel>
        )
      }
      // 单选工具栏
      else if (props.currentElementData && props.currentElementConfig) {
        const controls = props.currentElementConfig.getToolbarControls(props.currentElementData)

        return (
          <Panel title="元素设置">
            {{
              default: () => (
                <>

                  {controls.map((control: ToolbarControl) => (
                    <PanelItem key={control.key} title={control.label}>
                      {props.onRenderToolbarControl(control)}
                    </PanelItem>
                  ))}

                  <PanelItem title="X">
                    <NInputNumber
                      value={props.currentElementData?.left}

                      onUpdate:value={(val: number | null) =>
                        props.onUpdateElementProperty(props.currentElementData!.id, 'left', val || 0)}
                    />
                  </PanelItem>

                  <PanelItem title="Y">
                    <NInputNumber
                      value={props.currentElementData?.top}

                      onUpdate:value={(val: number | null) =>
                        props.onUpdateElementProperty(props.currentElementData!.id, 'top', val || 0)}
                    />
                  </PanelItem>

                  <PanelItem title="角度">
                    <NInputNumber
                      value={props.currentElementData?.angle}

                      min={-180}
                      max={180}
                      onUpdate:value={(val: number | null) =>
                        props.onUpdateElementProperty(props.currentElementData!.id, 'angle', val || 0)}
                    />
                  </PanelItem>

                  <PanelItem title="对齐">
                    <div class="grid grid-cols-3 gap-2">
                      <NTooltip>
                        {{
                          trigger: () => <NButton onClick={() => props.onAlignElements('center-horizontal')} renderIcon={() => <div class="i-tabler:layout-align-center"></div>}></NButton>,
                          default: () => '水平居中',
                        }}
                      </NTooltip>
                      <NTooltip>
                        {{
                          trigger: () => <NButton onClick={() => props.onAlignElements('center-vertical')} renderIcon={() => <div class="i-tabler:layout-align-middle"></div>}></NButton>,
                          default: () => '垂直居中',
                        }}
                      </NTooltip>
                      <NTooltip>
                        {{
                          trigger: () => <NButton onClick={() => props.onAlignElements('center-both')} renderIcon={() => <div class="i-tabler:layout-distribute-horizontal"></div>}></NButton>,
                          default: () => '居中',
                        }}
                      </NTooltip>
                    </div>
                  </PanelItem>

                  <PanelItem title="层级">

                    <div class="grid grid-cols-4 gap-2">

                      <NTooltip>
                        {{
                          trigger: () => <NButton disabled={!props.canMoveUp} onClick={() => props.onAlignElements('move-up')} renderIcon={() => <div class="i-tabler:arrow-narrow-up"></div>}></NButton>,
                          default: () => '上移一层',
                        }}
                      </NTooltip>

                      <NTooltip>
                        {{
                          trigger: () => <NButton disabled={!props.canMoveDown} onClick={() => props.onAlignElements('move-down')} renderIcon={() => <div class="i-tabler:arrow-narrow-down"></div>}></NButton>,
                          default: () => '下移一层',
                        }}
                      </NTooltip>

                      <NTooltip>
                        {{
                          trigger: () => <NButton disabled={!props.canMoveToFront} onClick={() => props.onAlignElements('move-to-front')} renderIcon={() => <div class="i-tabler:arrow-bar-to-up"></div>}></NButton>,
                          default: () => '移到最前',
                        }}
                      </NTooltip>

                      <NTooltip>
                        {{
                          trigger: () => <NButton disabled={!props.canMoveToBack} onClick={() => props.onAlignElements('move-to-back')} renderIcon={() => <div class="i-tabler:arrow-bar-to-down"></div>}></NButton>,
                          default: () => '移到最后',
                        }}
                      </NTooltip>
                    </div>
                  </PanelItem>

                </>
              ),

              footer: () => (
                <>
                  <NButton
                    block
                    onClick={props.onDeleteSelectedElements}
                    type="error"
                  >
                    {{
                      icon: () => <div class="i-tabler:trash" />,
                      default: () => '删除',
                    }}
                  </NButton>
                </>
              ),

            }}
          </Panel>
        )
      }
      // 未选中状态 - 显示画布设置
      else {
        return (
          <Panel title="画布设置">

            {{
              default: () => (
                <>
                  <PanelItem title="宽度">
                    <NInputNumber
                      value={props.canvasWidth}

                      min={100}
                      max={2000}
                      onUpdate:value={(val: number | null) =>
                        props.onUpdateCanvasSize(val || 800, props.canvasHeight)}
                    />
                  </PanelItem>

                  <PanelItem title="高度">
                    <NInputNumber
                      value={props.canvasHeight}

                      min={100}
                      max={2000}
                      onUpdate:value={(val: number | null) =>
                        props.onUpdateCanvasSize(props.canvasWidth, val || 600)}
                    />
                  </PanelItem>

                  <PanelItem title="背景颜色">
                    <NColorPicker
                      value={props.canvasBackgroundColor}

                      onUpdate:value={(val: string) =>
                        props.onUpdateCanvasBackground(val)}
                    />
                  </PanelItem>

                  <PanelItem title="背景图片">
                    <DuxImageUpload
                      value={props.canvasBackgroundImage || ''}
                      onUpdateValue={(val?: string | string[]) =>
                        props.onUpdateCanvasBackgroundImage(typeof val === 'string' ? val : (Array.isArray(val) ? val[0] || '' : ''))}
                    />
                  </PanelItem>
                </>
              ),
              footer: () => (
                <>
                  <NButton
                    type="primary"

                    block
                    onClick={props.onSaveData}
                  >
                    保存
                  </NButton>
                  <NButton

                    block
                    onClick={props.onExportJson}
                  >
                    导出 JSON
                  </NButton>

                  <NButton

                    block
                    onClick={props.onClearCanvas}
                  >
                    清空画布
                  </NButton>
                </>
              ),
            }}

          </Panel>
        )
      }
    }

    return () => (
      <div class="w-60 bg-default border-l border-default">
        {renderElementProperties()}
      </div>
    )
  },
})



---
File: /packages/pro/src/components/posterEditor/types/editor.ts
---

import type { Canvas, FabricObject } from 'fabric'

export interface PropertyControl {
  key: string
  label: string
  type: 'input' | 'number' | 'color' | 'select' | 'button' | 'textarea' | 'slider'
  value: any
  min?: number
  max?: number
  options?: Array<{ label: string, value: any }>
  action?: () => void
  disabled?: boolean
}

export interface ElementPlugin {
  id: string
  name: string
  icon: string
  category: string
  elementTypes: string[]

  // 创建元素配置
  create: (options?: any) => {
    type: string
    config: any
  }

  // 获取工具栏控件
  getToolbarControls: (
    object: FabricObject,
    context: {
      updateProperty: (key: string, value: any) => void
      canvas: Canvas | null
    }
  ) => PropertyControl[]
}

export interface CanvasSettings {
  width: number
  height: number
  backgroundColor: string
  backgroundImage: string | null
}

export interface FabricElement {
  id: string
  type: string
  config: any
  elementType?: string
}

export interface AlignmentControl {
  key: string
  label: string
  action: () => void
}



---
File: /packages/pro/src/components/posterEditor/index.ts
---

export * from './elements'
export * from './hooks'
export * from './posterEditor'
export * from './types/editor'



---
File: /packages/pro/src/components/posterEditor/posterEditor.tsx
---

import type { PropType } from 'vue'
import type { ToolbarControl } from './elements/types'
import { NColorPicker, NInput, NInputNumber, NSelect, NSlider, NSwitch } from 'naive-ui'
import { defineComponent, onMounted, onUnmounted, ref, watch } from 'vue'
import { DuxCard } from '../card'
import { DuxImageUpload } from '../upload'
import { CanvasRuler } from './components/CanvasRuler'
import { usePosterEditor } from './hooks/usePosterEditor'
import { LeftToolbar, RightPanel } from './pages'

export interface PosterEditorProps {
  data?: string
  width?: number
  height?: number
  backgroundColor?: string
  backgroundImage?: string
}


export const DuxPosterEditor = defineComponent({
  name: 'DuxPosterEditor',
  props: {
    data: {
      type: String as PropType<string>,
      default: '',
    },
    width: {
      type: Number as PropType<number>,
      default: 750,
    },
    height: {
      type: Number as PropType<number>,
      default: 1000,
    },
    backgroundColor: {
      type: String as PropType<string>,
      default: '#ffffff',
    },
    backgroundImage: {
      type: String as PropType<string>,
      default: '',
    },
    onDataUpdate: Function as PropType<(data?: string) => void>,
    onSave: Function as PropType<(data?: string) => void>,
  },
  setup(props) {
    const canvasElement = ref<HTMLCanvasElement>()
    const containerElement = ref<HTMLElement>()

    const {
      initCanvas,
      destroy,
      setCallbacks,
      addElement,
      deleteSelectedElements,
      updateElementProperty,
      alignElements,
      canMoveUp,
      canMoveDown,
      canMoveToFront,
      canMoveToBack,
      clearCanvas,
      loadData,
      canvasData,
      selectedElements,
      canvasScale,
      currentElementData,
      currentElementConfig,
      hasMultipleSelection,
      updateCanvasSettings,
      updateCanvasBackground,
      updateCanvasBackgroundImage,
      saveData,
      exportJson,
    } = usePosterEditor({
      width: props.width,
      height: props.height,
      backgroundColor: props.backgroundColor,
      backgroundImage: props.backgroundImage,
    })

    // 设置回调
    setCallbacks({
      onDataChange: props?.onDataUpdate,
    })

    // 渲染工具栏控件
    const renderToolbarControl = (control: ToolbarControl) => {
      const updateValue = (value: any) => {
        if (currentElementData.value) {
          updateElementProperty(currentElementData.value.id, control.key, value)
        }
      }

      switch (control.type) {
        case 'text':
          return (
            <NInput
              value={control.value}
              placeholder={control.options?.placeholder}
              onUpdate:value={updateValue}
            />
          )
        case 'number':
          return (
            <NInputNumber
              value={control.value}
              min={control.options?.min}
              max={control.options?.max}
              step={control.options?.step}
              onUpdate:value={updateValue}
            />
          )
        case 'color':
          return (
            <NColorPicker
              value={control.value}
              onUpdate:value={updateValue}
            />
          )
        case 'select':
          return (
            <NSelect
              value={control.value}
              options={control.options?.choices || []}
              onUpdate:value={updateValue}
            />
          )
        case 'switch':
          return (
            <NSwitch
              value={control.value}
              onUpdate:value={updateValue}
            />
          )
        case 'slider':
          return (
            <NSlider
              value={control.value}
              min={control.options?.min}
              max={control.options?.max}
              step={control.options?.step}
              onUpdate:value={updateValue}
            />
          )
        case 'image':
          return (
            <DuxImageUpload
              value={control.value}
              onUpdateValue={updateValue}
            />
          )
        default:
          return null
      }
    }

    watch(
      () => props.data,
      (newData) => {
        if (newData) {
          loadData(newData)
        }
      },
      { immediate: false }
    )

    onMounted(() => {
      if (canvasElement.value && containerElement.value) {
        initCanvas(canvasElement.value, containerElement.value)
        loadData(props.data)
      }
    })

    onUnmounted(() => {
      destroy()
    })

    return () => (
      <DuxCard class="h-full" shadow>
        <div class="h-full flex">
          <LeftToolbar
            onAddElement={addElement}
            canvasWidth={canvasData.value.width}
            canvasHeight={canvasData.value.height}
          />

          <div
            ref={containerElement}
            class="flex-1 p-6  pl-12 pt-12 flex items-center justify-center overflow-hidden relative"
            style="background: linear-gradient(45deg, rgba(0,0,0, 0.1) 25%, transparent 25%), linear-gradient(-45deg, rgba(0,0,0, 0.1) 25%, transparent 25%), linear-gradient(45deg, transparent 75%, rgba(0,0,0, 0.1) 75%), linear-gradient(-45deg, transparent 75%, rgba(0,0,0, 0.1) 75%); background-size: 20px 20px; background-position: 0 0, 0 10px, 10px -10px, -10px 0px;"
          >
            <CanvasRuler
              canvasScale={canvasScale.value}
              canvasWidth={canvasData.value.width}
              canvasHeight={canvasData.value.height}
            />

            <div class="bg-default shadow-lg" style="position: relative;">
              <canvas ref={canvasElement} style="display: block;" />
            </div>
          </div>

          <RightPanel
            onClearCanvas={clearCanvas}
            hasMultipleSelection={hasMultipleSelection.value}
            selectedElementsCount={selectedElements.value.length}
            currentElementData={currentElementData.value || undefined}
            currentElementConfig={currentElementConfig.value || undefined}
            canMoveUp={canMoveUp.value}
            canMoveDown={canMoveDown.value}
            canMoveToFront={canMoveToFront.value}
            canMoveToBack={canMoveToBack.value}
            canvasWidth={canvasData.value.width}
            canvasHeight={canvasData.value.height}
            canvasBackgroundColor={canvasData.value.backgroundColor}
            canvasBackgroundImage={canvasData.value.backgroundImage}
            onDeleteSelectedElements={deleteSelectedElements}
            onAlignElements={(type: string) => alignElements(type as any)}
            onUpdateElementProperty={updateElementProperty}
            onUpdateCanvasSize={(width: number, height: number) => updateCanvasSettings(width, height)}
            onUpdateCanvasBackground={updateCanvasBackground}
            onUpdateCanvasBackgroundImage={updateCanvasBackgroundImage}
            onSaveData={async () => {
              await saveData()
              await props?.onSave?.()
            }}
            onExportJson={exportJson}
            onRenderToolbarControl={renderToolbarControl}
            canvasScale={canvasScale.value}
          />
        </div>
      </DuxCard>
    )
  },
})



---
File: /packages/pro/src/components/select/cardSelect.tsx
---

import type { PropType } from 'vue'
import { useVModel } from '@vueuse/core'
import { defineComponent } from 'vue'

export interface CardSelectOption {
  value: string | number
  label: string
  description?: string
  disabled?: boolean
  icon?: string
  iconColor?: string
}

export const DuxSelectCard = defineComponent({
  name: 'DuxSelectCard',
  props: {
    options: {
      type: Array as PropType<CardSelectOption[]>,
      default: () => [],
    },
    value: {
      type: [String, Number, Array] as PropType<string | number | (string | number)[]>,
      default: undefined,
    },
    defaultValue: {
      type: [String, Number, Array] as PropType<string | number | (string | number)[]>,
      default: undefined,
    },
    multiple: {
      type: Boolean,
      default: false,
    },
    disabled: {
      type: Boolean,
      default: false,
    },
    minWidth: {
      type: String,
      default: '150px',
    },
    maxWidth: {
      type: String,
      default: '200px',
    },
    onUpdateValue: {
      type: Function as PropType<(value: string | number | (string | number)[]) => void>,
      default: undefined,
    },
  },
  emits: ['update:value', 'change'],
  setup(props, { emit }) {
    const model = useVModel(props, 'value', emit, {
      passive: true,
      defaultValue: props.defaultValue,
    })

    const handleSelect = (value: string | number) => {
      if (props.disabled)
        return

      if (props.multiple) {
        const currentValue = Array.isArray(model.value) ? model.value : []
        model.value = currentValue.includes(value)
          ? currentValue.filter(v => v !== value)
          : [...currentValue, value]
      }
      else {
        model.value = value
      }

      props.onUpdateValue?.(model.value)
      emit('update:value', model.value)
    }

    const isSelected = (value: string | number) => {
      if (props.multiple) {
        return Array.isArray(model.value) && model.value.includes(value)
      }
      return model.value === value
    }

    const gridClasses = [
      'grid gap-4',
      'grid-cols-2',
      `lg:grid-cols-[repeat(auto-fit,minmax(${props.minWidth},${props.maxWidth}))]`,
    ]

    return () => (
      <div class={gridClasses}>
        {props.options.map(option => (
          <div
            key={option.value}
            class={[
              'relative cursor-pointer border rounded p-2.5 transition-all duration-200 hover:border-primary',
              {
                'border-primary bg-primary/10': isSelected(option.value),
                'border-muted': !isSelected(option.value),
                'opacity-50 cursor-not-allowed': option.disabled || props.disabled,
              },
            ]}
            onClick={() => !option.disabled && handleSelect(option.value)}
          >
            {isSelected(option.value) && (
              <div class="absolute top-2 right-2 size-4 bg-primary rounded-full flex items-center justify-center">
                <svg class="size-3 text-white" fill="currentColor" viewBox="0 0 20 20">
                  <path fill-rule="evenodd" d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z" clip-rule="evenodd" />
                </svg>
              </div>
            )}

            <div class={[
              'flex gap-3 px-2 items-center',
              {
                'flex-col items-center text-center': !option.icon,
                'flex-row items-start text-left': option.icon,
              },
            ]}
            >
              {option.icon && (
                <div class={[
                  'flex items-center justify-center p-3 rounded-lg',
                  `bg-${option.iconColor}/10`,
                  `text-${option.iconColor}`,
                ]}
                >
                  <div class={`${option.icon} size-4`}></div>
                </div>
              )}

              <div class="flex flex-col flex-1">
                <div class={[
                  'text-sm font-medium',
                  {
                    'text-primary': isSelected(option.value),
                    'text-default': !isSelected(option.value),
                  },
                ]}
                >
                  {option.label}
                </div>
                {option.description && (
                  <div class={[
                    'text-sm',
                    {
                      'text-primary': isSelected(option.value),
                      'text-muted': !isSelected(option.value),
                    },
                  ]}
                  >
                    {option.description}
                  </div>
                )}
              </div>
            </div>
          </div>
        ))}
      </div>
    )
  },
})



---
File: /packages/pro/src/components/select/index.ts
---

export * from './cardSelect'



---
File: /packages/pro/src/components/stats/index.ts
---

export * from './number'
export * from './realTime'



---
File: /packages/pro/src/components/stats/number.tsx
---

import type { PropType } from 'vue'
import { defineComponent } from 'vue'

export const DuxStatsNumber = defineComponent({
  name: 'DuxStatsNumber',
  props: {
    title: {
      type: String,
      default: '',
    },
    subtitle: {
      type: String,
      default: '',
    },
    value: {
      type: [Number, String],
      default: 0,
    },
    change: {
      type: Number,
      default: 0,
    },
    changeType: {
      type: String as PropType<'up' | 'down'>,
      default: 'up',
    },
  },
  setup(props) {
    const formatValue = (value: number | string) => {
      if (typeof value === 'number') {
        return value.toLocaleString()
      }
      return value
    }

    const getChangeIcon = (type?: 'up' | 'down') => {
      if (type === 'up') {
        return '▲'
      }
      if (type === 'down') {
        return '▼'
      }
      return ''
    }

    const getChangeColor = (type?: 'up' | 'down') => {
      if (type === 'up') {
        return 'text-success'
      }
      if (type === 'down') {
        return 'text-error'
      }
      return 'text-muted'
    }

    return () => (
      <div class="flex flex-col gap-1">
        <div class="flex items-baseline justify-between">
          <h3 class="text-sm text-muted">
            {props.title}
          </h3>

        </div>

        <div class="text-2xl font-bold text-default">
          {formatValue(props.value)}
        </div>

        <div class="flex flex-row gap-2 items-center text-sm">
          {props.subtitle && (
            <span class=" text-muted">
              {props.subtitle}
            </span>
          )}

          {props.change !== undefined && (
            <div class={[
              'flex items-center gap-1',
              getChangeColor(props.changeType),
            ]}
            >
              <span class="text-xs">
                {getChangeIcon(props.changeType)}
              </span>
              <span>
                {Math.abs(props.change)}
                %
              </span>
            </div>
          )}
        </div>

      </div>
    )
  },
})



---
File: /packages/pro/src/components/stats/realTime.tsx
---

import type { PropType } from 'vue'
import { useI18n } from '@duxweb/dvha-core'
import { NScrollbar } from 'naive-ui'
import { computed, defineComponent } from 'vue'
import { DuxCard } from '../card'
import { DuxChart } from '../chart'
import { DuxStatsNumber } from './number'

export interface StatsCardItem {
  label: string
  value: number | string
  color?: string
}

export interface StatsChartItem {
  title: string
  value: number | string
  subtitle?: string
  change?: number
  changeType?: 'up' | 'down'
  labels?: string[]
  data: number[]
  color?: string
}

export const DuxStatsRealTime = defineComponent({
  name: 'DuxStatsRealTime',
  props: {
    title: {
      type: String,
      default: '',
    },
    subtitle: {
      type: String,
      default: '',
    },
    cards: {
      type: Array as PropType<StatsCardItem[]>,
      default: () => [],
    },
    charts: {
      type: Array as PropType<StatsChartItem[]>,
      default: () => [],
    },
  },
  setup(props) {
    const { t } = useI18n()

    const computedTitle = computed(() => {
      return props.title || t('components.stats.realTimeData')
    })

    const computedCharts = computed(() => {
      if (props.charts.length === 1) {
        return props.charts.map(chart => ({
          ...chart,
          class: 'col-span-2',
          chartOption: {
            showXAxisLabel: true,
            labels: chart.labels,
            data: [
              {
                name: chart.title,
                data: chart.data,
              },
            ],
          },
        }))
      }
      return props.charts.map(chart => ({
        ...chart,
        class: 'col-span-1',
        chartOption: {
          showXAxisLabel: true,
          labels: chart.labels,
          data: [
            {
              name: chart.title,
              data: chart.data,
            },
          ],
        },
      }))
    })

    const formatValue = (value: number | string) => {
      if (typeof value === 'number') {
        return value.toLocaleString()
      }
      return value
    }

    return () => (
      <DuxCard title={computedTitle.value}>
        {{
          headerExtra: () => (
            <div class="text-sm text-muted">
              {props.subtitle}
            </div>
          ),
          default: () => (
            <>
              {/* Stats Cards */}
              {props.cards.length > 0 && (
                <div class="lg:h-26 bg-muted">
                  <NScrollbar xScrollable>
                    <div class={[
                      'grid grid-cols-2 whitespace-nowrap auto-cols-max',
                      `lg:grid-cols-[repeat(auto-fit,minmax(100px,1fr))]`,
                    ]}
                    >
                      {props.cards.map((card, index) => (
                        <div
                          key={index}
                          class="text-center flex flex-col gap-1 py-6"
                        >
                          <div
                            class={[
                              'text-2xl font-bold',
                            ]}
                          >
                            {formatValue(card.value)}
                          </div>
                          <div class="text-sm text-muted">
                            {card.label}
                          </div>
                        </div>
                      ))}
                    </div>
                  </NScrollbar>
                </div>
              )}

              {props.charts.length > 0 && (
                <div class={[
                  'grid grid-cols-1',
                  `lg:grid-cols-[repeat(auto-fit,minmax(100px,1fr))]`,
                ]}
                >
                  {computedCharts.value.map((chart, index) => (
                    <div
                      key={index}
                      class={[
                        'p-4 pb-0 flex gap-4',
                      ]}
                    >
                      <DuxStatsNumber
                        title={chart.title}
                        subtitle={chart.subtitle}
                        value={chart.value || 0}
                        change={chart.change}
                        changeType={chart.changeType}
                      />

                      <div class="flex-1 min-w-0">
                        <DuxChart
                          type="line"
                          height="100px"
                          min={true}
                          option={chart.chartOption}
                        />
                      </div>
                    </div>
                  ))}
                </div>
              )}
            </>
          ),
        }}

      </DuxCard>
    )
  },
})



---
File: /packages/pro/src/components/status/blockEmpty.tsx
---

import { useI18n } from '@duxweb/dvha-core'
import clsx from 'clsx'
import { defineComponent } from 'vue'

export const DuxBlockEmpty = defineComponent({
  name: 'Message',
  props: {
    text: {
      type: String,
    },
    desc: {
      type: String,
    },
    simple: {
      type: Boolean,
      default: false,
    },
  },
  setup(props) {
    const { t } = useI18n()
    return () => (
      <div class="flex justify-center p-2">
        <div class={clsx([
          'flex flex-row items-center',
          props.simple ? 'flex-col' : 'gap-2',
        ])}
        >
          <div>
            <svg class="size-60px" viewBox="0 0 200 200" xmlns="http://www.w3.org/2000/svg">
              <defs>
                <linearGradient id="bgGradient" x1="0%" y1="0%" x2="100%" y2="100%">
                  <stop offset="0%" style="stop-color:rgb(var(--ui-color-primary));stop-opacity:0.1" />
                  <stop offset="100%" style="stop-color:rgb(var(--ui-color-primary));stop-opacity:0.05" />
                </linearGradient>
                <linearGradient id="boxGradient" x1="0%" y1="0%" x2="0%" y2="100%">
                  <stop offset="0%" style="stop-color:rgb(var(--ui-bg-elevated));stop-opacity:1" />
                  <stop offset="100%" style="stop-color:rgb(var(--ui-bg-muted));stop-opacity:1" />
                </linearGradient>
              </defs>

              <circle cx="100" cy="100" r="85" fill="url(#bgGradient)" />

              <g transform="translate(100, 100)">
                <ellipse cx="0" cy="35" rx="45" ry="8" fill="rgb(var(--ui-color-gray-300))" opacity="0.3" />

                <path
                  d="M -35 -10 L -35 25 Q -35 30 -30 30 L 30 30 Q 35 30 35 25 L 35 -5 Q 35 -10 30 -10 L 5 -10 L -5 -20 L -30 -20 Q -35 -20 -35 -15 Z"
                  fill="url(#boxGradient)"
                  stroke="rgb(var(--ui-color-gray-300))"
                  stroke-width="1"
                />

                <path
                  d="M -5 -20 L 5 -10 L 15 -10 Q 20 -10 20 -15 Q 20 -20 15 -20 Z"
                  fill="rgb(var(--ui-color-primary))"
                  opacity="0.8"
                />

                <g transform="translate(0, -5)" opacity="0.6">
                  <rect x="-8" y="-5" width="16" height="20" rx="2" fill="rgb(var(--ui-bg-elevated))" stroke="rgb(var(--ui-color-gray-400))" stroke-width="0.5" />
                  <line x1="-5" y1="0" x2="5" y2="0" stroke="rgb(var(--ui-color-gray-400))" stroke-width="1" opacity="0.5" />
                  <line x1="-5" y1="4" x2="3" y2="4" stroke="rgb(var(--ui-color-gray-400))" stroke-width="1" opacity="0.5" />
                  <line x1="-5" y1="8" x2="5" y2="8" stroke="rgb(var(--ui-color-gray-400))" stroke-width="1" opacity="0.5" />
                </g>

                <circle cx="-25" cy="-25" r="2" fill="rgb(var(--ui-color-primary))" opacity="0.4">
                  <animate attributeName="opacity" values="0.4;0.8;0.4" dur="2s" repeatCount="indefinite" />
                </circle>
                <circle cx="25" cy="-15" r="1.5" fill="rgb(var(--ui-color-primary))" opacity="0.3">
                  <animate attributeName="opacity" values="0.3;0.6;0.3" dur="3s" repeatCount="indefinite" />
                </circle>
                <circle cx="20" cy="25" r="1" fill="rgb(var(--ui-color-primary))" opacity="0.2">
                  <animate attributeName="opacity" values="0.2;0.5;0.2" dur="4s" repeatCount="indefinite" />
                </circle>
              </g>
            </svg>
          </div>

          <div class="flex flex-col gap-0">
            <div class={clsx([
              'text-default',
              props.simple ? 'text-center' : '',
            ])}
            >
              {props.text || t('pages.empty.title')}
            </div>
            {!props.simple && (<div class="text-muted">{props.desc || t('pages.empty.desc')}</div>
            )}
          </div>
        </div>
      </div>
    )
  },
})



---
File: /packages/pro/src/components/status/index.ts
---

export * from './blockEmpty'
export * from './listEmpty'



---
File: /packages/pro/src/components/status/listEmpty.tsx
---

import { useI18n } from '@duxweb/dvha-core'
import { defineComponent } from 'vue'
import { DuxDrawEmptyForm } from '../draw'

export const DuxListEmpty = defineComponent({
  name: 'DuxListEmpty',
  props: {
    title: String,
    desc: String,
    bordered: Boolean,
  },
  setup(props) {
    const { t } = useI18n()
    return () => (
      <div class="flex flex-col items-center justify-center gap-2 h-full">
        <DuxDrawEmptyForm class="max-h-120px" />
        <div class="text-lg text-default font-bold">
          { props?.title || t('pages.empty.title') }
        </div>
        <div class="text-muted">
          { props?.desc || t('pages.empty.desc') }
        </div>
      </div>
    )
  },
})



---
File: /packages/pro/src/components/table/index.ts
---

export * from './table'
export * from './tablePage'



---
File: /packages/pro/src/components/table/table.tsx
---

import type { TableColumn, TablePagination } from '@duxweb/dvha-naiveui'
import type { PropType } from 'vue'
import { useI18n } from '@duxweb/dvha-core'
import { useWindowSize } from '@vueuse/core'
import { NDataTable, NPagination } from 'naive-ui'
import { computed, defineComponent, toRef } from 'vue'
import { useTable } from '../../hooks'
import { DuxListEmpty } from '../status'

export const DuxTable = defineComponent({
  name: 'DuxTable',
  props: {
    path: {
      type: String,
      required: true,
    },
    filter: {
      type: Object as PropType<Record<string, any>>,
    },
    columns: {
      type: Array as PropType<TableColumn[]>,
    },
    pagination: {
      type: [Boolean, Object] as PropType<boolean | TablePagination>,
      default: true,
    },
  },
  extends: NDataTable,
  setup(props) {
    const tableProps = computed(() => {
      const { path, filter, columns, pagination, ...rest } = props
      return rest
    })

    const filters = toRef(props.filter || {})

    const result = useTable({
      path: props.path,
      filters: filters.value,
      columns: props.columns || [],
      pagination: props.pagination,
    })

    const { width } = useWindowSize()
    const { t } = useI18n()

    return () => (
      <div class="flex flex-col gap-2">
        <NDataTable
          {...tableProps.value}
          {...result.table.value}
          class="flex-1 min-h-0"
          minHeight={200}
          tableLayout="fixed"
          flexHeight
          rowKey={row => row.id}
          bordered={false}
          renderCell={(value) => {
            return value === undefined || value === null || value === '' ? '-' : value
          }}
        >
          {{
            empty: () => <DuxListEmpty bordered={false} />,
          }}
        </NDataTable>
        {props.pagination && (
          <div class="flex justify-end">
            <NPagination
              {...result.tablePagination.value}
              simple={width.value < 768}
            >
              {{
                prefix: () => (
                  <div>
                    {t('components.list.total', {
                      total: result.total.value || 0,
                    })}
                  </div>
                ),
              }}
            </NPagination>
          </div>
        )}
      </div>
    )
  },
})



---
File: /packages/pro/src/components/table/tablePage.tsx
---

import type { DataTableProps } from 'naive-ui'
import type { PropType, SlotsType } from 'vue'
import type { TablePageSlotProps } from '../layout/table'
import { NDataTable } from 'naive-ui'
import { computed, defineComponent } from 'vue'
import { DuxTableLayout } from '../layout/table'
import { DuxListEmpty } from '../status'

export const DuxTablePage = defineComponent({
  name: 'DuxTablePage',
  props: {
    tableProps: {
      type: Object as PropType<DataTableProps>,
    },
  },
  extends: DuxTableLayout,
  slots: Object as SlotsType<{
    default: (props: TablePageSlotProps) => any
    bottom: () => any
    tools: () => any
    actions: () => any
    sideLeft: () => any
    sideRight: () => any
    header: () => any
  }>,
  setup(props, { slots }) {
    const tableProps = computed(() => {
      const { tableProps, ...rest } = props
      return rest
    })

    return () => (
      <DuxTableLayout {...tableProps.value}>
        {{
          default: result => (
            <NDataTable
              {...result.table.value}
              {...props.tableProps}
              class="h-full"
              minHeight={200}
              tableLayout="fixed"
              flexHeight
              rowKey={row => row.id}
              bordered={false}
              scrollX={result.width}
              renderCell={(value) => {
                return value === undefined || value === null || value === '' ? '-' : value
              }}
            >
              {{
                empty: () => <DuxListEmpty bordered={false} />,
              }}
            </NDataTable>
          ),
          bottom: slots?.bottom,
          tools: slots?.tools,
          actions: slots?.actions,
          sideLeft: slots?.sideLeft,
          sideRight: slots?.sideRight,
          header: slots?.header,
        }}
      </DuxTableLayout>
    )
  },
})



---
File: /packages/pro/src/components/tree/index.ts
---

export * from './treeFilter'



---
File: /packages/pro/src/components/tree/treeFilter.tsx
---

import type { IUseTreeProps } from '@duxweb/dvha-core'
import type { DropdownOption, TreeDropInfo, TreeOption, TreeProps } from 'naive-ui'
import type { PropType } from 'vue'
import { useCustomMutation, useI18n, useTree } from '@duxweb/dvha-core'
import { useVModel } from '@vueuse/core'
import clsx from 'clsx'
import { NDropdown, NInput, NScrollbar, NSpin, NTree } from 'naive-ui'
import { computed, defineComponent, ref, toRef, watch } from 'vue'
import { DuxCard } from '../card'

export interface TreeMenu {
  label?: string
  value?: string
  icon?: string
  onSelect: (option?: TreeOption) => void
}

export interface TreeFilterProps extends TreeProps {
  title?: string
  path?: string
  sortPath?: string
  params?: Record<string, any>
  menus?: TreeMenu[]
  numField?: string
  iconField?: string
  treeOptions?: IUseTreeProps
  value?: (string | number)[]
  defaultValue?: (string | number)[]
  draggable?: boolean
  onUpdateValue?: (value: (string | number)[]) => void
  bordered?: boolean
}

export const DuxTreeFilter = defineComponent<TreeFilterProps>({
  name: 'DuxTreeFilter',
  props: {
    title: String,
    path: String,
    sortPath: String,
    params: Object as PropType<Record<string, any>>,
    menus: Array as PropType<TreeMenu[]>,
    numField: String,
    iconField: String,
    treeOptions: Object as PropType<IUseTreeProps>,
    value: Array as PropType<(string | number)[]>,
    defaultValue: Array as PropType<(string | number)[]>,
    onUpdateValue: Function as PropType<(value: (string | number)[]) => void>,
    draggable: Boolean,
    bordered: {
      type: Boolean,
      default: false,
    },
  },
  extends: NTree,
  setup(props, { emit, slots }) {
    const model = useVModel(props, 'value', emit, {
      passive: false,
      defaultValue: props.defaultValue,
    })

    const params = toRef(props, 'params', {})
    const path = toRef(props, 'path', '')
    const sortPath = toRef(props, 'sortPath', '')

    const dropdownOption = ref<TreeOption>()
    const x = ref(0)
    const y = ref(0)

    const data = ref<TreeOption[]>([])
    const keyword = ref<string>()
    const { t } = useI18n()

    const { options, loading, expanded } = useTree({
      path: path.value,
      params: params.value,
      ...props.treeOptions,
    })

    // 设置树数据
    watch(options, (v) => {
      data.value = v
    }, { immediate: true, deep: true })

    // 下拉菜单
    const dropdownShow = ref(false)
    const dropdownOptions = computed<DropdownOption[]>(() => {
      return props.menus?.map((menu) => {
        return {
          label: menu.label,
          key: menu.value,
          icon: menu?.icon ? () => <div class={menu?.icon}></div> : undefined,
          onSelect: menu.onSelect,
        } as DropdownOption
      }) || []
    })

    // 下拉菜单选择
    const handleSelect = (value) => {
      const menu = props.menus?.find(menu => menu.value === value)
      if (menu) {
        menu.onSelect(dropdownOption.value)
      }
      dropdownShow.value = false
    }

    const client = useCustomMutation({
      path: sortPath.value,
      method: 'POST',
    })

    // 找到父节点
    const findParentNode = (
      tree: TreeOption[],
      targetId: any,
    ): TreeOption | undefined => {
      for (const node of tree) {
        if (node.children) {
          for (const child of node.children) {
            if (child.id === targetId) {
              return node
            }
          }
          const parentNode = findParentNode(node.children, targetId)
          if (parentNode) {
            return parentNode
          }
        }
      }
    }

    // 拖拽位置处理
    const handleDrop = ({ node, dragNode, dropPosition }: TreeDropInfo) => {
      const oldParent = findParentNode(data.value, dragNode.id)
      const isTopLevelDrag = !oldParent

      const newData = [...data.value]

      if (isTopLevelDrag) {
        const index = data.value.findIndex(item => item.id === dragNode.id)
        if (index >= 0)
          newData.splice(index, 1)
      }
      else {
        const index = oldParent?.children?.indexOf(dragNode) || 0
        oldParent?.children?.splice(index, 1)
      }

      let parent = findParentNode(newData, node.id)
      let beforeId: any
      let targetCollection: TreeOption[] = parent?.children || newData
      let insertPosition = 0

      switch (dropPosition) {
        case 'before':
          insertPosition = targetCollection.findIndex(item => item.id === node.id)
          if (insertPosition > 0) {
            beforeId = targetCollection[insertPosition - 1].id
          }
          break

        case 'inside':
          parent = node
          targetCollection = parent.children = parent.children || []
          insertPosition = targetCollection.length
          break

        case 'after':
          insertPosition = targetCollection.findIndex(item => item.id === node.id) + 1
          beforeId = node.id
          break
      }

      targetCollection.splice(insertPosition, 0, dragNode as any)

      data.value = newData

      client.mutate({
        payload: {
          parent_id: parent?.id,
          before_id: beforeId,
          id: dragNode.id,
        },
      })
    }

    const expandedKeys = ref<unknown[]>([])

    watch(expanded, (v) => {
      if (expandedKeys?.value?.length > 0) {
        return
      }
      expandedKeys.value = v
    }, { immediate: true })

    const treeProps = computed(() => {
      const { title, path, sortPath, params, menus, numField, iconField, treeOptions, value, defaultValue, onUpdateValue, bordered, ...rest } = props
      return rest
    })

    return () => (
      <DuxCard class="h-full" contentClass="flex flex-col" bordered={props.bordered}>
        {props?.title && (
          <div class="px-2 py-3 pb-1 text-base font-bold">
            {props.title}
          </div>
        )}
        <div class="p-2 flex gap-2 items-center">
          <div class="flex-1">
            {slots.header
              ? slots.header()
              : (
                  <NInput v-model:value={keyword.value} placeholder={t('common.keyword')} />
                )}
          </div>
          {slots.tools?.()}
        </div>
        <NScrollbar class="flex-1 min-h-0" xScrollable>
          <div class="p-2">
            <NSpin show={loading.value} class="h-full">
              <NTree
                {...treeProps.value}
                data={data.value || []}
                expandedKeys={expandedKeys.value as any}
                onUpdateExpandedKeys={(v) => {
                  expandedKeys.value = v
                }}
                blockLine
                selectedKeys={model.value}
                onUpdateSelectedKeys={(v) => {
                  model.value = v
                  props?.onUpdateValue?.(v)
                }}
                onDrop={handleDrop}
                pattern={keyword.value}
                renderPrefix={props?.numField || (props?.iconField)
                  ? ({ option }) => {
                      return (
                        <>
                          {props.iconField && option[props.iconField] && (
                            <div class={clsx(
                              option[props.iconField] || '',
                              'size-4',
                            )}
                            />
                          )}
                          {props.numField && <div class="rounded-full bg-primary px-2 text-xs text-white">{option[props.numField as any] || 0}</div>}
                        </>
                      )
                    }
                  : undefined}
                nodeProps={({ option }) => {
                  return {
                    onContextmenu: (e) => {
                      dropdownOption.value = option
                      dropdownShow.value = true
                      x.value = e.clientX
                      y.value = e.clientY
                      e.preventDefault()
                    },
                  }
                }}
              />
            </NSpin>
          </div>
        </NScrollbar>
        <NDropdown
          trigger="manual"
          placement="bottom-start"
          show={dropdownShow.value}
          options={dropdownOptions.value as any}
          x={x.value}
          y={y.value}
          width={100}
          onSelect={handleSelect}
          onClickoutside={() => {
            dropdownShow.value = false
          }}
        />
      </DuxCard>
    )
  },
})



---
File: /packages/pro/src/components/upload/manage/item.tsx
---

import type { PropType } from 'vue'

import { useI18n } from '@duxweb/dvha-core'
import clsx from 'clsx'
import { NCheckbox, NImage } from 'naive-ui'

import { defineComponent } from 'vue'
import { useDialog } from '../../../hooks'
import { audioSvg, excelSvg, fileSvg, folderSvg, pdfSvg, pptSvg, videoSvg, wordSvg } from '../../../static/images/icon'

export const DuxFileManageItem = defineComponent({
  name: 'DuxFileManageItem',
  props: {
    name: String,
    url: String,
    type: String as PropType<'file' | 'folder'>,
    mime: String,
    time: String,
    value: Boolean,
    onContextmenu: Function as PropType<(e: MouseEvent) => void>,
    onSelect: Function,
    page: Boolean,
  },
  setup(props) {
    const dialog = useDialog()
    const { t } = useI18n()

    const fileTypeConfig = {
      image: {
        check: (mime: string) => mime.startsWith('image/'),
        render: () => (
          <div
            class="size-12 flex items-center justify-center"
            onClick={e => e.stopPropagation()}
          >
            <NImage src={props.url} width={48} height={48} />
          </div>
        ),
      },
      video: {
        check: (mime: string) => mime.startsWith('video/'),
        render: () => (
          <div onClick={(e) => {
            e.stopPropagation()
            dialog.node({
              title: t('components.button.preview'),
              render: () => (
                <div class="flex items-center justify-center">
                  <video class="w-120 max-w-full" controls>
                    <source src={props.url} type={props.mime} />
                  </video>
                </div>
              ),
            })
          }}
          >
            <img src={videoSvg.default} class="size-12" />
          </div>
        ),
      },
      audio: {
        check: (mime: string) => mime.startsWith('audio/'),
        render: () => (
          <div onClick={(e) => {
            e.stopPropagation()
            dialog.node({
              title: t('components.button.preview'),
              render: () => (
                <div class="flex items-center justify-center">
                  <audio class="w-120 max-w-full" controls>
                    <source src={props.url} type={props.mime} />
                  </audio>
                </div>
              ),
            })
          }}
          >
            <img src={audioSvg.default} class="size-12" />
          </div>
        ),
      },
      pdf: {
        check: (mime: string) => mime === 'application/pdf',
        render: () => <img src={pdfSvg.default} class="size-12" />,
      },
      word: {
        check: (mime: string) => [
          'application/vnd.openxmlformats-officedocument.wordprocessingml.document',
          'application/msword',
        ].includes(mime),
        render: () => <img src={wordSvg.default} class="size-12" />,
      },
      excel: {
        check: (mime: string) => [
          'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet',
          'application/vnd.ms-excel',
        ].includes(mime),
        render: () => <img src={excelSvg.default} class="size-12" />,
      },
      powerpoint: {
        check: (mime: string) => [
          'application/vnd.openxmlformats-officedocument.presentationml.presentation',
          'application/vnd.ms-powerpoint',
        ].includes(mime),
        render: () => <img src={pptSvg.default} class="size-12" />,
      },
    }

    const getFileIcon = () => {
      if (props.type === 'folder') {
        return <img src={folderSvg.default} class="size-12" />
      }

      if (!props.mime) {
        return <img src={fileSvg.default} class="size-12" />
      }

      for (const config of Object.values(fileTypeConfig)) {
        if (config.check(props.mime)) {
          return config.render()
        }
      }

      return <img src={fileSvg.default} class="size-12" />
    }

    return () => (
      <div
        class="flex flex-col items-center justify-center hover:bg-primary/10 cursor-pointer p-2 rounded-sm relative group"
        onContextmenu={props.onContextmenu}
        onClick={() => props.onSelect?.(!props?.value)}
      >
        <div class="mb-2">
          {getFileIcon()}
        </div>

        <div class="truncate w-full text-center">
          {props.name}
        </div>
        <div class={clsx([
          'absolute top-2 right-2',
          props.value ? 'block' : 'hidden group-hover:block',
        ])}
        >
          {props.type === 'file' && !props.page && <NCheckbox checked={props.value} />}
        </div>
      </div>
    )
  },
})



---
File: /packages/pro/src/components/upload/config.ts
---

import { createLocalUploadDriver, createS3UploadDriver, IDataProviderResponse, IS3SignData, useManage } from '@duxweb/dvha-core'
import { computed } from 'vue'

export interface UseUploadConfigProps {
  driver?: 'local' | 's3'
  uploadPath?: string
  managePath?: string
  signPath?: string
  signCallback?: (response: IDataProviderResponse) => IS3SignData
}


export const useUploadConfig = (props?: UseUploadConfigProps) => {
  const manage = useManage()

  const uploadPath = computed(() => props?.uploadPath || manage.config?.apiPath?.upload || 'upload')
  const managePath = computed(() => props?.managePath || manage.config?.apiPath?.uploadManager || 'uploadManager')


  const driver = computed(() => {
    if (props?.driver === 's3') {
      return createS3UploadDriver({
        signPath: props?.signPath || manage.config?.apiPath?.upload || uploadPath.value || '',
        signCallback: props?.signCallback || manage.config?.upload?.signCallback || ((response: IDataProviderResponse) => {
          return {
            uploadUrl: response.data?.uploadUrl,
            url: response.data?.url,
            params: response.data?.params,
          }
        }),
      })
    }
    return createLocalUploadDriver()
  })

  return {
    uploadPath,
    managePath,
    driver,
  }
}


---
File: /packages/pro/src/components/upload/file.tsx
---

import type { IDataProviderResponse, IS3SignData } from '@duxweb/dvha-core'
import type { PropType } from 'vue'
import type { IUploadParams } from './manager'
import { useI18n, useUpload } from '@duxweb/dvha-core'
import { useDropZone, useVModel } from '@vueuse/core'
import mime from 'mime'
import { NButton, NDataTable, NProgress, useMessage } from 'naive-ui'
import { computed, defineComponent, ref, watch } from 'vue'
import { useModal } from '../../hooks'
import { DuxMedia } from '../media'
import { useUploadConfig } from './config'

const typeMap: Record<string, string> = {
  'image/*': 'JPG, PNG, GIF, BMP, WEBP',
  'video/*': 'MP4, AVI, MOV, WMV, FLV',
  'audio/*': 'MP3, WAV, AAC, FLAC',
  'text/*': 'TXT, CSV, JSON, XML',
  'application/pdf': 'PDF',
  'application/msword': 'DOC',
  'application/vnd.openxmlformats-officedocument.wordprocessingml.document': 'DOCX',
  'application/vnd.ms-excel': 'XLS',
  'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet': 'XLSX',
}

const styles = {
  container: 'flex flex-col gap-2',
  dropZone: {
    base: 'flex items-center justify-center p-6 rounded bg-muted border border-dashed transition-all cursor-pointer group',
    active: 'border-primary bg-primary/5',
    hover: 'border-accented hover:bg-primary/5 hover:border-primary',
  },
  content: 'flex flex-col items-center gap-1',
  icon: {
    wrapper: 'size-10 flex items-center justify-center rounded-full border border-dashed border-accented group-hover:border-primary transition-all cursor-pointer',
    icon: 'i-tabler:device-desktop-up size-5',
  },
  text: {
    title: 'mt-3 text-base font-medium',
    desc: 'text-sm text-muted text-center',
    highlight: 'text-primary font-medium',
  },
  table: {
    empty: 'flex items-center justify-center h-full text-muted',
    actions: 'flex gap-2',
  },
}

type IUploadValue = Record<string, any>[] | Record<string, any>
export interface IUploadProps extends IUploadParams {
  driver?: 'local' | 's3'
  signPath?: string
  signCallback?: (response: IDataProviderResponse) => IS3SignData
  managePath?: string
  value?: IUploadValue
  defaultValue?: IUploadValue
  onUpdateValue?: (value?: IUploadValue) => void
  manager?: boolean
}

export const DuxFileUpload = defineComponent<IUploadProps>({
  name: 'DuxFileUpload',
  props: {
    path: { type: String, default: '' },
    managePath: { type: String, default: '' },
    signPath: { type: String, default: '' },
    signCallback: Function as PropType<(response: IDataProviderResponse) => IS3SignData>,
    driver: {
      type: String as PropType<'local' | 's3'>,
      default: 'local',
    },
    maxNum: Number,
    maxSize: Number,
    multiple: Boolean,
    manager: Boolean,
    accept: String,
    value: [String, Array<string>],
    defaultValue: [String, Array<string>],
    onUpdateValue: Function as PropType<(value?: string | string[]) => void>,
  },
  setup(props, { emit }) {
    const model = useVModel(props, 'value', emit, {
      passive: true,
      deep: true,
      defaultValue: props.defaultValue,
    })

    const message = useMessage()
    const { t } = useI18n()
    const dropZoneRef = ref<HTMLDivElement>()

    const maxSize = computed(() => props.maxSize || 5)
    const modal = useModal()

    const { uploadPath, managePath, driver } = useUploadConfig({
      driver: props?.driver,
      signPath: props?.signPath,
      signCallback: props?.signCallback,
      uploadPath: props?.path,
      managePath: props?.managePath,
    })

    const upload = useUpload({
      path: uploadPath.value,
      multiple: props.multiple,
      maxFileCount: props.maxNum,
      maxFileSize: maxSize.value * 1024 * 1024,
      autoUpload: true,
      accept: props.accept,
      onError: error => message.error(error.message || t('components.upload.error') as string),
      driver: driver.value,
    })

    const { isOverDropZone } = useDropZone(dropZoneRef, {
      onDrop: (files) => {
        if (files && files.length > 0) {
          upload.addFiles(Array.from(files), 'file')
        }
      },
    })

    watch(upload.dataFiles, (v) => {
      const files = props.multiple ? v : v[0]
      model.value = files
      props.onUpdateValue?.(files)
    })

    const supportedExtensions = computed(() => {
      if (!props.accept)
        return ''
      return props.accept
        .split(',')
        .map((mimeType) => {
          const trimmed = mimeType.trim()
          if (typeMap[trimmed])
            return typeMap[trimmed]
          if (trimmed.includes('*')) {
            const base = trimmed.split('/')[0]
            return typeMap[trimmed] || t('common.fileExtension', { ext: base.toUpperCase() })
          }
          const ext = mime.getExtension(trimmed)
          return ext ? ext.toUpperCase() : trimmed
        })
        .filter(Boolean)
        .join(', ')
    })

    const statusName = computed(() => ({
      pending: <div class="text-info">{t('components.upload.status.pending')}</div>,
      uploading: <div class="text-info">{t('components.upload.status.uploading')}</div>,
      success: <div class="text-success">{t('components.upload.status.success')}</div>,
      error: <div class="text-error">{t('components.upload.status.error')}</div>,
    }))

    const dropZoneClass = computed(() => [
      styles.dropZone.base,
      isOverDropZone.value ? styles.dropZone.active : styles.dropZone.hover,
    ])

    const tableClass = computed(() => [
      upload.uploadFiles.value.length === 0 && 'border-b border-muted',
    ])

    const once = ref(false)
    watch(model, (v) => {
      if (!v || !v?.length || once.value) {
        return
      }
      once.value = true
      const data = Array.isArray(v) ? v : [v]
      upload.addDataFiles(data)
    }, {
      immediate: true,
    })

    return () => (
      <div class={styles.container}>
        <div ref={dropZoneRef} class={dropZoneClass.value} onClick={() => upload.open()}>
          <div class={styles.content}>
            <div
              class={styles.icon.wrapper}
              onClick={(e) => {
                if (!props.manager) {
                  return
                }

                e.stopPropagation()
                modal.show({
                  title: t('components.upload.title'),
                  width: 800,
                  component: () => import('./manager'),
                  componentProps: {
                    path: managePath.value,
                    multiple: props.multiple,
                    uploadParams: {
                      path: uploadPath.value,
                      accept: props.accept,
                      maxNum: props.maxNum,
                      maxSize: maxSize.value,
                    },
                  },
                }).then((value: Record<string, any>[]) => {
                  upload.addDataFiles(value)
                })
              }}
            >
              <div class={styles.icon.icon}></div>
            </div>
            <div class={styles.text.title}>{t('components.upload.desc')}</div>
            <div class={styles.text.desc}>
              {isOverDropZone.value
                ? (
                    <span class={styles.text.highlight}>{t('components.upload.dropHere')}</span>
                  )
                : (
                    <>
                      {supportedExtensions.value
                        ? t('components.upload.supportFormats', { formats: supportedExtensions.value })
                        : t('components.upload.allFormats')}
                      ,
                      {' '}
                      {t('components.upload.maxSize', { size: maxSize.value })}
                    </>
                  )}
            </div>
          </div>
        </div>

        <NDataTable
          bordered={false}
          class={tableClass.value}
          columns={[
            {
              key: 'filename',
              title: t('components.upload.file.name'),
              minWidth: 200,
              render: row => <DuxMedia title={row.filename} desc={row.filetype} />,
            },
            {
              key: 'filesizeText',
              title: t('components.upload.file.size'),
              width: 120,
            },
            {
              key: 'status',
              title: t('components.upload.file.status'),
              width: 120,
              render: row => row.status === 'uploading'
                ? (
                    <div class="flex items-center">
                      <NProgress
                        type="line"
                        style={{ width: '24px', height: '24px' }}
                        color="rgb(var(--ui-color-primary))"
                        indicator-placement="inside"
                        percentage={row.progress?.percent}
                        showIndicator={false}
                        height={14}
                      />
                    </div>
                  )
                : statusName.value[row.status],
            },
            {
              key: 'actions',
              title: t('components.upload.actions'),
              width: 120,
              render: row => (
                <div class={styles.table.actions}>
                  <NButton
                    type="warning"
                    size="small"
                    text
                    disabled={['success', 'error', 'cancelled'].includes(row.status)}
                    onClick={() => upload.cancelFiles([row.id])}
                  >
                    {t('components.upload.cancel')}
                  </NButton>
                  <NButton
                    type="error"
                    size="small"
                    text
                    onClick={() => upload.removeFiles([row.id])}
                  >
                    {t('components.upload.delete')}
                  </NButton>
                </div>
              ),
            },
          ]}
          data={upload.uploadFiles.value}
        >
          {{
            empty: () => (
              <div class={styles.table.empty}>
                {t('components.upload.empty')}
              </div>
            ),
          }}
        </NDataTable>
      </div>
    )
  },
})



---
File: /packages/pro/src/components/upload/image.tsx
---

import type { IDataProviderResponse, IS3SignData } from '@duxweb/dvha-core'
import type { PropType } from 'vue'
import { useI18n, useUpload } from '@duxweb/dvha-core'
import { useVModel } from '@vueuse/core'
import clsx from 'clsx'
import { NButton, NImage, NProgress, useMessage } from 'naive-ui'
import { computed, defineComponent, ref, watch } from 'vue'
import { VueDraggable } from 'vue-draggable-plus'
import { useImagePreview, useModal } from '../../hooks'
import { useUploadConfig } from './config'

export const DuxImageUpload = defineComponent({
  name: 'DuxImageUpload',
  props: {
    path: {
      type: String,
      default: 'upload',
    },
    signPath: {
      type: String,
      default: '',
    },
    signCallback: Function as PropType<(response: IDataProviderResponse) => IS3SignData>,
    managePath: {
      type: String,
      default: '',
    },
    driver: {
      type: String as PropType<'local' | 's3'>,
      default: 'local',
    },
    maxNum: Number,
    maxSize: {
      type: Number,
      default: 0,
    },
    multiple: Boolean,
    manager: Boolean,
    value: [String, Array<string>],
    defaultValue: [String, Array<string>],
    onUpdateValue: Function as PropType<(value?: string | string[]) => void>,
  },
  setup(props, { emit }) {
    const model = useVModel(props, 'value', emit, {
      passive: true,
      deep: true,
      defaultValue: props.defaultValue,
    })

    const message = useMessage()
    const image = useImagePreview()
    const { t } = useI18n()

    const styles = {
      container: 'flex gap-2',
      imageItem: 'size-80px rounded border border-muted relative group draggable flex items-center',
      imageOverlay: 'z-1 size-full inset-0 absolute flex items-center justify-center bg-default/80 transition-all opacity-0 group-hover:opacity-100 rounded',
      uploadArea: 'relative size-80px text-sm rounded flex flex-col border border-dashed bg-elevated border-muted dark:border-accented hover:bg-accented/50 hover:border-accented dark:hover:bg-accented/50 dark:hover:border-accented cursor-pointer',
      uploadContent: 'flex-1 flex flex-col justify-center items-center gap-1 relative',
      progressContainer: 'size-80px flex items-center justify-center rounded',
      progressBar: 'absolute left-2 right-2 bottom-2',
    }

    const maxSize = computed(() => props.maxSize)

    const { uploadPath, managePath, driver } = useUploadConfig({
      driver: props?.driver,
      signPath: props?.signPath,
      signCallback: props?.signCallback,
      uploadPath: props?.path,
      managePath: props?.managePath,
    })

    const upload = useUpload({
      path: uploadPath.value,
      multiple: props.multiple,
      maxFileCount: props.maxNum,
      maxFileSize: maxSize.value * 1024 * 1024,
      autoUpload: true,
      accept: 'image/*',
      onError: (error) => {
        message.error(error.message || t('components.upload.error') as string)
      },
      driver: driver.value,
    })

    watch(upload.dataFiles, (v) => {
      const files = props.multiple ? v?.map(file => file.url as string) : v?.[0]?.url as string
      model.value = files
      props.onUpdateValue?.(files)
    })

    const uploadProgress = computed(() => {
      return upload.progress.value.totalPercent
    })

    const isUploading = computed(() => {
      return upload.isUploading.value
    })

    const handleFileChange = async () => {
      upload.open()
    }

    const isMax = computed(() => {
      return props.multiple ? props.maxNum && upload.uploadFiles.value.length >= props.maxNum : true
    })

    const previewList = computed(() => {
      return upload.dataFiles.value?.map(file => file.url as string)
    })

    const modal = useModal()

    const once = ref(false)
    watch(model, (v) => {
      if (!v || !v?.length || once.value) {
        return
      }
      once.value = true
      const urls = typeof v === 'string' ? [v] : Array.isArray(v) ? v : []
      upload.addDataFiles(urls.map(url => ({ url })))
    }, {
      immediate: true
    })

    return () => (
      <div>
        <VueDraggable
          modelValue={upload.uploadFiles.value}
          v-model={upload.uploadFiles.value}
          class={styles.container}
          draggable=".draggable"
        >
          {upload.uploadFiles.value?.map((file, index) => {
            const url = file.url || URL.createObjectURL(file.file as File)
            return (
              <div
                key={index}
                class={clsx(styles.imageItem)}
              >
                <NImage
                  class="z-0 rounded"
                  objectFit="scale-down"
                  width={78}
                  height={78}
                  previewDisabled
                  src={url}
                />
                <div class={styles.imageOverlay}>
                  {file.status === 'success' && (
                    <NButton
                      quaternary
                      circle
                      size="small"
                      renderIcon={() => <div class="n-icon i-tabler:eye"></div>}
                      onClick={() => image.show(previewList.value, index)}
                    />
                  )}
                  <NButton
                    quaternary
                    circle
                    size="small"
                    renderIcon={() => <div class="n-icon i-tabler:trash"></div>}
                    onClick={() => {
                      upload.removeFiles([file.id])
                    }}
                  />
                </div>
              </div>
            )
          })}

          {(upload.uploadFiles.value.length === 0 || !isMax.value) && (
            <div
              class={styles.uploadArea}
              onClick={() => {
                handleFileChange()
              }}
            >
              {props.manager && (
                <div
                  class=" py-1 text-xs bg-muted border-b border-dashed border-accented flex items-center justify-center"
                  onClick={(e) => {
                    e.stopPropagation()
                    modal.show({
                      title: t('components.upload.title'),
                      width: '800px',
                      component: () => import('./manager'),
                      componentProps: {
                        path: managePath.value,
                        type: 'image',
                        multiple: props.multiple,
                        uploadParams: {
                          path: uploadPath.value,
                          accept: 'image/*',
                          maxNum: props.maxNum,
                          maxSize: props.maxSize,
                        },
                      },
                    }).then((value: Record<string, any>[]) => {
                      upload.addDataFiles(value)
                    })
                  }}
                >
                  <div class="i-tabler:folder size-4"></div>
                </div>
              )}

              <div class={styles.uploadContent}>
                {isUploading.value
                  ? (
                      <div class={styles.progressContainer}>
                        <div class="i-tabler:photo size-6"></div>
                        <div class={styles.progressBar}>
                          <NProgress
                            type="line"
                            percentage={uploadProgress.value}
                            showIndicator={false}
                            height={4}
                          />
                        </div>
                      </div>
                    )
                  : (
                      <div class="i-tabler:plus size-4"></div>
                    )}
              </div>
            </div>
          )}
        </VueDraggable>
      </div>
    )
  },
})



---
File: /packages/pro/src/components/upload/index.ts
---

export * from './file'
export * from './image'
export * from './manager'
export { default as DuxFileManage } from './manager'
export * from './selectFile'



---
File: /packages/pro/src/components/upload/manager.tsx
---

import type { IDataProviderResponse, IS3SignData } from '@duxweb/dvha-core'
import type { PropType } from 'vue'
import { useClient, useI18n, useInfiniteList, useUpload } from '@duxweb/dvha-core'
import { cloneDeep } from 'lodash-es'
import { NButton, NDropdown, NInfiniteScroll, NInput, NSpin, NTab, NTabs, NTooltip, useMessage } from 'naive-ui'
import { computed, defineComponent, nextTick, ref } from 'vue'
import { useDialog, useDownload } from '../../hooks'
import { DuxDrawEmpty } from '../draw'
import { useUploadConfig } from './config'
import { DuxFileManageItem } from './manage/item'

export interface IUploadParams {
  path?: string
  driver?: 'local' | 's3'
  signPath?: string
  signCallback?: (response: IDataProviderResponse) => IS3SignData
  accept?: string
  multiple?: boolean
  maxNum?: number
  maxSize?: number
}

const DuxFileManage = defineComponent({
  name: 'DuxFileManage',
  props: {
    path: String,
    type: String,
    onConfirm: Function as PropType<(value: Record<string, any>[]) => void>,
    onClose: Function as PropType<() => void>,
    multiple: Boolean,
    page: {
      type: Boolean,
      default: false,
    },
    handle: String,
    uploadParams: Object as PropType<IUploadParams>,
  },
  setup(props) {
    const showDropdown = ref(false)
    const xRef = ref(0)
    const yRef = ref(0)
    const { t } = useI18n()

    const selectValues = ref<Record<string, any>[]>([])

    const dialog = useDialog()
    const client = useClient()
    const message = useMessage()
    const download = useDownload()

    const form = ref<Record<string, any>>({
      manager: true,
      type: props.type || 'all',
      folder: null,
    })
    const currentData = ref<Record<string, any>>()

    const { uploadPath, managePath, driver } = useUploadConfig({
      driver: props.uploadParams?.driver,
      signPath: props.uploadParams?.signPath,
      signCallback: props.uploadParams?.signCallback,
      uploadPath: props.uploadParams?.path,
      managePath: props.path,
    })

    const pagination = ref({
      page: 1,
      pageSize: 20,
    })

    const list = useInfiniteList({
      path: managePath.value,
      pagination: pagination.value,
      filters: form.value,
    })

    const uploadParams = computed(() => {
      const { driver, signPath, signCallback, ...rest } = props.uploadParams || {}
      return rest
    })

    const upload = useUpload({
      ...uploadParams.value,
      path: uploadPath.value,
      autoUpload: true,
      driver: driver.value,
      params: form.value,
      onSuccess: () => {
        selectValues.value = []
        list.refetch()
      },
      onError: (err) => {
        message.error(err?.message || t('components.uploadManage.uploadError') || '')
      },
    })

    const createFolder = (name?: string) => {
      if (!name) {
        message.error(t('components.uploadManage.namePlaceholder') || '')
        return
      }
      client.request({
        path: managePath.value,
        method: 'POST',
        payload: {
          name,
          folder: form.value.folder,
        },
      }).then(() => {
        list.refetch()
        selectValues.value = []
      }).catch(() => {
        message.error(t('components.uploadManage.createError') || '')
      })
    }

    const renameFile = (type: 'folder' | 'file', name?: string, id?: string | number) => {
      if (!name) {
        message.error(t('components.uploadManage.namePlaceholder') || '')
        return
      }
      client.request({
        path: managePath.value,
        method: 'PUT',
        payload: {
          name,
          id,
          type,
        },
      }).then(() => {
        list.refetch()
        selectValues.value = []
      }).catch(() => {
        message.error(t('components.uploadManage.editError') || '')
      })
    }

    const deleteFile = (type: 'folder' | 'file', id?: any) => {
      client.request({
        path: `${managePath.value}/batch`,
        method: 'DELETE',
        payload: {
          data: Array.isArray(id) ? id : [id],
          type,
        },
      }).then(() => {
        list.refetch()
        selectValues.value = []
      }).catch(() => {
        message.error(t('components.uploadManage.delError') || '')
      })
    }

    const typeDisable = computed<boolean>(() => {
      return !!(props.type && props.type !== 'all')
    })

    return () => (
      <div class={[
        'flex flex-col gap-2',
        !props.page ? 'h-500px max-h-500px' : 'h-full',
      ]}
      >
        <div class={[
          'flex-none flex justify-between items-center border-b border-muted p-3',
          props.handle,
        ]}
        >
          <div class="flex-none">
            <NTabs
              type="segment"
              animated
              size="small"
              tabClass="!px-4"
              defaultValue="all"
              value={form.value.type}
              onUpdateValue={(v) => {
                if (typeDisable.value) {
                  return
                }
                form.value.type = v
                selectValues.value = []
              }}
            >
              <NTab tab={t('components.uploadManage.all')} name="all" disabled={typeDisable.value} />
              <NTab tab={t('components.uploadManage.image')} name="image" disabled={typeDisable.value} />
              <NTab tab={t('components.uploadManage.media')} name="media" disabled={typeDisable.value} />
              <NTab tab={t('components.uploadManage.docs')} name="docs" disabled={typeDisable.value} />
            </NTabs>
          </div>
          <div class="flex gap-2">
            <NButton
              type="default"
              ghost
              onClick={() => {
                dialog.prompt({
                  title: t('components.uploadManage.namePlaceholder') || '',
                  formSchema: [
                    {
                      tag: NInput,
                      attrs: {
                        'v-model:value': 'form.name',
                      },
                    },
                  ],
                }).then((res: any) => {
                  createFolder(res?.name)
                }).catch(() => {})
              }}
              renderIcon={() => <div class="i-tabler:plus"></div>}
            >
              {t('components.button.create')}
            </NButton>
            <NButton
              type="primary"
              ghost
              onClick={() => {
                upload.open()
              }}
              loading={upload.isUploading.value}
              renderIcon={() => <div class="i-tabler:upload"></div>}
            >
              <div class="flex gap-2">
                {t('components.uploadManage.upload')}
                {upload.progress.value.totalPercent > 0 && `(${upload.progress.value.totalPercent}%)`}
              </div>
            </NButton>

            {!props.page && (
              <NButton
                type="default"
                ghost
                onClick={() => {
                  props.onClose?.()
                }}
                renderIcon={() => <div class="i-tabler:x"></div>}
              >

              </NButton>
            )}
          </div>
        </div>

        <div class="flex-1 min-h-1">
          {list.data?.value?.data?.length > 0
            && (
              <NInfiniteScroll
                distance={10}
                onLoad={() => {
                  if (list.hasNextPage.value) {
                    list.fetchNextPage()
                  }
                }}
                scrollbarProps={{
                  contentClass: 'p-4',
                }}
              >
                <div class={[
                  'grid grid-cols-3 md:grid-cols-4 text-sm items-start justify-start',
                  list.data.value?.data?.length >= 4 && !props.page ? ' lg:grid-cols-[repeat(auto-fit,minmax(150px,1fr))]' : 'lg:grid-cols-[repeat(auto-fit,minmax(150px,150px))]',
                ]}
                >
                  {form.value?.folder && form.value?.folder !== list.data.value?.meta?.folder && (
                    <DuxFileManageItem
                      key={`parent-${list.data.value?.meta?.folder}`}
                      type="folder"
                      name={t('components.uploadManage.parentLevel')}
                      page={props.page}
                      onSelect={() => {
                        selectValues.value = []
                        form.value.folder = list.data.value?.meta?.folder
                      }}
                    />
                  )}
                  {list.data.value?.data?.map(item => (
                    <NTooltip placement="bottom" key={`${item.url ? 'file' : 'folder'}-${item.id}`} trigger={item.url ? 'hover' : 'manual'}>
                      {{
                        default: () => item.filesize,
                        trigger: () => (
                          <DuxFileManageItem
                            page={props.page}
                            onContextmenu={(e) => {
                              currentData.value = item
                              showDropdown.value = false
                              nextTick().then(() => {
                                showDropdown.value = true
                                xRef.value = e.clientX
                                yRef.value = e.clientY
                              })
                              e.preventDefault()
                            }}
                            value={!props.page ? !!selectValues.value?.find?.(v => v.id === item.id) : false}
                            type={item.url ? 'file' : 'folder'}
                            mime={item.filetype}
                            name={item.filename}
                            url={item.url}
                            time={item.time}
                            onSelect={(v) => {
                              if (!item.url) {
                                selectValues.value = []
                                list.data.value = undefined
                                form.value.folder = item.id
                                return
                              }

                              if (props.page) {
                                return
                              }

                              if (v) {
                                if (props.multiple) {
                                  selectValues.value?.push(item)
                                }
                                else {
                                  selectValues.value = [item]
                                }
                              }
                              else {
                                if (props.multiple) {
                                  selectValues.value?.splice(selectValues.value?.indexOf(item), 1)
                                }
                                else {
                                  selectValues.value = []
                                }
                              }
                            }}
                          />
                        ),
                      }}
                    </NTooltip>
                  )) }
                </div>
              </NInfiniteScroll>
            )}

          {list.isLoading.value
            ? <NSpin class="h-full absolute w-full bg-gray-1/50" />
            : !list.data.value?.data?.length && (
                <div class="size-full flex justify-center items-center text-sm text-gray-6">
                  <div class="flex flex-col  items-center">
                    <div class="w-26 mb-2">
                      <DuxDrawEmpty />
                    </div>
                    <div class="text-base">{t('components.uploadManage.empty')}</div>
                    <div class="text-sm text-muted">{t('components.uploadManage.emptyDesc')}</div>
                    {form.value?.folder && form.value?.folder !== list.data.value?.meta?.folder && (
                      <div class="text-xs text-gray-6">
                        <NButton
                          type="default"
                          ghost
                          onClick={() => {
                            selectValues.value = []
                            form.value.folder = list.data.value?.meta?.folder
                          }}
                        >
                          {t('components.uploadManage.back')}
                        </NButton>
                      </div>
                    )}
                  </div>
                </div>
              )}
        </div>

        <NDropdown
          x={xRef.value}
          y={yRef.value}
          placement="bottom-start"
          trigger="manual"
          show={showDropdown.value}
          onClickoutside={() => {
            showDropdown.value = false
          }}
          onUpdateShow={(value) => {
            if (!value) {
              currentData.value = undefined
            }
          }}
          onSelect={(v) => {
            const itemData = cloneDeep(currentData.value)
            showDropdown.value = false
            switch (v) {
              case 'download':
                download.url(itemData?.url)
                break
              case 'rename':
                dialog.prompt({
                  title: t('components.uploadManage.namePlaceholder'),
                  formSchema: [
                    {
                      tag: NInput,
                      attrs: {
                        'v-model:value': 'form.name',
                      },
                    },
                  ],
                  defaultValue: {
                    name: itemData?.filename || itemData?.name,
                  },
                }).then((res: any) => {
                  renameFile(itemData?.type, res?.name, itemData?.id)
                })
                break
              case 'delete':
                dialog.confirm({
                  title: t('components.uploadManage.delTitle'),
                  content: t('components.uploadManage.delDesc'),
                }).then(() => {
                  deleteFile(itemData?.type, itemData?.id)
                })
                break
            }
          }}
          options={[
            currentData.value?.url && {
              label: t('components.button.download'),
              key: 'download',
              icon: () => <div class="i-tabler:download"></div>,
            },
            {
              label: t('components.button.rename'),
              key: 'rename',
              icon: () => <div class="i-tabler:cursor-text"></div>,
            },
            {
              label: t('components.button.delete'),
              key: 'delete',
              icon: () => <div class="i-tabler:trash"></div>,
            },
          ].filter(v => v)}
        />

        {!props.page && (
          <div class="flex justify-end gap-2 border-t border-muted p-3">
            <div>
              {selectValues.value?.length > 0 && (
                <NButton
                  type="error"
                  secondary
                  onClick={() => {
                    dialog.confirm({
                      title: t('components.uploadManage.delTitle'),
                      content: t('components.uploadManage.delDesc'),
                    }).then(() => {
                      deleteFile('file', selectValues.value?.map(v => v.id))
                    })
                  }}
                >
                  {t('components.button.delete')}
                </NButton>
              )}
            </div>
            <div>
              <NButton
                type="primary"
                disabled={!selectValues.value?.length}
                onClick={() => {
                  props.onConfirm?.(selectValues.value)
                }}
              >
                {t('components.button.select')}
                (
                {selectValues.value?.length || 0}
                )
              </NButton>
            </div>
          </div>
        )}
      </div>
    )
  },
})

export default DuxFileManage



---
File: /packages/pro/src/components/upload/selectFile.tsx
---

import type { PropType } from 'vue'
import { useI18n } from '@duxweb/dvha-core'
import { useVModel } from '@vueuse/core'
import { computed, defineComponent, ref } from 'vue'

export const DuxSelectUpload = defineComponent({
  name: 'DuxSelectUpload',
  props: {
    maxNum: Number,
    multiple: Boolean,
    value: [String, Array, Object],
    onUpdateValue: Function as PropType<(value?: string | File | File[]) => void>,
    accept: {
      type: String,
      default: '*',
    },
  },
  setup(props, { emit }) {
    const selectedFiles = ref<File[]>([])
    const model = useVModel(props, 'value', emit)
    const { t } = useI18n()

    const displayText = computed(() => {
      const count = selectedFiles.value.length
      if (count === 0) {
        return t('components.upload.selectUpload.clickOrDrag')
      }
      return props.multiple ? t('components.upload.selectUpload.selectedFiles', { count }) : selectedFiles.value[0]?.name || ''
    })

    function handleFileChange(event: Event) {
      const files = Array.from((event.target as HTMLInputElement).files || [])

      if (props.multiple) {
        const newFiles = props.maxNum ? files.slice(0, props.maxNum) : files
        selectedFiles.value = newFiles
        model.value = newFiles
        props.onUpdateValue?.(newFiles)
      }
      else {
        const file = files[0]
        selectedFiles.value = file ? [file] : []
        model.value = file || undefined
        props.onUpdateValue?.(file)
      }
    }

    return () => (
      <div class="relative border border-dashed border-muted rounded p-8 text-center hover:border-primary transition-colors duration-200 bg-muted hover:bg-elevated">
        <input
          type="file"
          multiple={props.multiple}
          class="absolute inset-0 w-full h-full opacity-0 cursor-pointer"
          onChange={handleFileChange}
          accept={props.accept}
        />
        <div class="flex flex-col items-center gap-3">
          <svg class="w-12 h-12 text-muted" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M7 16a4 4 0 01-.88-7.903A5 5 0 1115.9 6L16 6a5 5 0 011 9.9M15 13l-3-3m0 0l-3 3m3-3v12" />
          </svg>
          <div>
            <p class="text-lg font-medium text-default">
              {displayText.value}
            </p>
            <p class="text-sm text-muted mt-1">
              {props.multiple ? t('components.upload.selectUpload.multipleSupport') : (props.accept !== '*' ? t('components.upload.selectUpload.acceptDesc', { accept: props.accept }) : t('components.upload.selectUpload.defaultDesc'))}
              {props.maxNum && (
                <span class="ml-2 text-warning">
                  (
                  {t('components.upload.selectUpload.maxFiles', { max: props.maxNum })}
                  )
                </span>
              )}
            </p>
          </div>
        </div>
      </div>
    )
  },
})



---
File: /packages/pro/src/components/widget/avatar.tsx
---

import { NAvatar } from 'naive-ui'
import { defineComponent, h } from 'vue'

export const DuxAvatar = defineComponent({
  name: 'DuxAvatar',
  props: {
  },
  extends: NAvatar,
  setup(props) {
    return () => {
      const sizeClass = `size-${props.size}px rounded-full`

      const image = (
        <svg viewBox="0 0 100 100" class={sizeClass}>
          <circle cx="50" cy="50" r="50" fill="rgb(var(--ui-color-primary))" fill-opacity="0.1" />
          <g fill="rgb(var(--ui-color-primary))" fill-opacity="0.65">
            <circle cx="50" cy="36" r="14" />
            <path d="M 50 54 C 30 54 15 69 15 87 L 15 100 L 85 100 L 85 87 C 85 69 70 54 50 54 Z" />
          </g>

          <g fill="rgb(var(--ui-color-primary))" fill-opacity="0.3">
            <circle cx="20" cy="20" r="1.5">
              <animate attributeName="r" values="1.5;2.5;1.5" dur="3s" repeatCount="indefinite" />
            </circle>
            <circle cx="80" cy="25" r="1">
              <animate attributeName="r" values="1;2;1" dur="4s" repeatCount="indefinite" />
            </circle>
          </g>
        </svg>
      )

      return (
        props.src
          ? (
              <NAvatar
                {...props}
                src={props.src}
                renderFallback={() => h(image)}
                renderPlaceholder={() => h(image)}
              />
            )
          : h(image)
      )
    }
  },
})



---
File: /packages/pro/src/components/widget/connect.tsx
---

import { defineComponent } from 'vue'
import { DuxCard } from '../card'

export const DuxWidgetConnect = defineComponent({
  name: 'DuxWidgetConnect',
  props: {
    title: String,
    desc: String,
    value: Number,
    local: String,
  },
  setup(props, { slots }) {
    return () => (
      <DuxCard>
        <div class="flex items-center">
          <div class="flex-1 flex flex-col gap-1 px-6 py-4">
            <div class="font-medium text-base">
              {props.title}
            </div>
            <div class="text-sm text-muted">
              {props.desc}
            </div>
            <div class="mt-2">
              {slots.default?.()}
            </div>
          </div>
          <div class="flex-none pt-4 pr-4">
            <svg class="size-30" xmlns="http://www.w3.org/2000/svg" width="511.56264" height="532.44842" viewBox="0 0 511.56264 532.44842">
              <polygon points="454.49103 405.20843 454.48102 405.44842 466.49103 532.44842 378.85101 532.44842 367.49103 454.44842 362.49103 530.44842 272.49103 529.44842 282.05103 429.66839 290.18103 383.41839 290.18103 383.40838 291.401 376.44842 452.10101 376.44842 452.31103 378.96838 454.49103 405.20843" fill="#2f2e41" />
              <path d="M222.88285,478.83064c9.28179,1.69101,18.96019-8.76188,21.61758-23.34779,1.16327-6.38475,.78778-12.50277-.78019-17.50611l1.42323-8.40799,23.88334-113.10923s43.98031-87.97522,43.9791-103.24828c-.00111-15.27287-12.72223-22.76282-12.72223-22.76282l-17.21435,.16096-53.98264,131.84662-9.72217,97.42982-1.57289,13.36711c-3.2316,4.12897-5.74053,9.72145-6.90332,16.10621-2.65749,14.58572,2.71275,27.78048,11.99454,29.4715Z" fill="#ffb6b6" />
              <polygon points="397.99103 135.94842 381.99103 98.94842 329.99103 107.94842 326.49103 151.47992 397.99103 135.94842" fill="#ffb6b6" />
              <polygon points="397.99103 135.94842 381.99103 98.94842 329.99103 107.94842 326.49103 151.47992 397.99103 135.94842" opacity=".1" />
              <path d="M510.99121,212.9484s-37-69-44-76c-3.11621-3.11621-8.01465-3.15955-12.49316-2.25134l-51.50684-17.74866-17.45801-9.8092-1.15039,18.66199-57.31543,10.28748c.31836-11.38086,1.92383-15.70972,1.92383-15.70972l-21,24.56946-41,20,.02246,.18005c-3.00879,1.05029-5.86133,2.84741-8.02246,5.81995-8,11-30,145-30,145l47,10,6.39648-40.13953,4.60352,36.13953,3.5,67.5s64,55,95,35,69-19,69-19l.94824-31.28796c.6748-1.07861,1.05176-1.71204,1.05176-1.71204l-1-110.98425v-29.5321c7.61816,10.61353,16.81152,19.74109,27.5,24.01636,35,14,28-43,28-43Z" fill="#e6e6e6" />
              <circle cx="350.55585" cy="66.61991" r="47.83848" fill="#ffb6b6" />
              <path d="M384.87476,80.13948s4.15987-14.55954,13.51957-13.51957c9.3597,1.03997,11.43964-7.27977,9.3597-11.43964-2.07993-4.15987-6.2398-24.95921-6.2398-24.95921,0,0,2.07993-14.55954-10.39967-16.63947-12.4796-2.07993-16.63947-4.15987-18.71941-8.31974-2.07993-4.15987-33.27894-8.31974-43.67861-2.07993-10.39967,6.2398-18.71941,18.2117-25.99917,21.58546-7.27977,3.37375-13.51957,9.61355-9.3597,20.01322,4.15987,10.39967,10.19286,30.7392,10.19286,30.7392,0,0,10.60648-3.70006,12.68641,2.53974,2.07993,6.2398-6.2398-2.07993,4.15987-18.71941,10.39967-16.63947,10.39967-33.27894,27.03914-27.03914,16.63947,6.2398,35.35888,4.15987,33.27894,16.63947-2.07993,12.4796,4.15987,31.19901,4.15987,31.19901Z" fill="#2f2e41" />
              <g>
                <path d="M381.94946,459.38422H18.63322c-10.27456,0-18.63322-8.35942-18.63322-18.63322V247.758c0-10.2738,8.35866-18.63322,18.63322-18.63322H381.94946c10.27456,0,18.63322,8.35942,18.63322,18.63322v192.993c0,10.2738-8.35866,18.63322-18.63322,18.63322Z" fill="rgb(var(--ui-color-gray-100))" />
                <path d="M381.94946,459.38422H18.63322c-10.27456,0-18.63322-8.35942-18.63322-18.63322V247.758c0-10.2738,8.35866-18.63322,18.63322-18.63322H381.94946c10.27456,0,18.63322,8.35942,18.63322,18.63322v192.993c0,10.2738-8.35866,18.63322-18.63322,18.63322ZM18.63322,232.23639c-8.55846,0-15.52161,6.96315-15.52161,15.52161v192.993c0,8.55846,6.96315,15.52161,15.52161,15.52161H381.94946c8.55846,0,15.52161-6.96315,15.52161-15.52161V247.758c0-8.55846-6.96315-15.52161-15.52161-15.52161H18.63322Z" fill="#3f3d56" />
                <circle cx="353.90847" cy="247.79446" r="4.66742" fill="#3f3d56" />
                <circle cx="366.35492" cy="247.79446" r="4.66742" fill="#3f3d56" />
                <circle cx="378.80138" cy="247.79446" r="4.66742" fill="#3f3d56" />
                <path d="M26.44872,323.2511c-1.28688,0-2.33371,1.04683-2.33371,2.33371,0,.62749,.24234,1.20788,.68218,1.63633,.44365,.45428,1.0248,.69738,1.65153,.69738H375.68976c1.28688,0,2.33371-1.04683,2.33371-2.33371,0-.62749-.24234-1.20788-.68218-1.63633-.44365-.45428-1.0248-.69738-1.65153-.69738H26.44872Z" fill="#e6e6e6" />
                <path d="M332.12717,322.4732v6.22323H26.44872c-.85567,0-1.63358-.34233-2.19365-.91797-.57574-.56007-.91797-1.33797-.91797-2.19365,0-1.71144,1.40026-3.11161,3.11161-3.11161H332.12717Z" fill="rgb(var(--ui-color-primary))" />
                <path d="M371.80025,310.80464h-31.11614c-3.43144,0-6.22323-2.79103-6.22323-6.22323s2.79179-6.22323,6.22323-6.22323h31.11614c3.43144,0,6.22323,2.79103,6.22323,6.22323s-2.79179,6.22323-6.22323,6.22323Z" fill="#e6e6e6" />
                <path d="M167.98953,278.1327H28.78243c-3.43144,0-6.22323-2.79103-6.22323-6.22323s2.79179-6.22323,6.22323-6.22323H167.98953c3.43144,0,6.22323,2.79103,6.22323,6.22323s-2.79179,6.22323-6.22323,6.22323Z" fill="#e6e6e6" />
                <path d="M26.44872,393.26242c-1.28688,0-2.33371,1.04683-2.33371,2.33371,0,.62749,.24234,1.20788,.68218,1.63633,.44365,.45428,1.0248,.69738,1.65153,.69738H375.68976c1.28688,0,2.33371-1.04683,2.33371-2.33371,0-.62749-.24234-1.20788-.68218-1.63633-.44365-.45428-1.0248-.69738-1.65153-.69738H26.44872Z" fill="#e6e6e6" />
                <path d="M212.33003,392.48451v6.22323H26.44872c-.85567,0-1.63358-.34233-2.19365-.91797-.57574-.56007-.91797-1.33797-.91797-2.19365,0-1.71144,1.40026-3.11161,3.11161-3.11161H212.33003Z" fill="rgb(var(--ui-color-primary))" />
                <path d="M371.80025,380.81596h-31.11614c-3.43144,0-6.22323-2.79103-6.22323-6.22323s2.79179-6.22323,6.22323-6.22323h31.11614c3.43144,0,6.22323,2.79103,6.22323,6.22323s-2.79179,6.22323-6.22323,6.22323Z" fill="#e6e6e6" />
              </g>
              <g>
                <ellipse cx="426.27357" cy="70.44086" rx="48.72643" ry="47.69976" fill="rgb(var(--ui-color-primary))" />
                <path d="M442.81136,46.3808c-6.487,11.81215-12.97405,23.62439-19.46106,35.43659-4.13442-7.30499-8.24624-14.62285-12.39083-21.92211-1.43136-2.5209-5.32473-.25351-3.88976,2.27368,4.80448,8.46149,9.55919,16.95111,14.36367,25.41259,.82147,1.44676,3.07677,1.48035,3.8898,0,7.12599-12.9757,14.25199-25.95141,21.37798-38.92707,1.39635-2.54258-2.4924-4.81822-3.8898-2.27368Z" fill="rgb(var(--ui-color-gray-100))" />
              </g>
              <path d="M493.53827,196.17181l-48.54724-23.22339s-1.94983-15.5437-11.05402-21.08789c-1.54779-3.6925-3.32855-7.74908-4.94598-10.96332-4-7.94879,2-22.94879-3-22.94879s-12.39122,15.77543-12,20c.30031,3.24292,2.98059,8.90472,3.5343,13.8609-6.09709,2.29949-11.01564,6.24084-14.24964,9.37903-2.79865,2.71575-3.8385,6.76755-2.74475,10.51073,3.16948,10.84703,11.09153,33.24933,22.46008,33.24933,15,0,19-3,19-3,0,0,31,39,54,42s-2.45276-47.77661-2.45276-47.77661Z" fill="#ffb6b6" />
            </svg>
          </div>
        </div>
      </DuxCard>
    )
  },
})



---
File: /packages/pro/src/components/widget/image.tsx
---

import { NImage } from 'naive-ui'
import { defineComponent, h } from 'vue'
import { DuxPlaceholder } from './placeholder'

export const DuxImage = defineComponent({
  name: 'DuxImage',
  props: {
  },
  extends: NImage,
  setup(props) {
    return () => {
      const sizeClass = `size-${props.height}px`

      const image = (
        <svg viewBox="0 0 100 100" class={sizeClass}>
          <circle cx="50" cy="50" r="50" fill="rgb(var(--ui-color-primary))" fill-opacity="0.1" />
          <g fill="rgb(var(--ui-color-primary))" fill-opacity="0.65">
            <circle cx="50" cy="36" r="14" />
            <path d="M 50 54 C 30 54 15 69 15 87 L 15 100 L 85 100 L 85 87 C 85 69 70 54 50 54 Z" />
          </g>

          <g fill="rgb(var(--ui-color-primary))" fill-opacity="0.3">
            <circle cx="20" cy="20" r="1.5">
              <animate attributeName="r" values="1.5;2.5;1.5" dur="3s" repeatCount="indefinite" />
            </circle>
            <circle cx="80" cy="25" r="1">
              <animate attributeName="r" values="1;2;1" dur="4s" repeatCount="indefinite" />
            </circle>
          </g>
        </svg>
      )

      return (
        props.src
          ? (
              <NImage
                {...props}
                src={props.src}
              >
                {{
                  placeholder: () => <DuxPlaceholder width={props.width} height={props.height} />,
                  error: () => <DuxPlaceholder width={props.width} height={props.height} />,
                }}
              </NImage>
            )
          : h(image)
      )
    }
  },
})



---
File: /packages/pro/src/components/widget/index.ts
---

export * from './avatar'
export * from './connect'
export * from './placeholder'



---
File: /packages/pro/src/components/widget/placeholder.tsx
---

import { defineComponent } from 'vue'

export const DuxPlaceholder = defineComponent({
  name: 'DuxPlaceholder',
  props: {
    width: {
      type: [Number, String],
      default: 'auto',
    },
    height: {
      type: [Number, String],
      default: 100,
    },
  },
  setup(props) {
    return () => {
      const style = {
        width: typeof props.width === 'number' ? `${props.width}px` : props.width,
        height: typeof props.height === 'number' ? `${props.height}px` : props.height,
      }

      return (
        <svg viewBox="0 0 200 120" style={style}>
          <defs>
            <linearGradient id="placeholderBg" x1="0%" y1="0%" x2="100%" y2="100%">
              <stop offset="0%" style="stop-color:rgb(var(--ui-color-primary));stop-opacity:0.08" />
              <stop offset="100%" style="stop-color:rgb(var(--ui-color-primary));stop-opacity:0.03" />
            </linearGradient>
          </defs>

          <rect width="200" height="120" fill="url(#placeholderBg)" rx="8" />

          <g fill="rgb(var(--ui-color-primary))" fill-opacity="0.4">
            <circle cx="60" cy="40" r="12" />
            <path d="M 40 70 L 80 70 L 100 50 L 140 70 L 160 50 L 200 70 L 200 120 L 40 120 Z" />
          </g>

          <g fill="rgb(var(--ui-color-primary))" fill-opacity="0.25">
            <circle cx="150" cy="25" r="1.5">
              <animate attributeName="opacity" values="0.25;0.5;0.25" dur="3s" repeatCount="indefinite" />
            </circle>
            <circle cx="170" cy="35" r="1">
              <animate attributeName="opacity" values="0.2;0.4;0.2" dur="4s" repeatCount="indefinite" />
            </circle>
          </g>

          <rect x="40" y="40" width="120" height="1" fill="rgb(var(--ui-color-primary))" fill-opacity="0.15" />
        </svg>
      )
    }
  },
})



---
File: /packages/pro/src/components/index.ts
---

export * from './card'
export * from './carousel'
export * from './chart'
export * from './code'
export * from './crop'
export * from './dashboard'
export * from './data'
export * from './designEditor'
export * from './dialog'
export * from './draw'
export * from './drawer'
export * from './editor'
export * from './form'
export * from './formEditor'
export * from './icon'
export * from './layout'
export * from './level'
export * from './list'
export * from './media'
export * from './modal'
export * from './panel'
export * from './posterEditor'
export * from './select'
export * from './stats'
export * from './status'
export * from './table'
export * from './tree'
export * from './upload'
export * from './widget'



---
File: /packages/pro/src/config/echart.ts
---

import type { HSL } from 'colorizr'
import type { ThemeRiverSeriesOption } from 'echarts'
import { generate } from '@ant-design/colors'

export function generateRainbowFromColor(hsl: HSL, numColors: number) {
  const baseHue = (Number(hsl.h) % 360 + 360) % 360
  const colors: string[] = []

  const harmonicIntervals = [0, 144, 72, 216, 36, 180, 108, 252, 18, 162]
  const targetSaturation = 60
  const targetLightness = 55

  if (numColors <= harmonicIntervals.length) {
    for (let i = 0; i < numColors; i++) {
      const hue = (baseHue + harmonicIntervals[i]) % 360
      colors.push(`hsla(${hue}, ${Math.round(targetSaturation)}%, ${Math.round(targetLightness)}%, 0.8)`)
    }
  }
  else {
    const goldenRatio = 137.508
    for (let i = 0; i < numColors; i++) {
      const hue = (baseHue + i * goldenRatio) % 360
      colors.push(`hsla(${hue}, ${Math.round(targetSaturation)}%, ${Math.round(targetLightness)}%, 0.8)`)
    }
  }

  return colors
}

export function getTheme(colors: string[], dark: boolean) {
  const colorLine = dark
    ? generate(colors[0], {
        theme: 'dark',
        backgroundColor: 'rgb(var(--ui-bg))',
      })
    : generate(colors[0], {
        backgroundColor: 'rgb(var(--ui-bg))',
      })

  const theme = {
    color: colors,
    backgroundColor: 'rgba(255,255,255,0)',
    textStyle: {},
    grid: {
      left: '10',
      right: '10',
      top: '10%',
      bottom: '5%',
      containLabel: true,
    },
    title: {
      textStyle: {
        fontSize: 16,
        fontWeight: '500',
        textAlign: 'left',
        color: 'rgb(var(--ui-text))',
      },
      subtextStyle: {
        color: 'rgb(var(--ui-text-muted))',
      },
    },

    line: {
      itemStyle: {
        borderWidth: '2',
      },
      lineStyle: {
        width: '2',
      },
      areaStyle: {
        opacity: 0.3,
      },
      symbolSize: '8',
      symbol: 'emptyCircle',
      smooth: false,
    },
    radar: {
      itemStyle: {
        borderWidth: '2',
      },
      lineStyle: {
        width: '2',
      },
      symbolSize: '6',
      symbol: 'emptyCircle',
      smooth: false,
      axisLine: {
        lineStyle: {
          color: 'rgb(var(--ui-text-muted))',
        },
      },
      splitLine: {
        lineStyle: {
          color: 'rgb(var(--ui-border-accented))',
        },
      },
      splitArea: {
        areaStyle: {
          color: [
            'rgba(250,250,250,0)',
            'rgb(var(--ui-bg-muted))',
          ],
        },
      },
    },
    bar: {
      itemStyle: {
        barBorderWidth: 0,
        barBorderColor: 'rgb(var(--ui-border-muted))',
        borderRadius: 0,
      },
    },
    pie: {
      itemStyle: {
        borderWidth: 1.5,
        borderColor: 'var(--ui-border)',
        borderRadius: 0,
      },
      label: {
        color: 'rgb(var(--ui-text))',
      },
    },
    scatter: {
      itemStyle: {
        borderWidth: 0,
        borderColor: 'rgb(var(--ui-border-muted))',
      },
    },
    boxplot: {
      itemStyle: {
        borderWidth: 0,
        borderColor: 'rgb(var(--ui-border-muted))',
      },
    },
    parallel: {
      itemStyle: {
        borderWidth: 0,
        borderColor: 'rgb(var(--ui-border-muted))',
      },
    },
    sankey: {
      itemStyle: {
        borderWidth: 0,
        borderColor: 'rgb(var(--ui-border-muted))',
      },
    },
    funnel: {
      itemStyle: {
        borderWidth: 2,
        borderColor: 'var(--ui-border)',
      },
      label: {
        color: 'rgb(var(--ui-text))',
      },
    },
    treemap: {
      itemStyle: {
        borderWidth: 2,
        borderColor: 'rgba(255,255,255,0)',
      },
      label: {
        color: 'rgb(var(--ui-color-white) / 0.8)',
      },
    },
    gauge: {
      itemStyle: {
        borderWidth: 0,
        borderColor: 'rgb(var(--ui-border-muted))',
      },
    },
    candlestick: {
      itemStyle: {
        color: '#e6a0d2',
        color0: 'transparent',
        borderColor: '#e6a0d2',
        borderColor0: '#3fb1e3',
        borderWidth: '2',
      },
    },
    graph: {
      itemStyle: {
        borderWidth: 0,
        borderColor: 'rgb(var(--ui-border-muted))',
      },
      lineStyle: {
        width: '1',
        color: 'rgb(var(--ui-border-muted))',
      },
      symbolSize: '8',
      symbol: 'emptyCircle',
      smooth: false,
      color: colors,
      label: {
        color: 'var(--ui-border)',
      },
    },
    map: {
      itemStyle: {
        areaColor: 'var(--ui-border)',
        borderColor: 'rgb(var(--n-gray-color-7))',
        borderWidth: 0.5,
      },
      label: {
        show: false,
        color: 'rgb(var(--ui-text))',
      },
      emphasis: {
        itemStyle: {
          areaColor: 'rgba(var(--ui-primary), 0.25)',
          borderColor: 'rgb(var(--ui-primary))',
          borderWidth: 1,
        },
        label: {
          color: 'rgb(var(--ui-primary))',
        },
      },
    },
    geo: {
      itemStyle: {
        areaColor: 'var(--ui-border)',
        borderColor: 'rgb(var(--ui-border-muted))',
        borderWidth: 0.5,
      },
      label: {
        color: 'var(--ui-border)',
      },
      emphasis: {
        itemStyle: {
          areaColor: 'rgba(var(--ui-primary), 0.25)',
          borderColor: 'rgb(var(--ui-primary))',
          borderWidth: 1,
        },
        label: {
          color: 'rgb(var(--ui-primary))',
        },
      },
    },
    categoryAxis: {
      axisLine: {
        show: true,
        lineStyle: {
          color: 'rgb(var(--ui-border-accented))',
        },
      },
      axisTick: {
        show: false,
        lineStyle: {
          color: 'rgb(var(--ui-border-accented))',
        },
      },
      axisLabel: {
        show: true,
        color: 'rgb(var(--ui-text-muted))',
      },
      splitLine: {
        show: false,
        lineStyle: {
          color: [
            'rgb(var(--ui-border-accented))',
          ],
        },
      },
      splitArea: {
        show: false,
        areaStyle: {
          color: [
            'rgba(250,250,250,0)',
            'rgb(var(--ui-bg-muted))',
          ],
        },
      },
    },
    valueAxis: {
      axisLine: {
        show: true,
        lineStyle: {
          color: 'rgb(var(--ui-border-accented))',
        },
      },
      axisTick: {
        show: false,
        lineStyle: {
          color: 'rgb(var(--ui-border-accented))',
        },
      },
      axisLabel: {
        show: true,
        color: 'rgb(var(--ui-text-muted))',
      },
      splitLine: {
        show: true,
        lineStyle: {
          color: [
            'rgb(var(--ui-border-accented))',
          ],
        },
      },
      splitArea: {
        show: true,
        areaStyle: {
          color: [
            'rgba(250,250,250,0)',
            'rgb(var(--ui-bg-muted))',
          ],
        },
      },
    },
    logAxis: {
      axisLine: {
        show: true,
        lineStyle: {
          color: 'rgb(var(--ui-border-accented))',
        },
      },
      axisTick: {
        show: false,
        lineStyle: {
          color: 'rgb(var(--ui-border-accented))',
        },
      },
      axisLabel: {
        show: true,
        color: 'rgb(var(--ui-text-muted))',
      },
      splitLine: {
        show: true,
        lineStyle: {
          color: [
            'rgb(var(--ui-border-accented))',
          ],
        },
      },
      splitArea: {
        show: false,
        areaStyle: {
          color: [
            'rgba(250,250,250,0)',
            'rgb(var(--ui-bg-muted))',
          ],
        },
      },
    },
    timeAxis: {
      axisLine: {
        show: true,
        lineStyle: {
          color: 'rgb(var(--ui-border-accented))',
        },
      },
      axisTick: {
        show: false,
        lineStyle: {
          color: 'rgb(var(--ui-border-accented))',
        },
      },
      axisLabel: {
        show: true,
        color: 'rgb(var(--ui-text-muted))',
      },
      splitLine: {
        show: true,
        lineStyle: {
          color: [
            'rgb(var(--ui-border-accented))',
          ],
        },
      },
      splitArea: {
        show: false,
        areaStyle: {
          color: [
            'rgba(250,250,250,0)',
            'rgb(var(--ui-bg-muted))',
          ],
        },
      },
    },
    toolbox: {
      iconStyle: {
        borderColor: 'rgb(var(--ui-border-muted))',
      },
      emphasis: {
        iconStyle: {
          borderColor: 'rgb(var(--ui-border-muted))',
        },
      },
    },
    legend: {
      textStyle: {
        color: 'rgb(var(--ui-text-muted))',
      },
    },
    tooltip: {
      backgroundColor: 'rgb(var(--ui-bg) / 0.8)',
      shadowBlur: 10,
      borderWidth: 0,
      textStyle: {
        color: 'rgb(var(--ui-text))',
      },
      axisPointer: {
        lineStyle: {
          color: 'rgb(var(--ui-border-muted))',
          width: 1,
        },
        crossStyle: {
          color: 'rgb(var(--ui-border-muted))',
          width: 1,
        },
      },
    },
    timeline: {
      lineStyle: {
        color: 'rgb(var(--ui-primary))',
        width: 1,
      },
      itemStyle: {
        color: 'rgb(var(--ui-primary))',
        borderWidth: 1,
      },
      controlStyle: {
        color: 'rgb(var(--ui-primary))',
        borderColor: 'rgb(var(--ui-primary))',
        borderWidth: 0.5,
      },
      checkpointStyle: {
        color: 'rgb(var(--ui-primary))',
        borderColor: 'rgb(var(--ui-primary))',
      },
      label: {
        color: 'rgb(var(--ui-primary))',
      },
      emphasis: {
        itemStyle: {
          color: 'rgb(var(--ui-primary))',
        },
        controlStyle: {
          color: 'rgb(var(--ui-primary))',
          borderColor: 'rgb(var(--ui-primary))',
          borderWidth: 0.5,
        },
        label: {
          color: 'rgb(var(--ui-primary))',
        },
      },
    },
    visualMap: {
      color: colorLine,
    },
    dataZoom: {
      backgroundColor: 'rgba(255,255,255,0)',
      dataBackgroundColor: 'rgba(222,222,222,1)',
      fillerColor: 'rgba(114,230,212,0.25)',
      handleColor: 'rgb(var(--ui-border-muted))',
      handleSize: '100%',
      textStyle: {
        color: 'rgb(var(--ui-text-muted))',
      },
    },
    markPoint: {
      label: {
        color: 'rgb(var(--ui-text))',
      },
      emphasis: {
        label: {
          color: 'rgb(var(--ui-text))',
        },
      },
    },
  } as ThemeRiverSeriesOption

  return theme
}



---
File: /packages/pro/src/config/index.ts
---

export * from './echart'
export * from './uno'
export * from './validate'



---
File: /packages/pro/src/config/uno.ts
---

import type { UserConfig } from 'unocss'
import presetIcons from '@unocss/preset-icons/browser'
import presetTypography from '@unocss/preset-typography'
import { presetWind4 } from 'unocss/preset-wind4'

import { presetTheme } from '../theme'

export function config(build?: boolean) {
  const config: UserConfig = {
    presets: [
      presetWind4({
        preflights: {
          reset: build,
          theme: build,
        },
      }),
      presetIcons({
        collections: {
          tabler: () => import('@iconify-json/tabler/icons.json').then(i => i.default),
        },
      }),
      presetTypography(),
      presetTheme(),
    ],
  }

  if (!build) {
    config.preflights = [
      {
        getCSS: () => import('../theme/uno.css?raw').then(i => i.default),
      },
    ]
  }

  return config
}



---
File: /packages/pro/src/config/validate.ts
---

import { localize } from '@vee-validate/i18n'
import en from '@vee-validate/i18n/dist/locale/en.json'
import zh from '@vee-validate/i18n/dist/locale/zh_CN.json'
import { configure } from 'vee-validate'

export function initVeeValidate() {
  configure({
    generateMessage: localize({
      'en-US': en,
      'zh-CN': zh,
    }),
  })
}



---
File: /packages/pro/src/hooks/table/color.tsx
---

import { findKey, get } from 'lodash-es'

export type ColumnColorType = 'success' | 'error' | 'warning' | 'info' | 'default'

export interface ColumnColorTypeValue {
  label?: string
  icon?: string
  value?: any
}

export interface useTableColumnColorProps {
  key?: string
  maps?: Partial<Record<ColumnColorType, ColumnColorTypeValue>>
}

export function useTableColumnColor() {
  const render = (props: useTableColumnColorProps) => {
    return (rowData: Record<string, any>, _rowIndex: number) => {
      const key = props?.key || 'status'

      const type = findKey(props.maps, (v) => {
        if (!v) {
          return false
        }
        return key ? v?.value === get(rowData, key) : 'default'
      }) as ColumnColorType | undefined

      const item = type ? props.maps?.[type] : undefined

      return item
        ? (
            <div class={[
              'flex gap-1 items-center',
              `text-${type}`,
            ]}
            >
              {item.icon ? <div class={`size-4 ${item.icon}`}></div> : null}
              <span class="text-sm">{item?.label}</span>
            </div>
          )
        : null
    }
  }

  return {
    render,
  }
}



---
File: /packages/pro/src/hooks/table/column.ts
---

import { useManage } from '@duxweb/dvha-core'
import { useTableColumnColor } from './color'
import { useTableColumnCopy } from './copy'
import { useTableColumnHidden } from './hidden'
import { useTableColumnImage } from './image'
import { useTableColumnInput } from './input'
import { useTableColumnMap } from './map'
import { useTableColumnMedia } from './media'
import { useTableColumnStatus } from './status'
import { useTableColumnSwitch } from './switch'

export interface UseTableColumnProps {
  rowKey?: string
  path?: string | ((rowData: Record<string, any>) => string)
}

export function useTableColumn(props?: UseTableColumnProps) {
  const { getPath } = useManage()

  const path = props?.path || getPath()
  const rowKey = props?.rowKey || 'id'

  const columnMedia = useTableColumnMedia()
  const columnImage = useTableColumnImage()
  const columnSwitch = useTableColumnSwitch({
    path,
    rowKey,
  })

  const columnStatus = useTableColumnStatus()
  const columnColor = useTableColumnColor()
  const columnMap = useTableColumnMap()
  const columnInput = useTableColumnInput({
    path,
    rowKey,
  })
  const columnCopy = useTableColumnCopy()
  const columnHidden = useTableColumnHidden()

  return {
    renderMedia: columnMedia.render,
    renderImage: columnImage.render,
    renderSwitch: columnSwitch.render,
    renderStatus: columnStatus.render,
    renderMap: columnMap.render,
    renderInput: columnInput.render,
    renderCopy: columnCopy.render,
    renderHidden: columnHidden.render,
    renderColor: columnColor.render,
  }
}



---
File: /packages/pro/src/hooks/table/copy.tsx
---

import { useI18n } from '@duxweb/dvha-core'
import { useClipboard } from '@vueuse/core'
import { get } from 'lodash-es'
import { useMessage } from 'naive-ui'

export interface UseTableColumnCopyProps {
  key?: string
}

export function useTableColumnCopy() {
  const { t } = useI18n()
  const message = useMessage()
  const { copy } = useClipboard()

  const render = (props: UseTableColumnCopyProps) => {
    return (rowData: Record<string, any>, _rowIndex: number) => {
      const value = get(rowData, props.key || '')

      return (
        <div class="flex">
          {value && value !== '-'
            ? (
                <div
                  class="flex justify-start items-center gap-1"
                >
                  <div>
                    {value}
                  </div>
                  <div
                    class="cursor-pointer i-tabler:copy size-4 text-muted hover:text-primary"
                    onClick={() => {
                      copy(value).then(() => message.success(t('hooks.table.copySuccess') as string)).catch(() => message.error(t('hooks.table.copyFailed') as string))
                    }}
                  />
                </div>
              )
            : '-'}
        </div>
      )
    }
  }

  return {
    render,
  }
}



---
File: /packages/pro/src/hooks/table/hidden.tsx
---

import { get } from 'lodash-es'
import { defineComponent, ref } from 'vue'

const TableColumnHidden = defineComponent({
  name: 'TableColumnHidden',
  props: {
    value: {
      type: String,
      default: '',
    },
    percent: {
      type: Number,
      default: 30,
    },
  },
  setup(props) {
    const isHidden = ref(true)

    return () => {
      return props.value
        ? (
            <div
              class="flex justify-start items-center gap-1"

            >
              <div class="font-mono">
                {isHidden.value ? hidden(props.value, props.percent) : props.value}
              </div>
              <div
                class={[
                  'cursor-pointer  size-4 text-muted hover:text-primary transition-all duration-150',
                  isHidden.value ? 'i-tabler:eye' : 'i-tabler:eye-off',
                ]}
                onClick={() => {
                  isHidden.value = !isHidden.value
                }}
              />
            </div>
          )
        : '-'
    }
  },
})

export interface UseTableColumnHiddenProps {
  key?: string
  percent?: number
}

export function useTableColumnHidden() {
  const render = (props: UseTableColumnHiddenProps) => {
    return (rowData: Record<string, any>, _rowIndex: number) => {
      const value = get(rowData, props.key || '')

      return (
        <TableColumnHidden value={value} percent={props.percent} />
      )
    }
  }

  return {
    render,
  }
}

function hidden(value: string, percent: number = 30) {
  if (!value || value.length < 4) {
    return value
  }

  const totalLength = value.length
  // 计算需要隐藏的长度
  const hideLength = Math.ceil(totalLength * percent / 100)
  // 计算开始隐藏的位置，尽量在中间位置开始隐藏
  const startHideIndex = Math.floor((totalLength - hideLength) / 2)

  // 构建隐藏后的字符串
  return value.slice(0, startHideIndex) + '*'.repeat(hideLength) + value.slice(startHideIndex + hideLength)
}



---
File: /packages/pro/src/hooks/table/image.tsx
---

import { get } from 'lodash-es'
import { NImage } from 'naive-ui'
import { h } from 'vue'
import { DuxPlaceholder } from '../../components'

export interface UseTableColumnImageProps {
  key?: string
  imageWidth?: number
  imageHeight?: number
}

export function useTableColumnImage() {
  const render = (props: UseTableColumnImageProps) => {
    return (rowData: Record<string, any>, _rowIndex: number) => {
      let value = get(rowData, props.key || '') || []
      value = Array.isArray(value) ? value : [value]

      return (
        <div class="flex flex-wrap gap-2">
          {value.length > 0
            ? value.map((item, index) => (
                <NImage
                  key={index}
                  src={item}
                  width={props.imageWidth || 40}
                  height={props.imageHeight || 40}
                  objectFit="cover"
                  fallbackSrc="data:image/svg+xml;base64,"
                >
                  {{
                    placeholder: () => h(DuxPlaceholder, {
                      width: props.imageWidth || 40,
                      height: props.imageHeight || 40,
                    }),
                    error: () => h(DuxPlaceholder, {
                      width: props.imageWidth || 40,
                      height: props.imageHeight || 40,
                    }),
                  }}
                </NImage>
              ))
            : (
                <DuxPlaceholder height={40} />
              )}
        </div>
      )
    }
  }

  return {
    render,
  }
}



---
File: /packages/pro/src/hooks/table/index.ts
---

export * from './color'
export * from './column'
export * from './image'
export * from './map'
export * from './media'
export * from './status'
export * from './switch'
export * from './types'



---
File: /packages/pro/src/hooks/table/input.tsx
---

import type { Component, PropType } from 'vue'
import type { UseTableColumnProps } from './column'
import { useCustomMutation } from '@duxweb/dvha-core'
import { useI18n } from '@duxweb/dvha-core'
import { get } from 'lodash-es'
import { NButton, NInput, useMessage } from 'naive-ui'
import { defineComponent, h, ref } from 'vue'

const TableColumnInput = defineComponent({
  name: 'TableColumnInput',
  props: {
    data: {
      type: Object,
      required: true,
    },
    field: {
      type: String,
      default: '',
    },
    path: {
      type: String,
      required: true,
    },
    tag: {
      type: Object as PropType<Component>,
    },
  },
  setup(props) {
    const { t } = useI18n()
    const isEditing = ref(false)
    const inputValue = ref('')

    const { mutateAsync } = useCustomMutation()
    const message = useMessage()

    const saveValue = (v: string) => {
      mutateAsync({
        path: props.path,
        method: 'PATCH',
        payload: {
          [props.field]: v,
        },
      }).then(() => {
        message.success(t('hooks.table.saveSuccess') as string)
      }).catch((e) => {
        message.error(e.message)
      })
    }

    return () => {
      return isEditing.value
        ? (
            <div class="flex gap-2">
              <div>
                {h(props.tag || NInput, {
                  'value': inputValue.value,
                  'onUpdate:value': (val: string) => inputValue.value = val,
                  'autofocus': true,
                })}
              </div>
              <NButton
                type="primary"
                onClick={() => {
                  if (inputValue.value !== props.data[props.field]) {
                    saveValue(inputValue.value)
                  }
                  else {
                    isEditing.value = false
                  }
                }}
                renderIcon={() => <div class="size-4 i-tabler:check"></div>}
              >
              </NButton>
            </div>
          )
        : (
            <div class="flex">
              <div
                class="flex justify-start items-center gap-1"

              >
                <div>
                  {props.data[props.field] === undefined || props.data[props.field] === '' ? '-' : props.data[props.field]}
                </div>
                <div
                  class="cursor-pointer i-tabler:pencil size-4 text-muted hover:text-primary"
                  onClick={() => {
                    inputValue.value = props.data[props.field]
                    isEditing.value = true
                  }}
                />
              </div>
            </div>
          )
    }
  },
})

export interface UseTableColumnInputProps {
  key?: string
  tag?: Component
}

export function useTableColumnInput(columnProps?: UseTableColumnProps) {
  const render = (props: UseTableColumnInputProps) => {
    return (rowData: Record<string, any>, _rowIndex: number) => {
      const path = typeof columnProps?.path === 'function' ? columnProps?.path(rowData) : `${columnProps?.path}/${get(rowData, columnProps?.rowKey || 'id')}`

      return (
        <TableColumnInput
          data={rowData}
          field={props.key}
          path={path}
          tag={props.tag}
        />
      )
    }
  }

  return {
    render,
  }
}



---
File: /packages/pro/src/hooks/table/map.tsx
---

import type { VNodeChild } from 'vue'
import { get } from 'lodash-es'

export interface ColumnMapTypeValue {
  icon?: string
  label?: string
  key?: string
  render?: (value: any) => VNodeChild
}

export interface useTableColumnMapProps {
  maps?: ColumnMapTypeValue[] | ((rowData: any) => ColumnMapTypeValue[])
}

export function useTableColumnMap() {
  const render = (props: useTableColumnMapProps) => {
    return (rowData: Record<string, any>, _rowIndex: number) => {
      const mapsData = typeof props.maps === 'function' ? props.maps(rowData) : props.maps

      return (
        <div class="flex flex-col gap-1">
          {mapsData?.map(item => (
            <div class="flex gap-2 ">
              <div class="flex text-muted items-center gap-1 whitespace-nowrap">
                {item.icon && (
                  <div class={[
                    'size-4',
                    item.icon,
                  ]}
                  >
                  </div>
                )}
                {item.label}

              </div>
              <div>{item?.render ? item.render(get(rowData, item.key || '')) : get(rowData, item.key || '') || '-'}</div>
            </div>
          ))}
        </div>
      )
    }
  }

  return {
    render,
  }
}



---
File: /packages/pro/src/hooks/table/media.tsx
---

import type { VNode } from 'vue'
import { get } from 'lodash-es'
import { DuxMedia } from '../../components'

export interface UseTableColumnMediaProps {
  image?: string | string[] | ((rowData: Record<string, any>) => VNode | string | string[])
  avatar?: boolean
  title?: string | ((rowData: Record<string, any>) => VNode | string)
  desc?: string | string[] | ((rowData: Record<string, any>) => VNode | string | string[])
  imageWidth?: number
  imageHeight?: number
}

export function useTableColumnMedia() {
  const render = (props: UseTableColumnMediaProps) => {
    return (rowData: Record<string, any>, _rowIndex: number) => {
      const title = typeof props.title === 'function' ? props.title(rowData) : get(rowData, props.title || '')
      const desc = typeof props.desc === 'function' ? props.desc(rowData) : get(rowData, props.desc || '')
      const image = typeof props.image === 'function' ? props.image(rowData) : get(rowData, props.image || '')

      return (
        <DuxMedia
          title={title}
          desc={desc}
          avatar={props.avatar}
          image={image}
          imageWidth={props.imageWidth}
          imageHeight={props.imageHeight}
        />
      )
    }
  }

  return {
    render,
  }
}



---
File: /packages/pro/src/hooks/table/status.tsx
---

import { findKey, get } from 'lodash-es'
import { NTag } from 'naive-ui'

export type ColumnStatusType = 'success' | 'error' | 'warning' | 'info' | 'default'

export interface ColumnStatusTypeValue {
  label?: string
  value?: any
}

export interface useTableColumnStatusProps {
  key?: string
  maps?: Partial<Record<ColumnStatusType, ColumnStatusTypeValue>>
}

export function useTableColumnStatus() {
  const render = (props: useTableColumnStatusProps) => {
    return (rowData: Record<string, any>, _rowIndex: number) => {
      const key = props?.key || 'status'

      const type = findKey(props.maps, (v) => {
        if (!v) {
          return false
        }
        return key ? v?.value === get(rowData, key) : 'default'
      }) as ColumnStatusType | undefined

      const item = type ? props.maps?.[type] : undefined

      return item
        ? (
            <NTag round bordered={true} type={type}>
              {{
                icon: () => {
                  return (
                    <>
                      {type === 'success' && <div class="n-icon i-tabler:circle-check-filled"></div>}
                      {type === 'error' && <div class="n-icon i-tabler:circle-x-filled"></div>}
                      {type === 'warning' && <div class="n-icon i-tabler:exclamation-circle-filled"></div>}
                      {(type === 'default' || type === 'info') && <div class="n-icon i-tabler:info-circle-filled"></div>}
                    </>
                  )
                },
                default: () => <span class="text-sm">{item?.label}</span>,
              }}
            </NTag>
          )
        : null
    }
  }

  return {
    render,
  }
}



---
File: /packages/pro/src/hooks/table/switch.tsx
---

import type { UseTableColumnProps } from './column'
import { useCustomMutation } from '@duxweb/dvha-core'
import { get } from 'lodash-es'
import { NSwitch, useMessage } from 'naive-ui'

export interface useTableColumnSwitchProps {
  key?: string
}

export function useTableColumnSwitch(columnProps?: UseTableColumnProps) {
  const { mutateAsync } = useCustomMutation()
  const message = useMessage()

  const render = (props: useTableColumnSwitchProps) => {
    return (rowData: Record<string, any>, _rowIndex: number) => {
      const rowKey = props.key || 'status'
      const path = typeof columnProps?.path === 'function' ? columnProps?.path(rowData) : `${columnProps?.path}/${get(rowData, columnProps?.rowKey || 'id')}`
      return (
        <NSwitch
          value={!!rowData[rowKey]}
          onUpdateValue={(v) => {
            rowData[rowKey] = v
            mutateAsync({
              path,
              method: 'PATCH',
              payload: {
                [rowKey]: v,
              },
            }).then(() => {
              rowData[rowKey] = v
            }).catch((e) => {
              rowData[rowKey] = !v
              message.error(e.message)
            })
          }}
        />
      )
    }
  }

  return {
    render,
  }
}



---
File: /packages/pro/src/hooks/table/types.ts
---

import type { ButtonProps } from 'naive-ui'
import type { AsyncComponentLoader } from 'vue'

// 基础属性接口
export interface BaseActionItem {
  label?: string
  title?: string
  icon?: string
  color?: ButtonProps['type']
  show?: (rowData?: Record<string, any>, rowIndex?: number) => boolean
}

// 模态框类型
export interface ModalActionItem extends BaseActionItem {
  type: 'modal'
  component: AsyncComponentLoader<any>
  componentProps?: Record<string, any> | ((data: any) => Record<string, any>)
  width?: number
  draggable?: boolean
}

// 抽屉类型
export interface DrawerActionItem extends BaseActionItem {
  type: 'drawer'
  component: AsyncComponentLoader<any>
  componentProps?: Record<string, any> | ((data: any) => Record<string, any>)
  width?: number
  maxWidth?: number
}

// 链接类型
export interface LinkActionItem extends BaseActionItem {
  type: 'link'
  path?: string | ((id?: unknown, item?: Record<string, any>) => string)
}

// 确认框类型
export interface ConfirmActionItem extends BaseActionItem {
  type: 'confirm'
  callback: (id?: unknown, item?: Record<string, any>) => void
  content?: string
}

// 请求类型
export interface RequestActionItem extends BaseActionItem {
  type: 'request'
  method?: 'get' | 'post' | 'put' | 'patch' | 'delete'
  path: string | ((id?: unknown, item?: Record<string, any>) => string)
  data?: Record<string, any> | ((id?: unknown, item?: Record<string, any>) => Record<string, any>)
  content?: string
}

// 删除类型
export interface DeleteActionItem extends BaseActionItem {
  type: 'delete'
  content?: string
  path?: string | ((id?: unknown, item?: Record<string, any>) => string)
}

// 回调类型
export interface CallbackActionItem extends BaseActionItem {
  type: 'callback'
  callback: (id?: unknown, item?: Record<string, any>) => void
}

// 联合类型
export type UseActionItem
  = | ModalActionItem
    | DrawerActionItem
    | LinkActionItem
    | ConfirmActionItem
    | RequestActionItem
    | DeleteActionItem
    | CallbackActionItem

export interface UseActionProps {
  items: UseActionItem[]
  type?: 'button' | 'dropdown'
  align?: 'left' | 'center' | 'right'
  text?: boolean
  path?: string
  key?: string
}

export interface UseActionTarget {
  id?: unknown
  item: UseActionItem
  data?: Record<string, any>
}

export interface UseActionRender {
  id?: unknown
  data?: Record<string, any>
  index?: number
}

export interface UseActionRenderProps {
  action: UseActionProps
  id?: unknown
  index?: number
  data?: Record<string, any>
  text?: boolean
  align?: 'left' | 'center' | 'right'
  target?: (target: UseActionTarget) => void
}



---
File: /packages/pro/src/hooks/action.tsx
---

import type { DropdownOption } from 'naive-ui'
import type { VNodeChild } from 'vue'
import type {
  UseActionProps,
  UseActionRenderProps,
  UseActionTarget,
} from './table/index'
import { useCustomMutation, useDelete, useI18n, useManage } from '@duxweb/dvha-core'
import { NButton, NDropdown, useMessage } from 'naive-ui'
import { h } from 'vue'
import { useRouter } from 'vue-router'
import { useDialog } from './dialog'
import { useDrawer } from './drawer'
import { useModal } from './modal'

export function useAction(action?: UseActionProps) {
  const modal = useModal()
  const drawer = useDrawer()
  const dialog = useDialog()
  const { t } = useI18n()
  const message = useMessage()
  const manage = useManage()
  const router = useRouter()

  const mutation = useCustomMutation({
    onSuccess: (data) => {
      message.success(data.message || (t('common.success') as string))
    },
    onError: (error) => {
      message.error(error.message || (t('common.error') as string))
    },
  })

  const deleteMutation = useDelete({
    onSuccess: (data) => {
      message.success(data.message || (t('common.success') as string))
    },
    onError: (error) => {
      message.error(error.message || (t('common.error') as string))
    },
  })

  const actionPath = action?.path || manage.getPath()

  const target = (props: UseActionTarget) => {
    const title = t(props.item.title || '', {}, props.item.title)
    const label = t(props.item.label || '', {}, props.item.label)

    if (props.item.type === 'modal') {
      const item = props.item
      const componentProps = typeof item.componentProps === 'function' ? item.componentProps(props.data) : item.componentProps
      modal.show({
        title: title || label,
        component: item.component,
        componentProps: {
          id: props.id,
          ...componentProps,
        },
        width: item.width,
        draggable: item.draggable !== undefined ? item.draggable : true,
      })
    }

    if (props.item.type === 'drawer') {
      const item = props.item
      const componentProps = typeof item.componentProps === 'function' ? item.componentProps(props.data) : item.componentProps
      drawer.show({
        title: title || label,
        component: item.component,
        componentProps: {
          id: props.id,
          ...componentProps,
        },
        width: item.width,
        maxWidth: item.maxWidth,
      })
    }

    if (props.item.type === 'confirm') {
      const item = props.item
      dialog.confirm({
        title: title || label,
        content: item.content,
      }).then((res) => {
        if (res) {
          item.callback?.(props.id, props.data)
        }
      })
    }

    if (props.item.type === 'request') {
      const item = props.item
      dialog.confirm({
        title: title || label,
        content: item.content,
      }).then(() => {
        const data = typeof item.data === 'function' ? item.data(props.id, props.data) : item.data
        const methodName = (item.method || 'post').toLowerCase()
        const path = typeof item.path === 'function' ? item.path(props.id, props.data) : item.path || actionPath
        mutation.mutate({
          path,
          method: methodName,
          payload: data,
        })
      })
    }

    if (props.item.type === 'delete') {
      const item = props.item
      dialog.confirm({
        title: title || label,
        content: item.content,
      }).then(() => {
        deleteMutation.mutate({
          id: props.id as string,
          path: typeof item.path === 'function' ? item.path(props.id, props.data) : item.path || actionPath,
        })
      })
    }

    if (props.item.type === 'link') {
      const item = props.item
      let path = typeof item.path === 'function' ? item.path?.(props.id, props.data) : props.id ? `${item.path || actionPath}${props.data === undefined ? '' : `/${props.id}`}` : item.path || actionPath

      if (!path.startsWith('/')) {
        path = manage.getRoutePath(path)
      }

      router.push(path)
    }

    if (props.item.type === 'callback') {
      const item = props.item
      item.callback?.(props.id, props.data)
    }
  }

  const button = useActionButton()
  const dropdown = useActionDropdown()

  const renderTable = (actionRender: UseActionProps): ((rowData: Record<string, any>, rowIndex: number) => VNodeChild) => {
    return (rowData: Record<string, any>, rowIndex: number) => {
      const props = {
        id: rowData[actionRender.key || action?.key || 'id'],
        data: rowData,
        index: rowIndex,
        target,
        text: actionRender.text !== undefined ? actionRender.text : action?.text || false,
        align: actionRender.align !== undefined ? actionRender.align : action?.align || 'left',
      }

      return (actionRender.type || action?.type) === 'button'
        ? button.render({ ...props, action: actionRender || action })
        : dropdown.render({ ...props, action: actionRender || action })
    }
  }

  const renderAction = (actionRender: UseActionProps): VNodeChild => {
    const props = {
      target,
      text: actionRender.text !== undefined ? actionRender.text : action?.text || false,
      align: actionRender.align !== undefined ? actionRender.align : action?.align || 'left',
    }

    return (actionRender.type || action?.type) === 'button'
      ? button.render({ ...props, action: actionRender || action })
      : dropdown.render({ ...props, action: actionRender || action })
  }

  return {
    target,
    renderTable,
    renderAction,
  }
}

export function useActionButton() {
  const { t } = useI18n()

  const render = (props: UseActionRenderProps) => {
    const items = props.action.items?.filter(item => !item.show || item.show?.(props.data, props.index)).map((item, index) => {
      return h(NButton, {
        key: index,
        type: item.color || (item.type === 'delete' ? 'error' : 'primary'),
        text: props.text,
        secondary: !props.text,
        onClick: () => {
          props?.target?.({
            id: props.id,
            data: props.data,
            item,
          })
        },
        renderIcon: item.icon
          ? () => h('div', {
              class: ['n-icon', item.icon],
            })
          : undefined,
      }, () => t(item.label || '', {}, item.label))
    })

    return h('div', {
      class: ['flex gap-2 flex-wrap items-center', props.align === 'right' ? 'justify-end' : props.align === 'center' ? 'justify-center' : 'justify-start'],
    }, items)
  }

  return {
    render,
  }
}

export function useActionDropdown() {
  const { t } = useI18n()

  const render = (props: UseActionRenderProps) => {
    const options: DropdownOption[] = props.action.items?.filter(item => !item.show || item.show?.(props.data, props.index)).map((item, index) => {
      return {
        label: t(item.label || '', {}, item.label),
        key: index,
        icon: item.icon
          ? () => h('div', {
              class: ['n-icon', item.icon],
            })
          : undefined,
        onSelect: () => {
          props?.target?.({
            id: props.id,
            data: props.data,
            item,
          })
        },
      } as DropdownOption
    })

    return h(NDropdown, {
      trigger: 'click',
      options,
      onSelect: (_key, option: any) => {
        option?.onSelect?.()
      },
    }, () => [
      h('div', {
        class: [
          'flex items-center',
          props.align === 'right' ? 'justify-end' : props.align === 'center' ? 'justify-center' : 'justify-start',
        ],
      }, h(NButton, {
        type: 'default',
        text: props.text,
        secondary: !props.text,
        renderIcon: () => h('div', {
          class: ['n-icon', 'i-tabler:dots-vertical'],
        }),
      })),
    ])
  }

  return {
    render,
  }
}



---
File: /packages/pro/src/hooks/dialog.tsx
---

import type { JsonSchemaData } from '@duxweb/dvha-core'
import type { VNode } from 'vue'
import { useOverlayInject } from '@overlastic/vue'
import { DuxDialog } from '../components'

export interface UseDialogResult {
  confirm: (props: UseDialogProps) => Promise<any>
  success: (props: UseDialogProps) => Promise<any>
  error: (props: UseDialogProps) => Promise<any>
  node: (props: UseDialogProps) => Promise<any>
  prompt: (props: UseDialogProps) => Promise<any>
}
export interface UseDialogProps {
  title?: string
  content?: string
  type?: 'confirm' | 'error' | 'success' | 'prompt' | 'node'
  formSchema?: JsonSchemaData
  defaultValue?: Record<string, any>
  render?: () => VNode
}

export function useDialog(): UseDialogResult {
  const create = useOverlayInject(DuxDialog)

  const show = (props: UseDialogProps) => {
    return create(props)
  }

  const confirm = (props: UseDialogProps) => {
    return show({ ...props, type: 'confirm' })
  }
  const success = (props: UseDialogProps) => {
    return show({ ...props, type: 'success' })
  }
  const error = (props: UseDialogProps) => {
    return show({ ...props, type: 'error' })
  }
  const prompt = (props: UseDialogProps) => {
    return show({ ...props, type: 'prompt' })
  }
  const node = (props: UseDialogProps) => {
    return show({ ...props, type: 'node' })
  }

  return {
    confirm,
    success,
    error,
    prompt,
    node,
  }
}



---
File: /packages/pro/src/hooks/download.ts
---

import { useClient } from '@duxweb/dvha-core'
import { useI18n } from '@duxweb/dvha-core'
import dayjs from 'dayjs'
import mime from 'mime'
import { useMessage } from 'naive-ui'
import { ref } from 'vue'

export interface IDownloadProgress {
  loaded: number
  total?: number
  percent?: number
  speed?: number
  speedText?: string
  remainingTime?: number
}

export function useDownload() {
  const { t } = useI18n()
  const client = useClient()
  const loading = ref(false)
  const progress = ref<IDownloadProgress>({
    loaded: 0,
    total: 0,
    percent: 0,
    speed: 0,
    speedText: '0 B/s',
    remainingTime: 0,
  })
  const message = useMessage()

  const formatSpeed = (bytesPerSecond: number): string => {
    if (bytesPerSecond === 0)
      return '0 B/s'
    const units = ['B/s', 'KB/s', 'MB/s', 'GB/s']
    const i = Math.floor(Math.log(bytesPerSecond) / Math.log(1024))
    return `${(bytesPerSecond / 1024 ** i).toFixed(1)} ${units[i]}`
  }

  const blob = (blobData: Blob, filename?: string) => {
    // blob 下载
    const url = window.URL || window.webkitURL
    const href = url.createObjectURL(blobData)
    const a = document.createElement('a')
    a.href = href
    a.download = filename || ''
    document.body.appendChild(a)
    a.click()
    document.body.removeChild(a)
    url.revokeObjectURL(href)
  }

  const url = (urlString: string, filename?: string) => {
    const a = document.createElement('a')
    a.href = urlString
    a.download = filename || ''
    document.body.appendChild(a)
    a.click()
    document.body.removeChild(a)
  }

  const image = (urlString: string) => {
    fetch(urlString).then((res) => {
      res.blob().then((e) => {
        blob(e)
      })
    }).catch((e) => {
      message.error(e.error || (t('hooks.download.failed') as string))
    })
  }

  const base64 = (base64String: string, filename: string) => {
    // base64下载
    const byteCharacters = atob(base64String.split(',')[1])
    const byteNumbers = Array.from({ length: byteCharacters.length })
    for (let i = 0; i < byteCharacters.length; i++) {
      byteNumbers[i] = byteCharacters.charCodeAt(i)
    }
    const byteArray = new Uint8Array(byteNumbers as any)
    const e = new Blob([byteArray], { type: 'application/octet-stream' })

    blob(e, filename)
  }

  const file = (
    path: string,
    params?: Record<string, any>,
    contentType?: string,
    filename?: string,
    onProgress?: (progress: IDownloadProgress) => void,
  ) => {
    loading.value = true

    // 重置进度
    progress.value = {
      loaded: 0,
      total: 0,
      percent: 0,
      speed: 0,
      speedText: '0 B/s',
      remainingTime: 0,
    }

    const startTime = Date.now()

    client.request({
      path,
      method: 'GET',
      query: params,
      onDownloadProgress: (progressData) => {
        const currentTime = Date.now()
        const elapsedTimeMs = currentTime - startTime
        const elapsedTimeSeconds = elapsedTimeMs / 1000

        const speed = elapsedTimeSeconds > 0 ? progressData.loaded / elapsedTimeSeconds : 0
        const remainingBytes = (progressData.total || 0) - progressData.loaded
        const remainingTime = speed > 0 ? remainingBytes / speed : 0

        const progressInfo: IDownloadProgress = {
          loaded: progressData.loaded,
          total: progressData.total,
          percent: progressData.percent || 0,
          speed: Math.round(speed),
          speedText: formatSpeed(speed),
          remainingTime: Math.round(remainingTime),
        }

        progress.value = progressInfo
        onProgress?.(progressInfo)
      },
    }).then((e) => {
      const type = contentType || e.data.headers['content-type']
      const contentDisposition = e.data.headers['content-disposition']

      if (!filename) {
        filename = dayjs().format('YYYY-MM-DD-HH:mm:ss')
        if (type) {
          filename = `${filename}.${mime.getExtension(type)}`
        }
      }

      if (contentDisposition) {
        const matches = /filename=["']?([^"']+)/.exec(contentDisposition)
        if (matches && matches?.length > 1) {
          filename = decodeURIComponent(matches[1])
        }
      }

      const blobData = e.data?.data instanceof Blob ? e.data?.data : new Blob([e.data?.data], { type: type || 'application/octet-stream' })
      blob(blobData, filename)

      // 下载完成时设置进度为100%
      const finalProgress: IDownloadProgress = {
        loaded: progress.value.total || progress.value.loaded,
        total: progress.value.total || progress.value.loaded,
        percent: 100,
        speed: 0,
        speedText: formatSpeed(0),
        remainingTime: 0,
      }
      progress.value = finalProgress
      onProgress?.(finalProgress)
    }).catch((e) => {
      message.error(e.error || (t('hooks.download.failed') as string))
    }).finally(() => {
      loading.value = false
    })
  }

  return {
    file,
    url,
    blob,
    base64,
    loading,
    progress,
    image,
  }
}



---
File: /packages/pro/src/hooks/drawer.tsx
---

import type { AsyncComponentLoader, Component } from 'vue'
import { useOverlayInject } from '@overlastic/vue'
import { DuxDrawer } from '../components'

export interface UseDrawerResult {
  show: (props: UseDrawerProps) => Promise<any>
}

export interface UseDrawerProps {
  title?: string
  width?: number | string
  maxWidth?: number
  component: AsyncComponentLoader<any> | Component
  componentProps?: Record<string, any>
  placement?: 'top' | 'right' | 'bottom' | 'left'
}

export function useDrawer(): UseDrawerResult {
  const create = useOverlayInject(DuxDrawer)

  const show = (props: UseDrawerProps) => {
    return create(props)
  }

  return {
    show,
  }
}



---
File: /packages/pro/src/hooks/echart.ts
---

import type { EChartsOption } from 'echarts'
import { add } from 'lodash-es'
import { computed, ref, watch } from 'vue'

export interface EchartCommonProps {
  min?: boolean
  /** 显示 X 轴标签 */
  showXAxisLabel?: boolean
  /** 显示 Y 轴标签 */
  showYAxisLabel?: boolean
  /** 显示 X 轴线 */
  showXAxisLine?: boolean
  /** 显示 Y 轴线 */
  showYAxisLine?: boolean
  /** 显示网格线 */
  showGridLine?: boolean
  /** 显示分割区域 */
  showSplitArea?: boolean
  /** 显示图例 */
  showLegend?: boolean
}

/**
 * 通用图表配置
 */
export function useEchartCommon(props?: EchartCommonProps): EChartsOption {
  const isMin = props?.min ?? false

  // 根据是否为迷你图设置默认值，用户可通过 props 覆盖
  const showLegend = props?.showLegend ?? !isMin

  // 迷你图如果要显示标签，需要调整空间预留
  const needAxisLabels = isMin && (props?.showXAxisLabel || props?.showYAxisLabel)

  return {
    grid: {
      left: isMin ? '0%' : '10',
      right: isMin ? '0%' : '10',
      top: isMin ? '2%' : '15%',
      bottom: isMin ? '0%' : '10%',
      containLabel: !isMin || needAxisLabels, // 如果迷你图需要显示标签，则包含标签
    },
    tooltip: {
      show: true,
    },
    legend: {
      show: showLegend,
      top: '0',
      bottom: '0',
    },
  } as EChartsOption
}

// 基础数据项接口
export interface EchartDataItem {
  name: string
  value: number
}

// 多系列数据项
export interface EchartSeriesItem {
  name: string
  data: number[]
  stack?: string
}

// 坐标轴图表基类
export interface EchartAxisProps extends EchartCommonProps {
  /** X轴标签 */
  labels?: string[]
  /** 自动判断单/多系列数据 */
  data?: EchartDataItem[] | EchartSeriesItem[] | number[]
  /** 单系列图表的名称 */
  name?: string
}

/**
 * 坐标轴图表基础配置
 */
function useEchartAxis(props?: EchartAxisProps) {
  const commonOption = useEchartCommon(props)
  const isMin = props?.min ?? false

  // X轴标签数据
  const xAxisData = computed(() => {
    if (props?.labels?.length)
      return props.labels

    if (Array.isArray(props?.data) && props.data.length > 0
      && typeof props.data[0] === 'object' && props.data[0] !== null && 'name' in props.data[0]) {
      return (props.data as EchartDataItem[]).map(item => item.name)
    }
    return []
  })

  // 自动判断并处理数据
  const seriesData = computed(() => {
    if (!props?.data?.length) {
      return [{ name: props?.name || 'Series', data: [], stack: undefined }]
    }

    const firstItem = props.data[0]

    // 判断是否为多系列数据 (EchartSeriesItem[])
    if (typeof firstItem === 'object' && firstItem !== null && 'data' in firstItem && Array.isArray(firstItem.data)) {
      return props.data as EchartSeriesItem[]
    }

    // 判断是否为单系列对象数据 (EchartDataItem[])
    if (typeof firstItem === 'object' && firstItem !== null && 'name' in firstItem && 'value' in firstItem) {
      return [{
        name: props?.name || 'Series',
        data: (props.data as EchartDataItem[]).map(item => item.value),
        stack: undefined,
      }]
    }

    // 判断是否为纯数值数组 (number[])
    if (typeof firstItem === 'number') {
      return [{
        name: props?.name || 'Series',
        data: props.data as number[],
        stack: undefined,
      }]
    }

    // 默认返回空数据
    return [{ name: props?.name || 'Series', data: [], stack: undefined }]
  })

  // 根据是否为迷你图设置默认值，用户可通过 props 覆盖
  const showXAxisLabel = props?.showXAxisLabel ?? !isMin
  const showYAxisLabel = props?.showYAxisLabel ?? !isMin
  const showXAxisLine = props?.showXAxisLine ?? !isMin
  const showYAxisLine = props?.showYAxisLine ?? !isMin
  const showGridLine = props?.showGridLine ?? false
  const showXSplitArea = props?.showSplitArea ?? false // X轴背景色默认关闭
  const showYSplitArea = props?.showSplitArea ?? !isMin // Y轴背景色非mini模式下显示

  const xAxisConfig = {
    axisLabel: {
      show: showXAxisLabel,
      showMinLabel: !isMin,
      showMaxLabel: !isMin,
    },
    axisLine: { show: showXAxisLine },
    axisTick: { show: showXAxisLine },
    splitLine: { show: showGridLine },
    splitArea: { show: showXSplitArea },
  }

  const yAxisConfig = {
    axisLabel: {
      show: showYAxisLabel,
      showMinLabel: !isMin,
      showMaxLabel: !isMin,
    },
    axisLine: { show: showYAxisLine },
    axisTick: { show: showYAxisLine },
    splitLine: { show: showGridLine },
    splitArea: { show: showYSplitArea },
  }

  return {
    commonOption,
    xAxisData,
    seriesData,
    xAxisConfig,
    yAxisConfig,
    isMin,
  }
}

// 柱状图
export interface EchartBarProps extends EchartAxisProps {
  /** 是否为水平柱状图 */
  horizontal?: boolean
  /** 堆叠分组 */
  stack?: string
}

/**
 * 柱状图
 */
export function useEchartBar(props?: EchartBarProps) {
  const { commonOption, xAxisData, seriesData, xAxisConfig, yAxisConfig, isMin } = useEchartAxis(props)

  const option = computed(() => {
    // 当只有一个系列时隐藏 legend
    const shouldShowLegend = seriesData.value.length > 1 && (props?.showLegend ?? !isMin)

    return {
      ...commonOption,
      legend: {
        ...commonOption.legend,
        show: shouldShowLegend,
      },
      tooltip: {
        ...commonOption.tooltip,
        trigger: 'axis',
      },
      xAxis: {
        type: props?.horizontal ? 'value' : 'category',
        data: props?.horizontal ? undefined : xAxisData.value,
        ...xAxisConfig,
        axisLabel: {
          ...xAxisConfig.axisLabel,
        },
        splitArea: { ...xAxisConfig.splitArea, show: xAxisConfig.splitArea?.show ?? !props?.horizontal },
      },
      yAxis: {
        type: props?.horizontal ? 'category' : 'value',
        data: props?.horizontal ? xAxisData.value : undefined,
        ...yAxisConfig,
        axisLabel: {
          ...yAxisConfig.axisLabel,
        },
        splitNumber: isMin ? 3 : undefined,
        splitArea: { ...yAxisConfig.splitArea },
      },
      series: seriesData.value.map((item, index) => {
        const isStacked = !!(props?.stack || item.stack)
        const isFirstSeries = index === 0
        const isLastSeries = index === seriesData.value.length - 1

        // 堆叠图的圆角逻辑：只有顶部和底部有圆角
        let borderRadius: any = isMin ? 2 : 4
        if (isStacked) {
          if (isFirstSeries && isLastSeries) {
            // 只有一个系列时，四个角都有圆角
            borderRadius = isMin ? 2 : 4
          }
          else if (isFirstSeries) {
            // 第一个系列（底部），只有底部圆角
            borderRadius = [0, 0, borderRadius, borderRadius]
          }
          else if (isLastSeries) {
            // 最后一个系列（顶部），只有顶部圆角
            borderRadius = [borderRadius, borderRadius, 0, 0]
          }
          else {
            // 中间系列，没有圆角
            borderRadius = 0
          }
        }

        return {
          type: 'bar',
          name: item.name,
          stack: props?.stack || item.stack,
          data: item.data,
          barMaxWidth: 40,
          itemStyle: {
            borderRadius,
          },
        }
      }),
    } as EChartsOption
  })

  return { option }
}

// 折线图
export interface EchartLineProps extends EchartAxisProps {
  /** 是否平滑曲线 */
  smooth?: boolean
  /** 堆叠分组 */
  stack?: string
}

/**
 * 折线图
 */
export function useEchartLine(props?: EchartLineProps) {
  const { commonOption, xAxisData, seriesData, xAxisConfig, yAxisConfig, isMin } = useEchartAxis(props)

  const option = computed(() => {
    // 当只有一个系列时隐藏 legend
    const shouldShowLegend = seriesData.value.length > 1 && (props?.showLegend ?? !isMin)

    return {
      ...commonOption,
      legend: {
        ...commonOption.legend,
        show: shouldShowLegend,
      },
      tooltip: {
        ...commonOption.tooltip,
        trigger: 'axis',
      },
      xAxis: {
        type: 'category',
        data: xAxisData.value,
        boundaryGap: !isMin, // 迷你图不留边界间隙
        ...xAxisConfig,
        axisLabel: {
          ...xAxisConfig.axisLabel,
        },
        splitArea: { ...xAxisConfig.splitArea, show: xAxisConfig.splitArea?.show ?? false }, // 优先使用用户配置
      },
      yAxis: {
        type: 'value',
        ...yAxisConfig,
        axisLabel: {
          ...yAxisConfig.axisLabel,
        },
        // 迷你图减少Y轴刻度数量，避免过于密集
        splitNumber: isMin ? 3 : undefined,
        splitArea: { ...yAxisConfig.splitArea },
      },
      series: seriesData.value.map(item => ({
        type: 'line',
        name: item.name,
        stack: props?.stack || item.stack,
        data: item.data,
        smooth: props?.smooth ?? false,
        symbol: isMin ? 'none' : 'circle',
        symbolSize: isMin ? 0 : 6,
        lineStyle: {
          width: isMin ? 2 : 2, // 迷你图也加粗到2px
        },
      })),
    } as EChartsOption
  })

  return { option }
}

// 饼图系列基类
export interface EchartPieProps extends EchartCommonProps {
  data?: EchartDataItem[]
}

/**
 * 饼图系列基础配置
 */
function useEchartPieBase(props?: EchartPieProps) {
  const commonOption = useEchartCommon(props)
  const isMin = props?.min ?? false

  const data = computed(() => {
    return props?.data?.map?.(item => ({
      name: item.name,
      value: item.value,
    })) || []
  })

  const legendData = ref<Array<EchartDataItem & { status: boolean }>>([])

  watch(() => props?.data, () => {
    legendData.value = props?.data?.map?.(item => ({
      ...item,
      status: true,
    })) || []
  }, { immediate: true })

  const selected = computed(() => {
    return legendData.value?.reduce((acc, current) => {
      acc[current.name] = current.status
      return acc
    }, {} as Record<string, boolean>)
  })

  // 当只有一条数据时隐藏 legend
  const shouldShowLegend = computed(() => {
    const dataLength = props?.data?.length || 0
    return dataLength > 1 && (props?.showLegend ?? !isMin)
  })

  return {
    commonOption,
    data,
    legendData,
    selected,
    shouldShowLegend,
    isMin,
  }
}

// 饼图
export function useEchartPie(props?: EchartPieProps) {
  const { commonOption, data, legendData, selected, shouldShowLegend, isMin } = useEchartPieBase(props)

  const option = computed(() => {
    const baseOption = { ...commonOption }
    delete baseOption.grid

    return {
      ...baseOption,
      tooltip: {
        ...commonOption.tooltip,
        trigger: 'item',
      },
      legend: {
        ...commonOption.legend,
        show: shouldShowLegend.value,
        selected: selected.value,
      },
      series: {
        type: 'pie',
        top: isMin ? '0%' : '10%',
        radius: isMin ? '100%' : '65%',
        center: ['50%', '50%'],
        label: { show: !isMin },
        labelLine: { show: !isMin },
        emphasis: {
          scale: !isMin, // 迷你图不放大
          scaleSize: isMin ? 0 : 10,
        },
        data: data.value,
      },
    } as EChartsOption
  })

  return { option, legendData }
}

// 环形图
export interface EchartRingProps extends EchartPieProps {
  /** 环形图中心标签 */
  ringLabel?: string
}

/**
 * 环形图
 */
export function useEchartRing(props?: EchartRingProps) {
  const { commonOption, data, legendData, selected, shouldShowLegend, isMin } = useEchartPieBase(props)

  const total = computed(() => {
    return legendData.value?.reduce((acc, current) => {
      return add(acc, Number(current.value))
    }, 0) || 0
  })

  const option = computed(() => {
    const baseOption = { ...commonOption }
    delete baseOption.grid // 环形图不需要grid配置

    return {
      ...baseOption,
      tooltip: {
        ...commonOption.tooltip,
        trigger: 'item',
      },
      legend: {
        ...commonOption.legend,
        show: shouldShowLegend.value,
        selected: selected.value,
      },
      graphic: isMin
        ? []
        : [
            {
              type: 'text',
              left: 'center',
              top: '45%',
              style: {
                text: props?.ringLabel || 'Total',
                textAlign: 'center',
                fontSize: 14,
              },
            },
            {
              type: 'text',
              left: 'center',
              top: '55%',
              style: {
                text: String(total.value),
                textAlign: 'center',
                fontSize: 16,
              },
            },
          ],
      series: {
        top: isMin ? '0%' : '10%',
        type: 'pie',
        radius: isMin ? ['30%', '100%'] : ['40%', '70%'],
        center: ['50%', '50%'],
        label: { show: !isMin },
        labelLine: { show: !isMin },
        emphasis: {
          scale: !isMin, // 迷你图不放大
          scaleSize: isMin ? 0 : 10,
        },
        data: data.value,
      },
    } as EChartsOption
  })

  return { option, legendData }
}

// 玫瑰图
export function useEchartRose(props?: EchartPieProps) {
  const { commonOption, data, legendData, selected, shouldShowLegend, isMin } = useEchartPieBase(props)

  const option = computed(() => {
    const baseOption = { ...commonOption }
    delete baseOption.grid // 玫瑰图不需要grid配置

    return {
      ...baseOption,
      tooltip: {
        ...commonOption.tooltip,
        trigger: 'item',
      },
      legend: {
        ...commonOption.legend,
        show: shouldShowLegend.value,
        selected: selected.value,
      },
      series: {
        type: 'pie',
        top: isMin ? '0%' : '10%',
        radius: isMin ? '100%' : '70%',
        center: ['50%', '50%'],
        roseType: 'area',
        label: { show: !isMin },
        labelLine: { show: !isMin },
        emphasis: {
          scale: !isMin, // 迷你图不放大
          scaleSize: isMin ? 0 : 10,
        },
        data: data.value,
      },
    } as EChartsOption
  })

  return { option, legendData }
}

// 漏斗图
export function useEchartFunnel(props?: EchartPieProps) {
  const { commonOption, data, legendData, selected, shouldShowLegend, isMin } = useEchartPieBase(props)

  const option = computed(() => {
    const baseOption = { ...commonOption }
    delete baseOption.grid

    return {
      ...baseOption,
      tooltip: {
        ...commonOption.tooltip,
        trigger: 'item',
      },
      legend: {
        ...commonOption.legend,
        show: shouldShowLegend.value,
        selected: selected.value,
      },
      series: {
        type: 'funnel',
        top: isMin ? '0%' : '15%',
        left: isMin ? '0%' : '10%',
        right: isMin ? '0%' : '10%',
        bottom: isMin ? '0%' : '5%',
        label: { show: !isMin },
        data: data.value,
      },
    } as EChartsOption
  })

  return { option, legendData }
}

// 雷达图
export interface EchartRadarDataItem {
  name: string
  value: number[]
}

export interface EchartRadarProps extends EchartCommonProps {
  /** 雷达图指标配置 */
  indicator?: Array<{ name: string, max: number }>
  data?: EchartRadarDataItem[]
}

/**
 * 雷达图
 */
export function useEchartRadar(props?: EchartRadarProps) {
  const commonOption = useEchartCommon(props)
  const isMin = props?.min ?? false

  const option = computed(() => {
    const baseOption = { ...commonOption }
    delete baseOption.grid

    // 当只有一条数据时隐藏 legend
    const dataLength = props?.data?.length || 0
    const shouldShowLegend = dataLength > 1 && (props?.showLegend ?? !isMin)

    return {
      ...baseOption,
      tooltip: {
        ...commonOption.tooltip,
        trigger: 'item',
      },
      legend: {
        ...commonOption.legend,
        show: shouldShowLegend,
        left: 'center',
      },
      radar: {
        indicator: props?.indicator || [],
        splitArea: { show: !isMin },
        center: ['50%', '50%'],
        radius: isMin ? '100%' : '50%',
        axisName: {
          color: isMin ? 'transparent' : undefined,
        },
      },
      series: [{
        type: 'radar',
        data: props?.data || [],
        lineStyle: { width: isMin ? 1 : 2 },
        areaStyle: { opacity: isMin ? 0.3 : 0.5 },
      }],
    } as unknown as EChartsOption
  })

  return { option }
}

// 地图
export interface EchartMapProps extends EchartCommonProps {
  /** 地图名称 */
  mapName?: string
  data?: EchartDataItem[]
}

/**
 * 地图
 */
export function useEchartMap(props?: EchartMapProps) {
  const commonOption = useEchartCommon(props)
  const isMin = props?.min ?? false

  const option = computed(() => {
    return {
      ...commonOption,
      tooltip: {
        ...commonOption.tooltip,
        trigger: 'item',
      },
      visualMap: {
        show: !isMin,
        min: 0,
        max: Math.max(...(props?.data?.map(item => item.value) || [100])),
        left: 'left',
        top: 'bottom',
        calculable: true,
      },
      series: [{
        type: 'map',
        map: props?.mapName || 'china',
        data: props?.data || [],
        label: { show: !isMin },
      }],
    } as EChartsOption
  })

  return { option }
}

export interface EchartTreeMapDataItem {
  name: string
  value: number
  children?: EchartTreeMapDataItem[]
}

export interface EchartTreeMapProps extends EchartCommonProps {
  data?: EchartTreeMapDataItem[] | EchartTreeMapDataItem[][]
  /** 树状图名称，支持多个 */
  name?: string | string[]
}

/**
 * 矩形树图
 */
export function useEchartTreeMap(props?: EchartTreeMapProps) {
  const commonOption = useEchartCommon(props)
  const isMin = props?.min ?? false

  const option = computed(() => {
    const isMultipleSeries = Array.isArray(props?.data) && props?.data.length > 0 && Array.isArray(props?.data[0])

    let series
    if (isMultipleSeries) {
      const dataArray = props?.data as EchartTreeMapDataItem[][]
      const nameArray = Array.isArray(props?.name) ? props?.name : [props?.name || 'TreeMap']

      series = dataArray.map((data, index) => ({
        name: nameArray[index] || `TreeMap ${index + 1}`,
        type: 'treemap',
        data,
        label: { show: !isMin },
        itemStyle: { borderWidth: isMin ? 1 : 2 },
        top: `${15 + index * (60 / dataArray.length)}%`,
        height: `${70 / dataArray.length - 5}%`,
        breadcrumb: { show: false },
        roam: isMin ? false : 'move',
        nodeClick: !isMin,
        levels: [{
          itemStyle: {
            borderWidth: 0,
            gapWidth: isMin ? 1 : 2,
          },
        }],
      }))
    }
    else {
      series = [{
        name: Array.isArray(props?.name) ? props?.name[0] : (props?.name || 'TreeMap'),
        type: 'treemap',
        data: props?.data || [],
        label: { show: !isMin },
        itemStyle: { borderWidth: isMin ? 1 : 2 },
        breadcrumb: { show: !isMin },
        roam: isMin ? false : 'move',
        nodeClick: !isMin,
        levels: [{
          itemStyle: {
            borderWidth: 0,
            gapWidth: isMin ? 1 : 2,
          },
        }],
      }]
    }

    return {
      ...commonOption,
      legend: {
        ...commonOption.legend,
      },
      tooltip: {
        ...commonOption.tooltip,
        trigger: 'item',
      },
      grid: {
        ...commonOption.grid,
        top: isMultipleSeries ? '15%' : '10%',
        bottom: isMultipleSeries ? '15%' : '5%',
      },
      series,
    } as EChartsOption
  })

  return { option }
}

/**
 * 通用图表类型选择器
 */
export function useEchartType(type: string, props: any) {
  switch (type) {
    case 'bar':
      return useEchartBar(props)
    case 'line':
      return useEchartLine(props)
    case 'pie':
      return useEchartPie(props)
    case 'ring':
      return useEchartRing(props)
    case 'rose':
      return useEchartRose(props)
    case 'radar':
      return useEchartRadar(props)
    case 'map':
      return useEchartMap(props)
    case 'funnel':
      return useEchartFunnel(props)
    case 'treemap':
      return useEchartTreeMap(props)
    default:
      return useEchartBar(props)
  }
}



---
File: /packages/pro/src/hooks/image.ts
---

import { NImage, NImageGroup } from 'naive-ui'
import { h, render } from 'vue'

export function useImagePreview() {
  let existDiv = document.querySelector('#preview-image')
  if (!existDiv) {
    const div = document.createElement('div')
    div.id = 'preview-image'
    div.style.display = 'none'
    document.body.appendChild(div)
    existDiv = div
  }

  const show = (list: string[], previewIndex?: number) => {
    if (!list.length) {
      return
    }
    const e = new MouseEvent('click', { bubbles: true, cancelable: true })
    const imgList = list.map((src) => {
      return h(NImage, { width: 100, src })
    })
    if (imgList.length > 1) {
      render(h(NImageGroup, {}, {
        default: () => imgList,
      }), existDiv)
    }
    else {
      render(imgList[0], existDiv)
    }
    existDiv?.querySelectorAll('.n-image img')[previewIndex || 0]?.dispatchEvent(e)
  }

  return {
    show,
  }
}



---
File: /packages/pro/src/hooks/index.ts
---

export * from './action'
export * from './dialog'
export * from './download'
export * from './drawer'
export * from './echart'
export * from './image'
export * from './level'
export * from './modal'
export * from './table'
export * from './table/index'
export * from './ui'



---
File: /packages/pro/src/hooks/level.tsx
---

import type { MaybeRef, Ref } from 'vue'
import { useClient } from '@duxweb/dvha-core'
import { useQuery } from '@tanstack/vue-query'
import { computed, ref, toRef, watch } from 'vue'

interface UseLevelProps {
  value?: MaybeRef<string[]>
  path?: MaybeRef<string>
  maxLevel?: MaybeRef<number> // 0 表示无限级
  nameField?: string
  labelField?: string
  valueField?: string
}

interface LevelOption {
  label: string
  value: string
}

export function useLevel(props: UseLevelProps) {
  const regionData = ref<LevelOption[][]>([])
  const isInitializing = ref(false)
  const currentQuery = ref<{ level: number, name?: string } | null>(null)

  const path = toRef(props, 'path', 'area') as Ref<string>
  const value = toRef(props, 'value', []) as Ref<string[]>
  const maxLevel = toRef(props, 'maxLevel', 4) as Ref<number>

  const { request } = useClient()

  const { data: queryData, isFetching } = useQuery({
    queryKey: [path, currentQuery],
    queryFn: async () => {
      if (!currentQuery.value)
        return null

      const query: Record<string, any> = { level: currentQuery.value.level }
      if (currentQuery.value.name) {
        query[props.nameField || 'name'] = currentQuery.value.name
      }

      return request({
        path: path.value as string,
        method: 'GET',
        query,
      })
    },
    enabled: computed(() => !!currentQuery.value),
    staleTime: Infinity,
    gcTime: Infinity,
    refetchOnWindowFocus: false,
    refetchOnMount: false,
    refetchOnReconnect: false,
  })

  const formatOptions = (data: any[]) => {
    const labelField = props.labelField || 'name'
    const valueField = props.valueField || 'value'
    return data.map(item => ({
      label: item[labelField] || item.name || item.label,
      value: item[valueField] || item.value || item.name || item.code,
    }))
  }

  const updateLevelData = (level: number, options: LevelOption[]) => {
    while (regionData.value.length <= level) {
      regionData.value.push([])
    }
    regionData.value[level] = options
    regionData.value = [...regionData.value]
  }

  watch(queryData, (data) => {
    if (!data?.data || !currentQuery.value)
      return

    const level = currentQuery.value.level
    updateLevelData(level, formatOptions(data.data))

    if (isInitializing.value && value.value.length > level) {
      const nextName = value.value[level]
      const shouldContinue = nextName && (maxLevel.value === 0 || level < maxLevel.value - 1)

      currentQuery.value = shouldContinue
        ? { level: level + 1, name: nextName }
        : null

      if (!shouldContinue) {
        isInitializing.value = false
      }
    }
    else {
      currentQuery.value = null
    }
  })

  const onChange = (selectedValue: string, index: number) => {
    value.value = [...value.value.slice(0, index), selectedValue]
    regionData.value = regionData.value.slice(0, index + 1)

    if (maxLevel.value === 0 || index < maxLevel.value - 1) {
      currentQuery.value = { level: index + 1, name: selectedValue }
    }
  }

  watch(value, (val) => {
    if (!isInitializing.value) {
      regionData.value = []
      isInitializing.value = val && val.length > 0
      currentQuery.value = { level: 0 }
    }
  }, { immediate: true })

  const isLoading = computed(() => isFetching.value)

  return {
    regions: computed(() => regionData.value),
    onChange,
    isLoading,
    value,
  }
}



---
File: /packages/pro/src/hooks/modal.tsx
---

import type { ModalProps } from 'naive-ui'
import type { AsyncComponentLoader, Component } from 'vue'
import { useOverlayInject } from '@overlastic/vue'
import { DuxModal } from '../components'

export interface UseModalResult {
  show: (props: UseModalProps) => Promise<any>
}

export interface UseModalProps {
  title?: string
  width?: number | string
  component: AsyncComponentLoader<any> | Component
  componentProps?: Record<string, any>
  draggable?: boolean
  modalProps?: ModalProps
}

export function useModal(): UseModalResult {
  const create = useOverlayInject(DuxModal)

  const show = (props: UseModalProps) => {
    return create(props)
  }

  return {
    show,
  }
}



---
File: /packages/pro/src/hooks/table.tsx
---

import type { UseTableProps } from '@duxweb/dvha-naiveui'
import type { NotificationReactive } from 'naive-ui'
import { useI18n } from '@duxweb/dvha-core'
import { useNaiveTable } from '@duxweb/dvha-naiveui'
import { NProgress, useMessage, useNotification } from 'naive-ui'
import { ref } from 'vue'

export function useTable(props: UseTableProps) {
  const { t } = useI18n()
  const message = useMessage()
  const notification = useNotification()
  const nRef = ref<NotificationReactive | null>(null)

  const result = useNaiveTable({
    ...props,
    // 传递导出回调
    onExportSuccess: (data) => {
      nRef.value?.destroy()
      nRef.value = null
      notification.success({
        title: t('hooks.table.exportSuccess'),
        content: t('hooks.table.exportSuccessContent', { count: data?.data?.length || 0 }),
        duration: 6000,
      })
    },
    onExportProgress: (v) => {
      if (!nRef.value && v) {
        nRef.value = notification.create({
          title: t('hooks.table.exportProgress'),
          content: () => t('hooks.table.exportProgressContent', { page: v.page || 1 }),
          avatar: () => (
            <NProgress class="size-10 text-sm" type="circle" percentage={50}>
              <div class="text-xs">
                {v.page || 1}
              </div>
            </NProgress>
          ),
          onClose: () => {
            nRef.value = null
          },
        })
      }
    },
    onExportError: (error) => {
      nRef.value?.destroy()
      nRef.value = null
      message.error(t('hooks.table.exportFailedContent', { error: error?.message || t('common.unknownError') }) as string)
    },
    // 传递导入回调
    onImportSuccess: (progress) => {
      nRef.value?.destroy()
      nRef.value = null
      notification.success({
        title: t('hooks.table.importSuccess'),
        content: t('hooks.table.importSuccessContent', { count: progress?.processedItems || 0 }),
        duration: 6000,
      })
    },
    onImportProgress: (v) => {
      if (!nRef.value) {
        nRef.value = notification.create({
          title: t('hooks.table.importProgress'),
          content: () => t('hooks.table.importProgressContent', { processed: v?.processedItems || 0, total: v?.totalItems || 0 }),
          avatar: () => (
            <NProgress class="size-10 text-sm" type="circle" percentage={v?.percentage || 0}>
              <div class="text-xs">
                {v?.percentage || 0}
                %
              </div>
            </NProgress>
          ),
          onClose: () => {
            nRef.value = null
          },
        })
      }
    },
    onImportError: (error) => {
      nRef.value?.destroy()
      nRef.value = null
      message.error(t('hooks.table.importFailedContent', { error: error?.message || t('common.unknownError') }) as string)
    },
  })

  return result
}



---
File: /packages/pro/src/hooks/ui.ts
---

import { storeToRefs } from 'pinia'
import { useUIStore } from '../stores/ui'

export function useUI() {
  const uiStore = useUIStore()
  const { menuCollapsed, cmdVisible, menuMobileCollapsed } = storeToRefs(uiStore)

  return {
    menuCollapsed,
    setMenuCollapsed: uiStore.setMenuCollapsed,

    menuMobileCollapsed,
    setMenuMobileCollapsed: uiStore.setMenuMobileCollapsed,

    cmdVisible,
    setCmdVisible: uiStore.setCmdVisible,

  }
}



---
File: /packages/pro/src/langs/en-US.json
---

{
  "common": {
    "search": "Search",
    "empty": "No data",
    "menu": "Menu",
    "theme": "Theme",
    "dark": "Dark",
    "light": "Light",
    "back": "Back",
    "loading": "Loading...",
    "success": "Success",
    "error": "Error",
    "unknownError": "Unknown error",
    "preview": "Preview"
  },
  "components": {
    "tab": {
      "lock": "Lock",
      "closeOther": "Close Other",
      "closeLeft": "Close Left",
      "closeRight": "Close Right"
    },
    "dialog": {
      "confirm": {
        "title": "Confirm",
        "content": "Are you sure you want to confirm?"
      },
      "cancel": {
        "title": "Cancel",
        "content": "Are you sure you want to cancel?"
      },
      "success": {
        "title": "Success",
        "content": "Your operation has been successful"
      },
      "error": {
        "title": "Error",
        "content": "Your operation has been failed"
      },
      "prompt": {
        "title": "Prompt"
      }
    },
    "button": {
      "confirm": "Confirm",
      "cancel": "Cancel",
      "submit": "Submit",
      "reset": "Reset",
      "delete": "Delete",
      "search": "Search",
      "advanced": "Advanced",
      "export": "Export",
      "import": "Import",
      "autoRefresh": "Auto Refresh",
      "filter": "Filter",
      "refresh": "Refresh",
      "select": "Select",
      "create": "Create",
      "download": "Download",
      "rename": "Rename",
      "preview": "Preview"
    },
    "form": {
      "edit": "Edit",
      "create": "Create"
    },
    "list": {
      "selectAll": "Select All",
      "columnSetting": "Column Setting",
      "selectedItems": "Selected Items: {num}",
      "total": "Total: {total}"
    },
    "editor": {
      "placeholder": "Please enter content"
    },
    "upload": {
      "fileManager": "File Manager",
      "uploadFile": "Upload File",
      "cancel": "Cancel",
      "delete": "Delete",
      "error": "Upload failed",
      "empty": "No files",
      "desc": "Click or drag files to this area",
      "dropHere": "Drop files here",
      "allFormats": "Support any format files",
      "supportFormats": "Support {formats} format files",
      "maxSize": "Max file size: {size}MB",
      "success": "Upload success",
      "failed": "Upload failed",
      "fileExtension": "{ext} file",
      "status": {
        "pending": "Pending",
        "uploading": "Uploading",
        "success": "Success",
        "cancelled": "Cancelled",
        "error": "Error"
      },
      "file": {
        "name": "File Name",
        "size": "Size",
        "type": "Type",
        "status": "Status"
      },
      "actions": "Actions",
      "selectUpload": {
        "clickOrDrag": "Click to select files or drag here",
        "selectedFiles": "Selected {count} files",
        "multipleSupport": "Support multiple file selection",
        "defaultDesc": "Support uploading specified file types",
        "acceptDesc": "Only support uploading {accept} format files",
        "maxFiles": "Max {max} files"
      }
    },
    "uploadManage": {
      "title": "File Manager",
      "all": "All",
      "image": "Images",
      "media": "Media",
      "docs": "Documents",
      "upload": "Upload",
      "empty": "No files",
      "emptyDesc": "No more files, please upload files",
      "back": "Back to parent",
      "parentLevel": "Parent Level",
      "namePlaceholder": "Please enter name",
      "createError": "Create failed",
      "editError": "Edit failed",
      "delError": "Delete failed",
      "delTitle": "Confirm Delete",
      "delDesc": "Are you sure you want to delete the selected files? This action cannot be undone."
    },
    "crop": {
      "title": "Crop",
      "select": "Select",
      "confirm": "Confirm"
    },
    "stats": {
      "realTimeData": "Real-time Data"
    },
    "data": {
      "selectTitle": "Please select data"
    },
    "menu": {
      "language": "Language",
      "chinese": "中文",
      "english": "English",
      "color": "Color",
      "primaryColor": "Primary Color",
      "neutralColor": "Neutral Color",
      "theme": "Theme",
      "followSystem": "Follow System",
      "lightMode": "Light",
      "darkMode": "Dark",
      "logout": "Logout"
    },
    "iconPicker": {
      "title": "Icon Picker"
    },
    "designEditor": {
      "layout": "Layout",
      "all": "All",
      "grid": {
        "label": "Grid",
        "title": "Grid Settings",
        "columns": "Columns",
        "spacing": "Spacing",
        "columnsPlaceholder": "Enter columns",
        "spacingPlaceholder": "Enter spacing"
      }
    },
    "formEditor": {
      "config": "Component Config",
      "options": "Option Config",
      "data": "Data",
      "common": {
        "componentConfig": "Component Config",
        "optionConfig": "Option Config",
        "optionData": "Option Data",
        "dataConfig": "Data Config",
        "dataEdit": "Data Edit",
        "label": "Label",
        "placeholder": "Placeholder",
        "disabled": "Disabled",
        "clearable": "Clearable",
        "multiple": "Multiple",
        "defaultValue": "Default Value",
        "readonly": "Readonly",
        "showCount": "Show Count",
        "prefix": "Prefix",
        "suffix": "Suffix",
        "status": "Status",
        "minLength": "Min Length",
        "maxLength": "Max Length",
        "minValue": "Min Value",
        "maxValue": "Max Value",
        "minCount": "Min Count",
        "maxCount": "Max Count",
        "optionLabel": "Option Label",
        "optionValue": "Option Value",
        "labelField": "Label Field",
        "valueField": "Value Field",
        "dataInterface": "Data Interface",
        "cascade": "Cascade",
        "showPath": "Show Path",
        "uploadUrl": "Upload URL",
        "showAlpha": "Show Alpha",
        "timeFormat": "Time Format",
        "hour12": "12 Hours",
        "dateType": "Date Type",
        "inputType": "Input Type",
        "formDirection": "Form Direction",
        "leftAlign": "Left Align",
        "topAlign": "Top Align",
        "settingAlign": "Setting Layout",
        "pageAlign": "Page Layout",
        "name": "Name",
        "desc": "Description"
      },
      "setting": {
        "title": "Form Settings"
      },
      "validation": "Validation Rules",
      "componentConfig": "Component Config",
      "input": {
        "label": "Text",
        "types": {
          "text": "Text",
          "textarea": "Textarea",
          "password": "Password"
        }
      },
      "inputNumber": {
        "label": "Number"
      },
      "select": {
        "label": "Select",
        "configDesc": "Config options"
      },
      "radio": {
        "label": "Radio",
        "configDesc": "Config options"
      },
      "checkbox": {
        "label": "Checkbox",
        "configDesc": "Config options"
      },
      "switch": {
        "label": "Switch"
      },
      "date": {
        "label": "Date",
        "placeholder": "Select date",
        "dateType": "Date Type",
        "date": "Date",
        "daterange": "Date Range",
        "datetime": "DateTime",
        "datetimerange": "DateTime Range",
        "month": "Month",
        "monthrange": "Month Range",
        "year": "Year",
        "yearrange": "Year Range",
        "quarter": "Quarter",
        "quarterrange": "Quarter Range",
        "week": "Week"
      },
      "time": {
        "label": "Time",
        "placeholder": "Select time",
        "timeFormat": "Format",
        "use12Hours": "12 Hours"
      },
      "color": {
        "label": "Color",
        "showAlpha": "Show Alpha"
      },
      "cascader": {
        "label": "Cascader",
        "desc": "Cascader options data in JSON array format",
        "configDesc": "Config options",
        "optionDesc": "JSON array format",
        "optionsDescription": "Config cascader options",
        "cascade": "Cascade",
        "showPath": "Show Path"
      },
      "cascaderAsync": {
        "label": "Cascader",
        "dataApi": "Data API",
        "apiPlaceholder": "Enter API URL",
        "cascade": "Cascade",
        "showPath": "Show Path"
      },
      "dynamicInput": {
        "label": "Dynamic"
      },
      "editor": {
        "label": "Editor",
        "placeholder": "Enter content",
        "uploadUrlDesc": "Editor image upload URL"
      },
      "aiEditor": {
        "label": "Editor",
        "uploadUrl": "Upload URL",
        "uploadUrlFeedback": "Image upload URL"
      },
      "sider": {
        "name": "Slider",
        "step": "Step",
        "min": "Min",
        "max": "Max"
      },
      "dynamicTags": {
        "name": "Tags",
        "max": "Max Count"
      },
      "mentionAsync": {
        "name": "Mention",
        "clearable": "Clearable",
        "path": "Data API",
        "labelField": "Label Field",
        "valueField": "Value Field"
      },
      "region": {
        "name": "Region",
        "Path": "Data API",
        "labelField": "Label Field",
        "valueField": "Value Field"
      },
      "selectAsync": {
        "name": "Select",
        "pagination": "Pagination",
        "path": "Data API",
        "labelField": "Label Field",
        "valueField": "Value Field",
        "imageField": "Image Field",
        "descField": "Desc Field"
      },
      "transferAsync": {
        "name": "Transfer"
      },
      "treeSelect": {
        "name": "Tree"
      },
      "treeSelectAsync": {
        "name": "Tree Select",
        "path": "Data API",
        "labelField": "Label Field",
        "keyField": "Key Field"
      },
      "tree": {
        "disabled": "Disabled"
      },
      "groups": {
        "form": "Form",
        "select": "Selector",
        "async": "Async"
      },
      "imageUpload": {
        "label": "Image Upload",
        "maxSize": "Max File Size (MB)",
        "maxSizePlaceholder": "Enter max file size",
        "maxNumPlaceholder": "Enter max file count",
        "manager": "File Manager"
      },
      "fileUpload": {
        "label": "File Upload",
        "accept": "Accept File Types",
        "acceptPlaceholder": "Enter accepted file types, e.g.: image/*,video/*",
        "maxSize": "Max File Size (MB)",
        "maxSizePlaceholder": "Enter max file size",
        "maxNumPlaceholder": "Enter max file count",
        "manager": "File Manager"
      },
      "main": {
        "label": "Main Content",
        "categories": {
          "form": "Form",
          "select": "Selector",
          "async": "Async"
        },
        "actions": {
          "jsonOutput": "Json Output",
          "save": "Save"
        }
      }
    }
  },
  "hooks": {
    "table": {
      "exportSuccess": "Export data successfully",
      "exportProgress": "Exporting data, please wait...",
      "exportFailed": "Export data failed",
      "exportSuccessContent": "Successfully exported {count} records",
      "exportProgressContent": "Page {page} data",
      "exportFailedContent": "Export data failed: {error}",
      "importSuccess": "Import data successfully",
      "importProgress": "Importing data, please wait...",
      "importFailed": "Import data failed",
      "importSuccessContent": "Successfully imported {count} records",
      "importProgressContent": "{processed} / {total} records",
      "importFailedContent": "Import data failed: {error}",
      "saveSuccess": "Save successfully",
      "copySuccess": "Copy successfully",
      "copyFailed": "Copy failed"
    },
    "download": {
      "failed": "Download failed"
    }
  },
  "pages": {
    "empty": {
      "title": "No data",
      "desc": "No more data, please try again later"
    },
    "404": {
      "title": "404",
      "desc": "Page not found"
    },
    "403": {
      "title": "403",
      "desc": "You do not have permission to access this page"
    },
    "401": {
      "title": "401",
      "desc": "You do not have permission to access this page"
    },
    "400": {
      "title": "400",
      "desc": "Request error"
    },
    "500": {
      "title": "500",
      "desc": "Server error"
    },
    "loading": {
      "title": "Loading",
      "desc": "Data is loading, please try again later"
    },
    "login": {
      "success": "Login success",
      "error": "Login failed, please check your username and password",
      "placeholder": {
        "username": "Please enter username",
        "password": "Please enter password"
      },
      "buttons": {
        "login": "Login"
      }
    }
  },
  "locale": {
    "zh-CN": "Chinese",
    "en-US": "English",
    "ja-JP": "Japanese",
    "ko-KR": "Korean",
    "ru-RU": "Russian"
  }
}



---
File: /packages/pro/src/langs/index.ts
---

import enUS from './en-US.json'
import zhCN from './zh-CN.json'

export { enUS, zhCN }



---
File: /packages/pro/src/langs/zh-CN.json
---

{
  "common": {
    "search": "搜索",
    "empty": "暂无数据",
    "menu": "菜单",
    "theme": "主题",
    "dark": "暗色模式",
    "light": "亮色模式",
    "back": "返回",
    "loading": "加载中...",
    "success": "操作成功",
    "error": "操作失败",
    "unknownError": "未知错误",
    "keyword": "请输入关键字",
    "preview": "预览"
  },
  "components": {
    "tab": {
      "lock": "锁定",
      "closeOther": "关闭其他",
      "closeLeft": "关闭左侧",
      "closeRight": "关闭右侧"
    },
    "dialog": {
      "confirm": {
        "title": "确定",
        "content": "确定要确认吗？"
      },
      "cancel": {
        "title": "取消",
        "content": "确定要取消吗？"
      },
      "success": {
        "title": "成功",
        "content": "您的操作已成功"
      },
      "error": {
        "title": "错误",
        "content": "您的操作已失败"
      },
      "prompt": {
        "title": "提示"
      }
    },
    "button": {
      "confirm": "确定",
      "cancel": "取消",
      "submit": "提交",
      "reset": "重置",
      "delete": "删除",
      "search": "查询",
      "advanced": "高级",
      "export": "导出",
      "import": "导入",
      "autoRefresh": "自动刷新",
      "filter": "筛选",
      "refresh": "刷新",
      "select": "选择",
      "create": "新建",
      "download": "下载",
      "rename": "重命名",
      "preview": "预览",
      "sideLeft": "左侧",
      "sideRight": "右侧"
    },
    "form": {
      "edit": "编辑",
      "create": "新增",
      "success": "保存成功",
      "error": "保存失败"
    },
    "list": {
      "selectAll": "全选",
      "columnSetting": "列设置",
      "selectedItems": "选中项: {num}",
      "total": "共 {total} 条"
    },
    "editor": {
      "placeholder": "请输入内容"
    },
    "upload": {
      "fileManager": "文件管理器",
      "uploadFile": "上传文件",
      "cancel": "取消",
      "delete": "删除",
      "error": "上传失败",
      "empty": "暂无文件",
      "desc": "点击或拖拽文件到此区域",
      "dropHere": "拖拽文件到此处",
      "allFormats": "支持任意格式文件",
      "supportFormats": "支持 {formats} 格式文件",
      "maxSize": "最大文件大小: {size}MB",
      "success": "上传成功",
      "failed": "上传失败",
      "fileExtension": "{ext}文件",
      "status": {
        "pending": "待上传",
        "uploading": "上传中",
        "success": "已上传",
        "cancelled": "已取消",
        "error": "失败"
      },
      "file": {
        "name": "文件名",
        "size": "大小",
        "type": "类型",
        "status": "状态"
      },
      "actions": "操作",
      "selectUpload": {
        "clickOrDrag": "点击选择文件或拖拽到此处",
        "selectedFiles": "已选择 {count} 个文件",
        "multipleSupport": "支持多文件选择",
        "defaultDesc": "支持上传指定类型文件",
        "acceptDesc": "仅支持上传 {accept} 格式文件",
        "maxFiles": "最多 {max} 个文件"
      }
    },
    "uploadManage": {
      "title": "文件管理",
      "all": "全部",
      "image": "图片",
      "media": "媒体",
      "docs": "文档",
      "upload": "上传",
      "empty": "暂无文件",
      "emptyDesc": "暂无更多文件，请先上传文件",
      "back": "返回上一级",
      "parentLevel": "上一级",
      "namePlaceholder": "请输入名称",
      "createError": "创建失败",
      "editError": "修改失败",
      "delError": "删除失败",
      "delTitle": "确认删除",
      "delDesc": "确定要删除选中的文件吗？删除后不可恢复。"
    },
    "crop": {
      "title": "裁剪",
      "select": "选择",
      "confirm": "确认"
    },
    "stats": {
      "realTimeData": "实时数据"
    },
    "data": {
      "selectTitle": "请选择数据"
    },
    "menu": {
      "language": "语言",
      "chinese": "中文",
      "english": "English",
      "color": "颜色",
      "primaryColor": "主题色",
      "neutralColor": "中性色",
      "theme": "主题",
      "followSystem": "跟随系统",
      "lightMode": "亮色",
      "darkMode": "暗色",
      "logout": "退出登录"
    },
    "iconPicker": {
      "title": "图标选择"
    },
    "designEditor": {
      "layout": "布局",
      "all": "全部",
      "grid": {
        "label": "网格",
        "title": "网格设置",
        "columns": "列数",
        "spacing": "间距",
        "columnsPlaceholder": "请输入列数",
        "spacingPlaceholder": "请输入间距"
      }
    },
    "formEditor": {
      "config": "组件配置",
      "options": "选项配置",
      "data": "数据",
      "common": {
        "componentConfig": "组件配置",
        "optionConfig": "选项配置",
        "optionData": "选项数据",
        "dataConfig": "数据配置",
        "dataEdit": "数据编辑",
        "label": "标签",
        "disabled": "禁用",
        "clearable": "可清除",
        "readonly": "只读",
        "showCount": "显示字数",
        "placeholder": "占位符",
        "prefix": "前缀",
        "suffix": "后缀",
        "status": "状态",
        "defaultValue": "默认值",
        "minLength": "最小长度",
        "maxLength": "最大长度",
        "minValue": "最小值",
        "maxValue": "最大值",
        "labelField": "标签字段",
        "valueField": "值字段",
        "optionLabel": "选项标签",
        "optionValue": "选项值",
        "dataInterface": "数据接口",
        "multiple": "多选",
        "cascade": "级联",
        "showPath": "显示路径",
        "minCount": "最小数量",
        "maxCount": "最大数量",
        "uploadUrl": "上传地址",
        "showAlpha": "显示透明度",
        "timeFormat": "时间格式",
        "hour12": "12小时制",
        "dateType": "日期类型",
        "inputType": "输入类型",
        "formDirection": "表单方向",
        "leftAlign": "左对齐",
        "topAlign": "上对齐",
        "settingAlign": "设置布局",
        "pageAlign": "页面布局",
        "name": "名称",
        "desc": "描述"
      },
      "setting": {
        "title": "表单设置"
      },
      "validation": "验证规则",
      "componentConfig": "组件配置",
      "input": {
        "label": "文本",
        "types": {
          "text": "文本",
          "textarea": "多行文本",
          "password": "密码"
        }
      },
      "inputNumber": {
        "label": "数字"
      },
      "select": {
        "label": "选择",
        "configDesc": "配置选项数据"
      },
      "radio": {
        "label": "单选",
        "configDesc": "配置单选框选项数据"
      },
      "checkbox": {
        "label": "复选",
        "configDesc": "配置复选框选项数据"
      },
      "switch": {
        "label": "开关"
      },
      "date": {
        "label": "日期",
        "placeholder": "选择日期",
        "dateType": "日期类型",
        "date": "日期",
        "daterange": "日期范围",
        "datetime": "日期时间",
        "datetimerange": "日期时间范围",
        "month": "月份",
        "monthrange": "月份范围",
        "year": "年份",
        "yearrange": "年份范围",
        "quarter": "季度",
        "quarterrange": "季度范围",
        "week": "周"
      },
      "time": {
        "label": "时间",
        "placeholder": "选择时间",
        "timeFormat": "格式",
        "use12Hours": "12小时制"
      },
      "color": {
        "label": "颜色",
        "showAlpha": "显示透明度"
      },
      "cascader": {
        "label": "级联",
        "desc": "级联选择器选项数据，格式为 JSON 数组",
        "configDesc": "配置选项",
        "optionDesc": "JSON 数组格式",
        "optionsDescription": "配置级联选择器选项数据",
        "cascade": "级联",
        "showPath": "显示路径"
      },
      "cascaderAsync": {
        "label": "级联",
        "dataApi": "数据接口",
        "apiPlaceholder": "输入接口地址",
        "cascade": "级联",
        "showPath": "显示路径"
      },
      "dynamicInput": {
        "label": "动态"
      },
      "editor": {
        "label": "编辑器",
        "placeholder": "输入内容",
        "uploadUrlDesc": "编辑器图片上传地址"
      },
      "aiEditor": {
        "label": "编辑器",
        "uploadUrl": "上传地址",
        "uploadUrlFeedback": "编辑器图片上传地址"
      },
      "sider": {
        "name": "滑块",
        "step": "步长",
        "min": "最小",
        "max": "最大"
      },
      "dynamicTags": {
        "name": "标签",
        "max": "最大数量"
      },
      "mentionAsync": {
        "name": "提及",
        "clearable": "可清除",
        "path": "数据接口",
        "labelField": "标签字段",
        "valueField": "值字段"
      },
      "region": {
        "name": "地区",
        "Path": "数据接口",
        "labelField": "标签字段",
        "valueField": "值字段"
      },
      "selectAsync": {
        "name": "选择",
        "pagination": "分页",
        "path": "数据接口",
        "labelField": "标签字段",
        "valueField": "值字段",
        "imageField": "图片字段",
        "descField": "描述字段"
      },
      "transferAsync": {
        "name": "穿梭框"
      },
      "treeSelect": {
        "name": "树选择"
      },
      "treeSelectAsync": {
        "name": "异步树选择",
        "path": "数据接口",
        "labelField": "标签字段",
        "keyField": "键字段"
      },
      "tree": {
        "disabled": "禁用"
      },
      "groups": {
        "form": "表单",
        "select": "选择器",
        "async": "异步"
      },
      "imageUpload": {
        "label": "图片上传",
        "maxSize": "最大文件大小(MB)",
        "maxSizePlaceholder": "请输入最大文件大小",
        "maxNumPlaceholder": "请输入最大文件数量",
        "manager": "文件管理器"
      },
      "fileUpload": {
        "label": "文件上传",
        "accept": "接受文件类型",
        "acceptPlaceholder": "请输入接受的文件类型，如：image/*,video/*",
        "maxSize": "最大文件大小(MB)",
        "maxSizePlaceholder": "请输入最大文件大小",
        "maxNumPlaceholder": "请输入最大文件数量",
        "manager": "文件管理器"
      },
      "main": {
        "label": "主要内容",
        "categories": {
          "form": "表单",
          "select": "选择器",
          "async": "异步"
        },
        "actions": {
          "jsonOutput": "Json 输出",
          "save": "保存"
        }
      }
    }
  },
  "hooks": {
    "table": {
      "exportSuccess": "导出数据成功",
      "exportProgress": "导出数据中, 请稍后...",
      "exportFailed": "导出数据失败",
      "exportSuccessContent": "成功导出 {count} 条数据",
      "exportProgressContent": "第 {page} 页数据",
      "exportFailedContent": "导出数据失败：{error}",
      "importSuccess": "导入数据成功",
      "importProgress": "导入数据中, 请稍后...",
      "importFailed": "导入数据失败",
      "importSuccessContent": "成功导入 {count} 条数据",
      "importProgressContent": "{processed} / {total} 条数据",
      "importFailedContent": "导入数据失败：{error}",
      "saveSuccess": "保存成功",
      "copySuccess": "复制成功",
      "copyFailed": "复制失败"
    },
    "download": {
      "failed": "下载失败"
    }
  },
  "pages": {
    "empty": {
      "title": "暂无数据",
      "desc": "暂无更多数据，请先创建数据"
    },
    "404": {
      "title": "404",
      "desc": "页面不存在"
    },
    "403": {
      "title": "403",
      "desc": "您没有权限访问该页面"
    },
    "401": {
      "title": "401",
      "desc": "您没有权限访问该页面"
    },
    "400": {
      "title": "400",
      "desc": "请求错误"
    },
    "500": {
      "title": "500",
      "desc": "服务器错误"
    },
    "loading": {
      "title": "加载中",
      "desc": "数据正在加载中，请稍后..."
    },
    "login": {
      "success": "登录成功",
      "error": "登录失败，请检查用户名和密码",
      "placeholder": {
        "username": "请输入用户名",
        "password": "请输入密码"
      },
      "buttons": {
        "login": "登录"
      }
    }
  },
  "locale": {
    "zh-CN": "中文",
    "en-US": "English",
    "ja-JP": "日本語",
    "ko-KR": "한국어",
    "ru-RU": "Русский"
  }
}



---
File: /packages/pro/src/pages/layout/global.tsx
---

import type { Ref } from 'vue'
import { useI18n, useTheme } from '@duxweb/dvha-core'
import { setLocale } from '@vee-validate/i18n'
import { hex2hsl } from 'colorizr'
import { registerTheme } from 'echarts'

import hljs from 'highlight.js/lib/core'
import bash from 'highlight.js/lib/languages/bash'
import css from 'highlight.js/lib/languages/css'
import go from 'highlight.js/lib/languages/go'
import java from 'highlight.js/lib/languages/java'
import javascript from 'highlight.js/lib/languages/javascript'
import json from 'highlight.js/lib/languages/json'
import markdown from 'highlight.js/lib/languages/markdown'
import php from 'highlight.js/lib/languages/php'
import python from 'highlight.js/lib/languages/python'
import shell from 'highlight.js/lib/languages/shell'
import sql from 'highlight.js/lib/languages/sql'
import typescript from 'highlight.js/lib/languages/typescript'
import xml from 'highlight.js/lib/languages/xml'
import { darkTheme, dateEnUS, dateZhCN, enUS, lightTheme, NConfigProvider, NDialogProvider, NMessageProvider, NModalProvider, NNotificationProvider, useLoadingBar, zhCN } from 'naive-ui'
import { computed, defineComponent, inject, onBeforeMount, onMounted, watch } from 'vue'
import { generateRainbowFromColor, getTheme } from '../../config'
import { themeOverrides } from '../../theme'

export const DuxGlobalLayout = defineComponent({
  name: 'DuxGlobalLayout',
  setup(_, { slots }) {
    const { isDark, cssInit, getSceneColor } = useTheme()
    const pageLoading = inject<Ref<boolean>>('pageLoading')

    const loadingBar = useLoadingBar()

    const { lightTheme: lightThemeOverrides, darkTheme: darkThemeOverrides } = themeOverrides()

    onBeforeMount(() => {
      cssInit()
    })

    hljs.registerLanguage('javascript', javascript)
    hljs.registerLanguage('typescript', typescript)
    hljs.registerLanguage('css', css)
    hljs.registerLanguage('xml', xml)
    hljs.registerLanguage('json', json)
    hljs.registerLanguage('markdown', markdown)
    hljs.registerLanguage('bash', bash)
    hljs.registerLanguage('shell', shell)
    hljs.registerLanguage('sql', sql)
    hljs.registerLanguage('java', java)
    hljs.registerLanguage('php', php)
    hljs.registerLanguage('go', go)
    hljs.registerLanguage('python', python)

    const { getLocale } = useI18n()

    const locale = computed(() => {
      const lang = getLocale()
      if (lang === 'zh-CN') {
        return zhCN
      }
      return enUS
    })

    const dateLocale = computed(() => {
      const lang = getLocale()
      if (lang === 'zh-CN') {
        return dateZhCN
      }
      return dateEnUS
    })

    watch(
      getLocale,
      (locale) => {
        setLocale(locale as string)
      },
      { immediate: true },
    )

    onMounted(async () => {
      setTimeout(() => {
        loadingBar.finish()
        pageLoading!.value = false
      }, 500)
    })

    watch(isDark, (v) => {
      const primaryColor = getSceneColor('primary')
      const hsl = hex2hsl(primaryColor)
      const rainbowColors = generateRainbowFromColor(hsl, 10)
      const theme = getTheme(rainbowColors, v)
      registerTheme('default', theme)
    }, { immediate: true })

    return () => (
      <NConfigProvider hljs={hljs} locale={locale.value} dateLocale={dateLocale.value} theme={isDark.value ? darkTheme : lightTheme} themeOverrides={isDark.value ? darkThemeOverrides.value : lightThemeOverrides.value}>
        <NModalProvider>
          <NDialogProvider>
            <NNotificationProvider>
              <NMessageProvider>
                {slots.default?.()}
              </NMessageProvider>
            </NNotificationProvider>
          </NDialogProvider>
        </NModalProvider>
      </NConfigProvider>
    )
  },
})



---
File: /packages/pro/src/pages/layout/index.ts
---

export * from './global'
export * from './page'
export * from './tab'



---
File: /packages/pro/src/pages/layout/page.tsx
---

import { DuxTabRouterView, useCheck, useManage } from '@duxweb/dvha-core'
import { useIntervalFn } from '@vueuse/core'
import { NButton } from 'naive-ui'
import { defineComponent, onMounted, onUnmounted } from 'vue'
import { useUI } from '../../hooks'
import { DuxMenuAvatar } from '../menu'
import { DuxPageTab } from './tab'

export const DuxLayoutPage = defineComponent({
  name: 'DuxLayoutPage',
  props: {
  },
  setup() {
    const { menuMobileCollapsed, setMenuMobileCollapsed } = useUI()
    const { config } = useManage()

    const { mutate: check } = useCheck()

    const { pause, resume } = useIntervalFn(() => {
      check()
    }, 1000 * 60 * 10)

    onMounted(() => {
      check()
      resume()
    })

    onUnmounted(() => {
      pause()
    })

    return () => (
      <div class="flex-1 min-w-0 flex flex-col">
        <div class="flex flex-col lg:flex-row lg:justify-between lg:items-center lg:h-13">
          <div class="flex lg:hidden justify-between items-center px-2 py-2 bg-default dark:bg-muted shadow-xs relative">
            <NButton text onClick={() => setMenuMobileCollapsed(!menuMobileCollapsed.value)}>
              <div class="i-tabler:menu-2 size-6" />
            </NButton>
            <div class="w-full absolute inset-0 flex items-center justify-center text-base pointer-events-none">
              {config.title}
            </div>
            <div>
              <DuxMenuAvatar collapsed={true} />
            </div>
          </div>

          <div class="flex-1 py-2">
            <DuxPageTab />
          </div>
        </div>

        <div class="flex-1 min-h-0  mr-2 ml-2 mb-2 lg:ml-0">

          <DuxTabRouterView />
        </div>
      </div>
    )
  },
})



---
File: /packages/pro/src/pages/layout/tab.tsx
---

import type { IMenu } from '@duxweb/dvha-core'
import type { DropdownOption } from 'naive-ui'
import { useI18n, useTabStore } from '@duxweb/dvha-core'
import { useNaiveTab } from '@duxweb/dvha-naiveui'
import { NDropdown, NTab, NTabs } from 'naive-ui'
import { defineComponent, nextTick, reactive, ref } from 'vue'
import { useRouter } from 'vue-router'

export const DuxPageTab = defineComponent({
  name: 'DuxPageTab',
  setup(_props) {
    const { tabsProps, tabs } = useNaiveTab()
    const tabsRef = ref<InstanceType<typeof NTabs>>()
    const tab = useTabStore()
    const router = useRouter()
    const { t } = useI18n()

    const menu = reactive({
      x: 0,
      y: 0,
      visible: false,
    })

    const currentTab = ref<IMenu>()

    const handleContextMenu = (e: MouseEvent, tag: IMenu) => {
      e.preventDefault()
      menu.visible = false
      nextTick().then(() => {
        menu.visible = true
        menu.x = e.clientX
        menu.y = e.clientY
        currentTab.value = tag
      })
    }

    const handleClickoutside = () => {
      menu.visible = false
    }

    const menuOptions: DropdownOption[] = [
      {
        label: t('components.tab.lock'),
        key: 'lock',
      },
      {
        label: t('components.tab.closeOther'),
        key: 'closeOther',
      },
      {
        label: t('components.tab.closeLeft'),
        key: 'closeLeft',
      },
      {
        label: t('components.tab.closeRight'),
        key: 'closeRight',
      },
    ]

    const handleSelect = (key: string) => {
      menu.visible = false

      switch (key) {
        case 'lock':
          tab.lockTab(currentTab.value?.path || '')
          break
        case 'closeOther':
          tab.delOther(currentTab.value?.path || '', () => {
            router.push(currentTab.value?.path || '')
          })
          break
        case 'closeLeft':
          tab.delLeft(currentTab.value?.path || '', () => {
            router.push(currentTab.value?.path || '')
          })
          break
        case 'closeRight':
          tab.delRight(currentTab.value?.path || '', () => {
            router.push(currentTab.value?.path || '')
          })
          break
        default:
          break
      }
    }

    return () => (
      <>
        <NTabs
          ref={tabsRef}
          type="card"
          class="app-page-tabs"
          barWidth={100}
          {...tabsProps.value}
        >
          {tabs?.value?.map(tab => (
            <NTab key={tab.path} name={tab.path || ''}>
              <div class="flex items-center gap-2 py-2 px-3" onContextmenu={e => handleContextMenu(e, tab)}>
                <div class="flex-1">
                  {tab.label}
                </div>
                <div class="flex items-center flex-none">
                  {tab.meta?.lock
                    ? <div class="i-tabler:pinned size-4" />
                    : (

                        <div onClick={() => tabsProps.value?.onClose?.(tab.path)} class="text-muted hover:text-primary cursor-pointer">
                          <div class="i-tabler:x size-4" />
                        </div>
                      )}
                </div>
              </div>
            </NTab>
          ))}
        </NTabs>

        <NDropdown
          trigger="manual"
          x={menu.x}
          y={menu.y}
          show={menu.visible}
          onClickoutside={handleClickoutside}
          options={menuOptions}
          onSelect={handleSelect}
        >
        </NDropdown>
      </>
    )
  },
})



---
File: /packages/pro/src/pages/menu/avatar.tsx
---

import type { DropdownOption } from 'naive-ui'
import type { VNodeChild } from 'vue'
import { useGetAuth, useI18n, useLogout, useManage, useTheme } from '@duxweb/dvha-core'
import { NDropdown } from 'naive-ui'
import { computed, defineComponent } from 'vue'
import { useRouter } from 'vue-router'
import { DuxAvatar } from '../../components'
import DuxMenuButton from './button'

export default defineComponent({
  name: 'DuxMenuAvatar',
  props: {
    collapsed: {
      type: Boolean,
      default: false,
    },
  },
  setup(props) {
    const { t } = useI18n()
    const i18n = useI18n()
    const router = useRouter()
    const { config, getRoutePath } = useManage()
    const { mutate: logout } = useLogout()
    const { mode, primaryColors, neutralColors, colorMapping, setColor, setMode } = useTheme()

    const labelCheckRender = (inner: VNodeChild, checked?: boolean) => {
      return (
        <div class="flex gap-2 items-center w-30">
          <div class="flex-1 min-w-0">{inner}</div>
          <div>
            {checked && <div class="i-tabler:check"></div>}
          </div>
        </div>
      )
    }

    const iconRender = (icon: string) => {
      return <div class={`${icon} size-4`} />
    }

    const userMenu = computed(() => {
      const menu = config.userMenus?.map(item => ({
        label: t(item.label || '', {}, item.label),
        key: item.key,
        icon: () => iconRender(item.icon),
        path: item.path,
      }))

      return menu?.length > 0
        ? [
            ...menu,
            {
              type: 'divider',
            },
          ]
        : []
    })

    const auth = useGetAuth()

    const options = computed(() => [
      {
        key: 'header',
        type: 'render',
        render: () => (
          <div class="flex gap-2 px-3 pb-1 pt-1 items-center ">
            <DuxAvatar round size={28} src={auth.info?.avatar} />
            <div class="flex flex-col">
              <div class="text-sm font-medium">{auth.info?.nickname}</div>
              <div class="text-xs text-muted">{auth.info?.username}</div>
            </div>
          </div>
        ),
      },
      {
        type: 'divider',
      },
      ...userMenu.value,
      {
        label: t('components.menu.language'),
        key: 'locale',
        icon: () => iconRender('i-tabler:language'),
        children: [
          ...(i18n.getLocales() || []).map(locale => ({
            label: () => labelCheckRender(t(`locale.${locale}`), i18n.getLocale() === locale),
            key: `locale.${locale}`,
          })),
        ],
      },
      {
        label: t('components.menu.color'),
        key: 'color',
        icon: () => iconRender('i-tabler:palette'),
        children: [
          {
            label: () => (
              <div class="flex gap-2 items-center w-30">
                <div class="size-2 rounded-full" style={{ backgroundColor: `rgb(var(--ui-color-primary))` }}></div>
                <div>{t('components.menu.primaryColor')}</div>
              </div>
            ),
            key: 'color.primary',
            children: primaryColors.value?.map(color => ({
              label: () => labelCheckRender((
                <div class="flex gap-2 items-center">
                  <div class="size-2 rounded-full" style={{ backgroundColor: `rgb(var(--base-color-${color}-500))` }}></div>
                  <div>{color}</div>
                </div>
              ), colorMapping.value.primary === color,
              ),
              key: `color.primary.${color}`,
            })),
          },
          {
            label: () => (
              <div class="flex gap-2 items-center w-30">
                <div class="size-2 rounded-full" style={{ backgroundColor: `rgb(var(--ui-color-gray-600))` }}></div>
                <div>{t('components.menu.neutralColor')}</div>
              </div>
            ),
            key: 'color.neutral',
            children: neutralColors.value?.map(color => ({
              label: () => labelCheckRender((
                <div class="flex gap-2 items-center">
                  <div class="size-2 rounded-full" style={{ backgroundColor: `rgb(var(--base-color-${color}-600))` }}></div>
                  <div>{color}</div>
                </div>
              ), colorMapping.value.gray === color,
              ),
              key: `color.neutral.${color}`,
            })),
          },

        ],
      },
      {
        label: t('components.menu.theme'),
        key: 'theme',
        icon: () => iconRender('i-tabler:brightness-half'),
        children: [
          {
            label: () => labelCheckRender(t('components.menu.followSystem'), mode.value === 'auto'),
            key: 'theme.auto',
          },
          {
            label: () => labelCheckRender(t('components.menu.lightMode'), mode.value === 'light'),
            key: 'theme.light',
          },
          {
            label: () => labelCheckRender(t('components.menu.darkMode'), mode.value === 'dark'),
            key: 'theme.dark',
          },
        ],
      },
      {
        type: 'divider',
      },
      {
        label: t('components.menu.logout'),
        key: 'logout',
        icon: () => iconRender('i-tabler:logout'),
      },
    ])

    function handleSelect(key: string, item: DropdownOption) {
      const lastDotIndex = key.lastIndexOf('.')
      const [prefix, suffix] = lastDotIndex === -1
        ? [key, '']
        : [key.substring(0, lastDotIndex), key.substring(lastDotIndex + 1)]

      switch (prefix) {
        case 'locale':
          i18n.changeLocale(suffix)
          break
        case 'color.primary':
          setColor('primary', suffix)
          break
        case 'color.neutral':
          setColor('gray', suffix)
          break
        case 'theme':
          setMode(suffix as 'dark' | 'light' | 'auto')
          break
        case 'logout':
          logout()
          break
        default:
          if (!item?.path) {
            return
          }
          router.push(getRoutePath(item.path as string))
      }
    }

    return () => (
      <NDropdown
        options={options.value}
        placement="bottom-start"
        trigger="click"
        onSelect={handleSelect}
        width={200}

      >
        <DuxMenuButton collapsed={props.collapsed}>
          {{
            icon: () => (
              <DuxAvatar class="group-hover:shadow-lg" round size={28} src={auth.info?.avatar} />
            ),
            default: () => (
              <div class="flex flex-col">
                <div class="text-sm font-medium">{auth.info?.nickname}</div>
                <div class="text-xs text-muted">{auth.info?.username}</div>
              </div>
            ),

          }}

        </DuxMenuButton>

      </NDropdown>
    )
  },
})



---
File: /packages/pro/src/pages/menu/button.tsx
---

import { defineComponent } from 'vue'
import { useUI } from '../../hooks'

export default defineComponent({
  name: 'DuxMenuButton',
  props: {
    class: {
      type: String,
      default: '',
    },
    onClick: {
      type: Function,
      default: () => {},
    },
    collapsed: {
      type: Boolean,
      default: true,
    },
    inverted: {
      type: Boolean,
      default: false,
    },
  },
  setup(props, { slots }) {
    const { menuCollapsed, menuMobileCollapsed } = useUI()
    return () => (
      <div
        onClick={() => {
          props.onClick?.()
        }}
        class={[
          'flex items-center gap-1 justify-center py-1 px-2 cursor-pointer gap-2',
          props.class,
          menuCollapsed.value && !menuMobileCollapsed.value ? 'group' : 'hover:shadow-xs hover:bg-default flex-1 w-full',
          props.inverted ? 'transition-all duration-300 bg-inverted/5 rounded-full hover:bg-default hover:shadow-xs' : ' rounded-md',
        ]}
      >
        {slots.icon?.()}
        {props.collapsed === false && (!menuCollapsed.value && !menuMobileCollapsed.value) && (
          <div class={[
            'overflow-hidden ease-in-out whitespace-nowrap text-left min-w-0 flex-1',
            props.inverted ? 'text-default' : '',
          ]}
          >
            {slots.default?.()}
          </div>
        )}
      </div>
    )
  },
})



---
File: /packages/pro/src/pages/menu/cmd.tsx
---

import { useI18n, useRouteStore, useTheme } from '@duxweb/dvha-core'
import { useMagicKeys, watchThrottled } from '@vueuse/core'
import { cloneDeep } from 'lodash-es'
import { NButton, NTag } from 'naive-ui'
import { computed, defineComponent, ref, watch } from 'vue'
import { Command } from 'vue-command-palette'
import { useRouter } from 'vue-router'
import { useUI } from '../../hooks'

export interface DuxMenuCmdItem {
  icon: string
  label: string
  onSelect: () => void
  keyName?: string
}

export const DuxMenuCmd = defineComponent({
  name: 'DuxMenuCmd',
  setup() {
    const { cmdVisible, setCmdVisible } = useUI()
    const keys = useMagicKeys()
    const CmdK = keys['Meta+K']
    const current = ref<string>()
    const list = ref<Record<string, any>[]>([])
    const router = useRouter()
    const routeStore = useRouteStore()
    const { setMode } = useTheme()
    const searchValue = ref('')
    const { t } = useI18n()

    const inputRef = ref<HTMLInputElement>()

    const handleSelect = (name?: string) => {
      const menu = routeStore.routes.filter(item => item.parent === name)
      current.value = name
      list.value = menu
    }

    const handleOpen = () => {
      setCmdVisible(true)
    }

    const handleClose = () => {
      setCmdVisible(false)
    }

    const handleSearch = (value: string) => {
      if (value) {
        list.value = [
          ...cloneDeep(routeStore.routes).filter((item) => {
            return item.label?.includes(value)
          }),
        ]
      }
      else {
        list.value = routeStore.routes.filter(item => !item.parent)
      }
    }

    watch(cmdVisible, (v) => {
      if (v) {
        list.value = routeStore.routes.filter(item => !item.parent)
      }
      else {
        list.value = routeStore.routes.filter(item => !item.parent)
      }
    })

    watchThrottled(
      searchValue,
      () => { handleSearch(searchValue.value) },
      { throttle: 500 },
    )

    const handleBack = () => {
      const parent = routeStore.routes.find(item => item.name === current.value)
      handleSelect(parent?.parent)
    }

    watch(CmdK, (v) => {
      if (v) {
        handleOpen()
      }
    })

    watch(keys.Escape, (v) => {
      if (v) {
        setCmdVisible(false)
      }
    })

    watch(keys.Backspace, (v) => {
      if (v && searchValue.value === '' && current.value) {
        handleBack()
      }
    })

    watch(inputRef, (v) => {
      if (v) {
        v.focus()
      }
    })

    const menuList = computed(() => {
      return list.value.filter(item => item.hidden === undefined || item.hidden === false)
    })

    const MenuItem = (props: DuxMenuCmdItem) => {
      return (
        <Command.Item onSelect={props?.onSelect}>
          <div class="flex items-center justify-between flex-1">
            <div class="flex items-center gap-2">
              <div class={['size-4', props?.icon]}></div>
              <div>{props?.label}</div>
            </div>
            <div>
              {props?.keyName && <NTag size="small">{props?.keyName}</NTag>}
            </div>
          </div>
        </Command.Item>
      )
    }

    return () => (
      <Command.Dialog visible={cmdVisible.value} theme="command-palette">
        {{
          header: () => (
            <div class="relative">
              <input
                ref={inputRef}
                placeholder={t('common.search')}
                onInput={(e) => {
                  searchValue.value = (e.target as HTMLInputElement).value
                }}
                class="w-full h-12 text-base/5 rounded-md border-0 placeholder:text-dimmed outline-0 px-2.5 py-1.5 text-sm gap-1.5 text-highlighted bg-transparent ps-10 pe-10"
              />
              <span class="absolute inset-y-0 start-0 flex items-center ps-3">
                <div class="i-tabler:search shrink-0 text-dimmed size-5" aria-hidden="true"></div>
              </span>
              <span class="absolute inset-y-0 end-0 flex items-center gap-2 pe-3">
                <NTag size="small">Esc</NTag>
                <NButton quaternary circle size="small" onClick={() => setCmdVisible(false)}>
                  {{
                    icon: () => <div class="i-tabler:x size-5" aria-hidden="true"></div>,
                  }}
                </NButton>
              </span>
            </div>
          ),
          body: () => (
            <>
              {menuList.value.length === 0 && searchValue.value && (
                <div class="flex items-center justify-center h-20 border-t border-muted">
                  {t('common.empty')}
                </div>
              )}
              {menuList.value.length > 0 && (
                <Command.List>
                  <Command.Group heading={t('common.menu') as string}>
                    {menuList.value?.map((item, key: number) => (
                      <Command.Item
                        key={key}
                        onSelect={() => {
                          if (!item.path) {
                            handleSelect(item.name)
                          }
                          else {
                            router.push(item.path)
                            handleClose()
                          }
                        }}
                      >
                        <div class={!item.path ? 'i-tabler:folder' : 'i-tabler:link'}></div>
                        {item.label}
                      </Command.Item>
                    ))}
                  </Command.Group>
                  <Command.Separator />

                  {!current.value
                    ? (
                        <Command.Group heading={t('common.theme') as string}>
                          <MenuItem
                            icon="i-tabler:moon"
                            label={t('common.dark') as string}
                            onSelect={() => {
                              setMode('dark')
                            }}
                          />
                          <MenuItem
                            icon="i-tabler:sun"
                            label={t('common.light') as string}
                            onSelect={() => {
                              setMode('light')
                            }}
                          />
                        </Command.Group>
                      )
                    : (
                        <MenuItem icon="i-tabler:arrow-left" label={t('common.back') as string} onSelect={handleBack} keyName="Backspace" />
                      )}

                </Command.List>
              )}
            </>
          ),
        }}
      </Command.Dialog>
    )
  },
})



---
File: /packages/pro/src/pages/menu/index.ts
---

export { default as DuxMenuAvatar } from './avatar'
export { default as DuxMenuButton } from './button'
export * from './cmd'
export * from './main'



---
File: /packages/pro/src/pages/menu/main.tsx
---

import { DuxLogoIcon, useI18n, useManage } from '@duxweb/dvha-core'
import { useNaiveMenu } from '@duxweb/dvha-naiveui'
import { NMenu, NScrollbar, NTag } from 'naive-ui'
import { defineComponent } from 'vue'
import { useUI } from '../../hooks'
import { DuxMenuAvatar, DuxMenuButton } from './'

export const DuxMenuMain = defineComponent({
  name: 'DuxMenuMain',
  props: {
    collapsed: {
      type: Boolean,
      default: false,
    },
  },
  setup(props) {
    const { options, active } = useNaiveMenu({})
    const { menuCollapsed, setCmdVisible, menuMobileCollapsed, setMenuCollapsed } = useUI()
    const { config } = useManage()
    const { t } = useI18n()

    return () => (
      <div class="flex flex-col h-screen px-1">
        <div class="h-13 px-2 hidden lg:flex justify-center items-center">

          <DuxMenuButton onClick={() => setMenuCollapsed(!menuCollapsed.value)} collapsed={props.collapsed}>
            {{
              icon: () => (
                <div class="bg-white dark:bg-primary-950 rounded-full p-2 shadow group-hover:shadow-lg">
                  <DuxLogoIcon highlight="fill-primary" class="size-4" />
                </div>
              ),
              default: () => (
                <div>
                  {config.title}
                </div>
              ),
            }}
          </DuxMenuButton>

        </div>

        <div class="px-2 py-1 hidden lg:block">
          <DuxMenuButton collapsed={props.collapsed} inverted class="relative py-1.5 px-3" onClick={() => setCmdVisible(true)}>
            {{
              icon: () => <div class="i-tabler:search size-4 icon-gradient"></div>,
              default: () => (
                <div class="text-muted text-sm">
                  { t('common.search') }
                  {!menuCollapsed.value && (
                    <div class="flex items-center gap-1 absolute right-2.5 top-1.3">
                      <NTag size="small" bordered={false} type="primary">⌘</NTag>
                      <NTag size="small" bordered={false} type="primary">K</NTag>
                    </div>
                  )}
                </div>
              ),
            }}
          </DuxMenuButton>

        </div>
        <div class={[
          'flex-1 min-h-0',
          menuMobileCollapsed.value ? 'border-t border-muted' : '',
        ]}
        >
          <NScrollbar>
            <NMenu
              options={options.value}
              value={active.value as any}
              collapsed={menuCollapsed.value && !menuMobileCollapsed.value}
              indent={20}
              collapsedWidth={60}
              collapsedIconSize={20}

            />
          </NScrollbar>
        </div>

        <div class="flex-none hidden lg:flex flex-col items-center gap-2 p-2 border-t border-muted/50">
          <DuxMenuAvatar collapsed={props.collapsed} />
        </div>
      </div>
    )
  },
})



---
File: /packages/pro/src/pages/menu/mobile.tsx
---

import { NDrawer } from 'naive-ui'
import { defineComponent } from 'vue'
import { useUI } from '../../hooks'
import { DuxMenuMain } from './main'

export const DuxMobileMenu = defineComponent({
  name: 'DuxMobileMenu',
  props: {
  },
  setup(_props) {
    const { menuMobileCollapsed } = useUI()
    return () => (
      <NDrawer show={menuMobileCollapsed.value} onUpdateShow={v => menuMobileCollapsed.value = v} width={250} placement="left">
        <DuxMenuMain collapsed={false} />
      </NDrawer>
    )
  },
})



---
File: /packages/pro/src/pages/authLayout.tsx
---

import { OverlaysProvider } from '@overlastic/vue'
import { defineComponent } from 'vue'
import { useUI } from '../hooks'
import { DuxGlobalLayout } from './layout/global'
import { DuxLayoutPage } from './layout/page'
import { DuxMenuCmd, DuxMenuMain } from './menu'
import { DuxMobileMenu } from './menu/mobile'

export const DuxAuthLayout = defineComponent({
  name: 'DuxAuthLayout',
  setup() {
    const { menuCollapsed } = useUI()

    return () => (
      <DuxGlobalLayout>
        <OverlaysProvider>
          <div class="h-screen w-screen flex relative">
            <div
              class={[
                'flex-none transition-all',
                'hidden lg:block app-menu',
                menuCollapsed.value ? 'w-120px' : 'w-200px',
              ]}
            >
              <DuxMenuMain />
            </div>
            <DuxLayoutPage />
          </div>
          <DuxMenuCmd />
          <DuxMobileMenu />
        </OverlaysProvider>
      </DuxGlobalLayout>
    )
  },
})



---
File: /packages/pro/src/pages/index.ts
---

export * from './authLayout'
export * from './layout'
export * from './login'
export * from './menu'
export * from './menu/mobile'
export * from './page'
export * from './page403'
export * from './page404'
export * from './page500'
export * from './pageEmpty'
export * from './pageLoading'
export * from './pageStatus'



---
File: /packages/pro/src/pages/layout.tsx
---

import { defineComponent } from 'vue'
import { RouterView } from 'vue-router'
import { DuxGlobalLayout } from './layout/global'

export const DuxLayout = defineComponent({
  name: 'DuxLayout',
  setup() {
    return () => (
      <DuxGlobalLayout>
        <RouterView />
      </DuxGlobalLayout>
    )
  },
})



---
File: /packages/pro/src/pages/loading.tsx
---

import { defineComponent } from 'vue'

export const DuxLoading = defineComponent({
  name: 'DuxLoading',
  setup() {
    return () => (
      <div class="app-loading">
        <div class="app-box-loading" />
      </div>
    )
  },
})



---
File: /packages/pro/src/pages/login.tsx
---

import type { FormInst } from 'naive-ui'
import { DuxLogo, useI18n, useLogin, useManage, useTheme } from '@duxweb/dvha-core'
import clsx from 'clsx'
import { NButton, NForm, NFormItem, NInput, useMessage } from 'naive-ui'
import { defineComponent, reactive, ref } from 'vue'
import { DuxDrawApps } from '../components'

export const DuxLoginPage = defineComponent({
  name: 'DuxLoginPage',
  setup(_props, { slots }) {
    const themeStore = useTheme()
    const manage = useManage()
    const { t } = useI18n()

    const formRef = ref<FormInst | null>()
    const message = useMessage()

    const form = reactive({
      username: '',
      password: '',
    })

    const { mutate, isLoading } = useLogin({
      onSuccess: () => {
        message.success(t('pages.login.success') as string)
      },
      onError: (error) => {
        message.error(error?.message || t('pages.login.error') as string)
      },
    })

    const submit = () => {
      mutate(form)
    }

    return () => (
      <div
        class={clsx([
          'h-screen w-screen flex items-start justify-center text-secondary md:items-center',
          themeStore.isDark.value ? 'app-login-dark-bg' : 'app-login-bg',
        ])}
      >
        <div class="relative md:m-4 max-w-180 w-full h-full md:h-auto grid-cols-1 md:grid-cols-2 gap-12 overflow-hidden md:rounded-lg p-8 md:shadow bg-default dark:bg-muted grid">
          <div
            class="flex justify-center tex absolute h-30 w-30 rotate-45 cursor-pointer items-end p-3 text-white bg-primary -right-15 -top-15 hover:bg-primary-hover"
            onClick={() => themeStore.toggle()}
          >
            {themeStore.mode.value === 'auto' && <div class="i-tabler:brightness-half h-5 w-5" />}
            {themeStore.mode.value === 'light' && <div class="h-5 w-5 i-tabler:sun" />}
            {themeStore.mode.value === 'dark' && <div class="h-5 w-5 i-tabler:moon" />}
          </div>
          <div class="justify-center hidden md:flex flex-row items-center">
            {manage.config.theme?.banner ? <img class="w-full h-auto" src={manage.config.theme?.banner} /> : <div class="w-full h-auto"><DuxDrawApps /></div>}
          </div>
          <div class="flex flex-col">
            <div class="flex flex-col items-center justify-center mt-4">
              <div>
                {manage.config.theme?.logo ? <img class="w-auto h-16" src={manage.config.theme?.logo} /> : <div class="h-10"><DuxLogo /></div>}
              </div>
              <div class="mt-4 text-lg text-muted">
                {manage.config.title || 'Dux Admin Manage'}
              </div>
            </div>
            <div class="my-6">
              <NForm ref={formRef} model={form} class="flex flex-col gap-4">
                <NFormItem showLabel={false} path="username" showFeedback={false}>
                  <NInput value={form.username} onUpdateValue={v => form.username = v} type="text" placeholder={t('pages.login.placeholder.username')} size="large">
                    {{
                      default: () => <div class="text-lg i-tabler:user" />,
                    }}
                  </NInput>
                </NFormItem>
                <NFormItem showLabel={false} path="password" showFeedback={false}>
                  <NInput value={form.password} onUpdateValue={v => form.password = v} type="password" showPasswordOn="mousedown" placeholder={t('pages.login.placeholder.password')} size="large" inputProps={{ autocomplete: 'new-password' }}>
                    {{
                      default: () => <div class="text-lg i-tabler:lock" />,
                    }}
                  </NInput>
                </NFormItem>

                {slots.default?.(form)}

                <div class="mb-2 mt-4">
                  <NButton type="primary" size="large" block loading={isLoading.value} onClick={submit}>
                    {t('pages.login.buttons.login')}
                  </NButton>
                </div>
              </NForm>
            </div>
            <div class="text-center text-sm text-muted">
              {manage.config?.copyright || 'All rights reserved © duxweb 2024'}
            </div>
          </div>
        </div>
      </div>
    )
  },
})



---
File: /packages/pro/src/pages/page.tsx
---

import type { PropType } from 'vue'
import type { UseActionItem } from '../hooks/table/types'
import { NScrollbar } from 'naive-ui'
import { defineComponent, ref } from 'vue'

export const DuxPage = defineComponent({
  name: 'DuxPage',
  props: {
    padding: {
      type: Boolean,
      default: true,
    },
    actions: {
      type: Array as PropType<UseActionItem[]>,
      default: () => [],
    },
    card: {
      type: Boolean,
      default: true,
    },
    scrollbar: {
      type: Boolean,
      default: true,
    },
  },
  setup(props, { slots }) {
    // 滚动状态
    const isScrolled = ref(false)

    // 监听滚动事件
    const handleScroll = (e: Event) => {
      const target = e.target as HTMLElement
      isScrolled.value = target.scrollTop > 0
    }

    return () => {
      const cardClass = props.card ? 'bg-default dark:bg-muted rounded shadow-xs lg:dark:border lg:dark:border-muted' : ''
      const paddingClass = props.card && props.padding ? 'p-3' : ''
      const scrollClass = !props.scrollbar ? 'h-full' : ''

      const content = (
        <div class="h-full flex-1 flex gap-2 relative">
          <div class={`z-1 absolute top-0 left-0 w-full h-10 bg-linear-to-b from-[color-mix(in_oklch,theme(colors.primary.DEFAULT),white_95%)] dark:from-[color-mix(in_oklch,theme(colors.primary.DEFAULT),theme(colors.gray.950)_95%)] to-transparent pointer-events-none transition-opacity duration-300 ${isScrolled.value ? 'opacity-100' : 'opacity-0'}`} />
          {slots?.sideLeft?.()}
          {props.scrollbar
            ? (
                <NScrollbar
                  class={[cardClass, 'flex-1 min-w-0']}
                  contentClass={`${paddingClass} ${scrollClass}`}
                  onScroll={handleScroll}
                >
                  {slots.default?.()}
                </NScrollbar>
              )
            : (
                <div class={`${cardClass} ${paddingClass} ${scrollClass} flex-1 min-w-0`}>
                  {slots.default?.()}
                </div>
              )}
          {slots?.sideRight?.()}
        </div>
      )

      return content
    }
  },
})



---
File: /packages/pro/src/pages/page403.tsx
---

import { useI18n } from '@duxweb/dvha-core'
import { NButton } from 'naive-ui'
import { defineComponent } from 'vue'
import { useRoute, useRouter } from 'vue-router'
import { DuxDrawAuth } from '../components/draw'
import { DuxPageStatus } from './pageStatus'

export const DuxPage403 = defineComponent({
  name: 'DuxPage403',
  setup(_props) {
    const route = useRoute()
    const router = useRouter()
    const { t } = useI18n()

    function refreshRoute() {
      router.push({ path: route.path, query: { ...route.query, t: Date.now() } })
    }

    return () => (
      <DuxPageStatus title={t('pages.403.title')} desc={t('pages.403.desc')}>
        {{
          default: () => <div><DuxDrawAuth /></div>,
          action: () => (
            <NButton onClick={refreshRoute} renderIcon={() => <div class="n-icon i-tabler:refresh" />}>
              {t('components.button.refresh')}
            </NButton>
          ),
        }}
      </DuxPageStatus>
    )
  },
})



---
File: /packages/pro/src/pages/page404.tsx
---

import { useI18n } from '@duxweb/dvha-core'
import { NButton } from 'naive-ui'
import { defineComponent } from 'vue'
import { useRoute, useRouter } from 'vue-router'
import { DuxDrawEmpty } from '../components'
import { DuxPageStatus } from './pageStatus'

export const DuxPage404 = defineComponent({
  name: 'DuxPage404',

  setup(_props) {
    const route = useRoute()
    const router = useRouter()
    const { t } = useI18n()

    function refreshRoute() {
      router.push({ path: route.path, query: { ...route.query, t: Date.now() } })
    }

    return () => (
      <DuxPageStatus title={t('pages.404.title')} desc={t('pages.404.desc')}>
        {{
          default: () => <div><DuxDrawEmpty /></div>,
          action: () => (
            <NButton onClick={refreshRoute} renderIcon={() => <div class="n-icon i-tabler:refresh" />}>
              {t('components.button.refresh')}
            </NButton>
          ),
        }}
      </DuxPageStatus>
    )
  },
})

DuxPage404.displayName = 'DuxPage404'



---
File: /packages/pro/src/pages/page500.tsx
---

import { useI18n } from '@duxweb/dvha-core'
import { NButton } from 'naive-ui'
import { defineComponent } from 'vue'
import { useRoute, useRouter } from 'vue-router'
import { DuxPageStatus } from './pageStatus'

export const DuxPage500 = defineComponent({
  name: 'DuxPage500',
  setup(_props) {
    const route = useRoute()
    const router = useRouter()
    const { t } = useI18n()

    function refreshRoute() {
      router.push({ path: route.path, query: { ...route.query, t: Date.now() } })
    }

    return () => (
      <DuxPageStatus title={t('pages.500.title')} desc={t('pages.500.desc')}>
        {{
          default: () => <div><dux-draw-error /></div>,
          action: () => (
            <NButton onClick={refreshRoute} renderIcon={() => <div class="n-icon i-tabler:refresh" />}>
              {t('components.button.refresh')}
            </NButton>
          ),
        }}
      </DuxPageStatus>
    )
  },
})



---
File: /packages/pro/src/pages/pageEmpty.tsx
---

import { useI18n } from '@duxweb/dvha-core'
import { defineComponent } from 'vue'
import { DuxDrawEmptyForm } from '../components/draw'
import { DuxPageStatus } from './pageStatus'

export const DuxPageEmpty = defineComponent({
  name: 'DuxPageEmpty',
  props: {
    title: String,
    desc: String,
  },
  setup(props) {
    const { t } = useI18n()
    return () => (
      <DuxPageStatus title={props.title || t('pages.empty.title')} desc={props.desc || t('pages.empty.desc')}>
        <DuxDrawEmptyForm />
      </DuxPageStatus>
    )
  },
})



---
File: /packages/pro/src/pages/pageLoading.tsx
---

import { useI18n } from '@duxweb/dvha-core'
import { defineComponent } from 'vue'
import { DuxDrawEmptyForm } from '../components/draw'
import { DuxPageStatus } from './pageStatus'

export const DuxPageLoading = defineComponent({
  name: 'DuxPageLoading',
  props: {},
  setup() {
    const { t } = useI18n()
    return () => (
      <DuxPageStatus title={t('pages.loading.title')} desc={t('pages.loading.desc')}>
        <DuxDrawEmptyForm />
      </DuxPageStatus>
    )
  },
})



---
File: /packages/pro/src/pages/pageStatus.tsx
---

import { defineComponent } from 'vue'
import { DuxCard } from '../components'

export const DuxPageStatus = defineComponent({
  name: 'DuxPageStatus',
  props: {
    title: String,
    desc: String,
    bordered: {
      type: Boolean,
      default: true,
    },
  },
  setup(props, { slots }) {
    return () => (
      <DuxCard class="size-full flex items-center justify-center" bordered={props.bordered}>
        <div class="flex flex-col gap-6 justify-center items-center py-10">
          <div class="w-40">
            {slots.default?.()}
          </div>
          <div class="flex flex-col items-center justify-center gap-2">
            <div class="text-lg text-default font-bold">
              { props?.title }
            </div>
            <div class="text-muted">
              { props?.desc }
            </div>
          </div>
          <div class="flex justify-center items-center gap-4">
            {slots.action?.()}
          </div>
        </div>
      </DuxCard>
    )
  },
})



---
File: /packages/pro/src/static/images/icon/audio.svg
---

<svg viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M748 183.5V0H96v1024h836V183.5z" fill="#FF6955" p-id="1848"></path>
  <path d="M932 184H748V0" fill="#FFA694" p-id="1849"></path>
  <path d="M586.7 302.1c-5.3 7.5-34.2 20.3-58.7 25.6-31 6.4-47 11.7-63 20.3-21.3 12.8-33.1 28.8-31 43.8 1.1 3.2 26.7 40.6 56.6 83.2 31 42.7 56.6 79 57.6 80 1.1 2.1-3.2 2.1-18.1 1.1-47-3.2-89.6 21.3-108.9 59.8-5.3 11.7-6.4 18.1-6.4 32 0 32 17.1 57.6 49.1 72.6 12.8 5.3 17.1 6.4 43.8 6.4 28.8 0 29.9 0 49.1-9.6C608 692.8 629.4 644.7 608 601c-4.3-9.6-31-55.5-59.8-102.5L496 412h8.5c34.2-2.1 57.6-12.8 73.6-31 13.9-16 18.1-32 17.1-57.6-1-23.5-3.2-28.8-8.5-21.3z" fill="#FFFFFF" p-id="1850"></path>
</svg>


---
File: /packages/pro/src/static/images/icon/excel.svg
---

<svg viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M745 184.3V1H93v1022.5h836V184.3z" fill="#72DCA2" p-id="2166"></path>
  <path d="M928.8 184h-184V0.8" fill="#A9FFCE" p-id="2167"></path>
  <path d="M500.8 476.2l76.6-131h67.7L532.5 537.9 445.7 686H378l122.8-209.8z m-0.7 70.3l-6.6-11-112.7-190.3h67.7L525 474.4l8.9 15.2L650.3 686h-67.7l-82.5-139.5z" fill="#FCFCFC" p-id="2168"></path>
</svg>


---
File: /packages/pro/src/static/images/icon/file.svg
---

<svg t="1729771182292" viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg"><path d="M748 183.5V0H96v1024h836V183.5z" fill="#9B9B9B" p-id="2651"></path><path d="M932 184H748V0" fill="#CCCCCC" p-id="2652"></path><path d="M363.3 707.2c-19.4 0-35.3-15.9-35.3-35.3v-88.3c0-19.4 15.9-35.3 35.3-35.3h88.3c19.4 0 35.3 15.9 35.3 35.3v88.3c0 19.4-15.9 35.3-35.3 35.3h-88.3z" fill="#FFFFFF" p-id="2653"></path><path d="M451.6 557.1c15 0 26.5 11.5 26.5 26.5v88.3c0 15-11.5 26.5-26.5 26.5h-88.3c-15 0-26.5-11.5-26.5-26.5v-88.3c0-15 11.5-26.5 26.5-26.5h88.3m0-17.7h-88.3c-24.7 0-44.1 20.3-44.1 44.1v88.3c0 24.7 20.3 44.1 44.1 44.1h88.3c24.7 0 44.1-20.3 44.1-44.1v-88.3c0.1-24.7-19.3-44.1-44.1-44.1z m-88.3-45.9c-19.4 0-35.3-15.9-35.3-35.3v-88.3c0-19.4 15.9-35.3 35.3-35.3h88.3c19.4 0 35.3 15.9 35.3 35.3v88.3c0 19.4-15.9 35.3-35.3 35.3h-88.3z" fill="#FFFFFF" p-id="2654"></path><path d="M451.6 343.4c15 0 26.5 11.5 26.5 26.5v88.3c0 15-11.5 26.5-26.5 26.5h-88.3c-15 0-26.5-11.5-26.5-26.5v-88.3c0-15 11.5-26.5 26.5-26.5h88.3m0-17.7h-88.3c-24.7 0-44.1 20.3-44.1 44.1v88.3c0 24.7 20.3 44.1 44.1 44.1h88.3c24.7 0 44.1-20.3 44.1-44.1v-88.3c0.1-23.8-19.3-44.1-44.1-44.1zM577 707.2c-19.4 0-35.3-15.9-35.3-35.3v-88.3c0-19.4 15.9-35.3 35.3-35.3h88.3c19.4 0 35.3 15.9 35.3 35.3v88.3c0 19.4-15.9 35.3-35.3 35.3H577z" fill="#FFFFFF" p-id="2655"></path><path d="M665.3 557.1c15 0 26.5 11.5 26.5 26.5v88.3c0 15-11.5 26.5-26.5 26.5H577c-15 0-26.5-11.5-26.5-26.5v-88.3c0-15 11.5-26.5 26.5-26.5h88.3m0-17.7H577c-24.7 0-44.1 20.3-44.1 44.1v88.3c0 24.7 20.3 44.1 44.1 44.1h88.3c24.7 0 44.1-20.3 44.1-44.1v-88.3c0.1-24.7-20.2-44.1-44.1-44.1zM621.2 512c-9.7 0-18.5-3.5-24.7-10.6l-62.7-62.7c-7.1-7.1-10.6-15.9-10.6-24.7 0-9.7 3.5-18.5 10.6-24.7l62.7-62.7c7.1-7.1 15.9-10.6 24.7-10.6 8.8 0 18.5 3.5 24.7 10.6l62.7 62.7c14.1 14.1 14.1 36.2 0 50.3l-62.7 62.7c-6.2 6.2-15 9.7-24.7 9.7z" fill="#FFFFFF" p-id="2656"></path><path d="M621.2 324.9c7.1 0 14.1 2.6 18.5 7.9l62.7 62.7c5.3 5.3 7.9 11.5 7.9 18.5s-2.6 14.1-7.9 18.5l-62.7 62.7c-5.3 5.3-11.5 7.9-18.5 7.9-7.1 0-14.1-2.6-18.5-7.9L540 432.5c-5.3-5.3-7.9-11.5-7.9-18.5s2.6-14.1 7.9-18.5l62.7-62.7c4.3-5.3 11.4-7.9 18.5-7.9m0-17.7c-11.5 0-23 4.4-30.9 13.2l-62.7 62.7c-16.8 16.8-16.8 45 0 62.7l62.7 62.7c8.8 8.8 20.3 13.2 30.9 13.2s23-4.4 30.9-13.2l62.7-62.7c16.8-16.8 16.8-45 0-62.7l-62.7-62.7c-8-8.8-19.5-13.2-30.9-13.2z" fill="#FFFFFF" p-id="2657"></path></svg>


---
File: /packages/pro/src/static/images/icon/folder.svg
---

<svg class="size-12" viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M0 317h1024v595H0z" fill="#FFE17B" p-id="1449"></path>
  <path d="M523 217l-98-97H0v197h1024V217z" fill="#FFEFB6" p-id="1450"></path>
</svg>


---
File: /packages/pro/src/static/images/icon/index.ts
---

export * as audioSvg from './audio.svg'
export * as excelSvg from './excel.svg'
export * as fileSvg from './file.svg'
export * as folderSvg from './folder.svg'
export * as pdfSvg from './pdf.svg'
export * as pptSvg from './ppt.svg'
export * as videoSvg from './video.svg'
export * as wordSvg from './word.svg'



---
File: /packages/pro/src/static/images/icon/pdf.svg
---

<svg viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M748 183.5V0H96v1024h836V183.5z" fill="#FF5562" p-id="2326"></path>
  <path d="M932 184H748V0" fill="#FF9292" p-id="2327"></path>
  <path d="M657.9 606.1c-29.4-1.9-57.4-12.9-79.9-31.3-44.2 9.4-86.3 22.9-128.4 39.6-33.5 57.4-64.8 86.6-91.8 86.6-5.4 0-11.9-1-16.2-4.2-11.3-5.1-18.5-16.1-18.3-28.2 0-9.4 2.1-35.5 104.7-78.2 23.3-41.3 42.4-84.6 57.2-129.4-12.9-25-41-86.6-21.6-117.9 6.5-11.5 19.4-17.7 33.5-16.7 11 0.1 21.4 5.1 28.1 13.6 14 18.8 12.9 58.4-5.4 116.8 17.3 31.3 39.9 59.5 66.9 83.5 22.7-4.2 45.3-7.3 68-7.3 50.7 1 58.3 24 57.2 37.5 0 35.6-35.7 35.6-54 35.6z m-302.2 64.6l3.2-1c15.1-5.2 27-15.6 35.6-29.2-16.2 6.3-29.1 16.6-38.8 30.2z m143.5-312.9H496c-1.1 0-3.3 0-4.3 1-4.3 17.7-1.1 36.5 6.5 53.2 6.2-17.5 6.6-36.5 1-54.2z m7.6 151.2l-1.1 2.1-1.1-1.1c-9.7 24-20.5 48-32.4 70.9l2.1-1v2.1c24-8.4 48.5-15.3 73.4-20.9l-1-1h3.3c-16.2-15.5-30.7-32.6-43.2-51.1z m146.8 55.3c-9.7 0-18.3 0-28 2.1 10.8 5.2 21.6 7.3 32.4 8.3 7.6 1 15.1 0 21.6-2.1-0.1-3-4.4-8.3-26-8.3z" fill="#FFFFFF" p-id="2328"></path>
</svg>


---
File: /packages/pro/src/static/images/icon/ppt.svg
---

<svg viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M745 186V3H93v1021h836V186z" fill="#FF8278" p-id="2482"></path>
  <path d="M929 186H745V2.7" fill="#FFB7B3" p-id="2483"></path>
  <path d="M390.5 341.2h64.2V682h-64.2V341.2z m29.3 146.7h109c7.7 0 14.4-1.8 20.3-5.3s10.4-8.5 13.7-14.9 4.9-13.7 4.9-22c0-8.4-1.6-15.9-4.8-22.4s-7.7-11.5-13.6-15-12.7-5.3-20.5-5.3h-109v-61.9h107.3c21.2 0 40 4.3 56.1 13s28.7 20.9 37.6 36.7c8.9 15.8 13.4 34.1 13.4 54.8 0 20.8-4.5 39-13.4 54.7s-21.4 27.9-37.6 36.4c-16.2 8.6-34.9 12.9-56.1 12.9H419.8v-61.7z" fill="#FFFFFF" p-id="2484"></path>
</svg>


---
File: /packages/pro/src/static/images/icon/video.svg
---

<svg viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M748 183.5V0H96v1024h836V183.5z" fill="#E657FF" p-id="1690"></path>
  <path d="M932 184H748V0" fill="#F797FF" p-id="1691"></path>
  <path d="M635.3 459.6l52.3-30.3c9.2-5.5 17.4-0.9 17.4 8.3v151.3c0 11-7.3 14.7-17.4 8.3l-52.3-30.3c-9.2-5.5-17.4-11.9-17.4-21.1v-66.9c0-8.3 8.3-13.8 17.4-19.3z m-82.5-56.8H356.7c-20.2 0-36.7 16.5-36.7 36.7v157.7c0 20.2 16.5 36.7 36.7 36.7h196.2c20.2 0 36.7-16.5 36.7-36.7V439.5c-0.1-20.2-16.6-36.7-36.8-36.7z m-118.2 88.9c-2.8 13.8-13.8 23.8-25.7 26.6-23.8 4.6-44-16.5-39.4-39.4 2.8-13.8 13.8-23.8 25.7-25.7 23.8-6.4 44 13.8 39.4 38.5z" fill="#FFFFFF" p-id="1692"></path>
</svg>


---
File: /packages/pro/src/static/images/icon/word.svg
---

<svg viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M745 186V3H93v1021h836V186z" fill="#6CA2FF" p-id="2006"></path>
  <path d="M929 186H745V3" fill="#A2CBFC" p-id="2007"></path>
  <path d="M490.4 344.2H542l65.2 227.3L651 344.2h66.1L638.5 685H578l-60.5-238.1L454.3 685h-60.5l-78.5-340.8h66.1l43.8 227.3 65.2-227.3z" fill="#FCFCFC" p-id="2008"></path>
</svg>


---
File: /packages/pro/src/stores/index.ts
---

export * from './ui'



---
File: /packages/pro/src/stores/ui.ts
---

import type { Ref } from 'vue'
import { defineStore } from 'pinia'
import { inject, ref } from 'vue'

/**
 * use ui store
 * @param manageName manage name
 * @returns ui store
 */
export function useUIStore(manageName?: string) {
  const manage = inject<Ref<string>>('dux.manage')
  if (!manageName) {
    manageName = manage?.value || ''
  }

  if (!manageName) {
    throw new Error('manage not found')
  }

  const uiStore = createUIStore(manageName)
  return uiStore()
}

/**
 * create route store
 * @param manageName manage name
 * @returns route store
 */
function createUIStore(manageName: string) {
  return defineStore(`ui-${manageName}`, () => {
    const menuCollapsed = ref(true)
    const menuMobileCollapsed = ref(false)

    const setMenuCollapsed = (collapsed: boolean) => {
      menuCollapsed.value = collapsed
    }

    const setMenuMobileCollapsed = (collapsed: boolean) => {
      menuMobileCollapsed.value = collapsed
    }

    const cmdVisible = ref(false)

    const setCmdVisible = (visible: boolean) => {
      cmdVisible.value = visible
    }

    return {
      menuCollapsed,
      setMenuCollapsed,

      cmdVisible,
      setCmdVisible,

      menuMobileCollapsed,
      setMenuMobileCollapsed,

    }
  }, {
    persist: {
      pick: ['menuCollapsed'],
    },
  } as any)
}



---
File: /packages/pro/src/theme/css/button.scss
---




---
File: /packages/pro/src/theme/css/command.scss
---

.command-palette {
  [command-dialog-mask] {
    background-color: rgb(var(--ui-bg-inverted) / 0.3);
    backdrop-filter: blur(2px);
    height: 100vh;
    width: 100vw;
    position: fixed;
    top: 0;
    left: 0;
    z-index: 1000;
  }

  [command-dialog-wrapper] {
    position: relative;
    flex-direction: column;
    margin: 20vh auto auto;
    max-width: 560px;
    background-color: rgb(var(--ui-bg) / 0.9);
    border-radius: 6px;
  }

  [command-group-heading] {
    color: rgba(var(--ui-text-muted));
    padding: 6px 6px;
  }

  [command-separator] {
    border-bottom: 1px solid rgb(var(--ui-border-muted));
    margin: 6px 0px;
  }

  [command-list] {
    border-top: 1px solid rgb(var(--ui-border-muted));
    padding: 0px 6px;
    padding-bottom: 6px;
  }

  [command-group] {
    //padding: 6px 0px;
  }

  [command-item] {
    padding: 6px 12px;
    display: flex;
    align-items: center;
    gap: 6px;
    border-radius: 3px;
    color: rgba(var(--ui-text-toned));

    &[aria-selected='true'],
    &:active {
      background-color: rgb(var(--ui-bg-accented) / 0.8);
      color: rgba(var(--ui-color-primary-500));
    }
  }
}

.dark {
  .command-palette {
    [command-dialog-mask] {
      background-color: rgb(var(--ui-bg-inverted) / 0.02);
    }

    [command-dialog-wrapper] {
      background-color: rgb(var(--ui-bg-elevated) / 0.95);
    }

    [command-separator] {
      border-bottom: 1px solid rgb(var(--ui-border) / 0.5);
    }

    [command-list] {
      border-top: 1px solid rgb(var(--ui-border) / 0.5);
    }
  }
}



---
File: /packages/pro/src/theme/css/dropdown.scss
---

.n-popover-shared .n-popover-arrow-wrapper .n-popover-arrow {
  backdrop-filter: blur(10px);
}

.n-dropdown-menu {
  min-width: 130px;
}



---
File: /packages/pro/src/theme/css/halo.scss
---

/* 图标渐变色彩动画 */
.icon-gradient {
  color: rgb(var(--ui-color-primary));
  animation: icon-color-cycle 12s ease-in-out infinite;
}

@keyframes icon-color-cycle {
  0% {
    color: rgb(var(--ui-color-primary));
  }
  20% {
    color: rgb(var(--ui-color-info));
  }
  40% {
    color: rgb(var(--ui-color-success));
  }
  60% {
    color: rgb(var(--ui-color-warning));
  }
  80% {
    color: rgb(var(--ui-color-error));
  }
  100% {
    color: rgb(var(--ui-color-primary));
  }
}

@keyframes icon-gradient-shift {
  0% {
    background-position: 0% 50%;
  }
  25% {
    background-position: 50% 0%;
  }
  50% {
    background-position: 100% 50%;
  }
  75% {
    background-position: 50% 100%;
  }
  100% {
    background-position: 0% 50%;
  }
}



---
File: /packages/pro/src/theme/css/loading.scss
---

.app-loading {
  position: fixed;
  inset: 0;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  z-index: 1000;
  background-color: rgb(var(--ui-bg));
  overflow: hidden;
}
.app-box-loading {
  width: 50px;
  height: 50px;
  position: relative;
}
.app-box-loading:before {
  content: '';
  width: 50px;
  height: 5px;
  background: rgb(var(--ui-color-gray-200));
  opacity: 0.3;
  position: absolute;
  top: 59px;
  left: 0;
  border-radius: 50%;
  animation: shadow 0.5s linear infinite;
}
.app-box-loading:after {
  content: '';
  width: 50px;
  height: 50px;
  background: rgba(var(--ui-color-primary));
  animation: animate 0.5s linear infinite;
  position: absolute;
  top: 0;
  left: 0;
  border-radius: 3px;
}

@keyframes animate {
  17% {
    border-bottom-right-radius: 3px;
  }
  25% {
    transform: translateY(9px) rotate(22.5deg);
  }
  50% {
    transform: translateY(18px) scale(1, 0.9) rotate(45deg);
    border-bottom-right-radius: 40px;
  }
  75% {
    transform: translateY(9px) rotate(67.5deg);
  }
  100% {
    transform: translateY(0) rotate(90deg);
  }
}
@keyframes shadow {
  0%,
  100% {
    transform: scale(1, 1);
  }
  50% {
    transform: scale(1.2, 1);
  }
}



---
File: /packages/pro/src/theme/css/login.scss
---

.app-login-bg {
  background-image:
    repeating-linear-gradient(
      90deg,
      hsla(298, 16%, 68%, 0.06) 0px,
      hsla(298, 16%, 68%, 0.06) 1px,
      transparent 1px,
      transparent 21px,
      hsla(298, 16%, 68%, 0.06) 21px,
      hsla(298, 16%, 68%, 0.06) 22px,
      transparent 22px,
      transparent 72px
    ),
    repeating-linear-gradient(
      0deg,
      hsla(298, 16%, 68%, 0.06) 0px,
      hsla(298, 16%, 68%, 0.06) 1px,
      transparent 1px,
      transparent 21px,
      hsla(298, 16%, 68%, 0.06) 21px,
      hsla(298, 16%, 68%, 0.06) 22px,
      transparent 22px,
      transparent 72px
    ),
    repeating-linear-gradient(
      135deg,
      hsla(298, 16%, 68%, 0.06) 0px,
      hsla(298, 16%, 68%, 0.06) 1px,
      transparent 1px,
      transparent 21px,
      hsla(298, 16%, 68%, 0.06) 21px,
      hsla(298, 16%, 68%, 0.06) 22px,
      transparent 22px,
      transparent 72px
    ),
    linear-gradient(90deg, hsl(275, 3%, 97%), hsl(275, 3%, 97%));
}

.app-login-dark-bg {
  background-image:
    repeating-linear-gradient(
      90deg,
      rgba(90, 90, 90, 0.06) 0px,
      rgba(90, 90, 90, 0.06) 1px,
      transparent 1px,
      transparent 21px,
      rgba(90, 90, 90, 0.06) 21px,
      rgba(90, 90, 90, 0.06) 22px,
      transparent 22px,
      transparent 72px
    ),
    repeating-linear-gradient(
      0deg,
      rgba(90, 90, 90, 0.06) 0px,
      rgba(90, 90, 90, 0.06) 1px,
      transparent 1px,
      transparent 21px,
      rgba(90, 90, 90, 0.06) 21px,
      rgba(90, 90, 90, 0.06) 22px,
      transparent 22px,
      transparent 72px
    ),
    repeating-linear-gradient(
      135deg,
      rgba(90, 90, 90, 0.06) 0px,
      rgba(90, 90, 90, 0.06) 1px,
      transparent 1px,
      transparent 21px,
      rgba(90, 90, 90, 0.06) 21px,
      rgba(90, 90, 90, 0.06) 22px,
      transparent 22px,
      transparent 72px
    ),
    linear-gradient(90deg, rgb(16, 16, 20), rgb(16, 16, 20));
}



---
File: /packages/pro/src/theme/css/menu.scss
---

.n-menu.n-menu--collapsed .n-menu-item-content .n-menu-item-content-header {
  opacity: 1;
}

.n-menu.n-menu--collapsed .n-menu-item-content .n-menu-item-content__arrow {
  display: none;
}



---
File: /packages/pro/src/theme/css/tab.scss
---

.app-page-tabs.n-tabs {
  .n-tabs-nav.n-tabs-nav--card-type {
    .n-tabs-pad {
      border: none;
    }
    .n-tabs-nav__prefix,
    .n-tabs-nav__suffix {
      border-bottom: none;
    }
    .n-tabs-tab {
      padding: 0;
      border-bottom: none;
      border-radius: 0;
      background-color: transparent;
    }
  }

  .n-tabs-nav.n-tabs-nav--top.n-tabs-nav--card-type {
    .n-tabs-tab-pad {
      height: 20px;
      width: 1px;
      background-color: rgb(0 0 0 / 0.1);
      border-bottom: none;
      position: absolute;
      top: 50%;
      transform: translateY(-50%);
    }
    .n-tabs-tab {
      background-color: transparent;
      border-bottom: none;
      border: none;
      position: relative;
      &.n-tabs-tab--active {
        background-color: transparent;
      }
    }
  }
}

.dark {
  .app-page-tabs.n-tabs {
    .n-tabs-nav.n-tabs-nav--top.n-tabs-nav--card-type {
      .n-tabs-tab-pad {
        background-color: rgb(255 255 255 / 0.1);
      }
    }
  }
}

.app-modal-tabs {
  &.n-tabs .n-tabs-wrapper {
    padding: 0 16px;
  }
  &.n-tabs .n-tabs-nav {
    background-color: rgb(var(--ui-color-gray-200) / 0.2);
  }
  &.n-tabs .n-tabs-tab {
    padding: 12px 4px;
    font-size: var(--n-font-size);
  }
}

.dark {
  .app-modal-tabs {
    &.n-tabs .n-tabs-nav {
      background-color: rgb(var(--ui-bg-elevated) / 0.5);
    }
  }
}

.app-page-tabs.n-tabs {
  display: flex;
  height: 100%;
  flex-direction: column;
  .n-tabs-nav {
    flex: none;
  }
  .n-tab-pane {
    flex: 1;
    min-height: 0;
    overflow-y: auto;
    padding: 20px;
  }
  .n-tabs-tab {
    font-size: 0.85rem;
    padding: 1rem;
  }

}


---
File: /packages/pro/src/theme/css/table.scss
---

.n-data-table {
  .n-data-table-thead {
    border: 1px solid rgb(var(--ui-border-muted));
    .n-data-table-tr {
      > .n-data-table-th:first-child {
        border-top-left-radius: 0.25rem;
        border-bottom-left-radius: 0.25rem;
        border-left: 1px solid rgba(var(--ui-border-accented) / 0.5);
      }
      > .n-data-table-th--last {
        border-top-right-radius: 0.25rem;
        border-bottom-right-radius: 0.25rem;
        border-right: 1px solid rgba(var(--ui-border-accented) / 0.5);
      }
    }
  }

  .n-data-table-th {
    border-top: 1px solid rgba(var(--ui-border-accented) / 0.5);
    border-bottom: 1px solid rgba(var(--ui-border-accented) / 0.5);
  }
}



---
File: /packages/pro/src/theme/index.ts
---

export * from './naiveTheme'
export * from './presetTheme'



---
File: /packages/pro/src/theme/naiveTheme.ts
---

import type { GlobalThemeOverrides } from 'naive-ui'
import { useTheme } from '@duxweb/dvha-core'
import { hex2rgb } from 'colorizr'
import { merge } from 'lodash-es'
import { computed } from 'vue'

export function themeOverrides() {
  const { getSceneColor, getSemanticColor } = useTheme()

  const color2rgb = (color: string) => {
    const rgb = hex2rgb(color)
    return `${rgb.r}, ${rgb.g},${rgb.b}`
  }

  const commonTheme = computed<GlobalThemeOverrides>(() => ({
    common: {
      primaryColor: getSceneColor('primary'),
      primaryColorHover: getSceneColor('primary', 'hover'),
      primaryColorPressed: getSceneColor('primary', 'pressed'),
      primaryColorSuppl: getSceneColor('primary'),

      infoColor: getSceneColor('info'),
      infoColorHover: getSceneColor('info', 'hover'),
      infoColorPressed: getSceneColor('info', 'pressed'),
      infoColorSuppl: getSceneColor('info'),

      successColor: getSceneColor('success'),
      successColorHover: getSceneColor('success', 'hover'),
      successColorPressed: getSceneColor('success', 'pressed'),
      successColorSuppl: getSceneColor('success'),

      warningColor: getSceneColor('warning'),
      warningColorHover: getSceneColor('warning', 'hover'),
      warningColorPressed: getSceneColor('warning', 'pressed'),
      warningColorSuppl: getSceneColor('warning'),

      errorColor: getSceneColor('error'),
      errorColorHover: getSceneColor('error', 'hover'),
      errorColorPressed: getSceneColor('error', 'pressed'),
      errorColorSuppl: getSceneColor('error'),

      // textColorBase: getSemanticColor('text', 'base'),
      // textColor1: getSemanticColor('text', 'highlighted'),
      // textColor2: getSemanticColor('text', 'toned'),
      // textColor3: getSemanticColor('text', 'muted'),
      // textColorDisabled: getSemanticColor('text', 'dimmed'),

      // tableColor: getSemanticColor('bg', 'muted'),
      // actionColor: getSemanticColor('bg', 'muted'),
      // hoverColor: getSemanticColor('bg', 'muted'),

      // dividerColor: getSemanticColor('border', 'muted'),
      // borderColor: getSemanticColor('border', 'muted'),

      // placeholderColor: getSemanticColor('text', 'muted'),
      iconColor: getSemanticColor('text', 'muted'),

      borderRadius: 'var(--radius-sm)',
      borderRadiusSmall: 'var(--radius-xs)',

    },

    Menu: {
      itemIconColorCollapsed: getSemanticColor('text', 'accented'),
    },

    DataTable: {
      borderColor: getSemanticColor('border', 'muted'),
      thColor: getSemanticColor('bg', 'elevated'),
      tdColorHover: getSemanticColor('bg', 'elevated'),
      thTextColor: getSemanticColor('text', 'base'),
    },

    Select: {
      peers: {
        InternalSelection: {
          border: '1px solid rgb(var(--ui-border-accented))',
        },
      },
    },

    Button: {

    },

    Tabs: {
      tabTextColorCard: getSemanticColor('text', 'toned'),
      colorSegment: `rgba(${color2rgb(getSemanticColor('bg', 'elevated'))})`,
      tabBorderColor: getSemanticColor('border', 'muted'),
      tabColorSegment: getSceneColor('primary'),
      tabTextColorSegment: getSemanticColor('text', 'toned'),
      tabTextColorActiveSegment: getSemanticColor('text', 'inverted'),
      tabTextColorHoverSegment: getSemanticColor('text', 'muted'),
    },

    Card: {

    },

  }))

  const lightTheme = computed<GlobalThemeOverrides>(() => {
    return merge(commonTheme.value, {
      common: {
        cardColor: getSemanticColor('bg', 'base'),
        modalColor: getSemanticColor('bg', 'base'),
        dividerColor: getSemanticColor('border', 'muted'),
        borderColor: getSemanticColor('border', 'muted'),
        popoverColor: `rgba(${color2rgb(getSemanticColor('bg', 'base'))}, 0.98)`,
      },
      DataTable: {
        tdColor: getSemanticColor('bg', 'base'),
      },
    })
  })

  const darkTheme = computed<GlobalThemeOverrides>(() => {
    return merge(commonTheme.value, {
      common: {
        cardColor: getSemanticColor('bg', 'muted'),
        modalColor: getSemanticColor('bg', 'muted'),
        dividerColor: getSemanticColor('border', 'muted'),
        borderColor: getSemanticColor('border', 'muted'),
        popoverColor: `rgba(${color2rgb(getSemanticColor('bg', 'elevated'))}, 0.95)`,
      },
      DataTable: {
        tdColor: getSemanticColor('bg', 'muted'),
      },
    })
  })

  return {
    lightTheme,
    darkTheme,
  }
}



---
File: /packages/pro/src/theme/presetTheme.ts
---

import { themeColor, themePreset } from '@duxweb/dvha-core'

export function presetTheme() {
  const preset = themePreset(themeColor)

  return {
    name: preset.name,
    theme: preset.theme,
    rules: preset.rules,
  }
}



---
File: /packages/pro/src/theme/style.scss
---

@use './css/dropdown.scss';
@use './css/halo.scss';
@use './css/tab.scss';
@use './css/table.scss';
@use './css/command.scss';
@use './css/button.scss';
@use './css/menu.scss';
@use './css/login.scss';
@use './css/loading.scss';

html {
  color-scheme: light;
  background-color: rgb(var(--ui-color-primary-700) / 0.05);
}
html.dark {
  color-scheme: dark;
  background-color: rgb(var(--ui-bg) / 0.5);
}

[un-cloak] {
  display: none;
}

.app-remote-loader {
  height: 100%;
}


.tab-fade-leave-active,
.tab-fade-enter-active {
  transition: all 0.3s;
}

.tab-fade-enter-from {
  opacity: 0;
  transform: translateX(-30px);
}
.tab-fade-enter-to {
  opacity: 1;
  transform: translateX(0px);
}

.tab-fade-leave-to {
  opacity: 0;
  transform: translateX(30px);
}


---
File: /packages/pro/src/theme/uno.css
---

/* layer: properties */
@supports ((-webkit-hyphens: none) and (not (margin-trim: inline))) or ((-moz-orient: inline) and (not (color:rgb(from red r g b)))){*, ::before, ::after, ::backdrop{--un-text-opacity:100%;--un-bg-opacity:100%;--un-from-opacity:100%;--un-divide-y-reverse:initial;--un-border-style:solid;--un-divide-x-reverse:initial;--un-divide-opacity:100%;--un-shadow-opacity:100%;--un-border-opacity:100%;--un-ease:initial;--un-translate-x:initial;--un-translate-y:initial;--un-translate-z:initial;--un-to-opacity:100%;--un-outline-style:solid;--un-fill-opacity:100%;}}
@property --un-text-opacity{syntax:"<percentage>";inherits:false;initial-value:100%;}
@property --un-outline-style{syntax:"*";inherits:false;initial-value:solid;}
@property --un-border-opacity{syntax:"<percentage>";inherits:false;initial-value:100%;}
@property --un-bg-opacity{syntax:"<percentage>";inherits:false;initial-value:100%;}
@property --un-inset-ring-color{syntax:"*";inherits:false;}
@property --un-inset-ring-shadow{syntax:"*";inherits:false;initial-value:0 0 #0000;}
@property --un-inset-shadow{syntax:"*";inherits:false;initial-value:0 0 #0000;}
@property --un-inset-shadow-color{syntax:"*";inherits:false;}
@property --un-ring-color{syntax:"*";inherits:false;}
@property --un-ring-inset{syntax:"*";inherits:false;}
@property --un-ring-offset-color{syntax:"*";inherits:false;}
@property --un-ring-offset-shadow{syntax:"*";inherits:false;initial-value:0 0 #0000;}
@property --un-ring-offset-width{syntax:"<length>";inherits:false;initial-value:0px;}
@property --un-ring-shadow{syntax:"*";inherits:false;initial-value:0 0 #0000;}
@property --un-shadow{syntax:"*";inherits:false;initial-value:0 0 #0000;}
@property --un-shadow-color{syntax:"*";inherits:false;}
@property --un-shadow-opacity{syntax:"<percentage>";inherits:false;initial-value:100%;}
@property --un-translate-x{syntax:"*";inherits:false;initial-value:0;}
@property --un-translate-y{syntax:"*";inherits:false;initial-value:0;}
@property --un-translate-z{syntax:"*";inherits:false;initial-value:0;}
@property --un-ease{syntax:"*";inherits:false;}
@property --un-fill-opacity{syntax:"<percentage>";inherits:false;initial-value:100%;}
@property --un-from-opacity{syntax:"<percentage>";inherits:false;initial-value:100%;}
@property --un-gradient-from{syntax:"<color>";inherits:false;initial-value:#0000;}
@property --un-gradient-from-position{syntax:"<length-percentage>";inherits:false;initial-value:0%;}
@property --un-gradient-position{syntax:"*";inherits:false;}
@property --un-gradient-stops{syntax:"*";inherits:false;}
@property --un-gradient-to{syntax:"<color>";inherits:false;initial-value:#0000;}
@property --un-gradient-to-position{syntax:"<length-percentage>";inherits:false;initial-value:100%;}
@property --un-gradient-via{syntax:"<color>";inherits:false;initial-value:#0000;}
@property --un-gradient-via-position{syntax:"<length-percentage>";inherits:false;initial-value:50%;}
@property --un-gradient-via-stops{syntax:"*";inherits:false;}
@property --un-to-opacity{syntax:"<percentage>";inherits:false;initial-value:100%;}
@property --un-backdrop-blur{syntax:"*";inherits:false;}
@property --un-backdrop-brightness{syntax:"*";inherits:false;}
@property --un-backdrop-contrast{syntax:"*";inherits:false;}
@property --un-backdrop-grayscale{syntax:"*";inherits:false;}
@property --un-backdrop-hue-rotate{syntax:"*";inherits:false;}
@property --un-backdrop-invert{syntax:"*";inherits:false;}
@property --un-backdrop-opacity{syntax:"*";inherits:false;}
@property --un-backdrop-saturate{syntax:"*";inherits:false;}
@property --un-backdrop-sepia{syntax:"*";inherits:false;}
@property --un-divide-opacity{syntax:"<percentage>";inherits:false;initial-value:100%;}
@property --un-border-style{syntax:"*";inherits:false;initial-value:solid;}
@property --un-divide-x-reverse{syntax:"*";inherits:false;initial-value:0;}
@property --un-divide-y-reverse{syntax:"*";inherits:false;initial-value:0;}
/* layer: theme */
:root, :host {
--spacing: 0.25rem;
--font-sans: ui-sans-serif,system-ui,-apple-system,BlinkMacSystemFont,"Segoe UI",Roboto,"Helvetica Neue",Arial,"Noto Sans",sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol","Noto Color Emoji";
--font-serif: ui-serif,Georgia,Cambria,"Times New Roman",Times,serif;
--font-mono: ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,"Liberation Mono","Courier New",monospace;
--colors-black-DEFAULT: rgb(var(--ui-color-black));
--colors-white-DEFAULT: rgb(var(--ui-color-white));
--colors-slate-50: rgb(var(--base-color-slate-50));
--colors-slate-100: rgb(var(--base-color-slate-100));
--colors-slate-200: rgb(var(--base-color-slate-200));
--colors-slate-300: rgb(var(--base-color-slate-300));
--colors-slate-400: rgb(var(--base-color-slate-400));
--colors-slate-500: rgb(var(--base-color-slate-500));
--colors-slate-600: rgb(var(--base-color-slate-600));
--colors-slate-700: rgb(var(--base-color-slate-700));
--colors-slate-800: rgb(var(--base-color-slate-800));
--colors-slate-900: rgb(var(--base-color-slate-900));
--colors-slate-950: rgb(var(--base-color-slate-950));
--colors-slate-DEFAULT: oklch(70.4% 0.04 256.788);
--colors-gray-50: color-mix(in oklab, rgb(var(--ui-color-gray-50)) var(--un-text-opacity, 100%), transparent);
--colors-gray-100: color-mix(in oklab, rgb(var(--ui-color-gray-100)) var(--un-text-opacity, 100%), transparent);
--colors-gray-200: color-mix(in oklab, rgb(var(--ui-color-gray-200)) var(--un-text-opacity, 100%), transparent);
--colors-gray-300: color-mix(in oklab, rgb(var(--ui-color-gray-300)) var(--un-text-opacity, 100%), transparent);
--colors-gray-400: color-mix(in oklab, rgb(var(--ui-color-gray-400)) var(--un-text-opacity, 100%), transparent);
--colors-gray-500: color-mix(in oklab, rgb(var(--ui-color-gray-500)) var(--un-text-opacity, 100%), transparent);
--colors-gray-600: color-mix(in oklab, rgb(var(--ui-color-gray-600)) var(--un-text-opacity, 100%), transparent);
--colors-gray-700: color-mix(in oklab, rgb(var(--ui-color-gray-700)) var(--un-text-opacity, 100%), transparent);
--colors-gray-800: color-mix(in oklab, rgb(var(--ui-color-gray-800)) var(--un-text-opacity, 100%), transparent);
--colors-gray-900: color-mix(in oklab, rgb(var(--ui-color-gray-900)) var(--un-text-opacity, 100%), transparent);
--colors-gray-950: color-mix(in oklab, rgb(var(--ui-color-gray-950)) var(--un-text-opacity, 100%), transparent);
--colors-gray-DEFAULT: color-mix(in oklab, rgb(var(--ui-color-gray)) var(--un-text-opacity, 100%), transparent);
--colors-gray-hover: color-mix(in oklab, rgb(var(--ui-color-gray-hover)) var(--un-text-opacity, 100%), transparent);
--colors-gray-pressed: color-mix(in oklab, rgb(var(--ui-color-gray-pressed)) var(--un-text-opacity, 100%), transparent);
--colors-gray-focus: color-mix(in oklab, rgb(var(--ui-color-gray-focus)) var(--un-text-opacity, 100%), transparent);
--colors-gray-disabled: color-mix(in oklab, rgb(var(--ui-color-gray-disabled)) var(--un-text-opacity, 100%), transparent);
--colors-zinc-50: rgb(var(--base-color-zinc-50));
--colors-zinc-100: rgb(var(--base-color-zinc-100));
--colors-zinc-200: rgb(var(--base-color-zinc-200));
--colors-zinc-300: rgb(var(--base-color-zinc-300));
--colors-zinc-400: rgb(var(--base-color-zinc-400));
--colors-zinc-500: rgb(var(--base-color-zinc-500));
--colors-zinc-600: rgb(var(--base-color-zinc-600));
--colors-zinc-700: rgb(var(--base-color-zinc-700));
--colors-zinc-800: rgb(var(--base-color-zinc-800));
--colors-zinc-900: rgb(var(--base-color-zinc-900));
--colors-zinc-950: rgb(var(--base-color-zinc-950));
--colors-zinc-DEFAULT: oklch(70.5% 0.015 286.067);
--colors-neutral-50: rgb(var(--base-color-neutral-50));
--colors-neutral-100: rgb(var(--base-color-neutral-100));
--colors-neutral-200: rgb(var(--base-color-neutral-200));
--colors-neutral-300: rgb(var(--base-color-neutral-300));
--colors-neutral-400: rgb(var(--base-color-neutral-400));
--colors-neutral-500: rgb(var(--base-color-neutral-500));
--colors-neutral-600: rgb(var(--base-color-neutral-600));
--colors-neutral-700: rgb(var(--base-color-neutral-700));
--colors-neutral-800: rgb(var(--base-color-neutral-800));
--colors-neutral-900: rgb(var(--base-color-neutral-900));
--colors-neutral-950: rgb(var(--base-color-neutral-950));
--colors-neutral-DEFAULT: oklch(70.8% 0 0);
--colors-stone-50: rgb(var(--base-color-stone-50));
--colors-stone-100: rgb(var(--base-color-stone-100));
--colors-stone-200: rgb(var(--base-color-stone-200));
--colors-stone-300: rgb(var(--base-color-stone-300));
--colors-stone-400: rgb(var(--base-color-stone-400));
--colors-stone-500: rgb(var(--base-color-stone-500));
--colors-stone-600: rgb(var(--base-color-stone-600));
--colors-stone-700: rgb(var(--base-color-stone-700));
--colors-stone-800: rgb(var(--base-color-stone-800));
--colors-stone-900: rgb(var(--base-color-stone-900));
--colors-stone-950: rgb(var(--base-color-stone-950));
--colors-stone-DEFAULT: oklch(70.9% 0.01 56.259);
--colors-red-50: rgb(var(--base-color-red-50));
--colors-red-100: rgb(var(--base-color-red-100));
--colors-red-200: rgb(var(--base-color-red-200));
--colors-red-300: rgb(var(--base-color-red-300));
--colors-red-400: rgb(var(--base-color-red-400));
--colors-red-500: rgb(var(--base-color-red-500));
--colors-red-600: rgb(var(--base-color-red-600));
--colors-red-700: rgb(var(--base-color-red-700));
--colors-red-800: rgb(var(--base-color-red-800));
--colors-red-900: rgb(var(--base-color-red-900));
--colors-red-950: rgb(var(--base-color-red-950));
--colors-red-DEFAULT: oklch(70.4% 0.191 22.216);
--colors-orange-50: rgb(var(--base-color-orange-50));
--colors-orange-100: rgb(var(--base-color-orange-100));
--colors-orange-200: rgb(var(--base-color-orange-200));
--colors-orange-300: rgb(var(--base-color-orange-300));
--colors-orange-400: rgb(var(--base-color-orange-400));
--colors-orange-500: rgb(var(--base-color-orange-500));
--colors-orange-600: rgb(var(--base-color-orange-600));
--colors-orange-700: rgb(var(--base-color-orange-700));
--colors-orange-800: rgb(var(--base-color-orange-800));
--colors-orange-900: rgb(var(--base-color-orange-900));
--colors-orange-950: rgb(var(--base-color-orange-950));
--colors-orange-DEFAULT: oklch(75% 0.183 55.934);
--colors-amber-50: rgb(var(--base-color-amber-50));
--colors-amber-100: rgb(var(--base-color-amber-100));
--colors-amber-200: rgb(var(--base-color-amber-200));
--colors-amber-300: rgb(var(--base-color-amber-300));
--colors-amber-400: rgb(var(--base-color-amber-400));
--colors-amber-500: rgb(var(--base-color-amber-500));
--colors-amber-600: rgb(var(--base-color-amber-600));
--colors-amber-700: rgb(var(--base-color-amber-700));
--colors-amber-800: rgb(var(--base-color-amber-800));
--colors-amber-900: rgb(var(--base-color-amber-900));
--colors-amber-950: rgb(var(--base-color-amber-950));
--colors-amber-DEFAULT: oklch(82.8% 0.189 84.429);
--colors-yellow-50: rgb(var(--base-color-yellow-50));
--colors-yellow-100: rgb(var(--base-color-yellow-100));
--colors-yellow-200: rgb(var(--base-color-yellow-200));
--colors-yellow-300: rgb(var(--base-color-yellow-300));
--colors-yellow-400: rgb(var(--base-color-yellow-400));
--colors-yellow-500: rgb(var(--base-color-yellow-500));
--colors-yellow-600: rgb(var(--base-color-yellow-600));
--colors-yellow-700: rgb(var(--base-color-yellow-700));
--colors-yellow-800: rgb(var(--base-color-yellow-800));
--colors-yellow-900: rgb(var(--base-color-yellow-900));
--colors-yellow-950: rgb(var(--base-color-yellow-950));
--colors-yellow-DEFAULT: oklch(85.2% 0.199 91.936);
--colors-lime-50: rgb(var(--base-color-lime-50));
--colors-lime-100: rgb(var(--base-color-lime-100));
--colors-lime-200: rgb(var(--base-color-lime-200));
--colors-lime-300: rgb(var(--base-color-lime-300));
--colors-lime-400: rgb(var(--base-color-lime-400));
--colors-lime-500: rgb(var(--base-color-lime-500));
--colors-lime-600: rgb(var(--base-color-lime-600));
--colors-lime-700: rgb(var(--base-color-lime-700));
--colors-lime-800: rgb(var(--base-color-lime-800));
--colors-lime-900: rgb(var(--base-color-lime-900));
--colors-lime-950: rgb(var(--base-color-lime-950));
--colors-lime-DEFAULT: oklch(84.1% 0.238 128.85);
--colors-green-50: rgb(var(--base-color-green-50));
--colors-green-100: rgb(var(--base-color-green-100));
--colors-green-200: rgb(var(--base-color-green-200));
--colors-green-300: rgb(var(--base-color-green-300));
--colors-green-400: rgb(var(--base-color-green-400));
--colors-green-500: rgb(var(--base-color-green-500));
--colors-green-600: rgb(var(--base-color-green-600));
--colors-green-700: rgb(var(--base-color-green-700));
--colors-green-800: rgb(var(--base-color-green-800));
--colors-green-900: rgb(var(--base-color-green-900));
--colors-green-950: rgb(var(--base-color-green-950));
--colors-green-DEFAULT: oklch(79.2% 0.209 151.711);
--colors-emerald-50: rgb(var(--base-color-emerald-50));
--colors-emerald-100: rgb(var(--base-color-emerald-100));
--colors-emerald-200: rgb(var(--base-color-emerald-200));
--colors-emerald-300: rgb(var(--base-color-emerald-300));
--colors-emerald-400: rgb(var(--base-color-emerald-400));
--colors-emerald-500: rgb(var(--base-color-emerald-500));
--colors-emerald-600: rgb(var(--base-color-emerald-600));
--colors-emerald-700: rgb(var(--base-color-emerald-700));
--colors-emerald-800: rgb(var(--base-color-emerald-800));
--colors-emerald-900: rgb(var(--base-color-emerald-900));
--colors-emerald-950: rgb(var(--base-color-emerald-950));
--colors-emerald-DEFAULT: oklch(76.5% 0.177 163.223);
--colors-teal-50: rgb(var(--base-color-teal-50));
--colors-teal-100: rgb(var(--base-color-teal-100));
--colors-teal-200: rgb(var(--base-color-teal-200));
--colors-teal-300: rgb(var(--base-color-teal-300));
--colors-teal-400: rgb(var(--base-color-teal-400));
--colors-teal-500: rgb(var(--base-color-teal-500));
--colors-teal-600: rgb(var(--base-color-teal-600));
--colors-teal-700: rgb(var(--base-color-teal-700));
--colors-teal-800: rgb(var(--base-color-teal-800));
--colors-teal-900: rgb(var(--base-color-teal-900));
--colors-teal-950: rgb(var(--base-color-teal-950));
--colors-teal-DEFAULT: oklch(77.7% 0.152 181.912);
--colors-cyan-50: rgb(var(--base-color-cyan-50));
--colors-cyan-100: rgb(var(--base-color-cyan-100));
--colors-cyan-200: rgb(var(--base-color-cyan-200));
--colors-cyan-300: rgb(var(--base-color-cyan-300));
--colors-cyan-400: rgb(var(--base-color-cyan-400));
--colors-cyan-500: rgb(var(--base-color-cyan-500));
--colors-cyan-600: rgb(var(--base-color-cyan-600));
--colors-cyan-700: rgb(var(--base-color-cyan-700));
--colors-cyan-800: rgb(var(--base-color-cyan-800));
--colors-cyan-900: rgb(var(--base-color-cyan-900));
--colors-cyan-950: rgb(var(--base-color-cyan-950));
--colors-cyan-DEFAULT: oklch(78.9% 0.154 211.53);
--colors-sky-50: rgb(var(--base-color-sky-50));
--colors-sky-100: rgb(var(--base-color-sky-100));
--colors-sky-200: rgb(var(--base-color-sky-200));
--colors-sky-300: rgb(var(--base-color-sky-300));
--colors-sky-400: rgb(var(--base-color-sky-400));
--colors-sky-500: rgb(var(--base-color-sky-500));
--colors-sky-600: rgb(var(--base-color-sky-600));
--colors-sky-700: rgb(var(--base-color-sky-700));
--colors-sky-800: rgb(var(--base-color-sky-800));
--colors-sky-900: rgb(var(--base-color-sky-900));
--colors-sky-950: rgb(var(--base-color-sky-950));
--colors-sky-DEFAULT: oklch(74.6% 0.16 232.661);
--colors-blue-50: rgb(var(--base-color-blue-50));
--colors-blue-100: rgb(var(--base-color-blue-100));
--colors-blue-200: rgb(var(--base-color-blue-200));
--colors-blue-300: rgb(var(--base-color-blue-300));
--colors-blue-400: rgb(var(--base-color-blue-400));
--colors-blue-500: rgb(var(--base-color-blue-500));
--colors-blue-600: rgb(var(--base-color-blue-600));
--colors-blue-700: rgb(var(--base-color-blue-700));
--colors-blue-800: rgb(var(--base-color-blue-800));
--colors-blue-900: rgb(var(--base-color-blue-900));
--colors-blue-950: rgb(var(--base-color-blue-950));
--colors-blue-DEFAULT: oklch(70.7% 0.165 254.624);
--colors-indigo-50: rgb(var(--base-color-indigo-50));
--colors-indigo-100: rgb(var(--base-color-indigo-100));
--colors-indigo-200: rgb(var(--base-color-indigo-200));
--colors-indigo-300: rgb(var(--base-color-indigo-300));
--colors-indigo-400: rgb(var(--base-color-indigo-400));
--colors-indigo-500: rgb(var(--base-color-indigo-500));
--colors-indigo-600: rgb(var(--base-color-indigo-600));
--colors-indigo-700: rgb(var(--base-color-indigo-700));
--colors-indigo-800: rgb(var(--base-color-indigo-800));
--colors-indigo-900: rgb(var(--base-color-indigo-900));
--colors-indigo-950: rgb(var(--base-color-indigo-950));
--colors-indigo-DEFAULT: oklch(67.3% 0.182 276.935);
--colors-violet-50: rgb(var(--base-color-violet-50));
--colors-violet-100: rgb(var(--base-color-violet-100));
--colors-violet-200: rgb(var(--base-color-violet-200));
--colors-violet-300: rgb(var(--base-color-violet-300));
--colors-violet-400: rgb(var(--base-color-violet-400));
--colors-violet-500: rgb(var(--base-color-violet-500));
--colors-violet-600: rgb(var(--base-color-violet-600));
--colors-violet-700: rgb(var(--base-color-violet-700));
--colors-violet-800: rgb(var(--base-color-violet-800));
--colors-violet-900: rgb(var(--base-color-violet-900));
--colors-violet-950: rgb(var(--base-color-violet-950));
--colors-violet-DEFAULT: oklch(70.2% 0.183 293.541);
--colors-purple-50: rgb(var(--base-color-purple-50));
--colors-purple-100: rgb(var(--base-color-purple-100));
--colors-purple-200: rgb(var(--base-color-purple-200));
--colors-purple-300: rgb(var(--base-color-purple-300));
--colors-purple-400: rgb(var(--base-color-purple-400));
--colors-purple-500: rgb(var(--base-color-purple-500));
--colors-purple-600: rgb(var(--base-color-purple-600));
--colors-purple-700: rgb(var(--base-color-purple-700));
--colors-purple-800: rgb(var(--base-color-purple-800));
--colors-purple-900: rgb(var(--base-color-purple-900));
--colors-purple-950: rgb(var(--base-color-purple-950));
--colors-purple-DEFAULT: oklch(71.4% 0.203 305.504);
--colors-fuchsia-50: rgb(var(--base-color-fuchsia-50));
--colors-fuchsia-100: rgb(var(--base-color-fuchsia-100));
--colors-fuchsia-200: rgb(var(--base-color-fuchsia-200));
--colors-fuchsia-300: rgb(var(--base-color-fuchsia-300));
--colors-fuchsia-400: rgb(var(--base-color-fuchsia-400));
--colors-fuchsia-500: rgb(var(--base-color-fuchsia-500));
--colors-fuchsia-600: rgb(var(--base-color-fuchsia-600));
--colors-fuchsia-700: rgb(var(--base-color-fuchsia-700));
--colors-fuchsia-800: rgb(var(--base-color-fuchsia-800));
--colors-fuchsia-900: rgb(var(--base-color-fuchsia-900));
--colors-fuchsia-950: rgb(var(--base-color-fuchsia-950));
--colors-fuchsia-DEFAULT: oklch(74% 0.238 322.16);
--colors-pink-50: rgb(var(--base-color-pink-50));
--colors-pink-100: rgb(var(--base-color-pink-100));
--colors-pink-200: rgb(var(--base-color-pink-200));
--colors-pink-300: rgb(var(--base-color-pink-300));
--colors-pink-400: rgb(var(--base-color-pink-400));
--colors-pink-500: rgb(var(--base-color-pink-500));
--colors-pink-600: rgb(var(--base-color-pink-600));
--colors-pink-700: rgb(var(--base-color-pink-700));
--colors-pink-800: rgb(var(--base-color-pink-800));
--colors-pink-900: rgb(var(--base-color-pink-900));
--colors-pink-950: rgb(var(--base-color-pink-950));
--colors-pink-DEFAULT: oklch(71.8% 0.202 349.761);
--colors-rose-50: rgb(var(--base-color-rose-50));
--colors-rose-100: rgb(var(--base-color-rose-100));
--colors-rose-200: rgb(var(--base-color-rose-200));
--colors-rose-300: rgb(var(--base-color-rose-300));
--colors-rose-400: rgb(var(--base-color-rose-400));
--colors-rose-500: rgb(var(--base-color-rose-500));
--colors-rose-600: rgb(var(--base-color-rose-600));
--colors-rose-700: rgb(var(--base-color-rose-700));
--colors-rose-800: rgb(var(--base-color-rose-800));
--colors-rose-900: rgb(var(--base-color-rose-900));
--colors-rose-950: rgb(var(--base-color-rose-950));
--colors-rose-DEFAULT: oklch(71.2% 0.194 13.428);
--colors-light-50: oklch(99.4% 0 0);
--colors-light-100: oklch(99.11% 0 0);
--colors-light-200: oklch(98.51% 0 0);
--colors-light-300: oklch(98.16% 0.0017 247.84);
--colors-light-400: oklch(97.31% 0 0);
--colors-light-500: oklch(96.12% 0 0);
--colors-light-600: oklch(96.32% 0.0034 247.86);
--colors-light-700: oklch(94.17% 0.0052 247.88);
--colors-light-800: oklch(91.09% 0.007 247.9);
--colors-light-900: oklch(90.72% 0.0051 228.82);
--colors-light-950: oklch(89.23% 0.006 239.83);
--colors-light-DEFAULT: oklch(97.31% 0 0);
--colors-dark-50: oklch(40.91% 0 0);
--colors-dark-100: oklch(35.62% 0 0);
--colors-dark-200: oklch(31.71% 0 0);
--colors-dark-300: oklch(29.72% 0 0);
--colors-dark-400: oklch(25.2% 0 0);
--colors-dark-500: oklch(23.93% 0 0);
--colors-dark-600: oklch(22.73% 0.0038 286.09);
--colors-dark-700: oklch(22.21% 0 0);
--colors-dark-800: oklch(20.9% 0 0);
--colors-dark-900: oklch(16.84% 0 0);
--colors-dark-950: oklch(13.44% 0 0);
--colors-dark-DEFAULT: oklch(25.2% 0 0);
--colors-primary-50: color-mix(in oklab, rgb(var(--ui-color-primary-50)) var(--un-text-opacity, 100%), transparent);
--colors-primary-100: color-mix(in oklab, rgb(var(--ui-color-primary-100)) var(--un-text-opacity, 100%), transparent);
--colors-primary-200: color-mix(in oklab, rgb(var(--ui-color-primary-200)) var(--un-text-opacity, 100%), transparent);
--colors-primary-300: color-mix(in oklab, rgb(var(--ui-color-primary-300)) var(--un-text-opacity, 100%), transparent);
--colors-primary-400: color-mix(in oklab, rgb(var(--ui-color-primary-400)) var(--un-text-opacity, 100%), transparent);
--colors-primary-500: color-mix(in oklab, rgb(var(--ui-color-primary-500)) var(--un-text-opacity, 100%), transparent);
--colors-primary-600: color-mix(in oklab, rgb(var(--ui-color-primary-600)) var(--un-text-opacity, 100%), transparent);
--colors-primary-700: color-mix(in oklab, rgb(var(--ui-color-primary-700)) var(--un-text-opacity, 100%), transparent);
--colors-primary-800: color-mix(in oklab, rgb(var(--ui-color-primary-800)) var(--un-text-opacity, 100%), transparent);
--colors-primary-900: color-mix(in oklab, rgb(var(--ui-color-primary-900)) var(--un-text-opacity, 100%), transparent);
--colors-primary-950: color-mix(in oklab, rgb(var(--ui-color-primary-950)) var(--un-text-opacity, 100%), transparent);
--colors-primary-DEFAULT: color-mix(in oklab, rgb(var(--ui-color-primary)) var(--un-text-opacity, 100%), transparent);
--colors-primary-hover: color-mix(in oklab, rgb(var(--ui-color-primary-hover)) var(--un-text-opacity, 100%), transparent);
--colors-primary-pressed: color-mix(in oklab, rgb(var(--ui-color-primary-pressed)) var(--un-text-opacity, 100%), transparent);
--colors-primary-focus: color-mix(in oklab, rgb(var(--ui-color-primary-focus)) var(--un-text-opacity, 100%), transparent);
--colors-primary-disabled: color-mix(in oklab, rgb(var(--ui-color-primary-disabled)) var(--un-text-opacity, 100%), transparent);
--colors-info-50: color-mix(in oklab, rgb(var(--ui-color-info-50)) var(--un-text-opacity, 100%), transparent);
--colors-info-100: color-mix(in oklab, rgb(var(--ui-color-info-100)) var(--un-text-opacity, 100%), transparent);
--colors-info-200: color-mix(in oklab, rgb(var(--ui-color-info-200)) var(--un-text-opacity, 100%), transparent);
--colors-info-300: color-mix(in oklab, rgb(var(--ui-color-info-300)) var(--un-text-opacity, 100%), transparent);
--colors-info-400: color-mix(in oklab, rgb(var(--ui-color-info-400)) var(--un-text-opacity, 100%), transparent);
--colors-info-500: color-mix(in oklab, rgb(var(--ui-color-info-500)) var(--un-text-opacity, 100%), transparent);
--colors-info-600: color-mix(in oklab, rgb(var(--ui-color-info-600)) var(--un-text-opacity, 100%), transparent);
--colors-info-700: color-mix(in oklab, rgb(var(--ui-color-info-700)) var(--un-text-opacity, 100%), transparent);
--colors-info-800: color-mix(in oklab, rgb(var(--ui-color-info-800)) var(--un-text-opacity, 100%), transparent);
--colors-info-900: color-mix(in oklab, rgb(var(--ui-color-info-900)) var(--un-text-opacity, 100%), transparent);
--colors-info-950: color-mix(in oklab, rgb(var(--ui-color-info-950)) var(--un-text-opacity, 100%), transparent);
--colors-info-DEFAULT: color-mix(in oklab, rgb(var(--ui-color-info)) var(--un-text-opacity, 100%), transparent);
--colors-info-hover: color-mix(in oklab, rgb(var(--ui-color-info-hover)) var(--un-text-opacity, 100%), transparent);
--colors-info-pressed: color-mix(in oklab, rgb(var(--ui-color-info-pressed)) var(--un-text-opacity, 100%), transparent);
--colors-info-focus: color-mix(in oklab, rgb(var(--ui-color-info-focus)) var(--un-text-opacity, 100%), transparent);
--colors-info-disabled: color-mix(in oklab, rgb(var(--ui-color-info-disabled)) var(--un-text-opacity, 100%), transparent);
--colors-success-50: color-mix(in oklab, rgb(var(--ui-color-success-50)) var(--un-text-opacity, 100%), transparent);
--colors-success-100: color-mix(in oklab, rgb(var(--ui-color-success-100)) var(--un-text-opacity, 100%), transparent);
--colors-success-200: color-mix(in oklab, rgb(var(--ui-color-success-200)) var(--un-text-opacity, 100%), transparent);
--colors-success-300: color-mix(in oklab, rgb(var(--ui-color-success-300)) var(--un-text-opacity, 100%), transparent);
--colors-success-400: color-mix(in oklab, rgb(var(--ui-color-success-400)) var(--un-text-opacity, 100%), transparent);
--colors-success-500: color-mix(in oklab, rgb(var(--ui-color-success-500)) var(--un-text-opacity, 100%), transparent);
--colors-success-600: color-mix(in oklab, rgb(var(--ui-color-success-600)) var(--un-text-opacity, 100%), transparent);
--colors-success-700: color-mix(in oklab, rgb(var(--ui-color-success-700)) var(--un-text-opacity, 100%), transparent);
--colors-success-800: color-mix(in oklab, rgb(var(--ui-color-success-800)) var(--un-text-opacity, 100%), transparent);
--colors-success-900: color-mix(in oklab, rgb(var(--ui-color-success-900)) var(--un-text-opacity, 100%), transparent);
--colors-success-950: color-mix(in oklab, rgb(var(--ui-color-success-950)) var(--un-text-opacity, 100%), transparent);
--colors-success-DEFAULT: color-mix(in oklab, rgb(var(--ui-color-success)) var(--un-text-opacity, 100%), transparent);
--colors-success-hover: color-mix(in oklab, rgb(var(--ui-color-success-hover)) var(--un-text-opacity, 100%), transparent);
--colors-success-pressed: color-mix(in oklab, rgb(var(--ui-color-success-pressed)) var(--un-text-opacity, 100%), transparent);
--colors-success-focus: color-mix(in oklab, rgb(var(--ui-color-success-focus)) var(--un-text-opacity, 100%), transparent);
--colors-success-disabled: color-mix(in oklab, rgb(var(--ui-color-success-disabled)) var(--un-text-opacity, 100%), transparent);
--colors-warning-50: color-mix(in oklab, rgb(var(--ui-color-warning-50)) var(--un-text-opacity, 100%), transparent);
--colors-warning-100: color-mix(in oklab, rgb(var(--ui-color-warning-100)) var(--un-text-opacity, 100%), transparent);
--colors-warning-200: color-mix(in oklab, rgb(var(--ui-color-warning-200)) var(--un-text-opacity, 100%), transparent);
--colors-warning-300: color-mix(in oklab, rgb(var(--ui-color-warning-300)) var(--un-text-opacity, 100%), transparent);
--colors-warning-400: color-mix(in oklab, rgb(var(--ui-color-warning-400)) var(--un-text-opacity, 100%), transparent);
--colors-warning-500: color-mix(in oklab, rgb(var(--ui-color-warning-500)) var(--un-text-opacity, 100%), transparent);
--colors-warning-600: color-mix(in oklab, rgb(var(--ui-color-warning-600)) var(--un-text-opacity, 100%), transparent);
--colors-warning-700: color-mix(in oklab, rgb(var(--ui-color-warning-700)) var(--un-text-opacity, 100%), transparent);
--colors-warning-800: color-mix(in oklab, rgb(var(--ui-color-warning-800)) var(--un-text-opacity, 100%), transparent);
--colors-warning-900: color-mix(in oklab, rgb(var(--ui-color-warning-900)) var(--un-text-opacity, 100%), transparent);
--colors-warning-950: color-mix(in oklab, rgb(var(--ui-color-warning-950)) var(--un-text-opacity, 100%), transparent);
--colors-warning-DEFAULT: color-mix(in oklab, rgb(var(--ui-color-warning)) var(--un-text-opacity, 100%), transparent);
--colors-warning-hover: color-mix(in oklab, rgb(var(--ui-color-warning-hover)) var(--un-text-opacity, 100%), transparent);
--colors-warning-pressed: color-mix(in oklab, rgb(var(--ui-color-warning-pressed)) var(--un-text-opacity, 100%), transparent);
--colors-warning-focus: color-mix(in oklab, rgb(var(--ui-color-warning-focus)) var(--un-text-opacity, 100%), transparent);
--colors-warning-disabled: color-mix(in oklab, rgb(var(--ui-color-warning-disabled)) var(--un-text-opacity, 100%), transparent);
--colors-error-50: color-mix(in oklab, rgb(var(--ui-color-error-50)) var(--un-text-opacity, 100%), transparent);
--colors-error-100: color-mix(in oklab, rgb(var(--ui-color-error-100)) var(--un-text-opacity, 100%), transparent);
--colors-error-200: color-mix(in oklab, rgb(var(--ui-color-error-200)) var(--un-text-opacity, 100%), transparent);
--colors-error-300: color-mix(in oklab, rgb(var(--ui-color-error-300)) var(--un-text-opacity, 100%), transparent);
--colors-error-400: color-mix(in oklab, rgb(var(--ui-color-error-400)) var(--un-text-opacity, 100%), transparent);
--colors-error-500: color-mix(in oklab, rgb(var(--ui-color-error-500)) var(--un-text-opacity, 100%), transparent);
--colors-error-600: color-mix(in oklab, rgb(var(--ui-color-error-600)) var(--un-text-opacity, 100%), transparent);
--colors-error-700: color-mix(in oklab, rgb(var(--ui-color-error-700)) var(--un-text-opacity, 100%), transparent);
--colors-error-800: color-mix(in oklab, rgb(var(--ui-color-error-800)) var(--un-text-opacity, 100%), transparent);
--colors-error-900: color-mix(in oklab, rgb(var(--ui-color-error-900)) var(--un-text-opacity, 100%), transparent);
--colors-error-950: color-mix(in oklab, rgb(var(--ui-color-error-950)) var(--un-text-opacity, 100%), transparent);
--colors-error-DEFAULT: color-mix(in oklab, rgb(var(--ui-color-error)) var(--un-text-opacity, 100%), transparent);
--colors-error-hover: color-mix(in oklab, rgb(var(--ui-color-error-hover)) var(--un-text-opacity, 100%), transparent);
--colors-error-pressed: color-mix(in oklab, rgb(var(--ui-color-error-pressed)) var(--un-text-opacity, 100%), transparent);
--colors-error-focus: color-mix(in oklab, rgb(var(--ui-color-error-focus)) var(--un-text-opacity, 100%), transparent);
--colors-error-disabled: color-mix(in oklab, rgb(var(--ui-color-error-disabled)) var(--un-text-opacity, 100%), transparent);
--text-xs-fontSize: 0.75rem;
--text-xs-lineHeight: 1rem;
--text-sm-fontSize: 0.875rem;
--text-sm-lineHeight: 1.25rem;
--text-base-fontSize: 1rem;
--text-base-lineHeight: 1.5rem;
--text-lg-fontSize: 1.125rem;
--text-lg-lineHeight: 1.75rem;
--text-xl-fontSize: 1.25rem;
--text-xl-lineHeight: 1.75rem;
--text-2xl-fontSize: 1.5rem;
--text-2xl-lineHeight: 2rem;
--text-3xl-fontSize: 1.875rem;
--text-3xl-lineHeight: 2.25rem;
--text-4xl-fontSize: 2.25rem;
--text-4xl-lineHeight: 2.5rem;
--text-5xl-fontSize: 3rem;
--text-5xl-lineHeight: 1;
--text-6xl-fontSize: 3.75rem;
--text-6xl-lineHeight: 1;
--text-7xl-fontSize: 4.5rem;
--text-7xl-lineHeight: 1;
--text-8xl-fontSize: 6rem;
--text-8xl-lineHeight: 1;
--text-9xl-fontSize: 8rem;
--text-9xl-lineHeight: 1;
--fontWeight-thin: 100;
--fontWeight-extralight: 200;
--fontWeight-light: 300;
--fontWeight-normal: 400;
--fontWeight-medium: 500;
--fontWeight-semibold: 600;
--fontWeight-bold: 700;
--fontWeight-extrabold: 800;
--fontWeight-black: 900;
--tracking-tighter: -0.05em;
--tracking-tight: -0.025em;
--tracking-normal: 0em;
--tracking-wide: 0.025em;
--tracking-wider: 0.05em;
--tracking-widest: 0.1em;
--leading-none: 1;
--leading-tight: 1.25;
--leading-snug: 1.375;
--leading-normal: 1.5;
--leading-relaxed: 1.625;
--leading-loose: 2;
--textStrokeWidth-DEFAULT: 1.5rem;
--textStrokeWidth-none: 0;
--textStrokeWidth-sm: thin;
--textStrokeWidth-md: medium;
--textStrokeWidth-lg: thick;
--radius-DEFAULT: 0.25rem;
--radius-none: 0;
--radius-xs: 0.125rem;
--radius-sm: 0.25rem;
--radius-md: 0.375rem;
--radius-lg: 0.5rem;
--radius-xl: 0.75rem;
--radius-2xl: 1rem;
--radius-3xl: 1.5rem;
--radius-4xl: 2rem;
--ease-linear: linear;
--ease-in: cubic-bezier(0.4, 0, 1, 1);
--ease-out: cubic-bezier(0, 0, 0.2, 1);
--ease-in-out: cubic-bezier(0.4, 0, 0.2, 1);
--ease-DEFAULT: cubic-bezier(0.4, 0, 0.2, 1);
--blur-DEFAULT: 8px;
--blur-xs: 4px;
--blur-sm: 8px;
--blur-md: 12px;
--blur-lg: 16px;
--blur-xl: 24px;
--blur-2xl: 40px;
--blur-3xl: 64px;
--perspective-dramatic: 100px;
--perspective-near: 300px;
--perspective-normal: 500px;
--perspective-midrange: 800px;
--perspective-distant: 1200px;
--default-transition-duration: 150ms;
--default-transition-timingFunction: cubic-bezier(0.4, 0, 0.2, 1);
--default-font-family: var(--font-sans);
--default-font-featureSettings: var(--font-sans--font-feature-settings);
--default-font-variationSettings: var(--font-sans--font-variation-settings);
--default-monoFont-family: var(--font-mono);
--default-monoFont-featureSettings: var(--font-mono--font-feature-settings);
--default-monoFont-variationSettings: var(--font-mono--font-variation-settings);
--container-3xs: 16rem;
--container-2xs: 18rem;
--container-xs: 20rem;
--container-sm: 24rem;
--container-md: 28rem;
--container-lg: 32rem;
--container-xl: 36rem;
--container-2xl: 42rem;
--container-3xl: 48rem;
--container-4xl: 56rem;
--container-5xl: 64rem;
--container-6xl: 72rem;
--container-7xl: 80rem;
--container-prose: 65ch;
}
/* layer: base */
/*
  1. Prevent padding and border from affecting element width. (https://github.com/mozdevs/cssremedy/issues/4)
  2. Remove default margins and padding
  3. Reset all borders.
*/

*,
::after,
::before,
::backdrop,
::file-selector-button {
  box-sizing: border-box; /* 1 */
  margin: 0; /* 2 */
  padding: 0; /* 2 */
  border: 0 solid; /* 3 */
}

/*
  1. Use a consistent sensible line-height in all browsers.
  2. Prevent adjustments of font size after orientation changes in iOS.
  3. Use a more readable tab size.
  4. Use the user's configured `sans` font-family by default.
  5. Use the user's configured `sans` font-feature-settings by default.
  6. Use the user's configured `sans` font-variation-settings by default.
  7. Disable tap highlights on iOS.
*/

html,
:host {
  line-height: 1.5; /* 1 */
  -webkit-text-size-adjust: 100%; /* 2 */
  tab-size: 4; /* 3 */
  font-family: var(
    --default-font-family,
    ui-sans-serif,
    system-ui,
    sans-serif,
    'Apple Color Emoji',
    'Segoe UI Emoji',
    'Segoe UI Symbol',
    'Noto Color Emoji'
  ); /* 4 */
  font-feature-settings: var(--default-font-featureSettings, normal); /* 5 */
  font-variation-settings: var(--default-font-variationSettings, normal); /* 6 */
  -webkit-tap-highlight-color: transparent; /* 7 */
}

/*
  1. Add the correct height in Firefox.
  2. Correct the inheritance of border color in Firefox. (https://bugzilla.mozilla.org/show_bug.cgi?id=190655)
  3. Reset the default border style to a 1px solid border.
*/

hr {
  height: 0; /* 1 */
  color: inherit; /* 2 */
  border-top-width: 1px; /* 3 */
}

/*
  Add the correct text decoration in Chrome, Edge, and Safari.
*/

abbr:where([title]) {
  -webkit-text-decoration: underline dotted;
  text-decoration: underline dotted;
}

/*
  Remove the default font size and weight for headings.
*/

h1,
h2,
h3,
h4,
h5,
h6 {
  font-size: inherit;
  font-weight: inherit;
}

/*
  Reset links to optimize for opt-in styling instead of opt-out.
*/

a {
  color: inherit;
  -webkit-text-decoration: inherit;
  text-decoration: inherit;
}

/*
  Add the correct font weight in Edge and Safari.
*/

b,
strong {
  font-weight: bolder;
}

/*
  1. Use the user's configured `mono` font-family by default.
  2. Use the user's configured `mono` font-feature-settings by default.
  3. Use the user's configured `mono` font-variation-settings by default.
  4. Correct the odd `em` font sizing in all browsers.
*/

code,
kbd,
samp,
pre {
  font-family: var(
    --default-monoFont-family,
    ui-monospace,
    SFMono-Regular,
    Menlo,
    Monaco,
    Consolas,
    'Liberation Mono',
    'Courier New',
    monospace
  ); /* 1 */
  font-feature-settings: var(--default-monoFont-featureSettings, normal); /* 2 */
  font-variation-settings: var(--default-monoFont-variationSettings, normal); /* 3 */
  font-size: 1em; /* 4 */
}

/*
  Add the correct font size in all browsers.
*/

small {
  font-size: 80%;
}

/*
  Prevent `sub` and `sup` elements from affecting the line height in all browsers.
*/

sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sub {
  bottom: -0.25em;
}

sup {
  top: -0.5em;
}

/*
  1. Remove text indentation from table contents in Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=999088, https://bugs.webkit.org/show_bug.cgi?id=201297)
  2. Correct table border color inheritance in all Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=935729, https://bugs.webkit.org/show_bug.cgi?id=195016)
  3. Remove gaps between table borders by default.
*/

table {
  text-indent: 0; /* 1 */
  border-color: inherit; /* 2 */
  border-collapse: collapse; /* 3 */
}

/*
  Use the modern Firefox focus style for all focusable elements.
*/

:-moz-focusring {
  outline: auto;
}

/*
  Add the correct vertical alignment in Chrome and Firefox.
*/

progress {
  vertical-align: baseline;
}

/*
  Add the correct display in Chrome and Safari.
*/

summary {
  display: list-item;
}

/*
  Make lists unstyled by default.
*/

ol,
ul,
menu {
  list-style: none;
}

/*
  1. Make replaced elements `display: block` by default. (https://github.com/mozdevs/cssremedy/issues/14)
  2. Add `vertical-align: middle` to align replaced elements more sensibly by default. (https://github.com/jensimmons/cssremedy/issues/14#issuecomment-634934210)
      This can trigger a poorly considered lint error in some tools but is included by design.
*/

img,
svg,
video,
canvas,
audio,
iframe,
embed,
object {
  display: block; /* 1 */
  vertical-align: middle; /* 2 */
}

/*
  Constrain images and videos to the parent width and preserve their intrinsic aspect ratio. (https://github.com/mozdevs/cssremedy/issues/14)
*/

img,
video {
  max-width: 100%;
  height: auto;
}

/*
  1. Inherit font styles in all browsers.
  2. Remove border radius in all browsers.
  3. Remove background color in all browsers.
  4. Ensure consistent opacity for disabled states in all browsers.
*/

button,
input,
select,
optgroup,
textarea,
::file-selector-button {
  font: inherit; /* 1 */
  font-feature-settings: inherit; /* 1 */
  font-variation-settings: inherit; /* 1 */
  letter-spacing: inherit; /* 1 */
  color: inherit; /* 1 */
  border-radius: 0; /* 2 */
  background-color: transparent; /* 3 */
  opacity: 1; /* 4 */
}

/*
  Restore default font weight.
*/

:where(select:is([multiple], [size])) optgroup {
  font-weight: bolder;
}

/*
  Restore indentation.
*/

:where(select:is([multiple], [size])) optgroup option {
  padding-inline-start: 20px;
}

/*
  Restore space after button.
*/

::file-selector-button {
  margin-inline-end: 4px;
}

/*
  Reset the default placeholder opacity in Firefox. (https://github.com/tailwindlabs/tailwindcss/issues/3300)
*/

::placeholder {
  opacity: 1;
}

/*
  Set the default placeholder color to a semi-transparent version of the current text color in browsers that do not
  crash when using `color-mix(…)` with `currentcolor`. (https://github.com/tailwindlabs/tailwindcss/issues/17194)
*/

@supports (not (-webkit-appearance: -apple-pay-button)) /* Not Safari */ or
  (contain-intrinsic-size: 1px) /* Safari 17+ */ {
  ::placeholder {
    color: color-mix(in oklab, currentcolor 50%, transparent);
  }
}

/*
  Prevent resizing textareas horizontally by default.
*/

textarea {
  resize: vertical;
}

/*
  Remove the inner padding in Chrome and Safari on macOS.
*/

::-webkit-search-decoration {
  -webkit-appearance: none;
}

/*
  1. Ensure date/time inputs have the same height when empty in iOS Safari.
  2. Ensure text alignment can be changed on date/time inputs in iOS Safari.
*/

::-webkit-date-and-time-value {
  min-height: 1lh; /* 1 */
  text-align: inherit; /* 2 */
}

/*
  Prevent height from changing on date/time inputs in macOS Safari when the input is set to `display: block`.
*/

::-webkit-datetime-edit {
  display: inline-flex;
}

/*
  Remove excess padding from pseudo-elements in date/time inputs to ensure consistent height across browsers.
*/

::-webkit-datetime-edit-fields-wrapper {
  padding: 0;
}

::-webkit-datetime-edit,
::-webkit-datetime-edit-year-field,
::-webkit-datetime-edit-month-field,
::-webkit-datetime-edit-day-field,
::-webkit-datetime-edit-hour-field,
::-webkit-datetime-edit-minute-field,
::-webkit-datetime-edit-second-field,
::-webkit-datetime-edit-millisecond-field,
::-webkit-datetime-edit-meridiem-field {
  padding-block: 0;
}

/*
  Remove the additional `:invalid` styles in Firefox. (https://github.com/mozilla/gecko-dev/blob/2f9eacd9d3d995c937b4251a5557d95d494c9be1/layout/style/res/forms.css#L728-L737)
*/

:-moz-ui-invalid {
  box-shadow: none;
}

/*
  Correct the inability to style the border radius in iOS Safari.
*/

button,
input:where([type='button'], [type='reset'], [type='submit']),
::file-selector-button {
  appearance: button;
}

/*
  Correct the cursor style of increment and decrement buttons in Safari.
*/

::-webkit-inner-spin-button,
::-webkit-outer-spin-button {
  height: auto;
}

/*
  Make elements with the HTML hidden attribute stay hidden by default.
*/

[hidden]:where(:not([hidden='until-found'])) {
  display: none !important;
}
/* layer: icons */
.i-tabler\:alert-triangle{--un-icon:url("data:image/svg+xml;utf8,%3Csvg viewBox='0 0 24 24' width='1em' height='1em' xmlns='http://www.w3.org/2000/svg' %3E%3Cpath fill='none' stroke='currentColor' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M12 9v4m-1.637-9.409L2.257 17.125a1.914 1.914 0 0 0 1.636 2.871h16.214a1.914 1.914 0 0 0 1.636-2.87L13.637 3.59a1.914 1.914 0 0 0-3.274 0zM12 16h.01'/%3E%3C/svg%3E");-webkit-mask:var(--un-icon) no-repeat;mask:var(--un-icon) no-repeat;-webkit-mask-size:100% 100%;mask-size:100% 100%;background-color:currentColor;color:inherit;width:1em;height:1em;}
.i-tabler\:arrow-bar-to-down{--un-icon:url("data:image/svg+xml;utf8,%3Csvg viewBox='0 0 24 24' width='1em' height='1em' xmlns='http://www.w3.org/2000/svg' %3E%3Cpath fill='none' stroke='currentColor' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M4 20h16m-8-6V4m0 10l4-4m-4 4l-4-4'/%3E%3C/svg%3E");-webkit-mask:var(--un-icon) no-repeat;mask:var(--un-icon) no-repeat;-webkit-mask-size:100% 100%;mask-size:100% 100%;background-color:currentColor;color:inherit;width:1em;height:1em;}
.i-tabler\:arrow-bar-to-up{--un-icon:url("data:image/svg+xml;utf8,%3Csvg viewBox='0 0 24 24' width='1em' height='1em' xmlns='http://www.w3.org/2000/svg' %3E%3Cpath fill='none' stroke='currentColor' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M12 10v10m0-10l4 4m-4-4l-4 4M4 4h16'/%3E%3C/svg%3E");-webkit-mask:var(--un-icon) no-repeat;mask:var(--un-icon) no-repeat;-webkit-mask-size:100% 100%;mask-size:100% 100%;background-color:currentColor;color:inherit;width:1em;height:1em;}
.i-tabler\:arrow-down{--un-icon:url("data:image/svg+xml;utf8,%3Csvg viewBox='0 0 24 24' width='1em' height='1em' xmlns='http://www.w3.org/2000/svg' %3E%3Cpath fill='none' stroke='currentColor' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M12 5v14m6-6l-6 6m-6-6l6 6'/%3E%3C/svg%3E");-webkit-mask:var(--un-icon) no-repeat;mask:var(--un-icon) no-repeat;-webkit-mask-size:100% 100%;mask-size:100% 100%;background-color:currentColor;color:inherit;width:1em;height:1em;}
.i-tabler\:arrow-left{--un-icon:url("data:image/svg+xml;utf8,%3Csvg viewBox='0 0 24 24' width='1em' height='1em' xmlns='http://www.w3.org/2000/svg' %3E%3Cpath fill='none' stroke='currentColor' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M5 12h14M5 12l6 6m-6-6l6-6'/%3E%3C/svg%3E");-webkit-mask:var(--un-icon) no-repeat;mask:var(--un-icon) no-repeat;-webkit-mask-size:100% 100%;mask-size:100% 100%;background-color:currentColor;color:inherit;width:1em;height:1em;}
.i-tabler\:arrow-narrow-down{--un-icon:url("data:image/svg+xml;utf8,%3Csvg viewBox='0 0 24 24' width='1em' height='1em' xmlns='http://www.w3.org/2000/svg' %3E%3Cpath fill='none' stroke='currentColor' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M12 5v14m4-4l-4 4m-4-4l4 4'/%3E%3C/svg%3E");-webkit-mask:var(--un-icon) no-repeat;mask:var(--un-icon) no-repeat;-webkit-mask-size:100% 100%;mask-size:100% 100%;background-color:currentColor;color:inherit;width:1em;height:1em;}
.i-tabler\:arrow-narrow-up{--un-icon:url("data:image/svg+xml;utf8,%3Csvg viewBox='0 0 24 24' width='1em' height='1em' xmlns='http://www.w3.org/2000/svg' %3E%3Cpath fill='none' stroke='currentColor' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M12 5v14m4-10l-4-4M8 9l4-4'/%3E%3C/svg%3E");-webkit-mask:var(--un-icon) no-repeat;mask:var(--un-icon) no-repeat;-webkit-mask-size:100% 100%;mask-size:100% 100%;background-color:currentColor;color:inherit;width:1em;height:1em;}
.i-tabler\:arrows-move{--un-icon:url("data:image/svg+xml;utf8,%3Csvg viewBox='0 0 24 24' width='1em' height='1em' xmlns='http://www.w3.org/2000/svg' %3E%3Cpath fill='none' stroke='currentColor' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='m18 9l3 3l-3 3m-3-3h6M6 9l-3 3l3 3m-3-3h6m0 6l3 3l3-3m-3-3v6m3-15l-3-3l-3 3m3-3v6'/%3E%3C/svg%3E");-webkit-mask:var(--un-icon) no-repeat;mask:var(--un-icon) no-repeat;-webkit-mask-size:100% 100%;mask-size:100% 100%;background-color:currentColor;color:inherit;width:1em;height:1em;}
.i-tabler\:at{--un-icon:url("data:image/svg+xml;utf8,%3Csvg viewBox='0 0 24 24' width='1em' height='1em' xmlns='http://www.w3.org/2000/svg' %3E%3Cg fill='none' stroke='currentColor' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Cpath d='M8 12a4 4 0 1 0 8 0a4 4 0 1 0-8 0'/%3E%3Cpath d='M16 12v1.5a2.5 2.5 0 0 0 5 0V12a9 9 0 1 0-5.5 8.28'/%3E%3C/g%3E%3C/svg%3E");-webkit-mask:var(--un-icon) no-repeat;mask:var(--un-icon) no-repeat;-webkit-mask-size:100% 100%;mask-size:100% 100%;background-color:currentColor;color:inherit;width:1em;height:1em;}
.i-tabler\:binary-tree{--un-icon:url("data:image/svg+xml;utf8,%3Csvg viewBox='0 0 24 24' width='1em' height='1em' xmlns='http://www.w3.org/2000/svg' %3E%3Cpath fill='none' stroke='currentColor' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M6 20a2 2 0 1 0-4 0a2 2 0 0 0 4 0M16 4a2 2 0 1 0-4 0a2 2 0 0 0 4 0m0 16a2 2 0 1 0-4 0a2 2 0 0 0 4 0m-5-8a2 2 0 1 0-4 0a2 2 0 0 0 4 0m10 0a2 2 0 1 0-4 0a2 2 0 0 0 4 0M5.058 18.306l2.88-4.606m2.123-3.397l2.877-4.604m-2.873 8.006l2.876 4.6M15.063 5.7l2.881 4.61'/%3E%3C/svg%3E");-webkit-mask:var(--un-icon) no-repeat;mask:var(--un-icon) no-repeat;-webkit-mask-size:100% 100%;mask-size:100% 100%;background-color:currentColor;color:inherit;width:1em;height:1em;}
.i-tabler\:brightness-half{--un-icon:url("data:image/svg+xml;utf8,%3Csvg viewBox='0 0 24 24' width='1em' height='1em' xmlns='http://www.w3.org/2000/svg' %3E%3Cg fill='none' stroke='currentColor' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Cpath d='M12 9a3 3 0 0 0 0 6z'/%3E%3Cpath d='M6 6h3.5L12 3.5L14.5 6H18v3.5l2.5 2.5l-2.5 2.5V18h-3.5L12 20.5L9.5 18H6v-3.5L3.5 12L6 9.5z'/%3E%3C/g%3E%3C/svg%3E");-webkit-mask:var(--un-icon) no-repeat;mask:var(--un-icon) no-repeat;-webkit-mask-size:100% 100%;mask-size:100% 100%;background-color:currentColor;color:inherit;width:1em;height:1em;}
.i-tabler\:calendar-due{--un-icon:url("data:image/svg+xml;utf8,%3Csvg viewBox='0 0 24 24' width='1em' height='1em' xmlns='http://www.w3.org/2000/svg' %3E%3Cg fill='none' stroke='currentColor' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Cpath d='M4 7a2 2 0 0 1 2-2h12a2 2 0 0 1 2 2v12a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2zm12-4v4M8 3v4m-4 4h16'/%3E%3Cpath d='M11 16a1 1 0 1 0 2 0a1 1 0 1 0-2 0'/%3E%3C/g%3E%3C/svg%3E");-webkit-mask:var(--un-icon) no-repeat;mask:var(--un-icon) no-repeat;-webkit-mask-size:100% 100%;mask-size:100% 100%;background-color:currentColor;color:inherit;width:1em;height:1em;}
.i-tabler\:check{--un-icon:url("data:image/svg+xml;utf8,%3Csvg viewBox='0 0 24 24' width='1em' height='1em' xmlns='http://www.w3.org/2000/svg' %3E%3Cpath fill='none' stroke='currentColor' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='m5 12l5 5L20 7'/%3E%3C/svg%3E");-webkit-mask:var(--un-icon) no-repeat;mask:var(--un-icon) no-repeat;-webkit-mask-size:100% 100%;mask-size:100% 100%;background-color:currentColor;color:inherit;width:1em;height:1em;}
.i-tabler\:chevrons-down{--un-icon:url("data:image/svg+xml;utf8,%3Csvg viewBox='0 0 24 24' width='1em' height='1em' xmlns='http://www.w3.org/2000/svg' %3E%3Cpath fill='none' stroke='currentColor' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='m7 7l5 5l5-5M7 13l5 5l5-5'/%3E%3C/svg%3E");-webkit-mask:var(--un-icon) no-repeat;mask:var(--un-icon) no-repeat;-webkit-mask-size:100% 100%;mask-size:100% 100%;background-color:currentColor;color:inherit;width:1em;height:1em;}
.i-tabler\:circle{--un-icon:url("data:image/svg+xml;utf8,%3Csvg viewBox='0 0 24 24' width='1em' height='1em' xmlns='http://www.w3.org/2000/svg' %3E%3Cpath fill='none' stroke='currentColor' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M3 12a9 9 0 1 0 18 0a9 9 0 1 0-18 0'/%3E%3C/svg%3E");-webkit-mask:var(--un-icon) no-repeat;mask:var(--un-icon) no-repeat;-webkit-mask-size:100% 100%;mask-size:100% 100%;background-color:currentColor;color:inherit;width:1em;height:1em;}
.i-tabler\:circle-check-filled{--un-icon:url("data:image/svg+xml;utf8,%3Csvg viewBox='0 0 24 24' width='1em' height='1em' xmlns='http://www.w3.org/2000/svg' %3E%3Cpath fill='currentColor' d='M17 3.34a10 10 0 1 1-14.995 8.984L2 12l.005-.324A10 10 0 0 1 17 3.34m-1.293 5.953a1 1 0 0 0-1.32-.083l-.094.083L11 12.585l-1.293-1.292l-.094-.083a1 1 0 0 0-1.403 1.403l.083.094l2 2l.094.083a1 1 0 0 0 1.226 0l.094-.083l4-4l.083-.094a1 1 0 0 0-.083-1.32'/%3E%3C/svg%3E");-webkit-mask:var(--un-icon) no-repeat;mask:var(--un-icon) no-repeat;-webkit-mask-size:100% 100%;mask-size:100% 100%;background-color:currentColor;color:inherit;width:1em;height:1em;}
.i-tabler\:circle-dot{--un-icon:url("data:image/svg+xml;utf8,%3Csvg viewBox='0 0 24 24' width='1em' height='1em' xmlns='http://www.w3.org/2000/svg' %3E%3Cg fill='none' stroke='currentColor' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Cpath d='M11 12a1 1 0 1 0 2 0a1 1 0 1 0-2 0'/%3E%3Cpath d='M3 12a9 9 0 1 0 18 0a9 9 0 1 0-18 0'/%3E%3C/g%3E%3C/svg%3E");-webkit-mask:var(--un-icon) no-repeat;mask:var(--un-icon) no-repeat;-webkit-mask-size:100% 100%;mask-size:100% 100%;background-color:currentColor;color:inherit;width:1em;height:1em;}
.i-tabler\:circle-x-filled{--un-icon:url("data:image/svg+xml;utf8,%3Csvg viewBox='0 0 24 24' width='1em' height='1em' xmlns='http://www.w3.org/2000/svg' %3E%3Cpath fill='currentColor' d='M17 3.34a10 10 0 1 1-14.995 8.984L2 12l.005-.324A10 10 0 0 1 17 3.34m-6.489 5.8a1 1 0 0 0-1.218 1.567L10.585 12l-1.292 1.293l-.083.094a1 1 0 0 0 1.497 1.32L12 13.415l1.293 1.292l.094.083a1 1 0 0 0 1.32-1.497L13.415 12l1.292-1.293l.083-.094a1 1 0 0 0-1.497-1.32L12 10.585l-1.293-1.292l-.094-.083z'/%3E%3C/svg%3E");-webkit-mask:var(--un-icon) no-repeat;mask:var(--un-icon) no-repeat;-webkit-mask-size:100% 100%;mask-size:100% 100%;background-color:currentColor;color:inherit;width:1em;height:1em;}
.i-tabler\:clock{--un-icon:url("data:image/svg+xml;utf8,%3Csvg viewBox='0 0 24 24' width='1em' height='1em' xmlns='http://www.w3.org/2000/svg' %3E%3Cg fill='none' stroke='currentColor' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Cpath d='M3 12a9 9 0 1 0 18 0a9 9 0 0 0-18 0'/%3E%3Cpath d='M12 7v5l3 3'/%3E%3C/g%3E%3C/svg%3E");-webkit-mask:var(--un-icon) no-repeat;mask:var(--un-icon) no-repeat;-webkit-mask-size:100% 100%;mask-size:100% 100%;background-color:currentColor;color:inherit;width:1em;height:1em;}
.i-tabler\:columns{--un-icon:url("data:image/svg+xml;utf8,%3Csvg viewBox='0 0 24 24' width='1em' height='1em' xmlns='http://www.w3.org/2000/svg' %3E%3Cpath fill='none' stroke='currentColor' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M4 6h5.5M4 10h5.5M4 14h5.5M4 18h5.5m5-12H20m-5.5 4H20m-5.5 4H20m-5.5 4H20'/%3E%3C/svg%3E");-webkit-mask:var(--un-icon) no-repeat;mask:var(--un-icon) no-repeat;-webkit-mask-size:100% 100%;mask-size:100% 100%;background-color:currentColor;color:inherit;width:1em;height:1em;}
.i-tabler\:copy{--un-icon:url("data:image/svg+xml;utf8,%3Csvg viewBox='0 0 24 24' width='1em' height='1em' xmlns='http://www.w3.org/2000/svg' %3E%3Cg fill='none' stroke='currentColor' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Cpath d='M7 9.667A2.667 2.667 0 0 1 9.667 7h8.666A2.667 2.667 0 0 1 21 9.667v8.666A2.667 2.667 0 0 1 18.333 21H9.667A2.667 2.667 0 0 1 7 18.333z'/%3E%3Cpath d='M4.012 16.737A2 2 0 0 1 3 15V5c0-1.1.9-2 2-2h10c.75 0 1.158.385 1.5 1'/%3E%3C/g%3E%3C/svg%3E");-webkit-mask:var(--un-icon) no-repeat;mask:var(--un-icon) no-repeat;-webkit-mask-size:100% 100%;mask-size:100% 100%;background-color:currentColor;color:inherit;width:1em;height:1em;}
.i-tabler\:cursor-text{--un-icon:url("data:image/svg+xml;utf8,%3Csvg viewBox='0 0 24 24' width='1em' height='1em' xmlns='http://www.w3.org/2000/svg' %3E%3Cpath fill='none' stroke='currentColor' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M10 12h4M9 4a3 3 0 0 1 3 3v10a3 3 0 0 1-3 3m6-16a3 3 0 0 0-3 3v10a3 3 0 0 0 3 3'/%3E%3C/svg%3E");-webkit-mask:var(--un-icon) no-repeat;mask:var(--un-icon) no-repeat;-webkit-mask-size:100% 100%;mask-size:100% 100%;background-color:currentColor;color:inherit;width:1em;height:1em;}
.i-tabler\:database-export{--un-icon:url("data:image/svg+xml;utf8,%3Csvg viewBox='0 0 24 24' width='1em' height='1em' xmlns='http://www.w3.org/2000/svg' %3E%3Cg fill='none' stroke='currentColor' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Cpath d='M4 6c0 1.657 3.582 3 8 3s8-1.343 8-3s-3.582-3-8-3s-8 1.343-8 3'/%3E%3Cpath d='M4 6v6c0 1.657 3.582 3 8 3c1.118 0 2.183-.086 3.15-.241M20 12V6'/%3E%3Cpath d='M4 12v6c0 1.657 3.582 3 8 3q.235 0 .466-.005M16 19h6m-3-3l3 3l-3 3'/%3E%3C/g%3E%3C/svg%3E");-webkit-mask:var(--un-icon) no-repeat;mask:var(--un-icon) no-repeat;-webkit-mask-size:100% 100%;mask-size:100% 100%;background-color:currentColor;color:inherit;width:1em;height:1em;}
.i-tabler\:database-import{--un-icon:url("data:image/svg+xml;utf8,%3Csvg viewBox='0 0 24 24' width='1em' height='1em' xmlns='http://www.w3.org/2000/svg' %3E%3Cg fill='none' stroke='currentColor' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Cpath d='M4 6c0 1.657 3.582 3 8 3s8-1.343 8-3s-3.582-3-8-3s-8 1.343-8 3'/%3E%3Cpath d='M4 6v6c0 1.657 3.582 3 8 3c.856 0 1.68-.05 2.454-.144M20 12V6'/%3E%3Cpath d='M4 12v6c0 1.657 3.582 3 8 3q.256 0 .51-.006M19 22v-6m3 3l-3-3l-3 3'/%3E%3C/g%3E%3C/svg%3E");-webkit-mask:var(--un-icon) no-repeat;mask:var(--un-icon) no-repeat;-webkit-mask-size:100% 100%;mask-size:100% 100%;background-color:currentColor;color:inherit;width:1em;height:1em;}
.i-tabler\:device-desktop-up{--un-icon:url("data:image/svg+xml;utf8,%3Csvg viewBox='0 0 24 24' width='1em' height='1em' xmlns='http://www.w3.org/2000/svg' %3E%3Cpath fill='none' stroke='currentColor' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M13.5 16H4a1 1 0 0 1-1-1V5a1 1 0 0 1 1-1h16a1 1 0 0 1 1 1v7.5M19 22v-6m3 3l-3-3l-3 3m-9 1h5m-3-4v4'/%3E%3C/svg%3E");-webkit-mask:var(--un-icon) no-repeat;mask:var(--un-icon) no-repeat;-webkit-mask-size:100% 100%;mask-size:100% 100%;background-color:currentColor;color:inherit;width:1em;height:1em;}
.i-tabler\:device-floppy{--un-icon:url("data:image/svg+xml;utf8,%3Csvg viewBox='0 0 24 24' width='1em' height='1em' xmlns='http://www.w3.org/2000/svg' %3E%3Cg fill='none' stroke='currentColor' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Cpath d='M6 4h10l4 4v10a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2'/%3E%3Cpath d='M10 14a2 2 0 1 0 4 0a2 2 0 1 0-4 0m4-10v4H8V4'/%3E%3C/g%3E%3C/svg%3E");-webkit-mask:var(--un-icon) no-repeat;mask:var(--un-icon) no-repeat;-webkit-mask-size:100% 100%;mask-size:100% 100%;background-color:currentColor;color:inherit;width:1em;height:1em;}
.i-tabler\:directions{--un-icon:url("data:image/svg+xml;utf8,%3Csvg viewBox='0 0 24 24' width='1em' height='1em' xmlns='http://www.w3.org/2000/svg' %3E%3Cpath fill='none' stroke='currentColor' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M12 21v-4m0-4V9m0-4V3m-2 18h4M8 5v4h11l2-2l-2-2zm6 8v4H6l-2-2l2-2z'/%3E%3C/svg%3E");-webkit-mask:var(--un-icon) no-repeat;mask:var(--un-icon) no-repeat;-webkit-mask-size:100% 100%;mask-size:100% 100%;background-color:currentColor;color:inherit;width:1em;height:1em;}
.i-tabler\:dots-vertical{--un-icon:url("data:image/svg+xml;utf8,%3Csvg viewBox='0 0 24 24' width='1em' height='1em' xmlns='http://www.w3.org/2000/svg' %3E%3Cpath fill='none' stroke='currentColor' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M11 12a1 1 0 1 0 2 0a1 1 0 1 0-2 0m0 7a1 1 0 1 0 2 0a1 1 0 1 0-2 0m0-14a1 1 0 1 0 2 0a1 1 0 1 0-2 0'/%3E%3C/svg%3E");-webkit-mask:var(--un-icon) no-repeat;mask:var(--un-icon) no-repeat;-webkit-mask-size:100% 100%;mask-size:100% 100%;background-color:currentColor;color:inherit;width:1em;height:1em;}
.i-tabler\:download{--un-icon:url("data:image/svg+xml;utf8,%3Csvg viewBox='0 0 24 24' width='1em' height='1em' xmlns='http://www.w3.org/2000/svg' %3E%3Cpath fill='none' stroke='currentColor' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M4 17v2a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2v-2M7 11l5 5l5-5m-5-7v12'/%3E%3C/svg%3E");-webkit-mask:var(--un-icon) no-repeat;mask:var(--un-icon) no-repeat;-webkit-mask-size:100% 100%;mask-size:100% 100%;background-color:currentColor;color:inherit;width:1em;height:1em;}
.i-tabler\:edit{--un-icon:url("data:image/svg+xml;utf8,%3Csvg viewBox='0 0 24 24' width='1em' height='1em' xmlns='http://www.w3.org/2000/svg' %3E%3Cg fill='none' stroke='currentColor' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Cpath d='M7 7H6a2 2 0 0 0-2 2v9a2 2 0 0 0 2 2h9a2 2 0 0 0 2-2v-1'/%3E%3Cpath d='M20.385 6.585a2.1 2.1 0 0 0-2.97-2.97L9 12v3h3zM16 5l3 3'/%3E%3C/g%3E%3C/svg%3E");-webkit-mask:var(--un-icon) no-repeat;mask:var(--un-icon) no-repeat;-webkit-mask-size:100% 100%;mask-size:100% 100%;background-color:currentColor;color:inherit;width:1em;height:1em;}
.i-tabler\:exclamation-circle-filled{--un-icon:url("data:image/svg+xml;utf8,%3Csvg viewBox='0 0 24 24' width='1em' height='1em' xmlns='http://www.w3.org/2000/svg' %3E%3Cpath fill='currentColor' d='M17 3.34A10 10 0 1 1 2 12l.005-.324A10 10 0 0 1 17 3.34M12 15a1 1 0 0 0-1 1v.01a1 1 0 0 0 2 0V16a1 1 0 0 0-1-1m0-7a1 1 0 0 0-1 1v4a1 1 0 0 0 2 0V9a1 1 0 0 0-1-1'/%3E%3C/svg%3E");-webkit-mask:var(--un-icon) no-repeat;mask:var(--un-icon) no-repeat;-webkit-mask-size:100% 100%;mask-size:100% 100%;background-color:currentColor;color:inherit;width:1em;height:1em;}
.i-tabler\:eye{--un-icon:url("data:image/svg+xml;utf8,%3Csvg viewBox='0 0 24 24' width='1em' height='1em' xmlns='http://www.w3.org/2000/svg' %3E%3Cg fill='none' stroke='currentColor' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Cpath d='M10 12a2 2 0 1 0 4 0a2 2 0 0 0-4 0'/%3E%3Cpath d='M21 12q-3.6 6-9 6t-9-6q3.6-6 9-6t9 6'/%3E%3C/g%3E%3C/svg%3E");-webkit-mask:var(--un-icon) no-repeat;mask:var(--un-icon) no-repeat;-webkit-mask-size:100% 100%;mask-size:100% 100%;background-color:currentColor;color:inherit;width:1em;height:1em;}
.i-tabler\:eye-off{--un-icon:url("data:image/svg+xml;utf8,%3Csvg viewBox='0 0 24 24' width='1em' height='1em' xmlns='http://www.w3.org/2000/svg' %3E%3Cg fill='none' stroke='currentColor' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Cpath d='M10.585 10.587a2 2 0 0 0 2.829 2.828'/%3E%3Cpath d='M16.681 16.673A8.7 8.7 0 0 1 12 18q-5.4 0-9-6q1.908-3.18 4.32-4.674m2.86-1.146A9 9 0 0 1 12 6q5.4 0 9 6q-1 1.665-2.138 2.87M3 3l18 18'/%3E%3C/g%3E%3C/svg%3E");-webkit-mask:var(--un-icon) no-repeat;mask:var(--un-icon) no-repeat;-webkit-mask-size:100% 100%;mask-size:100% 100%;background-color:currentColor;color:inherit;width:1em;height:1em;}
.i-tabler\:file-export{--un-icon:url("data:image/svg+xml;utf8,%3Csvg viewBox='0 0 24 24' width='1em' height='1em' xmlns='http://www.w3.org/2000/svg' %3E%3Cg fill='none' stroke='currentColor' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Cpath d='M14 3v4a1 1 0 0 0 1 1h4'/%3E%3Cpath d='M11.5 21H7a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h7l5 5v5m-5 6h7m-3-3l3 3l-3 3'/%3E%3C/g%3E%3C/svg%3E");-webkit-mask:var(--un-icon) no-repeat;mask:var(--un-icon) no-repeat;-webkit-mask-size:100% 100%;mask-size:100% 100%;background-color:currentColor;color:inherit;width:1em;height:1em;}
.i-tabler\:file-upload{--un-icon:url("data:image/svg+xml;utf8,%3Csvg viewBox='0 0 24 24' width='1em' height='1em' xmlns='http://www.w3.org/2000/svg' %3E%3Cg fill='none' stroke='currentColor' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Cpath d='M14 3v4a1 1 0 0 0 1 1h4'/%3E%3Cpath d='M17 21H7a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h7l5 5v11a2 2 0 0 1-2 2m-5-10v6'/%3E%3Cpath d='M9.5 13.5L12 11l2.5 2.5'/%3E%3C/g%3E%3C/svg%3E");-webkit-mask:var(--un-icon) no-repeat;mask:var(--un-icon) no-repeat;-webkit-mask-size:100% 100%;mask-size:100% 100%;background-color:currentColor;color:inherit;width:1em;height:1em;}
.i-tabler\:folder{--un-icon:url("data:image/svg+xml;utf8,%3Csvg viewBox='0 0 24 24' width='1em' height='1em' xmlns='http://www.w3.org/2000/svg' %3E%3Cpath fill='none' stroke='currentColor' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M5 4h4l3 3h7a2 2 0 0 1 2 2v8a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2'/%3E%3C/svg%3E");-webkit-mask:var(--un-icon) no-repeat;mask:var(--un-icon) no-repeat;-webkit-mask-size:100% 100%;mask-size:100% 100%;background-color:currentColor;color:inherit;width:1em;height:1em;}
.i-tabler\:forms{--un-icon:url("data:image/svg+xml;utf8,%3Csvg viewBox='0 0 24 24' width='1em' height='1em' xmlns='http://www.w3.org/2000/svg' %3E%3Cpath fill='none' stroke='currentColor' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M12 3a3 3 0 0 0-3 3v12a3 3 0 0 0 3 3M6 3a3 3 0 0 1 3 3v12a3 3 0 0 1-3 3m7-14h7a1 1 0 0 1 1 1v8a1 1 0 0 1-1 1h-7M5 7H4a1 1 0 0 0-1 1v8a1 1 0 0 0 1 1h1m12-5h.01M13 12h.01'/%3E%3C/svg%3E");-webkit-mask:var(--un-icon) no-repeat;mask:var(--un-icon) no-repeat;-webkit-mask-size:100% 100%;mask-size:100% 100%;background-color:currentColor;color:inherit;width:1em;height:1em;}
.i-tabler\:grid-4x4{--un-icon:url("data:image/svg+xml;utf8,%3Csvg viewBox='0 0 24 24' width='1em' height='1em' xmlns='http://www.w3.org/2000/svg' %3E%3Cpath fill='none' stroke='currentColor' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M3 6h18M3 12h18M3 18h18M6 3v18m6-18v18m6-18v18'/%3E%3C/svg%3E");-webkit-mask:var(--un-icon) no-repeat;mask:var(--un-icon) no-repeat;-webkit-mask-size:100% 100%;mask-size:100% 100%;background-color:currentColor;color:inherit;width:1em;height:1em;}
.i-tabler\:grid-dots{--un-icon:url("data:image/svg+xml;utf8,%3Csvg viewBox='0 0 24 24' width='1em' height='1em' xmlns='http://www.w3.org/2000/svg' %3E%3Cpath fill='none' stroke='currentColor' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M4 5a1 1 0 1 0 2 0a1 1 0 1 0-2 0m7 0a1 1 0 1 0 2 0a1 1 0 1 0-2 0m7 0a1 1 0 1 0 2 0a1 1 0 1 0-2 0M4 12a1 1 0 1 0 2 0a1 1 0 1 0-2 0m7 0a1 1 0 1 0 2 0a1 1 0 1 0-2 0m7 0a1 1 0 1 0 2 0a1 1 0 1 0-2 0M4 19a1 1 0 1 0 2 0a1 1 0 1 0-2 0m7 0a1 1 0 1 0 2 0a1 1 0 1 0-2 0m7 0a1 1 0 1 0 2 0a1 1 0 1 0-2 0'/%3E%3C/svg%3E");-webkit-mask:var(--un-icon) no-repeat;mask:var(--un-icon) no-repeat;-webkit-mask-size:100% 100%;mask-size:100% 100%;background-color:currentColor;color:inherit;width:1em;height:1em;}
.i-tabler\:help{--un-icon:url("data:image/svg+xml;utf8,%3Csvg viewBox='0 0 24 24' width='1em' height='1em' xmlns='http://www.w3.org/2000/svg' %3E%3Cg fill='none' stroke='currentColor' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Cpath d='M3 12a9 9 0 1 0 18 0a9 9 0 1 0-18 0m9 5v.01'/%3E%3Cpath d='M12 13.5a1.5 1.5 0 0 1 1-1.5a2.6 2.6 0 1 0-3-4'/%3E%3C/g%3E%3C/svg%3E");-webkit-mask:var(--un-icon) no-repeat;mask:var(--un-icon) no-repeat;-webkit-mask-size:100% 100%;mask-size:100% 100%;background-color:currentColor;color:inherit;width:1em;height:1em;}
.i-tabler\:hexagons{--un-icon:url("data:image/svg+xml;utf8,%3Csvg viewBox='0 0 24 24' width='1em' height='1em' xmlns='http://www.w3.org/2000/svg' %3E%3Cpath fill='none' stroke='currentColor' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M4 18v-5l4-2l4 2v5l-4 2zm4-7V6l4-2l4 2v5m-4 2l4-2l4 2v5l-4 2l-4-2'/%3E%3C/svg%3E");-webkit-mask:var(--un-icon) no-repeat;mask:var(--un-icon) no-repeat;-webkit-mask-size:100% 100%;mask-size:100% 100%;background-color:currentColor;color:inherit;width:1em;height:1em;}
.i-tabler\:info-circle{--un-icon:url("data:image/svg+xml;utf8,%3Csvg viewBox='0 0 24 24' width='1em' height='1em' xmlns='http://www.w3.org/2000/svg' %3E%3Cg fill='none' stroke='currentColor' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Cpath d='M3 12a9 9 0 1 0 18 0a9 9 0 0 0-18 0m9-3h.01'/%3E%3Cpath d='M11 12h1v4h1'/%3E%3C/g%3E%3C/svg%3E");-webkit-mask:var(--un-icon) no-repeat;mask:var(--un-icon) no-repeat;-webkit-mask-size:100% 100%;mask-size:100% 100%;background-color:currentColor;color:inherit;width:1em;height:1em;}
.i-tabler\:info-circle-filled{--un-icon:url("data:image/svg+xml;utf8,%3Csvg viewBox='0 0 24 24' width='1em' height='1em' xmlns='http://www.w3.org/2000/svg' %3E%3Cpath fill='currentColor' d='M12 2c5.523 0 10 4.477 10 10a10 10 0 0 1-19.995.324L2 12l.004-.28C2.152 6.327 6.57 2 12 2m0 9h-1l-.117.007a1 1 0 0 0 0 1.986L11 13v3l.007.117a1 1 0 0 0 .876.876L12 17h1l.117-.007a1 1 0 0 0 .876-.876L14 16l-.007-.117a1 1 0 0 0-.764-.857l-.112-.02L13 15v-3l-.007-.117a1 1 0 0 0-.876-.876zm.01-3l-.127.007a1 1 0 0 0 0 1.986L12 10l.127-.007a1 1 0 0 0 0-1.986z'/%3E%3C/svg%3E");-webkit-mask:var(--un-icon) no-repeat;mask:var(--un-icon) no-repeat;-webkit-mask-size:100% 100%;mask-size:100% 100%;background-color:currentColor;color:inherit;width:1em;height:1em;}
.i-tabler\:language{--un-icon:url("data:image/svg+xml;utf8,%3Csvg viewBox='0 0 24 24' width='1em' height='1em' xmlns='http://www.w3.org/2000/svg' %3E%3Cg fill='none' stroke='currentColor' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Cpath d='M4 5h7M9 3v2c0 4.418-2.239 8-5 8'/%3E%3Cpath d='M5 9c0 2.144 2.952 3.908 6.7 4m.3 7l4-9l4 9m-.9-2h-6.2'/%3E%3C/g%3E%3C/svg%3E");-webkit-mask:var(--un-icon) no-repeat;mask:var(--un-icon) no-repeat;-webkit-mask-size:100% 100%;mask-size:100% 100%;background-color:currentColor;color:inherit;width:1em;height:1em;}
.i-tabler\:layout{--un-icon:url("data:image/svg+xml;utf8,%3Csvg viewBox='0 0 24 24' width='1em' height='1em' xmlns='http://www.w3.org/2000/svg' %3E%3Cpath fill='none' stroke='currentColor' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M4 6a2 2 0 0 1 2-2h2a2 2 0 0 1 2 2v1a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2zm0 9a2 2 0 0 1 2-2h2a2 2 0 0 1 2 2v3a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2zm10-9a2 2 0 0 1 2-2h2a2 2 0 0 1 2 2v12a2 2 0 0 1-2 2h-2a2 2 0 0 1-2-2z'/%3E%3C/svg%3E");-webkit-mask:var(--un-icon) no-repeat;mask:var(--un-icon) no-repeat;-webkit-mask-size:100% 100%;mask-size:100% 100%;background-color:currentColor;color:inherit;width:1em;height:1em;}
.i-tabler\:layout-align-bottom{--un-icon:url("data:image/svg+xml;utf8,%3Csvg viewBox='0 0 24 24' width='1em' height='1em' xmlns='http://www.w3.org/2000/svg' %3E%3Cpath fill='none' stroke='currentColor' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M4 20h16M9 6a2 2 0 0 1 2-2h2a2 2 0 0 1 2 2v8a2 2 0 0 1-2 2h-2a2 2 0 0 1-2-2z'/%3E%3C/svg%3E");-webkit-mask:var(--un-icon) no-repeat;mask:var(--un-icon) no-repeat;-webkit-mask-size:100% 100%;mask-size:100% 100%;background-color:currentColor;color:inherit;width:1em;height:1em;}
.i-tabler\:layout-align-center{--un-icon:url("data:image/svg+xml;utf8,%3Csvg viewBox='0 0 24 24' width='1em' height='1em' xmlns='http://www.w3.org/2000/svg' %3E%3Cpath fill='none' stroke='currentColor' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M12 4v5m0 6v5m-6-9a2 2 0 0 1 2-2h8a2 2 0 0 1 2 2v2a2 2 0 0 1-2 2H8a2 2 0 0 1-2-2z'/%3E%3C/svg%3E");-webkit-mask:var(--un-icon) no-repeat;mask:var(--un-icon) no-repeat;-webkit-mask-size:100% 100%;mask-size:100% 100%;background-color:currentColor;color:inherit;width:1em;height:1em;}
.i-tabler\:layout-align-left{--un-icon:url("data:image/svg+xml;utf8,%3Csvg viewBox='0 0 24 24' width='1em' height='1em' xmlns='http://www.w3.org/2000/svg' %3E%3Cpath fill='none' stroke='currentColor' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M4 4v16m4-9a2 2 0 0 1 2-2h8a2 2 0 0 1 2 2v2a2 2 0 0 1-2 2h-8a2 2 0 0 1-2-2z'/%3E%3C/svg%3E");-webkit-mask:var(--un-icon) no-repeat;mask:var(--un-icon) no-repeat;-webkit-mask-size:100% 100%;mask-size:100% 100%;background-color:currentColor;color:inherit;width:1em;height:1em;}
.i-tabler\:layout-align-middle{--un-icon:url("data:image/svg+xml;utf8,%3Csvg viewBox='0 0 24 24' width='1em' height='1em' xmlns='http://www.w3.org/2000/svg' %3E%3Cpath fill='none' stroke='currentColor' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M4 12h5m6 0h5M9 8a2 2 0 0 1 2-2h2a2 2 0 0 1 2 2v8a2 2 0 0 1-2 2h-2a2 2 0 0 1-2-2z'/%3E%3C/svg%3E");-webkit-mask:var(--un-icon) no-repeat;mask:var(--un-icon) no-repeat;-webkit-mask-size:100% 100%;mask-size:100% 100%;background-color:currentColor;color:inherit;width:1em;height:1em;}
.i-tabler\:layout-align-right{--un-icon:url("data:image/svg+xml;utf8,%3Csvg viewBox='0 0 24 24' width='1em' height='1em' xmlns='http://www.w3.org/2000/svg' %3E%3Cpath fill='none' stroke='currentColor' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M20 4v16M4 11a2 2 0 0 1 2-2h8a2 2 0 0 1 2 2v2a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2z'/%3E%3C/svg%3E");-webkit-mask:var(--un-icon) no-repeat;mask:var(--un-icon) no-repeat;-webkit-mask-size:100% 100%;mask-size:100% 100%;background-color:currentColor;color:inherit;width:1em;height:1em;}
.i-tabler\:layout-align-top{--un-icon:url("data:image/svg+xml;utf8,%3Csvg viewBox='0 0 24 24' width='1em' height='1em' xmlns='http://www.w3.org/2000/svg' %3E%3Cpath fill='none' stroke='currentColor' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M4 4h16M9 10a2 2 0 0 1 2-2h2a2 2 0 0 1 2 2v8a2 2 0 0 1-2 2h-2a2 2 0 0 1-2-2z'/%3E%3C/svg%3E");-webkit-mask:var(--un-icon) no-repeat;mask:var(--un-icon) no-repeat;-webkit-mask-size:100% 100%;mask-size:100% 100%;background-color:currentColor;color:inherit;width:1em;height:1em;}
.i-tabler\:layout-distribute-horizontal{--un-icon:url("data:image/svg+xml;utf8,%3Csvg viewBox='0 0 24 24' width='1em' height='1em' xmlns='http://www.w3.org/2000/svg' %3E%3Cpath fill='none' stroke='currentColor' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M4 4h16M4 20h16M6 11a2 2 0 0 1 2-2h8a2 2 0 0 1 2 2v2a2 2 0 0 1-2 2H8a2 2 0 0 1-2-2z'/%3E%3C/svg%3E");-webkit-mask:var(--un-icon) no-repeat;mask:var(--un-icon) no-repeat;-webkit-mask-size:100% 100%;mask-size:100% 100%;background-color:currentColor;color:inherit;width:1em;height:1em;}
.i-tabler\:layout-distribute-vertical{--un-icon:url("data:image/svg+xml;utf8,%3Csvg viewBox='0 0 24 24' width='1em' height='1em' xmlns='http://www.w3.org/2000/svg' %3E%3Cpath fill='none' stroke='currentColor' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M4 4v16M20 4v16M9 8a2 2 0 0 1 2-2h2a2 2 0 0 1 2 2v8a2 2 0 0 1-2 2h-2a2 2 0 0 1-2-2z'/%3E%3C/svg%3E");-webkit-mask:var(--un-icon) no-repeat;mask:var(--un-icon) no-repeat;-webkit-mask-size:100% 100%;mask-size:100% 100%;background-color:currentColor;color:inherit;width:1em;height:1em;}
.i-tabler\:layout-sidebar-inactive{--un-icon:url("data:image/svg+xml;utf8,%3Csvg viewBox='0 0 24 24' width='1em' height='1em' xmlns='http://www.w3.org/2000/svg' %3E%3Cpath fill='none' stroke='currentColor' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M4 6a2 2 0 0 1 2-2h12a2 2 0 0 1 2 2v12a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2zm5-2v1m0 4v1m0 4v1m0 4v1'/%3E%3C/svg%3E");-webkit-mask:var(--un-icon) no-repeat;mask:var(--un-icon) no-repeat;-webkit-mask-size:100% 100%;mask-size:100% 100%;background-color:currentColor;color:inherit;width:1em;height:1em;}
.i-tabler\:layout-sidebar-right-inactive{--un-icon:url("data:image/svg+xml;utf8,%3Csvg viewBox='0 0 24 24' width='1em' height='1em' xmlns='http://www.w3.org/2000/svg' %3E%3Cpath fill='none' stroke='currentColor' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M4 6a2 2 0 0 1 2-2h12a2 2 0 0 1 2 2v12a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2zm11-2v1m0 4v1m0 4v1m0 4v1'/%3E%3C/svg%3E");-webkit-mask:var(--un-icon) no-repeat;mask:var(--un-icon) no-repeat;-webkit-mask-size:100% 100%;mask-size:100% 100%;background-color:currentColor;color:inherit;width:1em;height:1em;}
.i-tabler\:link{--un-icon:url("data:image/svg+xml;utf8,%3Csvg viewBox='0 0 24 24' width='1em' height='1em' xmlns='http://www.w3.org/2000/svg' %3E%3Cpath fill='none' stroke='currentColor' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='m9 15l6-6m-4-3l.463-.536a5 5 0 0 1 7.071 7.072L18 13m-5 5l-.397.534a5.07 5.07 0 0 1-7.127 0a4.97 4.97 0 0 1 0-7.071L6 11'/%3E%3C/svg%3E");-webkit-mask:var(--un-icon) no-repeat;mask:var(--un-icon) no-repeat;-webkit-mask-size:100% 100%;mask-size:100% 100%;background-color:currentColor;color:inherit;width:1em;height:1em;}
.i-tabler\:list-tree{--un-icon:url("data:image/svg+xml;utf8,%3Csvg viewBox='0 0 24 24' width='1em' height='1em' xmlns='http://www.w3.org/2000/svg' %3E%3Cpath fill='none' stroke='currentColor' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M9 6h11m-8 6h8m-5 6h5M5 6v.01M8 12v.01M11 18v.01'/%3E%3C/svg%3E");-webkit-mask:var(--un-icon) no-repeat;mask:var(--un-icon) no-repeat;-webkit-mask-size:100% 100%;mask-size:100% 100%;background-color:currentColor;color:inherit;width:1em;height:1em;}
.i-tabler\:loader{--un-icon:url("data:image/svg+xml;utf8,%3Csvg viewBox='0 0 24 24' width='1em' height='1em' xmlns='http://www.w3.org/2000/svg' %3E%3Cpath fill='none' stroke='currentColor' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M12 6V3m4.25 4.75L18.4 5.6M18 12h3m-4.75 4.25l2.15 2.15M12 18v3m-4.25-4.75L5.6 18.4M6 12H3m4.75-4.25L5.6 5.6'/%3E%3C/svg%3E");-webkit-mask:var(--un-icon) no-repeat;mask:var(--un-icon) no-repeat;-webkit-mask-size:100% 100%;mask-size:100% 100%;background-color:currentColor;color:inherit;width:1em;height:1em;}
.i-tabler\:lock{--un-icon:url("data:image/svg+xml;utf8,%3Csvg viewBox='0 0 24 24' width='1em' height='1em' xmlns='http://www.w3.org/2000/svg' %3E%3Cg fill='none' stroke='currentColor' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Cpath d='M5 13a2 2 0 0 1 2-2h10a2 2 0 0 1 2 2v6a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2z'/%3E%3Cpath d='M11 16a1 1 0 1 0 2 0a1 1 0 0 0-2 0m-3-5V7a4 4 0 1 1 8 0v4'/%3E%3C/g%3E%3C/svg%3E");-webkit-mask:var(--un-icon) no-repeat;mask:var(--un-icon) no-repeat;-webkit-mask-size:100% 100%;mask-size:100% 100%;background-color:currentColor;color:inherit;width:1em;height:1em;}
.i-tabler\:logout{--un-icon:url("data:image/svg+xml;utf8,%3Csvg viewBox='0 0 24 24' width='1em' height='1em' xmlns='http://www.w3.org/2000/svg' %3E%3Cg fill='none' stroke='currentColor' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Cpath d='M14 8V6a2 2 0 0 0-2-2H5a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h7a2 2 0 0 0 2-2v-2'/%3E%3Cpath d='M9 12h12l-3-3m0 6l3-3'/%3E%3C/g%3E%3C/svg%3E");-webkit-mask:var(--un-icon) no-repeat;mask:var(--un-icon) no-repeat;-webkit-mask-size:100% 100%;mask-size:100% 100%;background-color:currentColor;color:inherit;width:1em;height:1em;}
.i-tabler\:menu-2{--un-icon:url("data:image/svg+xml;utf8,%3Csvg viewBox='0 0 24 24' width='1em' height='1em' xmlns='http://www.w3.org/2000/svg' %3E%3Cpath fill='none' stroke='currentColor' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M4 6h16M4 12h16M4 18h16'/%3E%3C/svg%3E");-webkit-mask:var(--un-icon) no-repeat;mask:var(--un-icon) no-repeat;-webkit-mask-size:100% 100%;mask-size:100% 100%;background-color:currentColor;color:inherit;width:1em;height:1em;}
.i-tabler\:moon{--un-icon:url("data:image/svg+xml;utf8,%3Csvg viewBox='0 0 24 24' width='1em' height='1em' xmlns='http://www.w3.org/2000/svg' %3E%3Cpath fill='none' stroke='currentColor' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M12 3h.393a7.5 7.5 0 0 0 7.92 12.446A9 9 0 1 1 12 2.992z'/%3E%3C/svg%3E");-webkit-mask:var(--un-icon) no-repeat;mask:var(--un-icon) no-repeat;-webkit-mask-size:100% 100%;mask-size:100% 100%;background-color:currentColor;color:inherit;width:1em;height:1em;}
.i-tabler\:number{--un-icon:url("data:image/svg+xml;utf8,%3Csvg viewBox='0 0 24 24' width='1em' height='1em' xmlns='http://www.w3.org/2000/svg' %3E%3Cpath fill='none' stroke='currentColor' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M4 17V7l7 10V7m4 10h5m-5-7a2.5 3 0 1 0 5 0a2.5 3 0 1 0-5 0'/%3E%3C/svg%3E");-webkit-mask:var(--un-icon) no-repeat;mask:var(--un-icon) no-repeat;-webkit-mask-size:100% 100%;mask-size:100% 100%;background-color:currentColor;color:inherit;width:1em;height:1em;}
.i-tabler\:palette{--un-icon:url("data:image/svg+xml;utf8,%3Csvg viewBox='0 0 24 24' width='1em' height='1em' xmlns='http://www.w3.org/2000/svg' %3E%3Cg fill='none' stroke='currentColor' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Cpath d='M12 21a9 9 0 0 1 0-18c4.97 0 9 3.582 9 8c0 1.06-.474 2.078-1.318 2.828S17.693 15 16.5 15H14a2 2 0 0 0-1 3.75A1.3 1.3 0 0 1 12 21'/%3E%3Cpath d='M7.5 10.5a1 1 0 1 0 2 0a1 1 0 1 0-2 0m4-3a1 1 0 1 0 2 0a1 1 0 1 0-2 0m4 3a1 1 0 1 0 2 0a1 1 0 1 0-2 0'/%3E%3C/g%3E%3C/svg%3E");-webkit-mask:var(--un-icon) no-repeat;mask:var(--un-icon) no-repeat;-webkit-mask-size:100% 100%;mask-size:100% 100%;background-color:currentColor;color:inherit;width:1em;height:1em;}
.i-tabler\:pencil{--un-icon:url("data:image/svg+xml;utf8,%3Csvg viewBox='0 0 24 24' width='1em' height='1em' xmlns='http://www.w3.org/2000/svg' %3E%3Cpath fill='none' stroke='currentColor' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M4 20h4L18.5 9.5a2.828 2.828 0 1 0-4-4L4 16zm9.5-13.5l4 4'/%3E%3C/svg%3E");-webkit-mask:var(--un-icon) no-repeat;mask:var(--un-icon) no-repeat;-webkit-mask-size:100% 100%;mask-size:100% 100%;background-color:currentColor;color:inherit;width:1em;height:1em;}
.i-tabler\:pencil-down{--un-icon:url("data:image/svg+xml;utf8,%3Csvg viewBox='0 0 24 24' width='1em' height='1em' xmlns='http://www.w3.org/2000/svg' %3E%3Cpath fill='none' stroke='currentColor' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M4 20h4L18.5 9.5a2.828 2.828 0 1 0-4-4L4 16zm9.5-13.5l4 4M19 16v6m3-3l-3 3l-3-3'/%3E%3C/svg%3E");-webkit-mask:var(--un-icon) no-repeat;mask:var(--un-icon) no-repeat;-webkit-mask-size:100% 100%;mask-size:100% 100%;background-color:currentColor;color:inherit;width:1em;height:1em;}
.i-tabler\:photo{--un-icon:url("data:image/svg+xml;utf8,%3Csvg viewBox='0 0 24 24' width='1em' height='1em' xmlns='http://www.w3.org/2000/svg' %3E%3Cg fill='none' stroke='currentColor' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Cpath d='M15 8h.01M3 6a3 3 0 0 1 3-3h12a3 3 0 0 1 3 3v12a3 3 0 0 1-3 3H6a3 3 0 0 1-3-3z'/%3E%3Cpath d='m3 16l5-5c.928-.893 2.072-.893 3 0l5 5'/%3E%3Cpath d='m14 14l1-1c.928-.893 2.072-.893 3 0l3 3'/%3E%3C/g%3E%3C/svg%3E");-webkit-mask:var(--un-icon) no-repeat;mask:var(--un-icon) no-repeat;-webkit-mask-size:100% 100%;mask-size:100% 100%;background-color:currentColor;color:inherit;width:1em;height:1em;}
.i-tabler\:pinned{--un-icon:url("data:image/svg+xml;utf8,%3Csvg viewBox='0 0 24 24' width='1em' height='1em' xmlns='http://www.w3.org/2000/svg' %3E%3Cpath fill='none' stroke='currentColor' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M9 4v6l-2 4v2h10v-2l-2-4V4m-3 12v5M8 4h8'/%3E%3C/svg%3E");-webkit-mask:var(--un-icon) no-repeat;mask:var(--un-icon) no-repeat;-webkit-mask-size:100% 100%;mask-size:100% 100%;background-color:currentColor;color:inherit;width:1em;height:1em;}
.i-tabler\:plus{--un-icon:url("data:image/svg+xml;utf8,%3Csvg viewBox='0 0 24 24' width='1em' height='1em' xmlns='http://www.w3.org/2000/svg' %3E%3Cpath fill='none' stroke='currentColor' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M12 5v14m-7-7h14'/%3E%3C/svg%3E");-webkit-mask:var(--un-icon) no-repeat;mask:var(--un-icon) no-repeat;-webkit-mask-size:100% 100%;mask-size:100% 100%;background-color:currentColor;color:inherit;width:1em;height:1em;}
.i-tabler\:refresh{--un-icon:url("data:image/svg+xml;utf8,%3Csvg viewBox='0 0 24 24' width='1em' height='1em' xmlns='http://www.w3.org/2000/svg' %3E%3Cpath fill='none' stroke='currentColor' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M20 11A8.1 8.1 0 0 0 4.5 9M4 5v4h4m-4 4a8.1 8.1 0 0 0 15.5 2m.5 4v-4h-4'/%3E%3C/svg%3E");-webkit-mask:var(--un-icon) no-repeat;mask:var(--un-icon) no-repeat;-webkit-mask-size:100% 100%;mask-size:100% 100%;background-color:currentColor;color:inherit;width:1em;height:1em;}
.i-tabler\:rotate{--un-icon:url("data:image/svg+xml;utf8,%3Csvg viewBox='0 0 24 24' width='1em' height='1em' xmlns='http://www.w3.org/2000/svg' %3E%3Cpath fill='none' stroke='currentColor' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M19.95 11a8 8 0 1 0-.5 4m.5 5v-5h-5'/%3E%3C/svg%3E");-webkit-mask:var(--un-icon) no-repeat;mask:var(--un-icon) no-repeat;-webkit-mask-size:100% 100%;mask-size:100% 100%;background-color:currentColor;color:inherit;width:1em;height:1em;}
.i-tabler\:rotate-clockwise{--un-icon:url("data:image/svg+xml;utf8,%3Csvg viewBox='0 0 24 24' width='1em' height='1em' xmlns='http://www.w3.org/2000/svg' %3E%3Cpath fill='none' stroke='currentColor' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M4.05 11a8 8 0 1 1 .5 4m-.5 5v-5h5'/%3E%3C/svg%3E");-webkit-mask:var(--un-icon) no-repeat;mask:var(--un-icon) no-repeat;-webkit-mask-size:100% 100%;mask-size:100% 100%;background-color:currentColor;color:inherit;width:1em;height:1em;}
.i-tabler\:search{--un-icon:url("data:image/svg+xml;utf8,%3Csvg viewBox='0 0 24 24' width='1em' height='1em' xmlns='http://www.w3.org/2000/svg' %3E%3Cpath fill='none' stroke='currentColor' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M3 10a7 7 0 1 0 14 0a7 7 0 1 0-14 0m18 11l-6-6'/%3E%3C/svg%3E");-webkit-mask:var(--un-icon) no-repeat;mask:var(--un-icon) no-repeat;-webkit-mask-size:100% 100%;mask-size:100% 100%;background-color:currentColor;color:inherit;width:1em;height:1em;}
.i-tabler\:select{--un-icon:url("data:image/svg+xml;utf8,%3Csvg viewBox='0 0 24 24' width='1em' height='1em' xmlns='http://www.w3.org/2000/svg' %3E%3Cg fill='none' stroke='currentColor' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Cpath d='M3 5a2 2 0 0 1 2-2h14a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2z'/%3E%3Cpath d='m9 11l3 3l3-3'/%3E%3C/g%3E%3C/svg%3E");-webkit-mask:var(--un-icon) no-repeat;mask:var(--un-icon) no-repeat;-webkit-mask-size:100% 100%;mask-size:100% 100%;background-color:currentColor;color:inherit;width:1em;height:1em;}
.i-tabler\:separator{--un-icon:url("data:image/svg+xml;utf8,%3Csvg viewBox='0 0 24 24' width='1em' height='1em' xmlns='http://www.w3.org/2000/svg' %3E%3Cpath fill='none' stroke='currentColor' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M3 12v.01M7 12h10m4 0v.01'/%3E%3C/svg%3E");-webkit-mask:var(--un-icon) no-repeat;mask:var(--un-icon) no-repeat;-webkit-mask-size:100% 100%;mask-size:100% 100%;background-color:currentColor;color:inherit;width:1em;height:1em;}
.i-tabler\:square{--un-icon:url("data:image/svg+xml;utf8,%3Csvg viewBox='0 0 24 24' width='1em' height='1em' xmlns='http://www.w3.org/2000/svg' %3E%3Cpath fill='none' stroke='currentColor' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M3 5a2 2 0 0 1 2-2h14a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2z'/%3E%3C/svg%3E");-webkit-mask:var(--un-icon) no-repeat;mask:var(--un-icon) no-repeat;-webkit-mask-size:100% 100%;mask-size:100% 100%;background-color:currentColor;color:inherit;width:1em;height:1em;}
.i-tabler\:square-check{--un-icon:url("data:image/svg+xml;utf8,%3Csvg viewBox='0 0 24 24' width='1em' height='1em' xmlns='http://www.w3.org/2000/svg' %3E%3Cg fill='none' stroke='currentColor' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Cpath d='M3 5a2 2 0 0 1 2-2h14a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2z'/%3E%3Cpath d='m9 12l2 2l4-4'/%3E%3C/g%3E%3C/svg%3E");-webkit-mask:var(--un-icon) no-repeat;mask:var(--un-icon) no-repeat;-webkit-mask-size:100% 100%;mask-size:100% 100%;background-color:currentColor;color:inherit;width:1em;height:1em;}
.i-tabler\:sun{--un-icon:url("data:image/svg+xml;utf8,%3Csvg viewBox='0 0 24 24' width='1em' height='1em' xmlns='http://www.w3.org/2000/svg' %3E%3Cpath fill='none' stroke='currentColor' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M8 12a4 4 0 1 0 8 0a4 4 0 1 0-8 0m-5 0h1m8-9v1m8 8h1m-9 8v1M5.6 5.6l.7.7m12.1-.7l-.7.7m0 11.4l.7.7m-12.1-.7l-.7.7'/%3E%3C/svg%3E");-webkit-mask:var(--un-icon) no-repeat;mask:var(--un-icon) no-repeat;-webkit-mask-size:100% 100%;mask-size:100% 100%;background-color:currentColor;color:inherit;width:1em;height:1em;}
.i-tabler\:tag{--un-icon:url("data:image/svg+xml;utf8,%3Csvg viewBox='0 0 24 24' width='1em' height='1em' xmlns='http://www.w3.org/2000/svg' %3E%3Cg fill='none' stroke='currentColor' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Cpath d='M6.5 7.5a1 1 0 1 0 2 0a1 1 0 1 0-2 0'/%3E%3Cpath d='M3 6v5.172a2 2 0 0 0 .586 1.414l7.71 7.71a2.41 2.41 0 0 0 3.408 0l5.592-5.592a2.41 2.41 0 0 0 0-3.408l-7.71-7.71A2 2 0 0 0 11.172 3H6a3 3 0 0 0-3 3'/%3E%3C/g%3E%3C/svg%3E");-webkit-mask:var(--un-icon) no-repeat;mask:var(--un-icon) no-repeat;-webkit-mask-size:100% 100%;mask-size:100% 100%;background-color:currentColor;color:inherit;width:1em;height:1em;}
.i-tabler\:toggle-left{--un-icon:url("data:image/svg+xml;utf8,%3Csvg viewBox='0 0 24 24' width='1em' height='1em' xmlns='http://www.w3.org/2000/svg' %3E%3Cg fill='none' stroke='currentColor' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Cpath d='M6 12a2 2 0 1 0 4 0a2 2 0 1 0-4 0'/%3E%3Cpath d='M2 12a6 6 0 0 1 6-6h8a6 6 0 0 1 6 6v0a6 6 0 0 1-6 6H8a6 6 0 0 1-6-6'/%3E%3C/g%3E%3C/svg%3E");-webkit-mask:var(--un-icon) no-repeat;mask:var(--un-icon) no-repeat;-webkit-mask-size:100% 100%;mask-size:100% 100%;background-color:currentColor;color:inherit;width:1em;height:1em;}
.i-tabler\:transfer{--un-icon:url("data:image/svg+xml;utf8,%3Csvg viewBox='0 0 24 24' width='1em' height='1em' xmlns='http://www.w3.org/2000/svg' %3E%3Cpath fill='none' stroke='currentColor' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M20 10H4l5.5-6M4 14h16l-5.5 6'/%3E%3C/svg%3E");-webkit-mask:var(--un-icon) no-repeat;mask:var(--un-icon) no-repeat;-webkit-mask-size:100% 100%;mask-size:100% 100%;background-color:currentColor;color:inherit;width:1em;height:1em;}
.i-tabler\:trash{--un-icon:url("data:image/svg+xml;utf8,%3Csvg viewBox='0 0 24 24' width='1em' height='1em' xmlns='http://www.w3.org/2000/svg' %3E%3Cpath fill='none' stroke='currentColor' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M4 7h16m-10 4v6m4-6v6M5 7l1 12a2 2 0 0 0 2 2h8a2 2 0 0 0 2-2l1-12M9 7V4a1 1 0 0 1 1-1h4a1 1 0 0 1 1 1v3'/%3E%3C/svg%3E");-webkit-mask:var(--un-icon) no-repeat;mask:var(--un-icon) no-repeat;-webkit-mask-size:100% 100%;mask-size:100% 100%;background-color:currentColor;color:inherit;width:1em;height:1em;}
.i-tabler\:trash-x{--un-icon:url("data:image/svg+xml;utf8,%3Csvg viewBox='0 0 24 24' width='1em' height='1em' xmlns='http://www.w3.org/2000/svg' %3E%3Cpath fill='none' stroke='currentColor' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M4 7h16M5 7l1 12a2 2 0 0 0 2 2h8a2 2 0 0 0 2-2l1-12M9 7V4a1 1 0 0 1 1-1h4a1 1 0 0 1 1 1v3m-5 5l4 4m0-4l-4 4'/%3E%3C/svg%3E");-webkit-mask:var(--un-icon) no-repeat;mask:var(--un-icon) no-repeat;-webkit-mask-size:100% 100%;mask-size:100% 100%;background-color:currentColor;color:inherit;width:1em;height:1em;}
.i-tabler\:typography{--un-icon:url("data:image/svg+xml;utf8,%3Csvg viewBox='0 0 24 24' width='1em' height='1em' xmlns='http://www.w3.org/2000/svg' %3E%3Cpath fill='none' stroke='currentColor' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M4 20h3m7 0h7M6.9 15h6.9m-3.6-8.7L16 20M5 20l6-16h2l7 16'/%3E%3C/svg%3E");-webkit-mask:var(--un-icon) no-repeat;mask:var(--un-icon) no-repeat;-webkit-mask-size:100% 100%;mask-size:100% 100%;background-color:currentColor;color:inherit;width:1em;height:1em;}
.i-tabler\:upload{--un-icon:url("data:image/svg+xml;utf8,%3Csvg viewBox='0 0 24 24' width='1em' height='1em' xmlns='http://www.w3.org/2000/svg' %3E%3Cpath fill='none' stroke='currentColor' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M4 17v2a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2v-2M7 9l5-5l5 5m-5-5v12'/%3E%3C/svg%3E");-webkit-mask:var(--un-icon) no-repeat;mask:var(--un-icon) no-repeat;-webkit-mask-size:100% 100%;mask-size:100% 100%;background-color:currentColor;color:inherit;width:1em;height:1em;}
.i-tabler\:user{--un-icon:url("data:image/svg+xml;utf8,%3Csvg viewBox='0 0 24 24' width='1em' height='1em' xmlns='http://www.w3.org/2000/svg' %3E%3Cpath fill='none' stroke='currentColor' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M8 7a4 4 0 1 0 8 0a4 4 0 0 0-8 0M6 21v-2a4 4 0 0 1 4-4h4a4 4 0 0 1 4 4v2'/%3E%3C/svg%3E");-webkit-mask:var(--un-icon) no-repeat;mask:var(--un-icon) no-repeat;-webkit-mask-size:100% 100%;mask-size:100% 100%;background-color:currentColor;color:inherit;width:1em;height:1em;}
.i-tabler\:x{--un-icon:url("data:image/svg+xml;utf8,%3Csvg viewBox='0 0 24 24' width='1em' height='1em' xmlns='http://www.w3.org/2000/svg' %3E%3Cpath fill='none' stroke='currentColor' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M18 6L6 18M6 6l12 12'/%3E%3C/svg%3E");-webkit-mask:var(--un-icon) no-repeat;mask:var(--un-icon) no-repeat;-webkit-mask-size:100% 100%;mask-size:100% 100%;background-color:currentColor;color:inherit;width:1em;height:1em;}
.i-tabler\:zoom-in{--un-icon:url("data:image/svg+xml;utf8,%3Csvg viewBox='0 0 24 24' width='1em' height='1em' xmlns='http://www.w3.org/2000/svg' %3E%3Cpath fill='none' stroke='currentColor' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M3 10a7 7 0 1 0 14 0a7 7 0 1 0-14 0m4 0h6m-3-3v6m11 8l-6-6'/%3E%3C/svg%3E");-webkit-mask:var(--un-icon) no-repeat;mask:var(--un-icon) no-repeat;-webkit-mask-size:100% 100%;mask-size:100% 100%;background-color:currentColor;color:inherit;width:1em;height:1em;}
.i-tabler\:zoom-out{--un-icon:url("data:image/svg+xml;utf8,%3Csvg viewBox='0 0 24 24' width='1em' height='1em' xmlns='http://www.w3.org/2000/svg' %3E%3Cpath fill='none' stroke='currentColor' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M3 10a7 7 0 1 0 14 0a7 7 0 1 0-14 0m4 0h6m8 11l-6-6'/%3E%3C/svg%3E");-webkit-mask:var(--un-icon) no-repeat;mask:var(--un-icon) no-repeat;-webkit-mask-size:100% 100%;mask-size:100% 100%;background-color:currentColor;color:inherit;width:1em;height:1em;}
/* layer: shortcuts */
.container{width:100%;}
@media (min-width: 40rem){
.container{max-width:40rem;}
}
@media (min-width: 48rem){
.container{max-width:48rem;}
}
@media (min-width: 64rem){
.container{max-width:64rem;}
}
@media (min-width: 80rem){
.container{max-width:80rem;}
}
@media (min-width: 96rem){
.container{max-width:96rem;}
}
/* layer: default */
.text-2xl{font-size:var(--text-2xl-fontSize);line-height:var(--un-leading, var(--text-2xl-lineHeight));}
.text-8px{font-size:8px;}
.text-base{font-size:var(--text-base-fontSize);line-height:var(--un-leading, var(--text-base-lineHeight));}
.text-base\/5{font-size:var(--text-base-fontSize);line-height:1.25rem;}
.text-lg{font-size:var(--text-lg-fontSize);line-height:var(--un-leading, var(--text-lg-lineHeight));}
.text-sm{font-size:var(--text-sm-fontSize);line-height:var(--un-leading, var(--text-sm-lineHeight));}
.text-xl{font-size:var(--text-xl-fontSize);line-height:var(--un-leading, var(--text-xl-lineHeight));}
.text-xs{font-size:var(--text-xs-fontSize);line-height:var(--un-leading, var(--text-xs-lineHeight));}
.text-error{color:color-mix(in srgb, var(--colors-error-DEFAULT) var(--un-text-opacity), transparent) /* color-mix(in oklab, rgb(var(--ui-color-error)) var(--un-text-opacity, 100%), transparent) */;}
.text-gray-300{color:color-mix(in srgb, var(--colors-gray-300) var(--un-text-opacity), transparent) /* color-mix(in oklab, rgb(var(--ui-color-gray-300)) var(--un-text-opacity, 100%), transparent) */;}
.text-gray-500{color:color-mix(in srgb, var(--colors-gray-500) var(--un-text-opacity), transparent) /* color-mix(in oklab, rgb(var(--ui-color-gray-500)) var(--un-text-opacity, 100%), transparent) */;}
.text-info{color:color-mix(in srgb, var(--colors-info-DEFAULT) var(--un-text-opacity), transparent) /* color-mix(in oklab, rgb(var(--ui-color-info)) var(--un-text-opacity, 100%), transparent) */;}
.text-primary{color:color-mix(in srgb, var(--colors-primary-DEFAULT) var(--un-text-opacity), transparent) /* color-mix(in oklab, rgb(var(--ui-color-primary)) var(--un-text-opacity, 100%), transparent) */;}
.text-success{color:color-mix(in srgb, var(--colors-success-DEFAULT) var(--un-text-opacity), transparent) /* color-mix(in oklab, rgb(var(--ui-color-success)) var(--un-text-opacity, 100%), transparent) */;}
.text-warning{color:color-mix(in srgb, var(--colors-warning-DEFAULT) var(--un-text-opacity), transparent) /* color-mix(in oklab, rgb(var(--ui-color-warning)) var(--un-text-opacity, 100%), transparent) */;}
.text-white{color:color-mix(in srgb, var(--colors-white-DEFAULT) var(--un-text-opacity), transparent) /* rgb(var(--ui-color-white)) */;}
.text-white\/90{color:color-mix(in srgb, var(--colors-white-DEFAULT) 90%, transparent) /* rgb(var(--ui-color-white)) */;}
.hover\:text-primary:hover{color:color-mix(in srgb, var(--colors-primary-DEFAULT) var(--un-text-opacity), transparent) /* color-mix(in oklab, rgb(var(--ui-color-primary)) var(--un-text-opacity, 100%), transparent) */;}
.font-bold{--un-font-weight:var(--fontWeight-bold);font-weight:var(--fontWeight-bold);}
.font-medium{--un-font-weight:var(--fontWeight-medium);font-weight:var(--fontWeight-medium);}
.font-mono{font-family:var(--font-mono);}
.tab{-moz-tab-size:4;-o-tab-size:4;tab-size:4;}
.m-0\.7{margin:calc(var(--spacing) * 0.7);}
.m-118\.2{margin:calc(var(--spacing) * 118.2);}
.m-302\.2{margin:calc(var(--spacing) * 302.2);}
.m14{margin:calc(var(--spacing) * 14);}
.m146\.8{margin:calc(var(--spacing) * 146.8);}
.m18{margin:calc(var(--spacing) * 18);}
.m29\.3{margin:calc(var(--spacing) * 29.3);}
.m3{margin:calc(var(--spacing) * 3);}
.m5{margin:calc(var(--spacing) * 5);}
.m7{margin:calc(var(--spacing) * 7);}
.m7\.6{margin:calc(var(--spacing) * 7.6);}
.m9{margin:calc(var(--spacing) * 9);}
.mx-auto{margin-inline:auto;}
.my-6{margin-block:calc(var(--spacing) * 6);}
.mb-2{margin-bottom:calc(var(--spacing) * 2);}
.ml-2{margin-left:calc(var(--spacing) * 2);}
.mr-2{margin-right:calc(var(--spacing) * 2);}
.mt-1{margin-top:calc(var(--spacing) * 1);}
.mt-2{margin-top:calc(var(--spacing) * 2);}
.mt-3{margin-top:calc(var(--spacing) * 3);}
.mt-4{margin-top:calc(var(--spacing) * 4);}
.mt-auto{margin-top:auto;}
.p-1{padding:calc(var(--spacing) * 1);}
.p-2{padding:calc(var(--spacing) * 2);}
.p-2\.5{padding:calc(var(--spacing) * 2.5);}
.p-3{padding:calc(var(--spacing) * 3);}
.p-4{padding:calc(var(--spacing) * 4);}
.p-6{padding:calc(var(--spacing) * 6);}
.p-8{padding:calc(var(--spacing) * 8);}
.\!px-1{padding-inline:calc(var(--spacing) * 1) !important;}
.\!px-4{padding-inline:calc(var(--spacing) * 4) !important;}
.px-1{padding-inline:calc(var(--spacing) * 1);}
.px-2{padding-inline:calc(var(--spacing) * 2);}
.px-2\.5{padding-inline:calc(var(--spacing) * 2.5);}
.px-3{padding-inline:calc(var(--spacing) * 3);}
.px-4{padding-inline:calc(var(--spacing) * 4);}
.px-6{padding-inline:calc(var(--spacing) * 6);}
.py-1{padding-block:calc(var(--spacing) * 1);}
.py-1\.5{padding-block:calc(var(--spacing) * 1.5);}
.py-10{padding-block:calc(var(--spacing) * 10);}
.py-2{padding-block:calc(var(--spacing) * 2);}
.py-3{padding-block:calc(var(--spacing) * 3);}
.py-4{padding-block:calc(var(--spacing) * 4);}
.py-5{padding-block:calc(var(--spacing) * 5);}
.py-6{padding-block:calc(var(--spacing) * 6);}
.pb-0{padding-bottom:calc(var(--spacing) * 0);}
.pb-1{padding-bottom:calc(var(--spacing) * 1);}
.pb-2{padding-bottom:calc(var(--spacing) * 2);}
.pb-4{padding-bottom:calc(var(--spacing) * 4);}
.pe-10{padding-inline-end:calc(var(--spacing) * 10);}
.pe-3{padding-inline-end:calc(var(--spacing) * 3);}
.pl-12{padding-left:calc(var(--spacing) * 12);}
.pl-2{padding-left:calc(var(--spacing) * 2);}
.pl-4{padding-left:calc(var(--spacing) * 4);}
.pr-4{padding-right:calc(var(--spacing) * 4);}
.ps-10{padding-inline-start:calc(var(--spacing) * 10);}
.ps-3{padding-inline-start:calc(var(--spacing) * 3);}
.pt-0\.5{padding-top:calc(var(--spacing) * 0.5);}
.pt-1{padding-top:calc(var(--spacing) * 1);}
.pt-12{padding-top:calc(var(--spacing) * 12);}
.pt-2{padding-top:calc(var(--spacing) * 2);}
.pt-4{padding-top:calc(var(--spacing) * 4);}
.pt-6{padding-top:calc(var(--spacing) * 6);}
.text-center{text-align:center;}
.text-left{text-align:left;}
.outline-0{outline-style:var(--un-outline-style);outline-width:0px;}
.outline{outline-style:var(--un-outline-style);outline-width:1px;}
.border,
.dark .dark\:border{border-width:1px;}
.border-0{border-width:0px;}
.border-b{border-bottom-width:1px;}
.border-l{border-left-width:1px;}
.border-r{border-right-width:1px;}
.border-t{border-top-width:1px;}
.border-primary,
.group:hover .group-hover\:border-primary{border-color:color-mix(in srgb, var(--colors-primary-DEFAULT) var(--un-border-opacity), transparent) /* color-mix(in oklab, rgb(var(--ui-color-primary)) var(--un-text-opacity, 100%), transparent) */;}
.border-transparent{border-color:transparent;}
.hover\:border-primary-hover:hover{border-color:color-mix(in srgb, var(--colors-primary-hover) var(--un-border-opacity), transparent) /* color-mix(in oklab, rgb(var(--ui-color-primary-hover)) var(--un-text-opacity, 100%), transparent) */;}
.hover\:border-primary:hover{border-color:color-mix(in srgb, var(--colors-primary-DEFAULT) var(--un-border-opacity), transparent) /* color-mix(in oklab, rgb(var(--ui-color-primary)) var(--un-text-opacity, 100%), transparent) */;}
.rounded{border-radius:var(--radius-DEFAULT);}
.rounded-full{border-radius:calc(infinity * 1px);}
.rounded-lg{border-radius:var(--radius-lg);}
.rounded-md{border-radius:var(--radius-md);}
.rounded-sm{border-radius:var(--radius-sm);}
.rounded-b{border-bottom-left-radius:var(--radius-DEFAULT);border-bottom-right-radius:var(--radius-DEFAULT);}
.rounded-t{border-top-left-radius:var(--radius-DEFAULT);border-top-right-radius:var(--radius-DEFAULT);}
.rounded-br{border-bottom-right-radius:var(--radius-DEFAULT);}
.rounded-tl{border-top-left-radius:var(--radius-DEFAULT);}
.border-dashed{--un-border-style:dashed;border-style:dashed;}
.border-solid{--un-border-style:solid;border-style:solid;}
.bg-error{background-color:color-mix(in srgb, var(--colors-error-DEFAULT) var(--un-bg-opacity), transparent) /* color-mix(in oklab, rgb(var(--ui-color-error)) var(--un-text-opacity, 100%), transparent) */;}
.bg-gray-600{background-color:color-mix(in srgb, var(--colors-gray-600) var(--un-bg-opacity), transparent) /* color-mix(in oklab, rgb(var(--ui-color-gray-600)) var(--un-text-opacity, 100%), transparent) */;}
.bg-gray-800{background-color:color-mix(in srgb, var(--colors-gray-800) var(--un-bg-opacity), transparent) /* color-mix(in oklab, rgb(var(--ui-color-gray-800)) var(--un-text-opacity, 100%), transparent) */;}
.bg-gray-900\/30{background-color:color-mix(in srgb, var(--colors-gray-900) 30%, transparent) /* color-mix(in oklab, rgb(var(--ui-color-gray-900)) var(--un-text-opacity, 100%), transparent) */;}
.bg-gray\/5{background-color:color-mix(in srgb, var(--colors-gray-DEFAULT) 5%, transparent) /* color-mix(in oklab, rgb(var(--ui-color-gray)) var(--un-text-opacity, 100%), transparent) */;}
.bg-primary{background-color:color-mix(in srgb, var(--colors-primary-DEFAULT) var(--un-bg-opacity), transparent) /* color-mix(in oklab, rgb(var(--ui-color-primary)) var(--un-text-opacity, 100%), transparent) */;}
.bg-primary\/10{background-color:color-mix(in srgb, var(--colors-primary-DEFAULT) 10%, transparent) /* color-mix(in oklab, rgb(var(--ui-color-primary)) var(--un-text-opacity, 100%), transparent) */;}
.bg-primary\/5{background-color:color-mix(in srgb, var(--colors-primary-DEFAULT) 5%, transparent) /* color-mix(in oklab, rgb(var(--ui-color-primary)) var(--un-text-opacity, 100%), transparent) */;}
.bg-success{background-color:color-mix(in srgb, var(--colors-success-DEFAULT) var(--un-bg-opacity), transparent) /* color-mix(in oklab, rgb(var(--ui-color-success)) var(--un-text-opacity, 100%), transparent) */;}
.bg-transparent{background-color:transparent;}
.bg-warning{background-color:color-mix(in srgb, var(--colors-warning-DEFAULT) var(--un-bg-opacity), transparent) /* color-mix(in oklab, rgb(var(--ui-color-warning)) var(--un-text-opacity, 100%), transparent) */;}
.bg-white{background-color:color-mix(in srgb, var(--colors-white-DEFAULT) var(--un-bg-opacity), transparent) /* rgb(var(--ui-color-white)) */;}
.bg-white\/70{background-color:color-mix(in srgb, var(--colors-white-DEFAULT) 70%, transparent) /* rgb(var(--ui-color-white)) */;}
.bg-white\/8{background-color:color-mix(in srgb, var(--colors-white-DEFAULT) 8%, transparent) /* rgb(var(--ui-color-white)) */;}
.dark .dark\:bg-gray-800\/50{background-color:color-mix(in srgb, var(--colors-gray-800) 50%, transparent) /* color-mix(in oklab, rgb(var(--ui-color-gray-800)) var(--un-text-opacity, 100%), transparent) */;}
.dark .dark\:bg-gray-800\/60{background-color:color-mix(in srgb, var(--colors-gray-800) 60%, transparent) /* color-mix(in oklab, rgb(var(--ui-color-gray-800)) var(--un-text-opacity, 100%), transparent) */;}
.dark .dark\:bg-gray-900\/70{background-color:color-mix(in srgb, var(--colors-gray-900) 70%, transparent) /* color-mix(in oklab, rgb(var(--ui-color-gray-900)) var(--un-text-opacity, 100%), transparent) */;}
.dark .dark\:bg-primary-950{background-color:color-mix(in srgb, var(--colors-primary-950) var(--un-bg-opacity), transparent) /* color-mix(in oklab, rgb(var(--ui-color-primary-950)) var(--un-text-opacity, 100%), transparent) */;}
.hover\:bg-primary-hover:hover{background-color:color-mix(in srgb, var(--colors-primary-hover) var(--un-bg-opacity), transparent) /* color-mix(in oklab, rgb(var(--ui-color-primary-hover)) var(--un-text-opacity, 100%), transparent) */;}
.hover\:bg-primary\/10:hover{background-color:color-mix(in srgb, var(--colors-primary-DEFAULT) 10%, transparent) /* color-mix(in oklab, rgb(var(--ui-color-primary)) var(--un-text-opacity, 100%), transparent) */;}
.hover\:bg-primary\/5:hover{background-color:color-mix(in srgb, var(--colors-primary-DEFAULT) 5%, transparent) /* color-mix(in oklab, rgb(var(--ui-color-primary)) var(--un-text-opacity, 100%), transparent) */;}
.bg-opacity-10{--un-bg-opacity:10%;}
.opacity-0{opacity:0%;}
.opacity-100,
.group:hover .group-hover\:opacity-100{opacity:100%;}
.opacity-50{opacity:50%;}
.opacity-70{opacity:70%;}
.underline{text-decoration-line:underline;}
.flex,
.group:hover .group-hover\:flex{display:flex;}
.inline-flex{display:inline-flex;}
.flex-1{flex:1 1 0%;}
.flex-none{flex:none;}
.shrink-0{flex-shrink:0;}
.flex-row{flex-direction:row;}
.flex-col{flex-direction:column;}
.flex-wrap{flex-wrap:wrap;}
.flex-nowrap{flex-wrap:nowrap;}
.gap-0{gap:calc(var(--spacing) * 0);}
.gap-1{gap:calc(var(--spacing) * 1);}
.gap-1\.5{gap:calc(var(--spacing) * 1.5);}
.gap-12{gap:calc(var(--spacing) * 12);}
.gap-2{gap:calc(var(--spacing) * 2);}
.gap-3{gap:calc(var(--spacing) * 3);}
.gap-4{gap:calc(var(--spacing) * 4);}
.gap-6{gap:calc(var(--spacing) * 6);}
.gap-x-8{column-gap:calc(var(--spacing) * 8);}
.gap-y-4{row-gap:calc(var(--spacing) * 4);}
.grid{display:grid;}
.col-span-1{grid-column:span 1/span 1;}
.col-span-2{grid-column:span 2/span 2;}
.col-span-3{grid-column:span 3/span 3;}
.auto-cols-max{grid-auto-columns:max-content;}
.grid-cols-\[repeat\(auto-fit\,minmax\(100px\,1fr\)\)\]{grid-template-columns:repeat(auto-fit,minmax(100px,1fr));}
.grid-cols-1{grid-template-columns:repeat(1,minmax(0,1fr));}
.grid-cols-2{grid-template-columns:repeat(2,minmax(0,1fr));}
.grid-cols-3{grid-template-columns:repeat(3,minmax(0,1fr));}
.grid-cols-4{grid-template-columns:repeat(4,minmax(0,1fr));}
.grid-cols-6{grid-template-columns:repeat(6,minmax(0,1fr));}
.size-10{width:calc(var(--spacing) * 10);height:calc(var(--spacing) * 10);}
.size-12{width:calc(var(--spacing) * 12);height:calc(var(--spacing) * 12);}
.size-2{width:calc(var(--spacing) * 2);height:calc(var(--spacing) * 2);}
.size-3{width:calc(var(--spacing) * 3);height:calc(var(--spacing) * 3);}
.size-30{width:calc(var(--spacing) * 30);height:calc(var(--spacing) * 30);}
.size-4{width:calc(var(--spacing) * 4);height:calc(var(--spacing) * 4);}
.size-40{width:calc(var(--spacing) * 40);height:calc(var(--spacing) * 40);}
.size-5{width:calc(var(--spacing) * 5);height:calc(var(--spacing) * 5);}
.size-50{width:calc(var(--spacing) * 50);height:calc(var(--spacing) * 50);}
.size-6{width:calc(var(--spacing) * 6);height:calc(var(--spacing) * 6);}
.size-60{width:calc(var(--spacing) * 60);height:calc(var(--spacing) * 60);}
.size-60px{width:60px;height:60px;}
.size-7{width:calc(var(--spacing) * 7);height:calc(var(--spacing) * 7);}
.size-80px{width:80px;height:80px;}
.size-full{width:100%;height:100%;}
.h-10{height:calc(var(--spacing) * 10);}
.h-100{height:calc(var(--spacing) * 100);}
.h-12{height:calc(var(--spacing) * 12);}
.h-13{height:calc(var(--spacing) * 13);}
.h-16{height:calc(var(--spacing) * 16);}
.h-20{height:calc(var(--spacing) * 20);}
.h-30{height:calc(var(--spacing) * 30);}
.h-4{height:calc(var(--spacing) * 4);}
.h-40{height:calc(var(--spacing) * 40);}
.h-5{height:calc(var(--spacing) * 5);}
.h-500px{height:500px;}
.h-6,
.h6{height:calc(var(--spacing) * 6);}
.h-60{height:calc(var(--spacing) * 60);}
.h-auto{height:auto;}
.h-full{height:100%;}
.h-screen{height:100vh;}
.max-h-0{max-height:calc(var(--spacing) * 0);}
.max-h-120px{max-height:120px;}
.max-h-500{max-height:calc(var(--spacing) * 500);}
.max-h-500px{max-height:500px;}
.max-w-180{max-width:calc(var(--spacing) * 180);}
.max-w-2xl{max-width:var(--container-2xl);}
.max-w-full{max-width:100%;}
.min-h-0{min-height:calc(var(--spacing) * 0);}
.min-h-1{min-height:calc(var(--spacing) * 1);}
.min-w-0{min-width:calc(var(--spacing) * 0);}
.min-w-110{min-width:calc(var(--spacing) * 110);}
.min-w-60{min-width:calc(var(--spacing) * 60);}
.w-1{width:calc(var(--spacing) * 1);}
.w-12{width:calc(var(--spacing) * 12);}
.w-120{width:calc(var(--spacing) * 120);}
.w-120px{width:120px;}
.w-15{width:calc(var(--spacing) * 15);}
.w-180px{width:180px;}
.w-200px{width:200px;}
.w-220px{width:220px;}
.w-26{width:calc(var(--spacing) * 26);}
.w-30{width:calc(var(--spacing) * 30);}
.w-4{width:calc(var(--spacing) * 4);}
.w-40{width:calc(var(--spacing) * 40);}
.w-400px{width:400px;}
.w-5{width:calc(var(--spacing) * 5);}
.w-60{width:calc(var(--spacing) * 60);}
.w-70{width:calc(var(--spacing) * 70);}
.w-auto{width:auto;}
.w-full{width:100%;}
.w-px{width:1px;}
.w-screen{width:100vw;}
.inline{display:inline;}
.block,
.group:hover .group-hover\:block{display:block;}
.contents{display:contents;}
.list-item{display:list-item;}
.hidden{display:none;}
.visible{visibility:visible;}
.collapse{visibility:collapse;}
.cursor-pointer{cursor:pointer;}
.cursor-move{cursor:move;}
.cursor-not-allowed{cursor:not-allowed;}
.pointer-events-auto{pointer-events:auto;}
.pointer-events-none{pointer-events:none;}
.resize{resize:both;}
.whitespace-nowrap{white-space:nowrap;}
.text-pretty{text-wrap:pretty;}
.truncate{overflow:hidden;text-overflow:ellipsis;white-space:nowrap;}
.italic{font-style:italic;}
.ring{--un-ring-shadow:var(--un-ring-inset,) 0 0 0 calc(1px + var(--un-ring-offset-width)) var(--un-ring-color, currentColor);box-shadow:var(--un-inset-shadow), var(--un-inset-ring-shadow), var(--un-ring-offset-shadow), var(--un-ring-shadow), var(--un-shadow);}
.dark .dark\:shadow-gray-950\/80{--un-shadow-color:color-mix(in srgb, var(--colors-gray-950) 80%, transparent) /* color-mix(in oklab, rgb(var(--ui-color-gray-950)) var(--un-text-opacity, 100%), transparent) */;}
.shadow,
.shadow-sm{--un-shadow:0 1px 3px 0 var(--un-shadow-color, rgb(0 0 0 / 0.1)),0 1px 2px -1px var(--un-shadow-color, rgb(0 0 0 / 0.1));box-shadow:var(--un-inset-shadow), var(--un-inset-ring-shadow), var(--un-ring-offset-shadow), var(--un-ring-shadow), var(--un-shadow);}
.shadow-gray-950\/10{--un-shadow-color:color-mix(in srgb, var(--colors-gray-950) 10%, transparent) /* color-mix(in oklab, rgb(var(--ui-color-gray-950)) var(--un-text-opacity, 100%), transparent) */;}
.shadow-lg,
.group:hover .group-hover\:shadow-lg{--un-shadow:0 10px 15px -3px var(--un-shadow-color, rgb(0 0 0 / 0.1)),0 4px 6px -4px var(--un-shadow-color, rgb(0 0 0 / 0.1));box-shadow:var(--un-inset-shadow), var(--un-inset-ring-shadow), var(--un-ring-offset-shadow), var(--un-ring-shadow), var(--un-shadow);}
.shadow-xs{--un-shadow:0 1px 2px 0 var(--un-shadow-color, rgb(0 0 0 / 0.05));box-shadow:var(--un-inset-shadow), var(--un-inset-ring-shadow), var(--un-ring-offset-shadow), var(--un-ring-shadow), var(--un-shadow);}
.hover\:shadow-xs:hover{--un-shadow:0 1px 2px 0 var(--un-shadow-color, rgb(0 0 0 / 0.05));box-shadow:var(--un-inset-shadow), var(--un-inset-ring-shadow), var(--un-ring-offset-shadow), var(--un-ring-shadow), var(--un-shadow);}
.translate-y-0{--un-translate-y:calc(var(--spacing) * 0);translate:var(--un-translate-x) var(--un-translate-y);}
.translate-y-full{--un-translate-y:100%;translate:var(--un-translate-x) var(--un-translate-y);}
.rotate-180{rotate:180deg;}
.rotate-45{rotate:45deg;}
.transform{transform:var(--un-rotate-x) var(--un-rotate-y) var(--un-rotate-z) var(--un-skew-x) var(--un-skew-y);}
.transition{transition-property:color,background-color,border-color,text-decoration-color,fill,stroke,--un-gradient-from,--un-gradient-via,--un-gradient-to,opacity,box-shadow,transform,translate,scale,rotate,filter,-webkit-backdrop-filter,backdrop-filter;transition-timing-function:var(--un-ease, var(--default-transition-timingFunction));transition-duration:var(--un-duration, var(--default-transition-duration));}
.transition-all{transition-property:all;transition-timing-function:var(--un-ease, var(--default-transition-timingFunction));transition-duration:var(--un-duration, var(--default-transition-duration));}
.transition-colors{transition-property:color,background-color,border-color,text-decoration-color,fill,stroke,--un-gradient-from,--un-gradient-via,--un-gradient-to;transition-timing-function:var(--un-ease, var(--default-transition-timingFunction));transition-duration:var(--un-duration, var(--default-transition-duration));}
.transition-opacity{transition-property:opacity;transition-timing-function:var(--un-ease, var(--default-transition-timingFunction));transition-duration:var(--un-duration, var(--default-transition-duration));}
.duration-150{--un-duration:150ms;transition-duration:150ms;}
.duration-200{--un-duration:200ms;transition-duration:200ms;}
.duration-300{--un-duration:300ms;transition-duration:300ms;}
.ease-in{--un-ease:var(--ease-in);transition-timing-function:var(--ease-in);}
.ease-in-out{--un-ease:var(--ease-in-out);transition-timing-function:var(--ease-in-out);}
.ease-out{--un-ease:var(--ease-out);transition-timing-function:var(--ease-out);}
.items-start{align-items:flex-start;}
.items-end{align-items:flex-end;}
.items-center{align-items:center;}
.items-baseline{align-items:baseline;}
.inset-0{inset:calc(var(--spacing) * 0);}
.end-0{inset-inline-end:calc(var(--spacing) * 0);}
.start-0{inset-inline-start:calc(var(--spacing) * 0);}
.inset-y-0{inset-block:calc(var(--spacing) * 0);}
.-right-15{right:calc(calc(var(--spacing) * 15) * -1);}
.-right-18{right:calc(calc(var(--spacing) * 18) * -1);}
.-right-20{right:calc(calc(var(--spacing) * 20) * -1);}
.-top-15{top:calc(calc(var(--spacing) * 15) * -1);}
.-top-7{top:calc(calc(var(--spacing) * 7) * -1);}
.bottom-0{bottom:calc(var(--spacing) * 0);}
.bottom-2{bottom:calc(var(--spacing) * 2);}
.left-0{left:calc(var(--spacing) * 0);}
.left-2{left:calc(var(--spacing) * 2);}
.left-6{left:calc(var(--spacing) * 6);}
.right-0{right:calc(var(--spacing) * 0);}
.right-2{right:calc(var(--spacing) * 2);}
.right-2\.5{right:calc(var(--spacing) * 2.5);}
.top-0{top:calc(var(--spacing) * 0);}
.top-1\.3{top:calc(var(--spacing) * 1.3);}
.top-2{top:calc(var(--spacing) * 2);}
.top-6{top:calc(var(--spacing) * 6);}
.top-7{top:calc(var(--spacing) * 7);}
.justify-start{justify-content:flex-start;}
.justify-end{justify-content:flex-end;}
.justify-center{justify-content:center;}
.justify-between{justify-content:space-between;}
.absolute{position:absolute;}
.fixed{position:fixed;}
.relative{position:relative;}
.z-0{z-index:0;}
.z-1{z-index:1;}
.overflow-auto{overflow:auto;}
.overflow-hidden{overflow:hidden;}
.overflow-y-auto{overflow-y:auto;}
.fill-primary{fill:color-mix(in srgb, var(--colors-primary-DEFAULT) var(--un-fill-opacity), transparent) /* color-mix(in oklab, rgb(var(--ui-color-primary)) var(--un-text-opacity, 100%), transparent) */;}
.dark .dark\:from-\[color-mix\(in_oklch\,theme\(colors\.primary\.DEFAULT\)\,theme\(colors\.gray\.950\)_95\%\)\]{--un-gradient-from:color-mix(in oklab, color-mix(in oklch,color-mix(in oklab, rgb(var(--ui-color-primary)) var(--un-text-opacity, 100%), transparent),color-mix(in oklab, rgb(var(--ui-color-gray-950)) var(--un-text-opacity, 100%), transparent) 95%) var(--un-from-opacity), transparent);--un-gradient-stops:var(--un-gradient-via-stops, var(--un-gradient-position), var(--un-gradient-from) var(--un-gradient-from-position), var(--un-gradient-to) var(--un-gradient-to-position));}
.from-\[color-mix\(in_oklch\,theme\(colors\.primary\.DEFAULT\)\,white_95\%\)\]{--un-gradient-from:color-mix(in oklab, color-mix(in oklch,color-mix(in oklab, rgb(var(--ui-color-primary)) var(--un-text-opacity, 100%), transparent),white 95%) var(--un-from-opacity), transparent);--un-gradient-stops:var(--un-gradient-via-stops, var(--un-gradient-position), var(--un-gradient-from) var(--un-gradient-from-position), var(--un-gradient-to) var(--un-gradient-to-position));}
.from-transparent{--un-gradient-from:transparent;--un-gradient-stops:var(--un-gradient-via-stops, var(--un-gradient-position), var(--un-gradient-from) var(--un-gradient-from-position), var(--un-gradient-to) var(--un-gradient-to-position));}
.to-error\/20{--un-to-opacity:20%;--un-gradient-to:color-mix(in oklab, var(--colors-error-DEFAULT) var(--un-to-opacity), transparent);--un-gradient-stops:var(--un-gradient-via-stops, var(--un-gradient-position), var(--un-gradient-from) var(--un-gradient-from-position), var(--un-gradient-to) var(--un-gradient-to-position));}
.to-gray\/20{--un-to-opacity:20%;--un-gradient-to:color-mix(in oklab, var(--colors-gray-DEFAULT) var(--un-to-opacity), transparent);--un-gradient-stops:var(--un-gradient-via-stops, var(--un-gradient-position), var(--un-gradient-from) var(--un-gradient-from-position), var(--un-gradient-to) var(--un-gradient-to-position));}
.to-info\/20{--un-to-opacity:20%;--un-gradient-to:color-mix(in oklab, var(--colors-info-DEFAULT) var(--un-to-opacity), transparent);--un-gradient-stops:var(--un-gradient-via-stops, var(--un-gradient-position), var(--un-gradient-from) var(--un-gradient-from-position), var(--un-gradient-to) var(--un-gradient-to-position));}
.to-success\/20{--un-to-opacity:20%;--un-gradient-to:color-mix(in oklab, var(--colors-success-DEFAULT) var(--un-to-opacity), transparent);--un-gradient-stops:var(--un-gradient-via-stops, var(--un-gradient-position), var(--un-gradient-from) var(--un-gradient-from-position), var(--un-gradient-to) var(--un-gradient-to-position));}
.to-transparent{--un-gradient-to:transparent;--un-gradient-stops:var(--un-gradient-via-stops, var(--un-gradient-position), var(--un-gradient-from) var(--un-gradient-from-position), var(--un-gradient-to) var(--un-gradient-to-position));}
.to-warning\/20{--un-to-opacity:20%;--un-gradient-to:color-mix(in oklab, var(--colors-warning-DEFAULT) var(--un-to-opacity), transparent);--un-gradient-stops:var(--un-gradient-via-stops, var(--un-gradient-position), var(--un-gradient-from) var(--un-gradient-from-position), var(--un-gradient-to) var(--un-gradient-to-position));}
.bg-linear-to-b{--un-gradient-position:to bottom in oklab;background-image:linear-gradient(var(--un-gradient-stops));}
.bg-linear-to-br{--un-gradient-position:to bottom right in oklab;background-image:linear-gradient(var(--un-gradient-stops));}
.object-cover{object-fit:cover;}
.backdrop-blur{--un-backdrop-blur:blur(8px);-webkit-backdrop-filter:var(--un-backdrop-blur,) var(--un-backdrop-brightness,) var(--un-backdrop-contrast,) var(--un-backdrop-grayscale,) var(--un-backdrop-hue-rotate,) var(--un-backdrop-invert,) var(--un-backdrop-opacity,) var(--un-backdrop-saturate,) var(--un-backdrop-sepia,);backdrop-filter:var(--un-backdrop-blur,) var(--un-backdrop-brightness,) var(--un-backdrop-contrast,) var(--un-backdrop-grayscale,) var(--un-backdrop-hue-rotate,) var(--un-backdrop-invert,) var(--un-backdrop-opacity,) var(--un-backdrop-saturate,) var(--un-backdrop-sepia,);}
.filter{filter:var(--un-blur,) var(--un-brightness,) var(--un-contrast,) var(--un-grayscale,) var(--un-hue-rotate,) var(--un-invert,) var(--un-saturate,) var(--un-sepia,) var(--un-drop-shadow,);}
.backdrop-filter{-webkit-backdrop-filter:var(--un-backdrop-blur,) var(--un-backdrop-brightness,) var(--un-backdrop-contrast,) var(--un-backdrop-grayscale,) var(--un-backdrop-hue-rotate,) var(--un-backdrop-invert,) var(--un-backdrop-opacity,) var(--un-backdrop-saturate,) var(--un-backdrop-sepia,);backdrop-filter:var(--un-backdrop-blur,) var(--un-backdrop-brightness,) var(--un-backdrop-contrast,) var(--un-backdrop-grayscale,) var(--un-backdrop-hue-rotate,) var(--un-backdrop-invert,) var(--un-backdrop-opacity,) var(--un-backdrop-saturate,) var(--un-backdrop-sepia,);}
.table{display:table;}
.border-collapse{border-collapse:collapse;}
.table-fixed{table-layout:fixed;}
.dark .dark\:divide-gray-800>:not(:last-child){border-color:color-mix(in srgb, var(--colors-gray-800) var(--un-divide-opacity), transparent) /* color-mix(in oklab, rgb(var(--ui-color-gray-800)) var(--un-text-opacity, 100%), transparent) */;}
.divide-white\/20>:not(:last-child){border-color:color-mix(in srgb, var(--colors-white-DEFAULT) 20%, transparent) /* rgb(var(--ui-color-white)) */;}
.divide-x>:not(:last-child){--un-divide-x-reverse:0;border-left-width:calc(1px * var(--un-divide-x-reverse));border-left-style:var(--un-border-style);border-right-width:calc(1px * calc(1 - var(--un-divide-x-reverse)));border-right-style:var(--un-border-style);}
.divide-y>:not(:last-child){--un-divide-y-reverse:0;border-top-width:calc(1px * var(--un-divide-y-reverse));border-top-style:var(--un-border-style);border-bottom-width:calc(1px * calc(1 - var(--un-divide-y-reverse)));border-bottom-style:var(--un-border-style);}
.text-default{color:color-mix(in oklab, rgb(var(--ui-text)) var(--un-text-opacity, 100%), transparent);--un-text-opacity:100%;}
.text-dimmed{color:color-mix(in oklab, rgb(var(--ui-text-dimmed)) var(--un-text-opacity, 100%), transparent);--un-text-opacity:100%;}
.placeholder\:text-dimmed::placeholder{color:color-mix(in oklab, rgb(var(--ui-text-dimmed)) var(--un-text-opacity, 100%), transparent);--un-text-opacity:100%;}
.text-muted{color:color-mix(in oklab, rgb(var(--ui-text-muted)) var(--un-text-opacity, 100%), transparent);--un-text-opacity:100%;}
.text-highlighted{color:color-mix(in oklab, rgb(var(--ui-text-highlighted)) var(--un-text-opacity, 100%), transparent);--un-text-opacity:100%;}
.text-inverted{color:color-mix(in oklab, rgb(var(--ui-text-inverted)) var(--un-text-opacity, 100%), transparent);--un-text-opacity:100%;}
.hover\:text-inverted\/80:hover{color:color-mix(in oklab, rgb(var(--ui-text-inverted)) var(--un-text-opacity, 100%), transparent);--un-text-opacity:80%;}
.bg-default{background-color:color-mix(in oklab, rgb(var(--ui-bg)) var(--un-bg-opacity, 100%), transparent);--un-bg-opacity:100%;}
.hover\:bg-default:hover{background-color:color-mix(in oklab, rgb(var(--ui-bg)) var(--un-bg-opacity, 100%), transparent);--un-bg-opacity:100%;}
.bg-default\/80{background-color:color-mix(in oklab, rgb(var(--ui-bg)) var(--un-bg-opacity, 100%), transparent);--un-bg-opacity:80%;}
.bg-muted,
.dark .dark\:bg-muted{background-color:color-mix(in oklab, rgb(var(--ui-bg-muted)) var(--un-bg-opacity, 100%), transparent);--un-bg-opacity:100%;}
.hover\:bg-muted:hover{background-color:color-mix(in oklab, rgb(var(--ui-bg-muted)) var(--un-bg-opacity, 100%), transparent);--un-bg-opacity:100%;}
.bg-elevated{background-color:color-mix(in oklab, rgb(var(--ui-bg-elevated)) var(--un-bg-opacity, 100%), transparent);--un-bg-opacity:100%;}
.hover\:bg-elevated:hover{background-color:color-mix(in oklab, rgb(var(--ui-bg-elevated)) var(--un-bg-opacity, 100%), transparent);--un-bg-opacity:100%;}
.dark .dark\:hover\:bg-accented\/50:hover{background-color:color-mix(in oklab, rgb(var(--ui-bg-accented)) var(--un-bg-opacity, 100%), transparent);--un-bg-opacity:50%;}
.hover\:bg-accented\/50:hover{background-color:color-mix(in oklab, rgb(var(--ui-bg-accented)) var(--un-bg-opacity, 100%), transparent);--un-bg-opacity:50%;}
.bg-inverted{background-color:color-mix(in oklab, rgb(var(--ui-bg-inverted)) var(--un-bg-opacity, 100%), transparent);--un-bg-opacity:100%;}
.bg-inverted\/5{background-color:color-mix(in oklab, rgb(var(--ui-bg-inverted)) var(--un-bg-opacity, 100%), transparent);--un-bg-opacity:5%;}
.border-default{border-color:color-mix(in oklab, rgb(var(--ui-border)) var(--un-border-opacity, 100%), transparent);--un-border-opacity:100%;}
.border-muted,
.dark .dark\:border-muted{border-color:color-mix(in oklab, rgb(var(--ui-border-muted)) var(--un-border-opacity, 100%), transparent);--un-border-opacity:100%;}
.border-muted\/50{border-color:color-mix(in oklab, rgb(var(--ui-border-muted)) var(--un-border-opacity, 100%), transparent);--un-border-opacity:50%;}
.border-accented,
.dark .dark\:border-accented{border-color:color-mix(in oklab, rgb(var(--ui-border-accented)) var(--un-border-opacity, 100%), transparent);--un-border-opacity:100%;}
.dark .dark\:hover\:border-accented:hover{border-color:color-mix(in oklab, rgb(var(--ui-border-accented)) var(--un-border-opacity, 100%), transparent);--un-border-opacity:100%;}
.hover\:border-accented:hover{border-color:color-mix(in oklab, rgb(var(--ui-border-accented)) var(--un-border-opacity, 100%), transparent);--un-border-opacity:100%;}
.ring-muted{--un-ring-color:color-mix(in oklab, rgb(var(--ui-border-muted)) var(--un-ring-opacity, 100%), transparent);--un-ring-opacity:100%;}

          .divide-default > :not(:last-child) {
            border-color: color-mix(in oklab, rgb(var(--ui-border)) var(--un-border-opacity, 100%), transparent);
            --un-border-opacity: 100%;
          }

          .divide-muted > :not(:last-child) {
            border-color: color-mix(in oklab, rgb(var(--ui-border-muted)) var(--un-border-opacity, 100%), transparent);
            --un-border-opacity: 100%;
          }
@supports (color: color-mix(in lab, red, red)){
.text-error{color:color-mix(in oklab, var(--colors-error-DEFAULT) var(--un-text-opacity), transparent) /* color-mix(in oklab, rgb(var(--ui-color-error)) var(--un-text-opacity, 100%), transparent) */;}
.text-gray-300{color:color-mix(in oklab, var(--colors-gray-300) var(--un-text-opacity), transparent) /* color-mix(in oklab, rgb(var(--ui-color-gray-300)) var(--un-text-opacity, 100%), transparent) */;}
.text-gray-500{color:color-mix(in oklab, var(--colors-gray-500) var(--un-text-opacity), transparent) /* color-mix(in oklab, rgb(var(--ui-color-gray-500)) var(--un-text-opacity, 100%), transparent) */;}
.text-info{color:color-mix(in oklab, var(--colors-info-DEFAULT) var(--un-text-opacity), transparent) /* color-mix(in oklab, rgb(var(--ui-color-info)) var(--un-text-opacity, 100%), transparent) */;}
.text-primary{color:color-mix(in oklab, var(--colors-primary-DEFAULT) var(--un-text-opacity), transparent) /* color-mix(in oklab, rgb(var(--ui-color-primary)) var(--un-text-opacity, 100%), transparent) */;}
.text-success{color:color-mix(in oklab, var(--colors-success-DEFAULT) var(--un-text-opacity), transparent) /* color-mix(in oklab, rgb(var(--ui-color-success)) var(--un-text-opacity, 100%), transparent) */;}
.text-warning{color:color-mix(in oklab, var(--colors-warning-DEFAULT) var(--un-text-opacity), transparent) /* color-mix(in oklab, rgb(var(--ui-color-warning)) var(--un-text-opacity, 100%), transparent) */;}
.text-white{color:color-mix(in oklab, var(--colors-white-DEFAULT) var(--un-text-opacity), transparent) /* rgb(var(--ui-color-white)) */;}
.text-white\/90{color:color-mix(in oklab, var(--colors-white-DEFAULT) 90%, transparent) /* rgb(var(--ui-color-white)) */;}
.hover\:text-primary:hover{color:color-mix(in oklab, var(--colors-primary-DEFAULT) var(--un-text-opacity), transparent) /* color-mix(in oklab, rgb(var(--ui-color-primary)) var(--un-text-opacity, 100%), transparent) */;}
.border-primary{border-color:color-mix(in oklab, var(--colors-primary-DEFAULT) var(--un-border-opacity), transparent) /* color-mix(in oklab, rgb(var(--ui-color-primary)) var(--un-text-opacity, 100%), transparent) */;}
.group:hover .group-hover\:border-primary{border-color:color-mix(in oklab, var(--colors-primary-DEFAULT) var(--un-border-opacity), transparent) /* color-mix(in oklab, rgb(var(--ui-color-primary)) var(--un-text-opacity, 100%), transparent) */;}
.hover\:border-primary-hover:hover{border-color:color-mix(in oklab, var(--colors-primary-hover) var(--un-border-opacity), transparent) /* color-mix(in oklab, rgb(var(--ui-color-primary-hover)) var(--un-text-opacity, 100%), transparent) */;}
.hover\:border-primary:hover{border-color:color-mix(in oklab, var(--colors-primary-DEFAULT) var(--un-border-opacity), transparent) /* color-mix(in oklab, rgb(var(--ui-color-primary)) var(--un-text-opacity, 100%), transparent) */;}
.bg-error{background-color:color-mix(in oklab, var(--colors-error-DEFAULT) var(--un-bg-opacity), transparent) /* color-mix(in oklab, rgb(var(--ui-color-error)) var(--un-text-opacity, 100%), transparent) */;}
.bg-gray-600{background-color:color-mix(in oklab, var(--colors-gray-600) var(--un-bg-opacity), transparent) /* color-mix(in oklab, rgb(var(--ui-color-gray-600)) var(--un-text-opacity, 100%), transparent) */;}
.bg-gray-800{background-color:color-mix(in oklab, var(--colors-gray-800) var(--un-bg-opacity), transparent) /* color-mix(in oklab, rgb(var(--ui-color-gray-800)) var(--un-text-opacity, 100%), transparent) */;}
.bg-gray-900\/30{background-color:color-mix(in oklab, var(--colors-gray-900) 30%, transparent) /* color-mix(in oklab, rgb(var(--ui-color-gray-900)) var(--un-text-opacity, 100%), transparent) */;}
.bg-gray\/5{background-color:color-mix(in oklab, var(--colors-gray-DEFAULT) 5%, transparent) /* color-mix(in oklab, rgb(var(--ui-color-gray)) var(--un-text-opacity, 100%), transparent) */;}
.bg-primary{background-color:color-mix(in oklab, var(--colors-primary-DEFAULT) var(--un-bg-opacity), transparent) /* color-mix(in oklab, rgb(var(--ui-color-primary)) var(--un-text-opacity, 100%), transparent) */;}
.bg-primary\/10{background-color:color-mix(in oklab, var(--colors-primary-DEFAULT) 10%, transparent) /* color-mix(in oklab, rgb(var(--ui-color-primary)) var(--un-text-opacity, 100%), transparent) */;}
.bg-primary\/5{background-color:color-mix(in oklab, var(--colors-primary-DEFAULT) 5%, transparent) /* color-mix(in oklab, rgb(var(--ui-color-primary)) var(--un-text-opacity, 100%), transparent) */;}
.bg-success{background-color:color-mix(in oklab, var(--colors-success-DEFAULT) var(--un-bg-opacity), transparent) /* color-mix(in oklab, rgb(var(--ui-color-success)) var(--un-text-opacity, 100%), transparent) */;}
.bg-warning{background-color:color-mix(in oklab, var(--colors-warning-DEFAULT) var(--un-bg-opacity), transparent) /* color-mix(in oklab, rgb(var(--ui-color-warning)) var(--un-text-opacity, 100%), transparent) */;}
.bg-white{background-color:color-mix(in oklab, var(--colors-white-DEFAULT) var(--un-bg-opacity), transparent) /* rgb(var(--ui-color-white)) */;}
.bg-white\/70{background-color:color-mix(in oklab, var(--colors-white-DEFAULT) 70%, transparent) /* rgb(var(--ui-color-white)) */;}
.bg-white\/8{background-color:color-mix(in oklab, var(--colors-white-DEFAULT) 8%, transparent) /* rgb(var(--ui-color-white)) */;}
.dark .dark\:bg-gray-800\/50{background-color:color-mix(in oklab, var(--colors-gray-800) 50%, transparent) /* color-mix(in oklab, rgb(var(--ui-color-gray-800)) var(--un-text-opacity, 100%), transparent) */;}
.dark .dark\:bg-gray-800\/60{background-color:color-mix(in oklab, var(--colors-gray-800) 60%, transparent) /* color-mix(in oklab, rgb(var(--ui-color-gray-800)) var(--un-text-opacity, 100%), transparent) */;}
.dark .dark\:bg-gray-900\/70{background-color:color-mix(in oklab, var(--colors-gray-900) 70%, transparent) /* color-mix(in oklab, rgb(var(--ui-color-gray-900)) var(--un-text-opacity, 100%), transparent) */;}
.dark .dark\:bg-primary-950{background-color:color-mix(in oklab, var(--colors-primary-950) var(--un-bg-opacity), transparent) /* color-mix(in oklab, rgb(var(--ui-color-primary-950)) var(--un-text-opacity, 100%), transparent) */;}
.hover\:bg-primary-hover:hover{background-color:color-mix(in oklab, var(--colors-primary-hover) var(--un-bg-opacity), transparent) /* color-mix(in oklab, rgb(var(--ui-color-primary-hover)) var(--un-text-opacity, 100%), transparent) */;}
.hover\:bg-primary\/10:hover{background-color:color-mix(in oklab, var(--colors-primary-DEFAULT) 10%, transparent) /* color-mix(in oklab, rgb(var(--ui-color-primary)) var(--un-text-opacity, 100%), transparent) */;}
.hover\:bg-primary\/5:hover{background-color:color-mix(in oklab, var(--colors-primary-DEFAULT) 5%, transparent) /* color-mix(in oklab, rgb(var(--ui-color-primary)) var(--un-text-opacity, 100%), transparent) */;}
.dark .dark\:shadow-gray-950\/80{--un-shadow-color:color-mix(in oklab, var(--colors-gray-950) 80%, transparent) /* color-mix(in oklab, rgb(var(--ui-color-gray-950)) var(--un-text-opacity, 100%), transparent) */;}
.shadow-gray-950\/10{--un-shadow-color:color-mix(in oklab, var(--colors-gray-950) 10%, transparent) /* color-mix(in oklab, rgb(var(--ui-color-gray-950)) var(--un-text-opacity, 100%), transparent) */;}
.fill-primary{fill:color-mix(in oklab, var(--colors-primary-DEFAULT) var(--un-fill-opacity), transparent) /* color-mix(in oklab, rgb(var(--ui-color-primary)) var(--un-text-opacity, 100%), transparent) */;}
}
@media (min-width: 40rem){
.sm\:p-6{padding:calc(var(--spacing) * 6);}
}
@media (min-width: 48rem){
.md\:m-4{margin:calc(var(--spacing) * 4);}
.md\:mb-1{margin-bottom:calc(var(--spacing) * 1);}
.md\:p-10{padding:calc(var(--spacing) * 10);}
.md\:text-left{text-align:left;}
.md\:rounded-lg{border-radius:var(--radius-lg);}
.md\:flex{display:flex;}
.md\:flex-row{flex-direction:row;}
.md\:gap-4{gap:calc(var(--spacing) * 4);}
.md\:grid-cols-2{grid-template-columns:repeat(2,minmax(0,1fr));}
.md\:grid-cols-4{grid-template-columns:repeat(4,minmax(0,1fr));}
.md\:h-auto{height:auto;}
.md\:w-40\%{width:40%;}
.md\:shadow{--un-shadow:0 1px 3px 0 var(--un-shadow-color, rgb(0 0 0 / 0.1)),0 1px 2px -1px var(--un-shadow-color, rgb(0 0 0 / 0.1));box-shadow:var(--un-inset-shadow), var(--un-inset-ring-shadow), var(--un-ring-offset-shadow), var(--un-ring-shadow), var(--un-shadow);}
.md\:items-start{align-items:flex-start;}
.md\:items-center{align-items:center;}
.md\:justify-between{justify-content:space-between;}
}
@media (min-width: 64rem){
.lg\:ml-0{margin-left:calc(var(--spacing) * 0);}
.dark .lg\:dark\:border{border-width:1px;}
.lg\:flex{display:flex;}
.lg\:flex-none{flex:none;}
.lg\:flex-row{flex-direction:row;}
.lg\:grid{display:grid;}
.lg\:grid-cols-\[repeat\(auto-fit\,minmax\(\$\{props\.minWidth\}\,\$\{props\.maxWidth\}\)\)\]{grid-template-columns:repeat(auto-fit,minmax(${props.minWidth},${props.maxWidth}));}
.lg\:grid-cols-\[repeat\(auto-fit\,minmax\(100px\,1fr\)\)\]{grid-template-columns:repeat(auto-fit,minmax(100px,1fr));}
.lg\:grid-cols-\[repeat\(auto-fit\,minmax\(120px\,1fr\)\)\]{grid-template-columns:repeat(auto-fit,minmax(120px,1fr));}
.lg\:grid-cols-\[repeat\(auto-fit\,minmax\(150px\,150px\)\)\]{grid-template-columns:repeat(auto-fit,minmax(150px,150px));}
.lg\:grid-cols-\[repeat\(auto-fit\,minmax\(150px\,1fr\)\)\]{grid-template-columns:repeat(auto-fit,minmax(150px,1fr));}
.lg\:grid-cols-4{grid-template-columns:repeat(4,minmax(0,1fr));}
.lg\:h-13{height:calc(var(--spacing) * 13);}
.lg\:h-26{height:calc(var(--spacing) * 26);}
.lg\:max-w-2xl{max-width:var(--container-2xl);}
.lg\:max-w-4xl{max-width:var(--container-4xl);}
.lg\:max-w-lg{max-width:var(--container-lg);}
.lg\:block{display:block;}
.lg\:hidden{display:none;}
.lg\:items-center{align-items:center;}
.lg\:justify-end{justify-content:flex-end;}
.lg\:justify-center{justify-content:center;}
.lg\:justify-between{justify-content:space-between;}
.dark .lg\:dark\:border-muted{border-color:color-mix(in oklab, rgb(var(--ui-border-muted)) var(--un-border-opacity, 100%), transparent);--un-border-opacity:100%;}
}


---
File: /packages/pro/src/types/svg.d.ts
---

declare module '*.svg' {
  const content: string
  export default content
}



---
File: /packages/pro/src/app.tsx
---

import { DuxAppProvider } from '@duxweb/dvha-core'
import { NLoadingBarProvider } from 'naive-ui'
import { defineComponent, provide, ref } from 'vue'
import { RouterView } from 'vue-router'
import { DuxLoading } from './pages/loading'

export const DuxApp = defineComponent({
  name: 'DuxApp',
  props: {
  },
  setup() {
    const pageLoading = ref(true)
    provide('pageLoading', pageLoading)

    return () => (
      <NLoadingBarProvider>
        {pageLoading.value && <DuxLoading />}
        <DuxAppProvider>
          <RouterView />
        </DuxAppProvider>
      </NLoadingBarProvider>
    )
  },
})



---
File: /packages/pro/src/component.ts
---

import type { App } from 'vue'

import { DuxApp } from './app'
// 导入components中的所有Dux组件
import {
  DuxAiEditor,
  DuxBlockEmpty,
  DuxCard,
  DuxCardPage,
  DuxCarousel,
  DuxChart,
  DuxCodeEditor,
  DuxCollapsePanel,
  DuxDashboardHello,
  DuxDashboardHelloBig,
  DuxDashboardQuick,
  DuxDrawApps,
  DuxDrawAuth,
  DuxDrawEmpty,
  DuxDrawEmptyForm,
  DuxDrawerPage,
  DuxDrawError,
  DuxDynamicData,
  DuxDynamicSelect,
  DuxFileUpload,
  DuxFormItem,
  DuxFormLayout,
  DuxIconPicker,
  DuxImageCrop,
  DuxImageCropModal,
  DuxImageUpload,
  DuxLevel,
  DuxListLayout,
  DuxListPage,
  DuxMedia,
  DuxModal,
  DuxModalForm,
  DuxModalPage,
  DuxModalTab,
  DuxPageForm,
  DuxPanelAlert,
  DuxPanelCard,
  DuxSelectCard,
  DuxSettingForm,
  DuxStatsNumber,
  DuxStatsRealTime,
  DuxStatsStore,
  DuxStatsStoreItem,
  DuxTableFilter,
  DuxTableLayout,
  DuxTablePage,
  DuxTableTools,
  DuxTreeFilter,
  DuxWidgetConnect,
} from './components'
// 导入pages中的所有Dux组件
import {
  DuxAuthLayout,
  DuxLoginPage,
  DuxMenuCmd,
  DuxMenuMain,
  DuxMobileMenu,
  DuxPage,
  DuxPage403,
  DuxPage404,
  DuxPage500,
  DuxPageEmpty,
  DuxPageStatus,
} from './pages'
import { DuxLayout } from './pages/layout'

export default {
  install(app: App) {
    // 注册components中的所有组件
    app.component('DuxAiEditor', DuxAiEditor)
    app.component('DuxCard', DuxCard)
    app.component('DuxDrawerPage', DuxDrawerPage)
    app.component('DuxDrawApps', DuxDrawApps)
    app.component('DuxDrawAuth', DuxDrawAuth)
    app.component('DuxDrawEmpty', DuxDrawEmpty)
    app.component('DuxDrawEmptyForm', DuxDrawEmptyForm)
    app.component('DuxDrawError', DuxDrawError)
    app.component('DuxDynamicData', DuxDynamicData)
    app.component('DuxDynamicSelect', DuxDynamicSelect)
    app.component('DuxFormItem', DuxFormItem)
    app.component('DuxFormLayout', DuxFormLayout)
    app.component('DuxModalForm', DuxModalForm)
    app.component('DuxPageForm', DuxPageForm)
    app.component('DuxSettingForm', DuxSettingForm)
    app.component('DuxListLayout', DuxListLayout)
    app.component('DuxTableFilter', DuxTableFilter)
    app.component('DuxTableLayout', DuxTableLayout)
    app.component('DuxTableTools', DuxTableTools)
    app.component('DuxCardPage', DuxCardPage)
    app.component('DuxListPage', DuxListPage)
    app.component('DuxMedia', DuxMedia)
    app.component('DuxModal', DuxModal)
    app.component('DuxPanelAlert', DuxPanelAlert)
    app.component('DuxPanelCard', DuxPanelCard)
    app.component('DuxBlockEmpty', DuxBlockEmpty)
    app.component('DuxTablePage', DuxTablePage)
    app.component('DuxLevel', DuxLevel)
    app.component('DuxImageCrop', DuxImageCrop)
    app.component('DuxImageCropModal', DuxImageCropModal)
    app.component('DuxModalPage', DuxModalPage)
    app.component('DuxModalTab', DuxModalTab)
    app.component('DuxFileUpload', DuxFileUpload)
    app.component('DuxImageUpload', DuxImageUpload)
    app.component('DuxTreeFilter', DuxTreeFilter)
    app.component('DuxIconPicker', DuxIconPicker)
    app.component('DuxCollapsePanel', DuxCollapsePanel)
    app.component('DuxCodeEditor', DuxCodeEditor)

    app.component('DuxDashboardHello', DuxDashboardHello)
    app.component('DuxDashboardHelloBig', DuxDashboardHelloBig)
    app.component('DuxDashboardQuick', DuxDashboardQuick)
    app.component('DuxCarousel', DuxCarousel)
    app.component('DuxWidgetConnect', DuxWidgetConnect)

    app.component('DuxChart', DuxChart)
    app.component('DuxSelectCard', DuxSelectCard)
    app.component('DuxStatsStore', DuxStatsStore)
    app.component('DuxStatsStoreItem', DuxStatsStoreItem)
    app.component('DuxStatsRealTime', DuxStatsRealTime)
    app.component('DuxStatsNumber', DuxStatsNumber)

    // 注册pages中的所有组件
    app.component('DuxAuthLayout', DuxAuthLayout)
    app.component('DuxLayout', DuxLayout)
    app.component('DuxPage403', DuxPage403)
    app.component('DuxPage404', DuxPage404)
    app.component('DuxPage500', DuxPage500)
    app.component('DuxPageEmpty', DuxPageEmpty)
    app.component('DuxPageStatus', DuxPageStatus)
    app.component('DuxLoginPage', DuxLoginPage)
    app.component('DuxPage', DuxPage)
    app.component('DuxMenuMain', DuxMenuMain)
    app.component('DuxMobileMenu', DuxMobileMenu)
    app.component('DuxMenuCmd', DuxMenuCmd)

    app.component('DuxApp', DuxApp)
  },
}



---
File: /packages/pro/src/index.ts
---

export * from './app'
export * from './component'
export * from './components'
export * from './config'
export * from './hooks'
export * from './langs'
export * from './main'
export * from './pages'
export * from './stores'
export * from './theme'

// 导出 vue-konva 供应用使用
export { default as VueKonva } from 'vue-konva'



---
File: /packages/pro/src/main.ts
---

import type { IDataProviderResponse, IS3SignData } from '@duxweb/dvha-core'

import type { App } from 'vue'
import initUnocssRuntime from '@unocss/runtime'
import VueECharts from 'vue-echarts'
import component from './component'
import { initVeeValidate } from './config'

import { config as unoConfig } from './config/uno'
import 'echarts'
import 'vue-cropper/dist/index.css'
import 'aieditor/dist/style.css'
import './theme/style.scss'

export function createDuxPro() {
  initVeeValidate()

  initUnocssRuntime({
    defaults: unoConfig(false),
    bypassDefined: true,
  })

  return {
    install(app: App) {
      app.component('v-chart', VueECharts)
      app.use(component)
    },
  }
}

// 声明 Pro 包特有的配置
declare module '@duxweb/dvha-core' {
  interface IManage {
    // 上传配置
    upload?: {
      driver?: 'local' | 's3'
      signPath?: string
      signCallback?: (response: IDataProviderResponse) => IS3SignData
    }
    // 接口路径
    apiPath?: {
      upload?: string
      uploadManager?: string
      ai?: string
      [key: string]: any
    }
  }
}



---
File: /packages/pro/.gitignore
---

# See https://help.github.com/articles/ignoring-files/ for more about ignoring files.

# Dependencies
node_modules
.pnp
.pnp.js

# Local env files
.env
.env.local
.env.development.local
.env.test.local
.env.production.local

# Testing
coverage

# Turbo
.turbo

# Vercel
.vercel

# Build Outputs
.next/
out/
build
dist


# Debug
npm-debug.log*
yarn-debug.log*
yarn-error.log*

# Misc
.DS_Store
*.pem



---
File: /packages/pro/CHANGELOG.md
---

# @duxweb/dvha-pro

## 1.0.34

### Patch Changes

- feat: 增加表单设计器的文件上传
  - @duxweb/dvha-core@1.0.34
  - @duxweb/dvha-naiveui@1.0.34

## 1.0.33

### Patch Changes

- feat: 增加代码高亮组件
- Updated dependencies
  - @duxweb/dvha-core@1.0.33
  - @duxweb/dvha-naiveui@1.0.33

## 1.0.32

### Patch Changes

- fix: 修正部分显示问题
- Updated dependencies
  - @duxweb/dvha-naiveui@1.0.32
  - @duxweb/dvha-core@1.0.32

## 1.0.31

### Patch Changes

- feat: 增加文件选择器
- Updated dependencies
  - @duxweb/dvha-core@1.0.31
  - @duxweb/dvha-naiveui@1.0.31

## 1.0.30

### Patch Changes

- fix: 修正FormItem 组件 tooltip 色彩
  - @duxweb/dvha-core@1.0.30
  - @duxweb/dvha-naiveui@1.0.30

## 1.0.29

### Patch Changes

- feat(pro): 增加表单元素 tooltip
  - @duxweb/dvha-core@1.0.29
  - @duxweb/dvha-naiveui@1.0.29

## 1.0.28

### Patch Changes

- feat(pro): 增加表格 header 插槽
- Updated dependencies
  - @duxweb/dvha-core@1.0.28
  - @duxweb/dvha-naiveui@1.0.28

## 1.0.27

### Patch Changes

- feat: 修正部分设计器问题
- Updated dependencies
  - @duxweb/dvha-core@1.0.27
  - @duxweb/dvha-naiveui@1.0.27

## 1.0.26

### Patch Changes

- feat: 增加表单设计器组件
- Updated dependencies
  - @duxweb/dvha-core@1.0.26
  - @duxweb/dvha-naiveui@1.0.26

## 1.0.25

### Patch Changes

- feat(pro): 增加图像编辑器
- Updated dependencies
  - @duxweb/dvha-core@1.0.25
  - @duxweb/dvha-naiveui@1.0.25

## 1.0.24

### Patch Changes

- feat: 更新表格列 color 方法,升级到 vite 7
  - @duxweb/dvha-core@1.0.24
  - @duxweb/dvha-naiveui@1.0.24

## 1.0.23

### Patch Changes

- fix: 修正侧栏面板固定滚动,增加 Action 的 Path 函数
  - @duxweb/dvha-core@1.0.23
  - @duxweb/dvha-naiveui@1.0.23

## 1.0.22

### Patch Changes

- chore(pro): 优化部分样式
  - @duxweb/dvha-core@1.0.22
  - @duxweb/dvha-naiveui@1.0.22

## 1.0.21

### Patch Changes

- chore(pro): 修正设置面板样式配置
  feat(pro): 增加手册检测登录和定时检测
  feat(core): 增加上传请求附加参数
  feat(pro): 增加文件管理器上传参数
- Updated dependencies
  - @duxweb/dvha-core@1.0.21
  - @duxweb/dvha-naiveui@1.0.21

## 1.0.20

### Patch Changes

- fix: 数据导入修正数据
  fix(pro): 修正用户头像昵称
  chore(core): 默认不限制导出页面数
  chore(core): 默认关闭数据导入
- Updated dependencies
  - @duxweb/dvha-core@1.0.20
  - @duxweb/dvha-naiveui@1.0.20

## 1.0.19

### Patch Changes

- feat(pro): 增加上传驱动全局配置
  feat(pro): 修改表单页面组件为居中布局
  feat(pro): 增加图标选择器
  feat(pro): 增加空列表状态页
  feat(pro): 增加空页面状态
  feat(pro): 增加列表筛选组件布局
  deat(pro): 增加侧栏面板的页面样式
  fix(pro): 修正dvha pro popover 背景透明度
  fix(pro): 修改筛选器为 modal 弹窗
  fix(core): 修正无限列表与普通列表的 key
- Updated dependencies
  - @duxweb/dvha-naiveui@1.0.19
  - @duxweb/dvha-core@1.0.19

## 1.0.18

### Patch Changes

- feat: 增加树形筛选,增加图标组件
- Updated dependencies
  - @duxweb/dvha-core@1.0.18
  - @duxweb/dvha-naiveui@1.0.18

## 1.0.17

### Patch Changes

- Updated dependencies
  - @duxweb/dvha-core@1.0.17
  - @duxweb/dvha-naiveui@1.0.17

## 1.0.16

### Patch Changes

- feat: 增加 data 的 apiBasePath 参数
- Updated dependencies
  - @duxweb/dvha-core@1.0.16
  - @duxweb/dvha-naiveui@1.0.16

## 1.0.15

### Patch Changes

- feat: 增加 Json 渲染器组件全局配置
  chore: 优化部分组件加载模式
  chore: 统一部分组件接口命名
- Updated dependencies
  - @duxweb/dvha-core@1.0.15
  - @duxweb/dvha-naiveui@1.0.15

## 1.0.14

### Patch Changes

- feat: 更换组件的内容为语言包
  fix: 修正部分适配 pro 版的问题
- Updated dependencies
  - @duxweb/dvha-core@1.0.14
  - @duxweb/dvha-naiveui@1.0.14

## 0.0.8

### Patch Changes

- feat: 增加 echart
- Updated dependencies
  - @duxweb/dvha-naiveui@1.0.13

## 0.0.7

### Patch Changes

- Updated dependencies
  - @duxweb/dvha-core@0.1.23
  - @duxweb/dvha-naiveui@1.0.12

## 0.0.6

### Patch Changes

- feat: 增加pro版本示例
  fix: 修正部分细节问题
  chore: 更换工具链为 PNPM
- Updated dependencies
  - @duxweb/dvha-naiveui@1.0.11
  - @duxweb/dvha-core@0.1.22

## 0.0.5

### Patch Changes

- init

## 0.0.4

### Patch Changes

- Updated dependencies
  - @duxweb/dvha-naiveui@1.0.7

## 0.0.3

### Patch Changes

- Updated dependencies
  - @duxweb/dvha-core@0.1.21
  - @duxweb/dvha-naiveui@1.0.6



---
File: /packages/pro/package.json
---

{
  "name": "@duxweb/dvha-pro",
  "type": "module",
  "version": "1.0.34",
  "author": "DuxWeb",
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "https://github.com/duxweb/dvha.git"
  },
  "exports": {
    ".": {
      "dvha:development": {
        "types": "./src/index.ts",
        "import": "./src/index.ts"
      },
      "types": "./dist/types/index.d.ts",
      "import": "./dist/esm/index.js",
      "require": "./dist/cjs/index.cjs"
    },
    "./style.css": {
      "import": "./dist/esm/dvha-pro.css",
      "require": "./dist/cjs/dvha-pro.css"
    }
  },
  "main": "dist/cjs/index.cjs",
  "module": "dist/esm/index.js",
  "types": "dist/types/index.d.ts",
  "files": [
    "LICENSE",
    "README.md",
    "dist"
  ],
  "scripts": {
    "clean": "rimraf dist",
    "build": "pnpm run clean && vue-tsc --noEmit && pnpm run build:uno && vite build && pnpm run build:types",
    "build:types": "vue-tsc --declaration --emitDeclarationOnly --outDir dist/types",
    "build:uno": "unocss -c uno.config.ts './src/**/*' -o ./src/theme/uno.css",
    "lint": "eslint .",
    "lint:fix": "eslint . --fix"
  },
  "dependencies": {
    "@ant-design/colors": "^7.2.1",
    "@duxweb/dvha-core": "workspace:*",
    "@duxweb/dvha-naiveui": "workspace:*",
    "@iconify-json/tabler": "^1.2.18",
    "@overlastic/vue": "^0.8.1",
    "@tanstack/vue-query": "^5.80.7",
    "@unocss/preset-icons": "^66.2.1",
    "@unocss/preset-typography": "^66.2.3",
    "@unocss/runtime": "^66.2.1",
    "@vee-validate/i18n": "^4.15.1",
    "@vee-validate/rules": "^4.15.1",
    "@visactor/vchart": "^2.0.0",
    "@vueuse/core": "^13.3.0",
    "@vueuse/integrations": "^13.3.0",
    "ace-builds": "^1.43.0",
    "aieditor": "^1.3.9",
    "clsx": "^2.1.1",
    "colorizr": "^3.0.8",
    "dayjs": "^1.11.13",
    "echarts": "^5.6.0",
    "fabric": "^6.7.0",
    "highlight.js": "^11.11.1",
    "jinrishici": "^1.0.6",
    "jsep": "^1.4.0",
    "konva": "^9.3.20",
    "lodash-es": "^4.17.21",
    "mathjs": "^14.5.2",
    "mime": "^4.0.7",
    "naive-ui": "^2.42.0",
    "pinia": "^3.0.3",
    "pinia-plugin-persistedstate": "^4.3.0",
    "short-unique-id": "^5.3.2",
    "unocss": "^66.2.1",
    "vee-validate": "^4.15.1",
    "vue": "^3.5.0",
    "vue-command-palette": "^0.2.3",
    "vue-cropper": "^1.1.4",
    "vue-draggable-plus": "^0.6.0",
    "vue-echarts": "^7.0.3",
    "vue-konva": "^3.2.1",
    "vue-router": "^4.5.1",
    "vue3-ace-editor": "^2.2.4"
  },
  "devDependencies": {
    "@unocss/cli": "^66.2.1",
    "rimraf": "^6.0.1",
    "sass-embedded": "^1.89.1",
    "tslib": "^2.8.1",
    "vue-tsc": "^2.2.10"
  }
}



---
File: /packages/pro/tsconfig.json
---

{
  "compilerOptions": {
    "target": "ESNext",
    "jsx": "preserve",
    "jsxImportSource": "vue",
    "lib": [
      "ESNext",
      "DOM"
    ],
    "moduleDetection": "force",
    "useDefineForClassFields": true,
    "baseUrl": ".",
    "rootDir": "src",
    "module": "ESNext",
    "moduleResolution": "bundler",
    "resolveJsonModule": true,
    "allowJs": true,
    "strict": true,
    "noFallthroughCasesInSwitch": true,
    "noImplicitAny": false,
    "noUnusedLocals": true,
    "noUnusedParameters": true,
    "declaration": true,
    "importHelpers": true,
    "noEmit": false,
    "outDir": "dist",
    "allowSyntheticDefaultImports": true,
    "esModuleInterop": true,
    "isolatedModules": true,
    "skipLibCheck": true
  },
  "include": [
    "src/**/*.*",
    "src/**/*.vue",
    "typings.d.ts"
  ],
  "exclude": [
    "node_modules",
    "dist"
  ]
}



---
File: /packages/pro/typings.d.ts
---

// typings.d.ts
declare module '*.css' {
  const content: string
  export default content
}

declare module '*?raw' {
  const content: string
  export default content
}

declare module '*.png' {
  const content: string
  export default content
}



---
File: /packages/pro/uno.config.ts
---

import { defineConfig } from 'unocss'
import { config } from './src/config'

export default defineConfig({
  ...config(true),
  content: {
    pipeline: {
      include: ['src/**/*.ts', 'src/**/*.tsx'],
    },
  },
})



---
File: /packages/pro/vite-env.d.ts
---

/// <reference types="vite/client" />



---
File: /packages/pro/vite.config.ts
---

import { definePackageConfig } from '../../config/vite.config.build'

export default definePackageConfig(__dirname, {
})

